import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest16 {

    public static boolean debug = false;

    @Test
    public void test08001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08001");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.Class class29 = null;
        enhancer0.setSuperclass(class29);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer0.setCallback(callback33);
        java.lang.ClassLoader classLoader35 = null;
        enhancer0.setClassLoader(classLoader35);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer0.setCallback(callback37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
    }

    @Test
    public void test08002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08002");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader2 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer3.getNamingPolicy();
        java.lang.ClassLoader classLoader7 = enhancer3.getClassLoader();
        enhancer0.setClassLoader(classLoader7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setAttemptLoad(true);
        enhancer9.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer9.setInterceptDuringConstruction(true);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        enhancer9.setSuperclass((java.lang.Class) wildcardClass17);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass17);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer0.getNamingPolicy();
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer0.getNamingPolicy();
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer27.getNamingPolicy();
        java.lang.ClassLoader classLoader31 = enhancer27.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader33 = enhancer32.getClassLoader();
        enhancer27.setClassLoader(classLoader33);
        java.lang.ClassLoader classLoader35 = enhancer27.getClassLoader();
        enhancer27.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter38 = null;
        enhancer27.setCallbackFilter(callbackFilter38);
        java.lang.ClassLoader classLoader40 = enhancer27.getClassLoader();
        java.lang.Class[] classArray41 = null;
        enhancer27.setInterfaces(classArray41);
        boolean boolean43 = enhancer27.getUseCache();
        enhancer27.setUseFactory(false);
        java.lang.ClassLoader classLoader46 = enhancer27.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy47 = enhancer27.getStrategy();
        enhancer0.setStrategy(generatorStrategy47);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(generatorStrategy47);
    }

    @Test
    public void test08003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08003");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy67);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setAttemptLoad(true);
        boolean boolean74 = enhancer71.getAttemptLoad();
        java.lang.ClassLoader classLoader75 = enhancer71.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer71.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer77 = new org.mockito.cglib.proxy.Enhancer();
        enhancer77.setAttemptLoad(true);
        boolean boolean80 = enhancer77.getAttemptLoad();
        java.lang.ClassLoader classLoader81 = enhancer77.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy82 = enhancer77.getStrategy();
        enhancer71.setStrategy(generatorStrategy82);
        java.lang.ClassLoader classLoader84 = enhancer71.getClassLoader();
        enhancer0.setClassLoader(classLoader84);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter86 = null;
        enhancer0.setCallbackFilter(callbackFilter86);
        org.mockito.asm.ClassVisitor classVisitor88 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(generatorStrategy63);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(generatorStrategy76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(classLoader81);
        org.junit.Assert.assertNotNull(generatorStrategy82);
        org.junit.Assert.assertNotNull(classLoader84);
    }

    @Test
    public void test08004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08004");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy67);
        org.mockito.cglib.proxy.Callback callback69 = null;
        enhancer0.setCallback(callback69);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setAttemptLoad(true);
        boolean boolean74 = enhancer71.getAttemptLoad();
        java.lang.ClassLoader classLoader75 = enhancer71.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer71.getStrategy();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        enhancer71.setSuperclass((java.lang.Class) wildcardClass78);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass78);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        boolean boolean83 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader84 = enhancer0.getClassLoader();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(generatorStrategy63);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(generatorStrategy76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(classLoader84);
    }

    @Test
    public void test08005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08005");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        boolean boolean2 = enhancer0.getUseCache();
        enhancer0.setUseFactory(true);
        boolean boolean5 = enhancer0.getAttemptLoad();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class6 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback types are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test08006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08006");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        boolean boolean21 = generatorStrategy19.equals((java.lang.Object) "hi!");
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer22.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer26.getNamingPolicy();
        java.lang.ClassLoader classLoader30 = enhancer26.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader32 = enhancer31.getClassLoader();
        enhancer26.setClassLoader(classLoader32);
        boolean boolean34 = enhancer26.getUseCache();
        boolean boolean35 = namingPolicy25.equals((java.lang.Object) enhancer26);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        boolean boolean39 = enhancer36.getAttemptLoad();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer36.getStrategy();
        enhancer26.setStrategy(generatorStrategy41);
        java.lang.ClassLoader classLoader43 = enhancer26.getClassLoader();
        org.mockito.cglib.proxy.Callback callback44 = null;
        enhancer26.setCallback(callback44);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = enhancer46.getNamingPolicy();
        java.lang.ClassLoader classLoader50 = enhancer46.getClassLoader();
        enhancer26.setClassLoader(classLoader50);
        boolean boolean52 = generatorStrategy19.equals((java.lang.Object) classLoader50);
        enhancer0.setClassLoader(classLoader50);
        java.lang.ClassLoader classLoader54 = enhancer0.getClassLoader();
        enhancer0.setUseCache(true);
        org.junit.Assert.assertNotNull(namingPolicy13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(namingPolicy49);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classLoader54);
    }

    @Test
    public void test08007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08007");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter4 = null;
        enhancer0.setCallbackFilter(callbackFilter4);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer0.setCallbackFilter(callbackFilter6);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter10 = null;
        enhancer0.setCallbackFilter(callbackFilter10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        enhancer12.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer12.setInterceptDuringConstruction(true);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        enhancer12.setSuperclass((java.lang.Class) wildcardClass20);
        enhancer12.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer12.setCallback(callback25);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer12.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter28 = null;
        enhancer12.setCallbackFilter(callbackFilter28);
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer12.setNamingPolicy(namingPolicy30);
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = enhancer12.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy32);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader35 = enhancer34.getClassLoader();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Class[] classArray52 = new java.lang.Class[] { wildcardClass37, wildcardClass39, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass50 };
        enhancer34.setInterfaces(classArray52);
        enhancer34.setUseCache(false);
        boolean boolean56 = enhancer34.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        boolean boolean61 = enhancer57.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter62 = null;
        enhancer57.setCallbackFilter(callbackFilter62);
        org.mockito.cglib.proxy.Callback callback64 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray65 = new org.mockito.cglib.proxy.Callback[] { callback64 };
        enhancer57.setCallbacks(callbackArray65);
        enhancer34.setCallbacks(callbackArray65);
        java.lang.ClassLoader classLoader68 = enhancer34.getClassLoader();
        enhancer34.setUseCache(false);
        org.mockito.cglib.proxy.Callback callback71 = null;
        enhancer34.setCallback(callback71);
        enhancer34.setUseCache(true);
        boolean boolean75 = enhancer34.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        enhancer76.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy79 = enhancer76.getNamingPolicy();
        boolean boolean80 = enhancer76.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter81 = null;
        enhancer76.setCallbackFilter(callbackFilter81);
        org.mockito.cglib.proxy.Callback callback83 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray84 = new org.mockito.cglib.proxy.Callback[] { callback83 };
        enhancer76.setCallbacks(callbackArray84);
        enhancer34.setCallbacks(callbackArray84);
        enhancer0.setCallbacks(callbackArray84);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(namingPolicy32);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(callbackArray65);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(namingPolicy79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(callbackArray84);
    }

    @Test
    public void test08008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08008");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter29 = null;
        enhancer0.setCallbackFilter(callbackFilter29);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader32 = enhancer31.getClassLoader();
        enhancer31.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader35 = enhancer31.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter36 = null;
        enhancer31.setCallbackFilter(callbackFilter36);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer31.getNamingPolicy();
        enhancer31.setUseCache(true);
        enhancer31.setAttemptLoad(false);
        enhancer31.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer31.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setAttemptLoad(true);
        boolean boolean49 = enhancer46.getAttemptLoad();
        java.lang.ClassLoader classLoader50 = enhancer46.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setSerialVersionUID((java.lang.Long) 100L);
        enhancer51.setUseCache(false);
        enhancer51.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        enhancer58.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy61 = enhancer58.getNamingPolicy();
        java.lang.ClassLoader classLoader62 = enhancer58.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader64 = enhancer63.getClassLoader();
        enhancer58.setClassLoader(classLoader64);
        enhancer51.setClassLoader(classLoader64);
        enhancer46.setClassLoader(classLoader64);
        boolean boolean68 = generatorStrategy45.equals((java.lang.Object) classLoader64);
        enhancer0.setClassLoader(classLoader64);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(generatorStrategy45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(namingPolicy61);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test08009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08009");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer25.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy29);
        boolean boolean32 = namingPolicy29.equals((java.lang.Object) (short) -1);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Class[] classArray51 = new java.lang.Class[] { wildcardClass36, wildcardClass38, wildcardClass41, wildcardClass44, wildcardClass47, wildcardClass49 };
        enhancer33.setInterfaces(classArray51);
        enhancer33.setUseCache(false);
        boolean boolean55 = enhancer33.getAttemptLoad();
        boolean boolean56 = enhancer33.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        boolean boolean60 = enhancer57.getAttemptLoad();
        java.lang.ClassLoader classLoader61 = enhancer57.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy62 = enhancer57.getStrategy();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        enhancer57.setSuperclass((java.lang.Class) wildcardClass64);
        java.lang.ClassLoader classLoader66 = enhancer57.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        enhancer67.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy70 = enhancer67.getNamingPolicy();
        enhancer57.setNamingPolicy(namingPolicy70);
        enhancer57.setUseCache(true);
        enhancer57.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        enhancer76.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy79 = enhancer76.getNamingPolicy();
        boolean boolean80 = enhancer76.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter81 = null;
        enhancer76.setCallbackFilter(callbackFilter81);
        org.mockito.cglib.proxy.Callback callback83 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray84 = new org.mockito.cglib.proxy.Callback[] { callback83 };
        enhancer76.setCallbacks(callbackArray84);
        java.lang.ClassLoader classLoader86 = enhancer76.getClassLoader();
        enhancer57.setClassLoader(classLoader86);
        enhancer33.setClassLoader(classLoader86);
        boolean boolean89 = namingPolicy29.equals((java.lang.Object) classLoader86);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(generatorStrategy62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(namingPolicy70);
        org.junit.Assert.assertNotNull(namingPolicy79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(callbackArray84);
        org.junit.Assert.assertNotNull(classLoader86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test08010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08010");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy1 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader3 = enhancer2.getClassLoader();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Class[] classArray20 = new java.lang.Class[] { wildcardClass5, wildcardClass7, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass18 };
        enhancer2.setInterfaces(classArray20);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer22.getNamingPolicy();
        java.lang.ClassLoader classLoader26 = enhancer22.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader28 = enhancer27.getClassLoader();
        enhancer22.setClassLoader(classLoader28);
        enhancer2.setClassLoader(classLoader28);
        java.lang.ClassLoader classLoader31 = enhancer2.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader33 = enhancer32.getClassLoader();
        enhancer32.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer32.getNamingPolicy();
        enhancer2.setNamingPolicy(namingPolicy36);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy38 = enhancer2.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setAttemptLoad(true);
        boolean boolean42 = enhancer39.getAttemptLoad();
        java.lang.ClassLoader classLoader43 = enhancer39.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer39.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setAttemptLoad(true);
        boolean boolean48 = enhancer45.getAttemptLoad();
        java.lang.ClassLoader classLoader49 = enhancer45.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy50 = enhancer45.getStrategy();
        enhancer39.setStrategy(generatorStrategy50);
        java.lang.ClassLoader classLoader52 = enhancer39.getClassLoader();
        boolean boolean53 = generatorStrategy38.equals((java.lang.Object) classLoader52);
        enhancer0.setClassLoader(classLoader52);
        enhancer0.setAttemptLoad(false);
        java.lang.ClassLoader classLoader57 = enhancer0.getClassLoader();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj58 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy1);
        org.junit.Assert.assertNotNull(classLoader3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(generatorStrategy38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(generatorStrategy50);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(classLoader57);
    }

    @Test
    public void test08011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08011");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer16.getNamingPolicy();
        java.lang.ClassLoader classLoader20 = enhancer16.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader22 = enhancer21.getClassLoader();
        enhancer16.setClassLoader(classLoader22);
        boolean boolean24 = enhancer16.getUseCache();
        boolean boolean25 = namingPolicy15.equals((java.lang.Object) enhancer16);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer16.setCallback(callback26);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer16.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = enhancer29.getNamingPolicy();
        java.lang.ClassLoader classLoader33 = enhancer29.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader35 = enhancer34.getClassLoader();
        enhancer29.setClassLoader(classLoader35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean38 = enhancer37.getUseCache();
        java.lang.ClassLoader classLoader39 = enhancer37.getClassLoader();
        enhancer29.setClassLoader(classLoader39);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer29.getStrategy();
        enhancer16.setStrategy(generatorStrategy41);
        boolean boolean43 = generatorStrategy11.equals((java.lang.Object) generatorStrategy41);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer44.getNamingPolicy();
        java.lang.ClassLoader classLoader48 = enhancer44.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader50 = enhancer49.getClassLoader();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.Class[] classArray67 = new java.lang.Class[] { wildcardClass52, wildcardClass54, wildcardClass57, wildcardClass60, wildcardClass63, wildcardClass65 };
        enhancer49.setInterfaces(classArray67);
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        enhancer69.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy72 = enhancer69.getNamingPolicy();
        java.lang.ClassLoader classLoader73 = enhancer69.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader75 = enhancer74.getClassLoader();
        enhancer69.setClassLoader(classLoader75);
        enhancer49.setClassLoader(classLoader75);
        org.mockito.cglib.proxy.Callback callback78 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray79 = new org.mockito.cglib.proxy.Callback[] { callback78 };
        enhancer49.setCallbacks(callbackArray79);
        enhancer44.setCallbacks(callbackArray79);
        enhancer44.setAttemptLoad(true);
        enhancer44.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader86 = enhancer44.getClassLoader();
        enhancer44.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy89 = enhancer44.getStrategy();
        boolean boolean90 = generatorStrategy41.equals((java.lang.Object) enhancer44);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(namingPolicy32);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(classArray67);
        org.junit.Assert.assertNotNull(namingPolicy72);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(callbackArray79);
        org.junit.Assert.assertNotNull(classLoader86);
        org.junit.Assert.assertNotNull(generatorStrategy89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test08012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08012");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        enhancer0.setUseCache(false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test08013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08013");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = null;
        enhancer0.setStrategy(generatorStrategy10);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer0.getStrategy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy13 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = enhancer14.getNamingPolicy();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        java.lang.ClassLoader classLoader19 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy20 = enhancer14.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer14.getNamingPolicy();
        boolean boolean22 = enhancer14.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer14.setCallback(callback23);
        boolean boolean25 = generatorStrategy13.equals((java.lang.Object) enhancer14);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer14.setCallback(callback26);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertNotNull(generatorStrategy13);
        org.junit.Assert.assertNotNull(namingPolicy17);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertNotNull(generatorStrategy20);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test08014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08014");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        boolean boolean30 = enhancer0.getUseCache();
        enhancer0.setUseCache(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter35 = null;
        enhancer0.setCallbackFilter(callbackFilter35);
        enhancer0.setUseCache(true);
        boolean boolean39 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer40.getNamingPolicy();
        java.lang.ClassLoader classLoader44 = enhancer40.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader46 = enhancer45.getClassLoader();
        enhancer40.setClassLoader(classLoader46);
        java.lang.ClassLoader classLoader48 = enhancer40.getClassLoader();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter51 = null;
        enhancer40.setCallbackFilter(callbackFilter51);
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        enhancer53.setAttemptLoad(true);
        enhancer53.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer53.setInterceptDuringConstruction(true);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        enhancer53.setSuperclass((java.lang.Class) wildcardClass61);
        enhancer40.setSuperclass((java.lang.Class) wildcardClass61);
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass61);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test08015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08015");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader9 = enhancer8.getClassLoader();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass11, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass24 };
        enhancer8.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer8.setClassLoader(classLoader34);
        java.lang.ClassLoader classLoader37 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader37);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        java.lang.ClassLoader classLoader45 = enhancer41.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader47 = enhancer46.getClassLoader();
        enhancer41.setClassLoader(classLoader47);
        java.lang.ClassLoader classLoader49 = enhancer41.getClassLoader();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer41.getStrategy();
        enhancer0.setStrategy(generatorStrategy52);
        enhancer0.setInterceptDuringConstruction(true);
        boolean boolean56 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback57 = null;
        enhancer0.setCallback(callback57);
        java.lang.ClassLoader classLoader59 = enhancer0.getClassLoader();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(classLoader59);
    }

    @Test
    public void test08016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08016");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader12 = enhancer11.getClassLoader();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Class[] classArray29 = new java.lang.Class[] { wildcardClass14, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass25, wildcardClass27 };
        enhancer11.setInterfaces(classArray29);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer31.getNamingPolicy();
        java.lang.ClassLoader classLoader35 = enhancer31.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader37 = enhancer36.getClassLoader();
        enhancer31.setClassLoader(classLoader37);
        enhancer11.setClassLoader(classLoader37);
        boolean boolean40 = enhancer11.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = enhancer45.getNamingPolicy();
        java.lang.ClassLoader classLoader49 = enhancer45.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader51 = enhancer50.getClassLoader();
        enhancer45.setClassLoader(classLoader51);
        boolean boolean53 = enhancer45.getUseCache();
        boolean boolean54 = namingPolicy44.equals((java.lang.Object) enhancer45);
        org.mockito.cglib.proxy.Callback callback55 = null;
        enhancer45.setCallback(callback55);
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = enhancer45.getNamingPolicy();
        java.lang.Object obj58 = null;
        boolean boolean59 = namingPolicy57.equals(obj58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        java.lang.ClassLoader classLoader63 = null;
        enhancer60.setClassLoader(classLoader63);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setAttemptLoad(true);
        boolean boolean68 = enhancer65.getAttemptLoad();
        java.lang.ClassLoader classLoader69 = enhancer65.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy70 = enhancer65.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setAttemptLoad(true);
        boolean boolean74 = enhancer71.getAttemptLoad();
        java.lang.ClassLoader classLoader75 = enhancer71.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer71.getStrategy();
        enhancer65.setStrategy(generatorStrategy76);
        enhancer60.setStrategy(generatorStrategy76);
        java.lang.Class<?> wildcardClass79 = generatorStrategy76.getClass();
        boolean boolean80 = namingPolicy57.equals((java.lang.Object) wildcardClass79);
        enhancer11.setSuperclass((java.lang.Class) wildcardClass79);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy82 = enhancer11.getStrategy();
        enhancer0.setStrategy(generatorStrategy82);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(namingPolicy48);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(namingPolicy57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(generatorStrategy70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(generatorStrategy76);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(generatorStrategy82);
    }

    @Test
    public void test08017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08017");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy1 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader3 = enhancer2.getClassLoader();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Class[] classArray20 = new java.lang.Class[] { wildcardClass5, wildcardClass7, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass18 };
        enhancer2.setInterfaces(classArray20);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer22.getNamingPolicy();
        enhancer2.setNamingPolicy(namingPolicy25);
        enhancer0.setNamingPolicy(namingPolicy25);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setInterceptDuringConstruction(false);
        org.junit.Assert.assertNotNull(generatorStrategy1);
        org.junit.Assert.assertNotNull(classLoader3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(namingPolicy25);
    }

    @Test
    public void test08018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08018");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        boolean boolean9 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader11 = enhancer10.getClassLoader();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Class[] classArray28 = new java.lang.Class[] { wildcardClass13, wildcardClass15, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass26 };
        enhancer10.setInterfaces(classArray28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer30.getNamingPolicy();
        java.lang.ClassLoader classLoader34 = enhancer30.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        enhancer30.setClassLoader(classLoader36);
        enhancer10.setClassLoader(classLoader36);
        java.lang.ClassLoader classLoader39 = enhancer10.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer40.getNamingPolicy();
        enhancer10.setNamingPolicy(namingPolicy44);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy46 = enhancer10.getStrategy();
        enhancer0.setStrategy(generatorStrategy46);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer0.getStrategy();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer0.getNamingPolicy();
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(generatorStrategy46);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertNotNull(namingPolicy51);
    }

    @Test
    public void test08019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08019");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(true);
        boolean boolean4 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter9 = null;
        enhancer0.setCallbackFilter(callbackFilter9);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test08020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08020");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setSerialVersionUID((java.lang.Long) 100L);
        enhancer5.setUseCache(false);
        enhancer5.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        java.lang.ClassLoader classLoader16 = enhancer12.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader18 = enhancer17.getClassLoader();
        enhancer12.setClassLoader(classLoader18);
        enhancer5.setClassLoader(classLoader18);
        enhancer0.setClassLoader(classLoader18);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseFactory(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(classLoader18);
    }

    @Test
    public void test08021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08021");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader17 = enhancer16.getClassLoader();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Class[] classArray34 = new java.lang.Class[] { wildcardClass19, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass30, wildcardClass32 };
        enhancer16.setInterfaces(classArray34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer36.getNamingPolicy();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader42 = enhancer41.getClassLoader();
        enhancer36.setClassLoader(classLoader42);
        enhancer16.setClassLoader(classLoader42);
        org.mockito.cglib.proxy.Callback callback45 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray46 = new org.mockito.cglib.proxy.Callback[] { callback45 };
        enhancer16.setCallbacks(callbackArray46);
        enhancer12.setCallbacks(callbackArray46);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader50 = enhancer49.getClassLoader();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.Class[] classArray67 = new java.lang.Class[] { wildcardClass52, wildcardClass54, wildcardClass57, wildcardClass60, wildcardClass63, wildcardClass65 };
        enhancer49.setInterfaces(classArray67);
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        enhancer69.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy72 = enhancer69.getNamingPolicy();
        enhancer49.setNamingPolicy(namingPolicy72);
        enhancer12.setNamingPolicy(namingPolicy72);
        enhancer0.setNamingPolicy(namingPolicy72);
        enhancer0.setAttemptLoad(false);
        enhancer0.setAttemptLoad(false);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback82 = null;
        enhancer0.setCallback(callback82);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class84 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(callbackArray46);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(classArray67);
        org.junit.Assert.assertNotNull(namingPolicy72);
    }

    @Test
    public void test08022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08022");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter10 = null;
        enhancer0.setCallbackFilter(callbackFilter10);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = enhancer14.getNamingPolicy();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader20 = enhancer19.getClassLoader();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass22, wildcardClass24, wildcardClass27, wildcardClass30, wildcardClass33, wildcardClass35 };
        enhancer19.setInterfaces(classArray37);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer39.getNamingPolicy();
        java.lang.ClassLoader classLoader43 = enhancer39.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        enhancer39.setClassLoader(classLoader45);
        enhancer19.setClassLoader(classLoader45);
        org.mockito.cglib.proxy.Callback callback48 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray49 = new org.mockito.cglib.proxy.Callback[] { callback48 };
        enhancer19.setCallbacks(callbackArray49);
        enhancer14.setCallbacks(callbackArray49);
        enhancer14.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback54 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray55 = new org.mockito.cglib.proxy.Callback[] { callback54 };
        enhancer14.setCallbacks(callbackArray55);
        enhancer0.setCallbacks(callbackArray55);
        org.mockito.cglib.proxy.Callback callback58 = null;
        enhancer0.setCallback(callback58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader61 = enhancer60.getClassLoader();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass76);
        java.lang.Class[] classArray78 = new java.lang.Class[] { wildcardClass63, wildcardClass65, wildcardClass68, wildcardClass71, wildcardClass74, wildcardClass76 };
        enhancer60.setInterfaces(classArray78);
        org.mockito.cglib.proxy.Enhancer enhancer80 = new org.mockito.cglib.proxy.Enhancer();
        enhancer80.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy83 = enhancer80.getNamingPolicy();
        java.lang.ClassLoader classLoader84 = enhancer80.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer85 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader86 = enhancer85.getClassLoader();
        enhancer80.setClassLoader(classLoader86);
        enhancer60.setClassLoader(classLoader86);
        enhancer60.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer60.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy93 = enhancer60.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter94 = null;
        enhancer60.setCallbackFilter(callbackFilter94);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy96 = enhancer60.getStrategy();
        enhancer0.setStrategy(generatorStrategy96);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(namingPolicy17);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(callbackArray49);
        org.junit.Assert.assertNotNull(callbackArray55);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(namingPolicy83);
        org.junit.Assert.assertNotNull(classLoader84);
        org.junit.Assert.assertNotNull(classLoader86);
        org.junit.Assert.assertNotNull(namingPolicy93);
        org.junit.Assert.assertNotNull(generatorStrategy96);
    }

    @Test
    public void test08023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08023");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        boolean boolean11 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader12 = enhancer5.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer13.getNamingPolicy();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer13.getStrategy();
        enhancer13.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer13.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer22.getNamingPolicy();
        java.lang.ClassLoader classLoader26 = enhancer22.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy27 = enhancer22.getStrategy();
        enhancer22.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        java.lang.Class[] classArray48 = new java.lang.Class[] { wildcardClass33, wildcardClass35, wildcardClass38, wildcardClass41, wildcardClass44, wildcardClass46 };
        enhancer30.setInterfaces(classArray48);
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        enhancer50.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer50.getNamingPolicy();
        java.lang.ClassLoader classLoader54 = enhancer50.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader56 = enhancer55.getClassLoader();
        enhancer50.setClassLoader(classLoader56);
        enhancer30.setClassLoader(classLoader56);
        java.lang.ClassLoader classLoader59 = enhancer30.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer60.getNamingPolicy();
        java.lang.ClassLoader classLoader64 = enhancer60.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader66 = enhancer65.getClassLoader();
        enhancer60.setClassLoader(classLoader66);
        enhancer60.setAttemptLoad(true);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class[] classArray72 = new java.lang.Class[] { wildcardClass71 };
        enhancer60.setInterfaces(classArray72);
        enhancer30.setInterfaces(classArray72);
        enhancer22.setInterfaces(classArray72);
        enhancer13.setInterfaces(classArray72);
        enhancer5.setInterfaces(classArray72);
        enhancer0.setInterfaces(classArray72);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = enhancer0.getNamingPolicy();
        enhancer0.setAttemptLoad(true);
        boolean boolean84 = enhancer0.getAttemptLoad();
        enhancer0.setUseFactory(false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(generatorStrategy18);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(generatorStrategy27);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(classArray48);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(classArray72);
        org.junit.Assert.assertNotNull(namingPolicy81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test08024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08024");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader2 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer3.getNamingPolicy();
        java.lang.ClassLoader classLoader7 = enhancer3.getClassLoader();
        enhancer0.setClassLoader(classLoader7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer0.setCallback(callback9);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer0.getNamingPolicy();
        enhancer0.setInterceptDuringConstruction(false);
        boolean boolean14 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer0.setCallback(callback15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class17 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test08025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08025");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        enhancer0.setUseCache(true);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setAttemptLoad(true);
        java.lang.ClassLoader classLoader26 = null;
        enhancer23.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        boolean boolean31 = enhancer28.getAttemptLoad();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy33 = enhancer28.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setAttemptLoad(true);
        boolean boolean37 = enhancer34.getAttemptLoad();
        java.lang.ClassLoader classLoader38 = enhancer34.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy39 = enhancer34.getStrategy();
        enhancer28.setStrategy(generatorStrategy39);
        enhancer23.setStrategy(generatorStrategy39);
        org.mockito.cglib.proxy.Callback callback42 = null;
        enhancer23.setCallback(callback42);
        boolean boolean44 = enhancer23.getUseCache();
        enhancer23.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback47 = null;
        enhancer23.setCallback(callback47);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader50 = enhancer49.getClassLoader();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.Class[] classArray67 = new java.lang.Class[] { wildcardClass52, wildcardClass54, wildcardClass57, wildcardClass60, wildcardClass63, wildcardClass65 };
        enhancer49.setInterfaces(classArray67);
        org.mockito.cglib.proxy.Callback[] callbackArray69 = null;
        enhancer49.setCallbacks(callbackArray69);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader72 = enhancer71.getClassLoader();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass76);
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        boolean boolean80 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass79);
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        boolean boolean83 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass82);
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        boolean boolean88 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass87);
        java.lang.Class[] classArray89 = new java.lang.Class[] { wildcardClass74, wildcardClass76, wildcardClass79, wildcardClass82, wildcardClass85, wildcardClass87 };
        enhancer71.setInterfaces(classArray89);
        enhancer49.setInterfaces(classArray89);
        enhancer23.setInterfaces(classArray89);
        enhancer0.setInterfaces(classArray89);
        org.mockito.cglib.proxy.Callback callback94 = null;
        enhancer0.setCallback(callback94);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(generatorStrategy33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(generatorStrategy39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(classArray67);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(classArray89);
    }

    @Test
    public void test08026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08026");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setAttemptLoad(true);
        boolean boolean9 = enhancer6.getAttemptLoad();
        java.lang.ClassLoader classLoader10 = enhancer6.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer6.getStrategy();
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        boolean boolean16 = enhancer13.getAttemptLoad();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer13.getStrategy();
        enhancer0.setStrategy(generatorStrategy18);
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseFactory(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = null;
        enhancer0.setStrategy(generatorStrategy30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(generatorStrategy18);
    }

    @Test
    public void test08027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08027");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader22 = enhancer21.getClassLoader();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass24, wildcardClass26, wildcardClass29, wildcardClass32, wildcardClass35, wildcardClass37 };
        enhancer21.setInterfaces(classArray39);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        java.lang.ClassLoader classLoader45 = enhancer41.getClassLoader();
        enhancer21.setClassLoader(classLoader45);
        enhancer4.setClassLoader(classLoader45);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer4.setCallback(callback48);
        boolean boolean50 = enhancer4.getAttemptLoad();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class51 = enhancer4.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test08028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08028");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer4.setCallback(callback14);
        enhancer4.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer4.getStrategy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter19 = null;
        enhancer4.setCallbackFilter(callbackFilter19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setAttemptLoad(true);
        boolean boolean24 = enhancer21.getAttemptLoad();
        java.lang.ClassLoader classLoader25 = enhancer21.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy26 = enhancer21.getStrategy();
        enhancer21.setAttemptLoad(false);
        boolean boolean29 = enhancer21.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer21.getNamingPolicy();
        enhancer4.setNamingPolicy(namingPolicy30);
        org.mockito.cglib.proxy.Callback callback32 = null;
        enhancer4.setCallback(callback32);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(generatorStrategy18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(generatorStrategy26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(namingPolicy30);
    }

    @Test
    public void test08029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08029");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = enhancer29.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        boolean boolean41 = enhancer33.getUseCache();
        boolean boolean42 = namingPolicy32.equals((java.lang.Object) enhancer33);
        enhancer0.setNamingPolicy(namingPolicy32);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Class[] classArray62 = new java.lang.Class[] { wildcardClass47, wildcardClass49, wildcardClass52, wildcardClass55, wildcardClass58, wildcardClass60 };
        enhancer44.setInterfaces(classArray62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        java.lang.ClassLoader classLoader68 = enhancer64.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader70 = enhancer69.getClassLoader();
        enhancer64.setClassLoader(classLoader70);
        enhancer44.setClassLoader(classLoader70);
        java.lang.ClassLoader classLoader73 = enhancer44.getClassLoader();
        boolean boolean74 = namingPolicy32.equals((java.lang.Object) enhancer44);
        enhancer44.setAttemptLoad(true);
        enhancer44.setUseFactory(true);
        boolean boolean79 = enhancer44.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy80 = enhancer44.getStrategy();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy32);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(classLoader70);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(generatorStrategy80);
    }

    @Test
    public void test08030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08030");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(false);
        boolean boolean8 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        boolean boolean11 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test08031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08031");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        java.lang.Class<?> wildcardClass33 = classLoader31.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass33);
        enhancer0.setUseCache(true);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer40.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer44.getNamingPolicy();
        java.lang.ClassLoader classLoader48 = enhancer44.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader50 = enhancer49.getClassLoader();
        enhancer44.setClassLoader(classLoader50);
        boolean boolean52 = enhancer44.getUseCache();
        boolean boolean53 = namingPolicy43.equals((java.lang.Object) enhancer44);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setAttemptLoad(true);
        boolean boolean57 = enhancer54.getAttemptLoad();
        java.lang.ClassLoader classLoader58 = enhancer54.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy59 = enhancer54.getStrategy();
        enhancer44.setStrategy(generatorStrategy59);
        java.lang.ClassLoader classLoader61 = enhancer44.getClassLoader();
        java.lang.ClassLoader classLoader62 = enhancer44.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer44.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy63);
        boolean boolean65 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy66 = enhancer0.getStrategy();
        java.lang.Class[] classArray67 = null;
        enhancer0.setInterfaces(classArray67);
        enhancer0.setInterceptDuringConstruction(false);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(generatorStrategy59);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(generatorStrategy66);
    }

    @Test
    public void test08032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08032");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        enhancer7.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer7.setInterceptDuringConstruction(true);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        enhancer7.setSuperclass((java.lang.Class) wildcardClass15);
        enhancer7.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer7.setCallback(callback20);
        java.lang.ClassLoader classLoader22 = enhancer7.getClassLoader();
        enhancer0.setClassLoader(classLoader22);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(classLoader22);
    }

    @Test
    public void test08033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08033");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer4.setCallback(callback22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        enhancer4.setClassLoader(classLoader28);
        enhancer4.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy32 = enhancer4.getStrategy();
        enhancer4.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer35.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer39.getNamingPolicy();
        java.lang.ClassLoader classLoader43 = enhancer39.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        enhancer39.setClassLoader(classLoader45);
        boolean boolean47 = enhancer39.getUseCache();
        boolean boolean48 = namingPolicy38.equals((java.lang.Object) enhancer39);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setAttemptLoad(true);
        boolean boolean52 = enhancer49.getAttemptLoad();
        java.lang.ClassLoader classLoader53 = enhancer49.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer49.getStrategy();
        enhancer39.setStrategy(generatorStrategy54);
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader57 = enhancer56.getClassLoader();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass72);
        java.lang.Class[] classArray74 = new java.lang.Class[] { wildcardClass59, wildcardClass61, wildcardClass64, wildcardClass67, wildcardClass70, wildcardClass72 };
        enhancer56.setInterfaces(classArray74);
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        enhancer76.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy79 = enhancer76.getNamingPolicy();
        java.lang.ClassLoader classLoader80 = enhancer76.getClassLoader();
        enhancer56.setClassLoader(classLoader80);
        enhancer39.setClassLoader(classLoader80);
        enhancer4.setClassLoader(classLoader80);
        java.lang.ClassLoader classLoader84 = null;
        enhancer4.setClassLoader(classLoader84);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(generatorStrategy32);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(namingPolicy79);
        org.junit.Assert.assertNotNull(classLoader80);
    }

    @Test
    public void test08034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08034");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.Callback callback29 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray30 = new org.mockito.cglib.proxy.Callback[] { callback29 };
        enhancer0.setCallbacks(callbackArray30);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setAttemptLoad(false);
        boolean boolean40 = enhancer0.getUseCache();
        java.lang.Class<?> wildcardClass41 = enhancer0.getClass();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(callbackArray30);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test08035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08035");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setAttemptLoad(true);
        enhancer9.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer9.setInterceptDuringConstruction(true);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        enhancer9.setSuperclass((java.lang.Class) wildcardClass17);
        enhancer9.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer9.setCallback(callback22);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy24 = enhancer9.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer25.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter30 = null;
        enhancer25.setCallbackFilter(callbackFilter30);
        java.lang.ClassLoader classLoader32 = enhancer25.getClassLoader();
        boolean boolean33 = generatorStrategy24.equals((java.lang.Object) classLoader32);
        enhancer0.setStrategy(generatorStrategy24);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setAttemptLoad(true);
        boolean boolean40 = enhancer37.getAttemptLoad();
        java.lang.ClassLoader classLoader41 = enhancer37.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer37.getStrategy();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        enhancer37.setSuperclass((java.lang.Class) wildcardClass44);
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass44);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy52 = enhancer49.getNamingPolicy();
        java.lang.ClassLoader classLoader53 = enhancer49.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader55 = enhancer54.getClassLoader();
        enhancer49.setClassLoader(classLoader55);
        java.lang.ClassLoader classLoader57 = enhancer49.getClassLoader();
        enhancer49.setUseCache(true);
        org.mockito.cglib.proxy.Callback callback60 = null;
        enhancer49.setCallback(callback60);
        java.lang.Class<?> wildcardClass62 = enhancer49.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass62);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy64 = enhancer0.getStrategy();
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(generatorStrategy24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertNotNull(namingPolicy52);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(generatorStrategy64);
    }

    @Test
    public void test08036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08036");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        boolean boolean9 = enhancer0.getUseCache();
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer0.getNamingPolicy();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(namingPolicy10);
    }

    @Test
    public void test08037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08037");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer25.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy29);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer0.setCallback(callback31);
        java.lang.ClassLoader classLoader33 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(true);
        enhancer0.setAttemptLoad(false);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.CallbackFilter callbackFilter40 = null;
        enhancer0.setCallbackFilter(callbackFilter40);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer42.getNamingPolicy();
        java.lang.ClassLoader classLoader46 = enhancer42.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader48 = enhancer47.getClassLoader();
        enhancer42.setClassLoader(classLoader48);
        boolean boolean50 = enhancer42.getUseCache();
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer42.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer52.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        enhancer56.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = enhancer56.getNamingPolicy();
        java.lang.ClassLoader classLoader60 = enhancer56.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader62 = enhancer61.getClassLoader();
        enhancer56.setClassLoader(classLoader62);
        boolean boolean64 = enhancer56.getUseCache();
        boolean boolean65 = namingPolicy55.equals((java.lang.Object) enhancer56);
        java.lang.Class<?> wildcardClass66 = enhancer56.getClass();
        boolean boolean67 = namingPolicy51.equals((java.lang.Object) wildcardClass66);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.cglib.proxy.Enhancer");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(namingPolicy59);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test08038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08038");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = null;
        enhancer0.setStrategy(generatorStrategy5);
        enhancer0.setUseCache(true);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback11 = null;
        enhancer0.setCallback(callback11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean14 = enhancer13.getUseCache();
        boolean boolean15 = enhancer13.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setAttemptLoad(true);
        boolean boolean19 = enhancer16.getAttemptLoad();
        java.lang.ClassLoader classLoader20 = enhancer16.getClassLoader();
        boolean boolean21 = enhancer16.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setAttemptLoad(true);
        enhancer22.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer22.setInterceptDuringConstruction(true);
        enhancer22.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setAttemptLoad(true);
        enhancer31.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer31.setInterceptDuringConstruction(true);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        enhancer31.setSuperclass((java.lang.Class) wildcardClass39);
        enhancer31.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback44 = null;
        enhancer31.setCallback(callback44);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy46 = enhancer31.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader48 = enhancer47.getClassLoader();
        enhancer47.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader51 = enhancer47.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter52 = null;
        enhancer47.setCallbackFilter(callbackFilter52);
        java.lang.ClassLoader classLoader54 = enhancer47.getClassLoader();
        boolean boolean55 = generatorStrategy46.equals((java.lang.Object) classLoader54);
        enhancer22.setStrategy(generatorStrategy46);
        enhancer22.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setAttemptLoad(true);
        boolean boolean62 = enhancer59.getAttemptLoad();
        java.lang.ClassLoader classLoader63 = enhancer59.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy64 = enhancer59.getStrategy();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        enhancer59.setSuperclass((java.lang.Class) wildcardClass66);
        boolean boolean68 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        enhancer22.setSuperclass((java.lang.Class) wildcardClass66);
        enhancer16.setSuperclass((java.lang.Class) wildcardClass66);
        enhancer13.setSuperclass((java.lang.Class) wildcardClass66);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass66);
        org.mockito.cglib.proxy.Callback callback73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj74 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass66, callback73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(generatorStrategy46);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertNotNull(generatorStrategy64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test08039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08039");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader9 = enhancer8.getClassLoader();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass11, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass24 };
        enhancer8.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer8.setClassLoader(classLoader34);
        java.lang.ClassLoader classLoader37 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader37);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        java.lang.ClassLoader classLoader41 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer0.getStrategy();
        boolean boolean43 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer0.getStrategy();
        enhancer0.setInterceptDuringConstruction(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(generatorStrategy44);
    }

    @Test
    public void test08040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08040");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        java.lang.Class<?> wildcardClass33 = classLoader31.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass33);
        enhancer0.setUseCache(true);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer40.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer44.getNamingPolicy();
        java.lang.ClassLoader classLoader48 = enhancer44.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader50 = enhancer49.getClassLoader();
        enhancer44.setClassLoader(classLoader50);
        boolean boolean52 = enhancer44.getUseCache();
        boolean boolean53 = namingPolicy43.equals((java.lang.Object) enhancer44);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setAttemptLoad(true);
        boolean boolean57 = enhancer54.getAttemptLoad();
        java.lang.ClassLoader classLoader58 = enhancer54.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy59 = enhancer54.getStrategy();
        enhancer44.setStrategy(generatorStrategy59);
        java.lang.ClassLoader classLoader61 = enhancer44.getClassLoader();
        java.lang.ClassLoader classLoader62 = enhancer44.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer44.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy63);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter65 = null;
        enhancer0.setCallbackFilter(callbackFilter65);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer0.getNamingPolicy();
        enhancer0.setInterceptDuringConstruction(true);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(generatorStrategy59);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(namingPolicy67);
    }

    @Test
    public void test08041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08041");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader42 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer0.setCallback(callback46);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy51 = enhancer0.getStrategy();
        java.lang.Class<?> wildcardClass52 = enhancer0.getClass();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(generatorStrategy45);
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertNotNull(generatorStrategy51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test08042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08042");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback4 = null;
        enhancer0.setCallback(callback4);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader8 = enhancer7.getClassLoader();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        java.lang.Class[] classArray25 = new java.lang.Class[] { wildcardClass10, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass21, wildcardClass23 };
        enhancer7.setInterfaces(classArray25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setAttemptLoad(true);
        enhancer27.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer27.setInterceptDuringConstruction(true);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        enhancer27.setSuperclass((java.lang.Class) wildcardClass35);
        enhancer7.setSuperclass((java.lang.Class) wildcardClass35);
        boolean boolean39 = enhancer7.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer7.setCallback(callback40);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        enhancer42.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer42.setInterceptDuringConstruction(true);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        enhancer42.setSuperclass((java.lang.Class) wildcardClass50);
        enhancer42.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback55 = null;
        enhancer42.setCallback(callback55);
        enhancer42.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = enhancer59.getNamingPolicy();
        java.lang.ClassLoader classLoader63 = enhancer59.getClassLoader();
        enhancer59.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy66 = enhancer59.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean68 = enhancer67.getAttemptLoad();
        enhancer67.setUseCache(false);
        boolean boolean71 = namingPolicy66.equals((java.lang.Object) enhancer67);
        org.mockito.cglib.core.NamingPolicy namingPolicy72 = enhancer67.getNamingPolicy();
        enhancer42.setNamingPolicy(namingPolicy72);
        enhancer7.setNamingPolicy(namingPolicy72);
        org.mockito.cglib.proxy.Callback callback75 = null;
        enhancer7.setCallback(callback75);
        enhancer7.setSerialVersionUID((java.lang.Long) 0L);
        boolean boolean79 = namingPolicy6.equals((java.lang.Object) enhancer7);
        enhancer7.setUseFactory(false);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(namingPolicy62);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertNotNull(namingPolicy66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(namingPolicy72);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test08043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08043");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.Callback callback29 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray30 = new org.mockito.cglib.proxy.Callback[] { callback29 };
        enhancer0.setCallbacks(callbackArray30);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setAttemptLoad(true);
        boolean boolean35 = enhancer32.getAttemptLoad();
        java.lang.ClassLoader classLoader36 = enhancer32.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy37 = enhancer32.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setAttemptLoad(true);
        boolean boolean41 = enhancer38.getAttemptLoad();
        java.lang.ClassLoader classLoader42 = enhancer38.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy43 = enhancer38.getStrategy();
        enhancer32.setStrategy(generatorStrategy43);
        enhancer0.setStrategy(generatorStrategy43);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer0.getNamingPolicy();
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy53 = enhancer0.getStrategy();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(callbackArray30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(generatorStrategy37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(generatorStrategy43);
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertNotNull(generatorStrategy53);
    }

    @Test
    public void test08044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08044");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader9 = enhancer8.getClassLoader();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass11, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass24 };
        enhancer8.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer8.setClassLoader(classLoader34);
        java.lang.ClassLoader classLoader37 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader37);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        java.lang.ClassLoader classLoader45 = enhancer41.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader47 = enhancer46.getClassLoader();
        enhancer41.setClassLoader(classLoader47);
        java.lang.ClassLoader classLoader49 = enhancer41.getClassLoader();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer41.getStrategy();
        enhancer0.setStrategy(generatorStrategy52);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Callback[] callbackArray56 = null;
        enhancer0.setCallbacks(callbackArray56);
        org.mockito.cglib.core.NamingPolicy namingPolicy58 = enhancer0.getNamingPolicy();
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter61 = null;
        enhancer0.setCallbackFilter(callbackFilter61);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertNotNull(namingPolicy58);
    }

    @Test
    public void test08045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08045");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback40 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray41 = new org.mockito.cglib.proxy.Callback[] { callback40 };
        enhancer0.setCallbacks(callbackArray41);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer0.setCallback(callback46);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertNotNull(callbackArray41);
        org.junit.Assert.assertNotNull(namingPolicy45);
    }

    @Test
    public void test08046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08046");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        boolean boolean6 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter7 = null;
        enhancer0.setCallbackFilter(callbackFilter7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        java.lang.Class[] classArray27 = new java.lang.Class[] { wildcardClass12, wildcardClass14, wildcardClass17, wildcardClass20, wildcardClass23, wildcardClass25 };
        enhancer9.setInterfaces(classArray27);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = enhancer29.getNamingPolicy();
        java.lang.ClassLoader classLoader33 = enhancer29.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader35 = enhancer34.getClassLoader();
        enhancer29.setClassLoader(classLoader35);
        enhancer9.setClassLoader(classLoader35);
        java.lang.ClassLoader classLoader38 = enhancer9.getClassLoader();
        enhancer0.setClassLoader(classLoader38);
        enhancer0.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(namingPolicy32);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(generatorStrategy42);
    }

    @Test
    public void test08047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08047");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setUseFactory(false);
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseCache(false);
        boolean boolean44 = enhancer0.getUseCache();
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        java.lang.ClassLoader classLoader47 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader50 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer0.setCallback(callback53);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(classLoader50);
    }

    @Test
    public void test08048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08048");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader12 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer13.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer17.getNamingPolicy();
        java.lang.ClassLoader classLoader21 = enhancer17.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader23 = enhancer22.getClassLoader();
        enhancer17.setClassLoader(classLoader23);
        boolean boolean25 = enhancer17.getUseCache();
        boolean boolean26 = namingPolicy16.equals((java.lang.Object) enhancer17);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setAttemptLoad(true);
        boolean boolean30 = enhancer27.getAttemptLoad();
        java.lang.ClassLoader classLoader31 = enhancer27.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy32 = enhancer27.getStrategy();
        enhancer17.setStrategy(generatorStrategy32);
        java.lang.ClassLoader classLoader34 = enhancer17.getClassLoader();
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer17.setCallback(callback35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = enhancer37.getNamingPolicy();
        java.lang.ClassLoader classLoader41 = enhancer37.getClassLoader();
        enhancer17.setClassLoader(classLoader41);
        enhancer17.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer17.getStrategy();
        enhancer17.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer48.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer52.getNamingPolicy();
        java.lang.ClassLoader classLoader56 = enhancer52.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader58 = enhancer57.getClassLoader();
        enhancer52.setClassLoader(classLoader58);
        boolean boolean60 = enhancer52.getUseCache();
        boolean boolean61 = namingPolicy51.equals((java.lang.Object) enhancer52);
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        enhancer62.setAttemptLoad(true);
        boolean boolean65 = enhancer62.getAttemptLoad();
        java.lang.ClassLoader classLoader66 = enhancer62.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy67 = enhancer62.getStrategy();
        enhancer52.setStrategy(generatorStrategy67);
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader70 = enhancer69.getClassLoader();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        boolean boolean75 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass74);
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass77);
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        boolean boolean81 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass80);
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        boolean boolean86 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass85);
        java.lang.Class[] classArray87 = new java.lang.Class[] { wildcardClass72, wildcardClass74, wildcardClass77, wildcardClass80, wildcardClass83, wildcardClass85 };
        enhancer69.setInterfaces(classArray87);
        org.mockito.cglib.proxy.Enhancer enhancer89 = new org.mockito.cglib.proxy.Enhancer();
        enhancer89.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy92 = enhancer89.getNamingPolicy();
        java.lang.ClassLoader classLoader93 = enhancer89.getClassLoader();
        enhancer69.setClassLoader(classLoader93);
        enhancer52.setClassLoader(classLoader93);
        enhancer17.setClassLoader(classLoader93);
        java.lang.Class<?> wildcardClass97 = classLoader93.getClass();
        boolean boolean98 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass97);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(generatorStrategy32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(namingPolicy40);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(generatorStrategy45);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(generatorStrategy67);
        org.junit.Assert.assertNotNull(classLoader70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(classArray87);
        org.junit.Assert.assertNotNull(namingPolicy92);
        org.junit.Assert.assertNotNull(classLoader93);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test08049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08049");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader9 = enhancer8.getClassLoader();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass11, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass24 };
        enhancer8.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer8.setClassLoader(classLoader34);
        java.lang.ClassLoader classLoader37 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader37);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        java.lang.ClassLoader classLoader45 = enhancer41.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader47 = enhancer46.getClassLoader();
        enhancer41.setClassLoader(classLoader47);
        java.lang.ClassLoader classLoader49 = enhancer41.getClassLoader();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer41.getStrategy();
        enhancer0.setStrategy(generatorStrategy52);
        org.mockito.cglib.proxy.Callback callback54 = null;
        enhancer0.setCallback(callback54);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseFactory(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(generatorStrategy52);
    }

    @Test
    public void test08050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08050");
        java.lang.Class class0 = null;
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader2 = enhancer1.getClassLoader();
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass4, wildcardClass6, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass17 };
        enhancer1.setInterfaces(classArray19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        enhancer1.setSuperclass((java.lang.Class) wildcardClass22);
        boolean boolean24 = enhancer1.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer1.setCallback(callback25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader28 = enhancer27.getClassLoader();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Class[] classArray45 = new java.lang.Class[] { wildcardClass30, wildcardClass32, wildcardClass35, wildcardClass38, wildcardClass41, wildcardClass43 };
        enhancer27.setInterfaces(classArray45);
        org.mockito.cglib.proxy.Callback[] callbackArray47 = null;
        enhancer27.setCallbacks(callbackArray47);
        enhancer27.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader52 = enhancer51.getClassLoader();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass67);
        java.lang.Class[] classArray69 = new java.lang.Class[] { wildcardClass54, wildcardClass56, wildcardClass59, wildcardClass62, wildcardClass65, wildcardClass67 };
        enhancer51.setInterfaces(classArray69);
        enhancer27.setInterfaces(classArray69);
        enhancer1.setInterfaces(classArray69);
        org.mockito.cglib.proxy.Callback callback73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj74 = org.mockito.cglib.proxy.Enhancer.create(class0, classArray69, callback73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(classArray69);
    }

    @Test
    public void test08051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08051");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer0.setCallbackFilter(callbackFilter25);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter27 = null;
        enhancer0.setCallbackFilter(callbackFilter27);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer0.setCallback(callback29);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setAttemptLoad(true);
        boolean boolean41 = enhancer38.getAttemptLoad();
        java.lang.ClassLoader classLoader42 = enhancer38.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy43 = enhancer38.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setAttemptLoad(true);
        boolean boolean47 = enhancer44.getAttemptLoad();
        java.lang.ClassLoader classLoader48 = enhancer44.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy49 = enhancer44.getStrategy();
        enhancer38.setStrategy(generatorStrategy49);
        enhancer33.setStrategy(generatorStrategy49);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer33.setCallback(callback52);
        boolean boolean54 = enhancer33.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy55 = enhancer33.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean57 = enhancer56.getUseCache();
        java.lang.ClassLoader classLoader58 = enhancer56.getClassLoader();
        enhancer33.setClassLoader(classLoader58);
        enhancer0.setClassLoader(classLoader58);
        boolean boolean61 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy62 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback[] callbackArray63 = null;
        enhancer0.setCallbacks(callbackArray63);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy65 = enhancer0.getStrategy();
        org.mockito.cglib.core.ClassGenerator classGenerator66 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray67 = generatorStrategy65.generate(classGenerator66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(generatorStrategy43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(generatorStrategy49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(generatorStrategy55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(generatorStrategy62);
        org.junit.Assert.assertNotNull(generatorStrategy65);
    }

    @Test
    public void test08052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08052");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader14 = enhancer13.getClassLoader();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Class[] classArray31 = new java.lang.Class[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass29 };
        enhancer13.setInterfaces(classArray31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        enhancer13.setClassLoader(classLoader39);
        boolean boolean42 = enhancer13.getUseCache();
        boolean boolean43 = generatorStrategy12.equals((java.lang.Object) enhancer13);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean45 = enhancer44.getUseCache();
        java.lang.ClassLoader classLoader46 = enhancer44.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer47.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = enhancer51.getNamingPolicy();
        java.lang.ClassLoader classLoader55 = enhancer51.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader57 = enhancer56.getClassLoader();
        enhancer51.setClassLoader(classLoader57);
        boolean boolean59 = enhancer51.getUseCache();
        boolean boolean60 = namingPolicy50.equals((java.lang.Object) enhancer51);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setAttemptLoad(true);
        boolean boolean64 = enhancer61.getAttemptLoad();
        java.lang.ClassLoader classLoader65 = enhancer61.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy66 = enhancer61.getStrategy();
        enhancer51.setStrategy(generatorStrategy66);
        java.lang.ClassLoader classLoader68 = enhancer51.getClassLoader();
        enhancer44.setClassLoader(classLoader68);
        boolean boolean70 = generatorStrategy12.equals((java.lang.Object) enhancer44);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter71 = null;
        enhancer44.setCallbackFilter(callbackFilter71);
        boolean boolean73 = enhancer44.getUseCache();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertNotNull(namingPolicy54);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(classLoader65);
        org.junit.Assert.assertNotNull(generatorStrategy66);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test08053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08053");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer40.getNamingPolicy();
        java.lang.ClassLoader classLoader44 = enhancer40.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader46 = enhancer45.getClassLoader();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.Class[] classArray63 = new java.lang.Class[] { wildcardClass48, wildcardClass50, wildcardClass53, wildcardClass56, wildcardClass59, wildcardClass61 };
        enhancer45.setInterfaces(classArray63);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer65.getNamingPolicy();
        java.lang.ClassLoader classLoader69 = enhancer65.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader71 = enhancer70.getClassLoader();
        enhancer65.setClassLoader(classLoader71);
        enhancer45.setClassLoader(classLoader71);
        org.mockito.cglib.proxy.Callback callback74 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray75 = new org.mockito.cglib.proxy.Callback[] { callback74 };
        enhancer45.setCallbacks(callbackArray75);
        enhancer40.setCallbacks(callbackArray75);
        enhancer0.setCallbacks(callbackArray75);
        org.mockito.cglib.proxy.Callback callback79 = null;
        enhancer0.setCallback(callback79);
        enhancer0.setInterceptDuringConstruction(false);
        boolean boolean83 = enhancer0.getUseCache();
        java.lang.Class<?> wildcardClass84 = enhancer0.getClass();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(classArray63);
        org.junit.Assert.assertNotNull(namingPolicy68);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(classLoader71);
        org.junit.Assert.assertNotNull(callbackArray75);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test08054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08054");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        boolean boolean30 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer0.setCallback(callback31);
        boolean boolean33 = enhancer0.getUseCache();
        org.mockito.asm.ClassVisitor classVisitor34 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test08055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08055");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(false);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setAttemptLoad(false);
        java.lang.ClassLoader classLoader12 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy13 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer0.getNamingPolicy();
        java.lang.Class<?> wildcardClass15 = namingPolicy14.getClass();
        org.mockito.cglib.proxy.Callback callback16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass15, callback16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertNotNull(generatorStrategy13);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test08056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08056");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer40.getNamingPolicy();
        java.lang.ClassLoader classLoader44 = enhancer40.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader46 = enhancer45.getClassLoader();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.Class[] classArray63 = new java.lang.Class[] { wildcardClass48, wildcardClass50, wildcardClass53, wildcardClass56, wildcardClass59, wildcardClass61 };
        enhancer45.setInterfaces(classArray63);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer65.getNamingPolicy();
        java.lang.ClassLoader classLoader69 = enhancer65.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader71 = enhancer70.getClassLoader();
        enhancer65.setClassLoader(classLoader71);
        enhancer45.setClassLoader(classLoader71);
        org.mockito.cglib.proxy.Callback callback74 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray75 = new org.mockito.cglib.proxy.Callback[] { callback74 };
        enhancer45.setCallbacks(callbackArray75);
        enhancer40.setCallbacks(callbackArray75);
        enhancer0.setCallbacks(callbackArray75);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter81 = null;
        enhancer0.setCallbackFilter(callbackFilter81);
        boolean boolean83 = enhancer0.getUseCache();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(classArray63);
        org.junit.Assert.assertNotNull(namingPolicy68);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(classLoader71);
        org.junit.Assert.assertNotNull(callbackArray75);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test08057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08057");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setSerialVersionUID((java.lang.Long) 100L);
        enhancer5.setUseCache(false);
        enhancer5.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        java.lang.ClassLoader classLoader16 = enhancer12.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader18 = enhancer17.getClassLoader();
        enhancer12.setClassLoader(classLoader18);
        enhancer5.setClassLoader(classLoader18);
        enhancer0.setClassLoader(classLoader18);
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseFactory(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(classLoader18);
    }

    @Test
    public void test08058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08058");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader9 = enhancer8.getClassLoader();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass11, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass24 };
        enhancer8.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer8.setClassLoader(classLoader34);
        java.lang.ClassLoader classLoader37 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader37);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        java.lang.ClassLoader classLoader45 = enhancer41.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader47 = enhancer46.getClassLoader();
        enhancer41.setClassLoader(classLoader47);
        java.lang.ClassLoader classLoader49 = enhancer41.getClassLoader();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer41.getStrategy();
        enhancer0.setStrategy(generatorStrategy52);
        enhancer0.setInterceptDuringConstruction(true);
        boolean boolean56 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback57 = null;
        enhancer0.setCallback(callback57);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test08059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08059");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer3.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer7.getNamingPolicy();
        java.lang.ClassLoader classLoader11 = enhancer7.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader13 = enhancer12.getClassLoader();
        enhancer7.setClassLoader(classLoader13);
        boolean boolean15 = enhancer7.getUseCache();
        boolean boolean16 = namingPolicy6.equals((java.lang.Object) enhancer7);
        enhancer0.setNamingPolicy(namingPolicy6);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        boolean boolean23 = enhancer20.getAttemptLoad();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = enhancer20.getStrategy();
        enhancer20.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer20.setClassLoader(classLoader34);
        enhancer20.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy39 = enhancer20.getStrategy();
        enhancer0.setStrategy(generatorStrategy39);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter45 = null;
        enhancer41.setCallbackFilter(callbackFilter45);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter47 = null;
        enhancer41.setCallbackFilter(callbackFilter47);
        enhancer41.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter51 = null;
        enhancer41.setCallbackFilter(callbackFilter51);
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        enhancer53.setAttemptLoad(true);
        enhancer53.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer53.setInterceptDuringConstruction(true);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        enhancer53.setSuperclass((java.lang.Class) wildcardClass61);
        enhancer53.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback66 = null;
        enhancer53.setCallback(callback66);
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer53.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter69 = null;
        enhancer53.setCallbackFilter(callbackFilter69);
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = null;
        enhancer53.setNamingPolicy(namingPolicy71);
        org.mockito.cglib.core.NamingPolicy namingPolicy73 = enhancer53.getNamingPolicy();
        enhancer41.setNamingPolicy(namingPolicy73);
        enhancer0.setNamingPolicy(namingPolicy73);
        enhancer0.setAttemptLoad(true);
        boolean boolean78 = enhancer0.getAttemptLoad();
        boolean boolean79 = enhancer0.getUseCache();
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(generatorStrategy25);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(generatorStrategy39);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(namingPolicy68);
        org.junit.Assert.assertNotNull(namingPolicy73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test08060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08060");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer0.setCallback(callback19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader22 = enhancer21.getClassLoader();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass24, wildcardClass26, wildcardClass29, wildcardClass32, wildcardClass35, wildcardClass37 };
        enhancer21.setInterfaces(classArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        enhancer21.setSuperclass((java.lang.Class) wildcardClass42);
        enhancer21.setUseFactory(true);
        java.lang.Class<?> wildcardClass46 = enhancer21.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass46);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer0.setCallback(callback50);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer0.setCallback(callback52);
        java.lang.Class<?> wildcardClass54 = enhancer0.getClass();
        org.mockito.cglib.proxy.Callback callback55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass54, callback55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test08061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08061");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        java.lang.Class<?> wildcardClass12 = enhancer4.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass12);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer16.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        boolean boolean28 = enhancer20.getUseCache();
        boolean boolean29 = namingPolicy19.equals((java.lang.Object) enhancer20);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        boolean boolean33 = enhancer30.getAttemptLoad();
        java.lang.ClassLoader classLoader34 = enhancer30.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy35 = enhancer30.getStrategy();
        enhancer20.setStrategy(generatorStrategy35);
        java.lang.ClassLoader classLoader37 = enhancer20.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer20.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader40 = enhancer39.getClassLoader();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Class[] classArray57 = new java.lang.Class[] { wildcardClass42, wildcardClass44, wildcardClass47, wildcardClass50, wildcardClass53, wildcardClass55 };
        enhancer39.setInterfaces(classArray57);
        enhancer20.setInterfaces(classArray57);
        enhancer20.setInterceptDuringConstruction(true);
        enhancer20.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader64 = enhancer20.getClassLoader();
        enhancer0.setClassLoader(classLoader64);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(generatorStrategy35);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(classLoader64);
    }

    @Test
    public void test08062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08062");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer4.getNamingPolicy();
        boolean boolean24 = namingPolicy22.equals((java.lang.Object) 1.0d);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean26 = enhancer25.getUseCache();
        java.lang.ClassLoader classLoader27 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer32.getNamingPolicy();
        java.lang.ClassLoader classLoader36 = enhancer32.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        enhancer32.setClassLoader(classLoader38);
        boolean boolean40 = enhancer32.getUseCache();
        boolean boolean41 = namingPolicy31.equals((java.lang.Object) enhancer32);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        boolean boolean45 = enhancer42.getAttemptLoad();
        java.lang.ClassLoader classLoader46 = enhancer42.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy47 = enhancer42.getStrategy();
        enhancer32.setStrategy(generatorStrategy47);
        java.lang.ClassLoader classLoader49 = enhancer32.getClassLoader();
        enhancer25.setClassLoader(classLoader49);
        boolean boolean51 = namingPolicy22.equals((java.lang.Object) enhancer25);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer25.setCallback(callback52);
        boolean boolean54 = enhancer25.getUseCache();
        boolean boolean55 = enhancer25.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter56 = null;
        enhancer25.setCallbackFilter(callbackFilter56);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        enhancer58.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy61 = enhancer58.getNamingPolicy();
        java.lang.ClassLoader classLoader62 = enhancer58.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader64 = enhancer63.getClassLoader();
        enhancer58.setClassLoader(classLoader64);
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean67 = enhancer66.getUseCache();
        java.lang.ClassLoader classLoader68 = enhancer66.getClassLoader();
        enhancer58.setClassLoader(classLoader68);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy70 = enhancer58.getStrategy();
        enhancer58.setAttemptLoad(false);
        enhancer58.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer75 = new org.mockito.cglib.proxy.Enhancer();
        enhancer75.setAttemptLoad(true);
        enhancer75.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer75.setInterceptDuringConstruction(true);
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        boolean boolean84 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass83);
        enhancer75.setSuperclass((java.lang.Class) wildcardClass83);
        enhancer75.setAttemptLoad(false);
        boolean boolean88 = enhancer75.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy89 = enhancer75.getStrategy();
        enhancer58.setStrategy(generatorStrategy89);
        enhancer58.setAttemptLoad(false);
        java.lang.Class<?> wildcardClass93 = enhancer58.getClass();
        enhancer25.setSuperclass((java.lang.Class) wildcardClass93);
        org.mockito.asm.ClassVisitor classVisitor95 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer25.generateClass(classVisitor95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(generatorStrategy47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(namingPolicy61);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(generatorStrategy70);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(generatorStrategy89);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test08063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08063");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = null;
        enhancer0.setNamingPolicy(namingPolicy9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        java.lang.ClassLoader classLoader12 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader14 = enhancer13.getClassLoader();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Class[] classArray31 = new java.lang.Class[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass29 };
        enhancer13.setInterfaces(classArray31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        enhancer13.setClassLoader(classLoader39);
        java.lang.ClassLoader classLoader42 = enhancer13.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader44 = enhancer43.getClassLoader();
        enhancer43.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer43.getNamingPolicy();
        enhancer13.setNamingPolicy(namingPolicy47);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy49 = enhancer13.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        enhancer50.setAttemptLoad(true);
        boolean boolean53 = enhancer50.getAttemptLoad();
        java.lang.ClassLoader classLoader54 = enhancer50.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy55 = enhancer50.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        enhancer56.setAttemptLoad(true);
        boolean boolean59 = enhancer56.getAttemptLoad();
        java.lang.ClassLoader classLoader60 = enhancer56.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy61 = enhancer56.getStrategy();
        enhancer50.setStrategy(generatorStrategy61);
        java.lang.ClassLoader classLoader63 = enhancer50.getClassLoader();
        boolean boolean64 = generatorStrategy49.equals((java.lang.Object) classLoader63);
        enhancer0.setStrategy(generatorStrategy49);
        java.lang.ClassLoader classLoader66 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class69 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback types are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertNotNull(generatorStrategy49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(generatorStrategy55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(generatorStrategy61);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(classLoader66);
    }

    @Test
    public void test08064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08064");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer0.setCallback(callback13);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader16 = enhancer15.getClassLoader();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Class[] classArray33 = new java.lang.Class[] { wildcardClass18, wildcardClass20, wildcardClass23, wildcardClass26, wildcardClass29, wildcardClass31 };
        enhancer15.setInterfaces(classArray33);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer35.getNamingPolicy();
        java.lang.ClassLoader classLoader39 = enhancer35.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        enhancer35.setClassLoader(classLoader41);
        enhancer15.setClassLoader(classLoader41);
        enhancer0.setClassLoader(classLoader41);
        boolean boolean45 = enhancer0.getUseCache();
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader47 = enhancer0.getClassLoader();
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(classLoader47);
    }

    @Test
    public void test08065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08065");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.Class class29 = null;
        enhancer0.setSuperclass(class29);
        java.lang.ClassLoader classLoader31 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader33 = enhancer32.getClassLoader();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Class[] classArray50 = new java.lang.Class[] { wildcardClass35, wildcardClass37, wildcardClass40, wildcardClass43, wildcardClass46, wildcardClass48 };
        enhancer32.setInterfaces(classArray50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        enhancer32.setSuperclass((java.lang.Class) wildcardClass53);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass53);
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        enhancer56.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = enhancer56.getNamingPolicy();
        java.lang.ClassLoader classLoader60 = enhancer56.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader62 = enhancer61.getClassLoader();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass77);
        java.lang.Class[] classArray79 = new java.lang.Class[] { wildcardClass64, wildcardClass66, wildcardClass69, wildcardClass72, wildcardClass75, wildcardClass77 };
        enhancer61.setInterfaces(classArray79);
        org.mockito.cglib.proxy.Enhancer enhancer81 = new org.mockito.cglib.proxy.Enhancer();
        enhancer81.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy84 = enhancer81.getNamingPolicy();
        java.lang.ClassLoader classLoader85 = enhancer81.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer86 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader87 = enhancer86.getClassLoader();
        enhancer81.setClassLoader(classLoader87);
        enhancer61.setClassLoader(classLoader87);
        org.mockito.cglib.proxy.Callback callback90 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray91 = new org.mockito.cglib.proxy.Callback[] { callback90 };
        enhancer61.setCallbacks(callbackArray91);
        enhancer56.setCallbacks(callbackArray91);
        enhancer56.setUseFactory(false);
        enhancer56.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy98 = enhancer56.getStrategy();
        enhancer0.setStrategy(generatorStrategy98);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(namingPolicy59);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(namingPolicy84);
        org.junit.Assert.assertNotNull(classLoader85);
        org.junit.Assert.assertNotNull(classLoader87);
        org.junit.Assert.assertNotNull(callbackArray91);
        org.junit.Assert.assertNotNull(generatorStrategy98);
    }

    @Test
    public void test08066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08066");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader2 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader8 = enhancer7.getClassLoader();
        enhancer7.setInterceptDuringConstruction(false);
        enhancer7.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer13.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer17.getNamingPolicy();
        java.lang.ClassLoader classLoader21 = enhancer17.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader23 = enhancer22.getClassLoader();
        enhancer17.setClassLoader(classLoader23);
        boolean boolean25 = enhancer17.getUseCache();
        boolean boolean26 = namingPolicy16.equals((java.lang.Object) enhancer17);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setAttemptLoad(true);
        boolean boolean30 = enhancer27.getAttemptLoad();
        java.lang.ClassLoader classLoader31 = enhancer27.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy32 = enhancer27.getStrategy();
        enhancer17.setStrategy(generatorStrategy32);
        java.lang.ClassLoader classLoader34 = enhancer17.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer17.getNamingPolicy();
        boolean boolean37 = namingPolicy35.equals((java.lang.Object) 1.0d);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean39 = enhancer38.getUseCache();
        java.lang.ClassLoader classLoader40 = enhancer38.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = enhancer45.getNamingPolicy();
        java.lang.ClassLoader classLoader49 = enhancer45.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader51 = enhancer50.getClassLoader();
        enhancer45.setClassLoader(classLoader51);
        boolean boolean53 = enhancer45.getUseCache();
        boolean boolean54 = namingPolicy44.equals((java.lang.Object) enhancer45);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setAttemptLoad(true);
        boolean boolean58 = enhancer55.getAttemptLoad();
        java.lang.ClassLoader classLoader59 = enhancer55.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy60 = enhancer55.getStrategy();
        enhancer45.setStrategy(generatorStrategy60);
        java.lang.ClassLoader classLoader62 = enhancer45.getClassLoader();
        enhancer38.setClassLoader(classLoader62);
        boolean boolean64 = namingPolicy35.equals((java.lang.Object) enhancer38);
        enhancer7.setNamingPolicy(namingPolicy35);
        enhancer0.setNamingPolicy(namingPolicy35);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader68 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader71 = enhancer0.getClassLoader();
        java.lang.Class<?> wildcardClass72 = enhancer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(generatorStrategy32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(namingPolicy48);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(generatorStrategy60);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(classLoader71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test08067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08067");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        enhancer20.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer20.setInterceptDuringConstruction(true);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        enhancer20.setSuperclass((java.lang.Class) wildcardClass28);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass28);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer0.setCallback(callback35);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer0.setCallback(callback37);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(namingPolicy34);
    }

    @Test
    public void test08068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08068");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setAttemptLoad(true);
        boolean boolean9 = enhancer6.getAttemptLoad();
        java.lang.ClassLoader classLoader10 = enhancer6.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer6.getStrategy();
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        boolean boolean16 = enhancer13.getAttemptLoad();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer13.getStrategy();
        enhancer0.setStrategy(generatorStrategy18);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy20 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setAttemptLoad(true);
        boolean boolean24 = enhancer21.getAttemptLoad();
        java.lang.ClassLoader classLoader25 = enhancer21.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy26 = enhancer21.getStrategy();
        boolean boolean27 = enhancer21.getAttemptLoad();
        java.lang.ClassLoader classLoader28 = enhancer21.getClassLoader();
        boolean boolean29 = generatorStrategy20.equals((java.lang.Object) enhancer21);
        java.lang.ClassLoader classLoader30 = enhancer21.getClassLoader();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(generatorStrategy18);
        org.junit.Assert.assertNotNull(generatorStrategy20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(generatorStrategy26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(classLoader30);
    }

    @Test
    public void test08069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08069");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader2 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer3.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer7.getNamingPolicy();
        java.lang.ClassLoader classLoader11 = enhancer7.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader13 = enhancer12.getClassLoader();
        enhancer7.setClassLoader(classLoader13);
        boolean boolean15 = enhancer7.getUseCache();
        boolean boolean16 = namingPolicy6.equals((java.lang.Object) enhancer7);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setAttemptLoad(true);
        boolean boolean20 = enhancer17.getAttemptLoad();
        java.lang.ClassLoader classLoader21 = enhancer17.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer17.getStrategy();
        enhancer7.setStrategy(generatorStrategy22);
        java.lang.ClassLoader classLoader24 = enhancer7.getClassLoader();
        enhancer0.setClassLoader(classLoader24);
        enhancer0.setAttemptLoad(false);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = null;
        enhancer0.setStrategy(generatorStrategy30);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy32 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Class[] classArray51 = new java.lang.Class[] { wildcardClass36, wildcardClass38, wildcardClass41, wildcardClass44, wildcardClass47, wildcardClass49 };
        enhancer33.setInterfaces(classArray51);
        enhancer33.setUseCache(false);
        boolean boolean55 = enhancer33.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        enhancer56.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = enhancer56.getNamingPolicy();
        boolean boolean60 = enhancer56.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter61 = null;
        enhancer56.setCallbackFilter(callbackFilter61);
        org.mockito.cglib.proxy.Callback callback63 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray64 = new org.mockito.cglib.proxy.Callback[] { callback63 };
        enhancer56.setCallbacks(callbackArray64);
        enhancer33.setCallbacks(callbackArray64);
        enhancer33.setAttemptLoad(false);
        boolean boolean69 = enhancer33.getUseCache();
        boolean boolean70 = generatorStrategy32.equals((java.lang.Object) enhancer33);
        boolean boolean71 = enhancer33.getAttemptLoad();
        org.mockito.asm.ClassVisitor classVisitor72 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer33.generateClass(classVisitor72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(generatorStrategy32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(namingPolicy59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(callbackArray64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test08070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08070");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer8.getNamingPolicy();
        java.lang.ClassLoader classLoader12 = enhancer8.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader14 = enhancer13.getClassLoader();
        enhancer8.setClassLoader(classLoader14);
        enhancer0.setClassLoader(classLoader14);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader20 = enhancer19.getClassLoader();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass22, wildcardClass24, wildcardClass27, wildcardClass30, wildcardClass33, wildcardClass35 };
        enhancer19.setInterfaces(classArray37);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer39.getNamingPolicy();
        enhancer19.setNamingPolicy(namingPolicy42);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        enhancer44.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = enhancer44.getNamingPolicy();
        enhancer19.setNamingPolicy(namingPolicy48);
        enhancer0.setNamingPolicy(namingPolicy48);
        boolean boolean51 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader53 = enhancer52.getClassLoader();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        java.lang.Class[] classArray70 = new java.lang.Class[] { wildcardClass55, wildcardClass57, wildcardClass60, wildcardClass63, wildcardClass66, wildcardClass68 };
        enhancer52.setInterfaces(classArray70);
        org.mockito.cglib.proxy.Enhancer enhancer72 = new org.mockito.cglib.proxy.Enhancer();
        enhancer72.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy75 = enhancer72.getNamingPolicy();
        java.lang.ClassLoader classLoader76 = enhancer72.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer77 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader78 = enhancer77.getClassLoader();
        enhancer72.setClassLoader(classLoader78);
        enhancer52.setClassLoader(classLoader78);
        java.lang.ClassLoader classLoader81 = enhancer52.getClassLoader();
        java.lang.ClassLoader classLoader82 = null;
        enhancer52.setClassLoader(classLoader82);
        enhancer52.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean86 = enhancer52.getAttemptLoad();
        enhancer52.setUseCache(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter89 = null;
        enhancer52.setCallbackFilter(callbackFilter89);
        java.lang.Class<?> wildcardClass91 = enhancer52.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass91);
        boolean boolean93 = enhancer0.getAttemptLoad();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(namingPolicy48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(namingPolicy75);
        org.junit.Assert.assertNotNull(classLoader76);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertNotNull(classLoader81);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test08071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08071");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader11 = enhancer10.getClassLoader();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Class[] classArray28 = new java.lang.Class[] { wildcardClass13, wildcardClass15, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass26 };
        enhancer10.setInterfaces(classArray28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer30.getNamingPolicy();
        java.lang.ClassLoader classLoader34 = enhancer30.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        enhancer30.setClassLoader(classLoader36);
        enhancer10.setClassLoader(classLoader36);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer39.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer43.getNamingPolicy();
        java.lang.ClassLoader classLoader47 = enhancer43.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader49 = enhancer48.getClassLoader();
        enhancer43.setClassLoader(classLoader49);
        boolean boolean51 = enhancer43.getUseCache();
        boolean boolean52 = namingPolicy42.equals((java.lang.Object) enhancer43);
        enhancer10.setNamingPolicy(namingPolicy42);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader55 = enhancer54.getClassLoader();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass70);
        java.lang.Class[] classArray72 = new java.lang.Class[] { wildcardClass57, wildcardClass59, wildcardClass62, wildcardClass65, wildcardClass68, wildcardClass70 };
        enhancer54.setInterfaces(classArray72);
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        enhancer74.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer74.getNamingPolicy();
        java.lang.ClassLoader classLoader78 = enhancer74.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer79 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader80 = enhancer79.getClassLoader();
        enhancer74.setClassLoader(classLoader80);
        enhancer54.setClassLoader(classLoader80);
        java.lang.ClassLoader classLoader83 = enhancer54.getClassLoader();
        boolean boolean84 = namingPolicy42.equals((java.lang.Object) enhancer54);
        java.lang.Class<?> wildcardClass85 = namingPolicy42.getClass();
        enhancer9.setSuperclass((java.lang.Class) wildcardClass85);
        boolean boolean87 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass85);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass85);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj91 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(classArray72);
        org.junit.Assert.assertNotNull(namingPolicy77);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertNotNull(classLoader80);
        org.junit.Assert.assertNotNull(classLoader83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test08072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08072");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader9 = enhancer8.getClassLoader();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass11, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass24 };
        enhancer8.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer8.setClassLoader(classLoader34);
        java.lang.ClassLoader classLoader37 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader37);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer43.getNamingPolicy();
        java.lang.ClassLoader classLoader47 = enhancer43.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader49 = enhancer48.getClassLoader();
        enhancer43.setClassLoader(classLoader49);
        java.lang.ClassLoader classLoader51 = enhancer43.getClassLoader();
        enhancer43.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer43.getStrategy();
        enhancer43.setUseFactory(false);
        enhancer43.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy59 = enhancer43.getStrategy();
        java.lang.Class<?> wildcardClass60 = generatorStrategy59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass60);
        org.mockito.cglib.proxy.Callback callback63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass60, callback63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(generatorStrategy59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test08073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08073");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        boolean boolean30 = enhancer0.getUseCache();
        enhancer0.setUseCache(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter35 = null;
        enhancer0.setCallbackFilter(callbackFilter35);
        enhancer0.setUseCache(true);
        java.lang.ClassLoader classLoader39 = null;
        enhancer0.setClassLoader(classLoader39);
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test08074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08074");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean31 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setAttemptLoad(false);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test08075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08075");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy67);
        org.mockito.cglib.proxy.Callback callback69 = null;
        enhancer0.setCallback(callback69);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setAttemptLoad(true);
        boolean boolean74 = enhancer71.getAttemptLoad();
        java.lang.ClassLoader classLoader75 = enhancer71.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer71.getStrategy();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        enhancer71.setSuperclass((java.lang.Class) wildcardClass78);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass78);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy85 = enhancer0.getStrategy();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(generatorStrategy63);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(generatorStrategy76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(generatorStrategy85);
    }

    @Test
    public void test08076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08076");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter4 = null;
        enhancer0.setCallbackFilter(callbackFilter4);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class8 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback types are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
    }

    @Test
    public void test08077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08077");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy9 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer0.setCallback(callback10);
        enhancer0.setUseCache(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer0.setCallback(callback16);
        org.junit.Assert.assertNotNull(generatorStrategy9);
    }

    @Test
    public void test08078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08078");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader2 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer3.getNamingPolicy();
        java.lang.ClassLoader classLoader7 = enhancer3.getClassLoader();
        enhancer0.setClassLoader(classLoader7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer0.setCallback(callback9);
        java.lang.ClassLoader classLoader11 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer0.setCallback(callback12);
        boolean boolean14 = enhancer0.getAttemptLoad();
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test08079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08079");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.Callback callback29 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray30 = new org.mockito.cglib.proxy.Callback[] { callback29 };
        enhancer0.setCallbacks(callbackArray30);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setAttemptLoad(true);
        boolean boolean35 = enhancer32.getAttemptLoad();
        java.lang.ClassLoader classLoader36 = enhancer32.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy37 = enhancer32.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setAttemptLoad(true);
        boolean boolean41 = enhancer38.getAttemptLoad();
        java.lang.ClassLoader classLoader42 = enhancer38.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy43 = enhancer38.getStrategy();
        enhancer32.setStrategy(generatorStrategy43);
        enhancer0.setStrategy(generatorStrategy43);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter50 = null;
        enhancer0.setCallbackFilter(callbackFilter50);
        boolean boolean52 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(true);
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(callbackArray30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(generatorStrategy37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(generatorStrategy43);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test08080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08080");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer25.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy29);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer0.setCallback(callback31);
        java.lang.ClassLoader classLoader33 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(true);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer0.setCallback(callback38);
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader33);
    }

    @Test
    public void test08081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08081");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter11 = null;
        enhancer0.setCallbackFilter(callbackFilter11);
        java.lang.ClassLoader classLoader13 = enhancer0.getClassLoader();
        java.lang.Class[] classArray14 = null;
        enhancer0.setInterfaces(classArray14);
        boolean boolean16 = enhancer0.getUseCache();
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader22 = enhancer21.getClassLoader();
        enhancer21.setUseCache(false);
        java.lang.ClassLoader classLoader25 = enhancer21.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader27 = enhancer26.getClassLoader();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Class[] classArray44 = new java.lang.Class[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass37, wildcardClass40, wildcardClass42 };
        enhancer26.setInterfaces(classArray44);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = enhancer46.getNamingPolicy();
        java.lang.ClassLoader classLoader50 = enhancer46.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader52 = enhancer51.getClassLoader();
        enhancer46.setClassLoader(classLoader52);
        enhancer26.setClassLoader(classLoader52);
        java.lang.ClassLoader classLoader55 = enhancer26.getClassLoader();
        boolean boolean56 = enhancer26.getUseCache();
        boolean boolean57 = enhancer26.getAttemptLoad();
        java.lang.Class<?> wildcardClass58 = enhancer26.getClass();
        enhancer21.setSuperclass((java.lang.Class) wildcardClass58);
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass58);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.cglib.proxy.Enhancer");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(namingPolicy49);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test08082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08082");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.Class class29 = null;
        enhancer0.setSuperclass(class29);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer0.setCallback(callback33);
        boolean boolean35 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        boolean boolean39 = enhancer36.getAttemptLoad();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer36.getStrategy();
        boolean boolean42 = enhancer36.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer36.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy43);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback47 = null;
        enhancer0.setCallback(callback47);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(namingPolicy43);
    }

    @Test
    public void test08083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08083");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        boolean boolean7 = enhancer0.getUseCache();
        boolean boolean8 = enhancer0.getUseCache();
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(namingPolicy11);
    }

    @Test
    public void test08084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08084");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.Class class29 = null;
        enhancer0.setSuperclass(class29);
        java.lang.ClassLoader classLoader31 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Callback callback32 = null;
        enhancer0.setCallback(callback32);
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setAttemptLoad(true);
        java.lang.ClassLoader classLoader40 = null;
        enhancer37.setClassLoader(classLoader40);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        boolean boolean45 = enhancer42.getAttemptLoad();
        java.lang.ClassLoader classLoader46 = enhancer42.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy47 = enhancer42.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setAttemptLoad(true);
        boolean boolean51 = enhancer48.getAttemptLoad();
        java.lang.ClassLoader classLoader52 = enhancer48.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy53 = enhancer48.getStrategy();
        enhancer42.setStrategy(generatorStrategy53);
        enhancer37.setStrategy(generatorStrategy53);
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = enhancer37.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = enhancer37.getNamingPolicy();
        java.lang.ClassLoader classLoader58 = null;
        enhancer37.setClassLoader(classLoader58);
        enhancer37.setInterceptDuringConstruction(true);
        enhancer37.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        boolean boolean67 = enhancer64.getAttemptLoad();
        java.lang.ClassLoader classLoader68 = enhancer64.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy69 = enhancer64.getStrategy();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        enhancer64.setSuperclass((java.lang.Class) wildcardClass71);
        boolean boolean73 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass71);
        boolean boolean74 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass71);
        enhancer37.setSuperclass((java.lang.Class) wildcardClass71);
        enhancer37.setUseCache(false);
        org.mockito.cglib.core.Predicate predicate78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str79 = namingPolicy34.getClassName("hi!", "", (java.lang.Object) enhancer37, predicate78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(generatorStrategy47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(generatorStrategy53);
        org.junit.Assert.assertNotNull(namingPolicy56);
        org.junit.Assert.assertNotNull(namingPolicy57);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(generatorStrategy69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test08085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08085");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean31 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer0.setCallback(callback38);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test08086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08086");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader21 = null;
        enhancer0.setClassLoader(classLoader21);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setAttemptLoad(true);
        boolean boolean27 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter28 = null;
        enhancer0.setCallbackFilter(callbackFilter28);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test08087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08087");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.Callback callback29 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray30 = new org.mockito.cglib.proxy.Callback[] { callback29 };
        enhancer0.setCallbacks(callbackArray30);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer32.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer36.getNamingPolicy();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader42 = enhancer41.getClassLoader();
        enhancer36.setClassLoader(classLoader42);
        boolean boolean44 = enhancer36.getUseCache();
        boolean boolean45 = namingPolicy35.equals((java.lang.Object) enhancer36);
        enhancer0.setNamingPolicy(namingPolicy35);
        enhancer0.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy49 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(false);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(callbackArray30);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(generatorStrategy49);
    }

    @Test
    public void test08088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08088");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        enhancer20.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer20.setInterceptDuringConstruction(true);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        enhancer20.setSuperclass((java.lang.Class) wildcardClass28);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass28);
        boolean boolean32 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer0.setCallback(callback33);
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader37 = enhancer36.getClassLoader();
        enhancer36.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter41 = null;
        enhancer36.setCallbackFilter(callbackFilter41);
        boolean boolean43 = namingPolicy35.equals((java.lang.Object) enhancer36);
        java.lang.Class<?> wildcardClass44 = enhancer36.getClass();
        org.mockito.cglib.proxy.Callback callback45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj46 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass44, callback45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test08089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08089");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer4.getNamingPolicy();
        boolean boolean23 = enhancer4.getAttemptLoad();
        enhancer4.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader27 = enhancer26.getClassLoader();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Class[] classArray44 = new java.lang.Class[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass37, wildcardClass40, wildcardClass42 };
        enhancer26.setInterfaces(classArray44);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = enhancer46.getNamingPolicy();
        enhancer26.setNamingPolicy(namingPolicy49);
        enhancer4.setNamingPolicy(namingPolicy49);
        boolean boolean52 = enhancer4.getAttemptLoad();
        enhancer4.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer4.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy56 = enhancer4.getStrategy();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(namingPolicy49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(generatorStrategy56);
    }

    @Test
    public void test08090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08090");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(false);
        java.lang.ClassLoader classLoader15 = enhancer0.getClassLoader();
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer18.getNamingPolicy();
        java.lang.ClassLoader classLoader22 = enhancer18.getClassLoader();
        enhancer18.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer18.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean27 = enhancer26.getAttemptLoad();
        enhancer26.setUseCache(false);
        boolean boolean30 = namingPolicy25.equals((java.lang.Object) enhancer26);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer26.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy31);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter33 = null;
        enhancer0.setCallbackFilter(callbackFilter33);
        enhancer0.setInterceptDuringConstruction(false);
        boolean boolean37 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer0.setCallback(callback40);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test08091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08091");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer0.getNamingPolicy();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer0.getNamingPolicy();
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer0.getNamingPolicy();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback28 = null;
        enhancer0.setCallback(callback28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(namingPolicy25);
    }

    @Test
    public void test08092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08092");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = enhancer14.getNamingPolicy();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader20 = enhancer19.getClassLoader();
        enhancer14.setClassLoader(classLoader20);
        java.lang.ClassLoader classLoader22 = enhancer14.getClassLoader();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        enhancer14.setSuperclass((java.lang.Class) wildcardClass24);
        boolean boolean27 = namingPolicy3.equals((java.lang.Object) enhancer14);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        java.lang.ClassLoader classLoader31 = null;
        enhancer28.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        boolean boolean36 = enhancer33.getAttemptLoad();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy38 = enhancer33.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setAttemptLoad(true);
        boolean boolean42 = enhancer39.getAttemptLoad();
        java.lang.ClassLoader classLoader43 = enhancer39.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer39.getStrategy();
        enhancer33.setStrategy(generatorStrategy44);
        enhancer28.setStrategy(generatorStrategy44);
        org.mockito.cglib.proxy.Callback callback47 = null;
        enhancer28.setCallback(callback47);
        boolean boolean49 = enhancer28.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy50 = enhancer28.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean52 = enhancer51.getUseCache();
        java.lang.ClassLoader classLoader53 = enhancer51.getClassLoader();
        enhancer28.setClassLoader(classLoader53);
        enhancer28.setAttemptLoad(true);
        enhancer28.setSerialVersionUID((java.lang.Long) 0L);
        enhancer28.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy61 = enhancer28.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        enhancer62.setAttemptLoad(true);
        boolean boolean65 = enhancer62.getAttemptLoad();
        java.lang.ClassLoader classLoader66 = enhancer62.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy67 = enhancer62.getStrategy();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        enhancer62.setSuperclass((java.lang.Class) wildcardClass69);
        boolean boolean71 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        boolean boolean72 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        enhancer28.setSuperclass((java.lang.Class) wildcardClass69);
        boolean boolean74 = namingPolicy3.equals((java.lang.Object) enhancer28);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy75 = enhancer28.getStrategy();
        org.mockito.asm.ClassVisitor classVisitor76 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer28.generateClass(classVisitor76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(namingPolicy17);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(generatorStrategy38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(generatorStrategy50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(generatorStrategy61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(generatorStrategy67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(generatorStrategy75);
    }

    @Test
    public void test08093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08093");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer25.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy29);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader32 = enhancer31.getClassLoader();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass47);
        java.lang.Class[] classArray49 = new java.lang.Class[] { wildcardClass34, wildcardClass36, wildcardClass39, wildcardClass42, wildcardClass45, wildcardClass47 };
        enhancer31.setInterfaces(classArray49);
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = enhancer51.getNamingPolicy();
        java.lang.ClassLoader classLoader55 = enhancer51.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader57 = enhancer56.getClassLoader();
        enhancer51.setClassLoader(classLoader57);
        enhancer31.setClassLoader(classLoader57);
        java.lang.ClassLoader classLoader60 = enhancer31.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader62 = enhancer61.getClassLoader();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer61.getNamingPolicy();
        enhancer31.setNamingPolicy(namingPolicy65);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy67 = enhancer31.getStrategy();
        enhancer0.setStrategy(generatorStrategy67);
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = enhancer0.getNamingPolicy();
        boolean boolean70 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class74 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback types are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(classArray49);
        org.junit.Assert.assertNotNull(namingPolicy54);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertNotNull(generatorStrategy67);
        org.junit.Assert.assertNotNull(namingPolicy69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(namingPolicy71);
    }

    @Test
    public void test08094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08094");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer4.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader24 = enhancer23.getClassLoader();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Class[] classArray41 = new java.lang.Class[] { wildcardClass26, wildcardClass28, wildcardClass31, wildcardClass34, wildcardClass37, wildcardClass39 };
        enhancer23.setInterfaces(classArray41);
        enhancer4.setInterfaces(classArray41);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Class[] classArray62 = new java.lang.Class[] { wildcardClass47, wildcardClass49, wildcardClass52, wildcardClass55, wildcardClass58, wildcardClass60 };
        enhancer44.setInterfaces(classArray62);
        enhancer4.setInterfaces(classArray62);
        enhancer4.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy67 = enhancer4.getStrategy();
        enhancer4.setSerialVersionUID((java.lang.Long) 0L);
        enhancer4.setSerialVersionUID((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(generatorStrategy67);
    }

    @Test
    public void test08095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08095");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setAttemptLoad(true);
        boolean boolean13 = enhancer10.getAttemptLoad();
        java.lang.ClassLoader classLoader14 = enhancer10.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy15 = enhancer10.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean17 = enhancer16.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setAttemptLoad(true);
        java.lang.ClassLoader classLoader21 = null;
        enhancer18.setClassLoader(classLoader21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setAttemptLoad(true);
        boolean boolean26 = enhancer23.getAttemptLoad();
        java.lang.ClassLoader classLoader27 = enhancer23.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy28 = enhancer23.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setAttemptLoad(true);
        boolean boolean32 = enhancer29.getAttemptLoad();
        java.lang.ClassLoader classLoader33 = enhancer29.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy34 = enhancer29.getStrategy();
        enhancer23.setStrategy(generatorStrategy34);
        enhancer18.setStrategy(generatorStrategy34);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer18.getNamingPolicy();
        enhancer16.setNamingPolicy(namingPolicy37);
        enhancer16.setSerialVersionUID((java.lang.Long) 1L);
        java.lang.Class<?> wildcardClass41 = enhancer16.getClass();
        boolean boolean42 = generatorStrategy15.equals((java.lang.Object) enhancer16);
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setAttemptLoad(true);
        enhancer43.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer43.setInterceptDuringConstruction(true);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        enhancer43.setSuperclass((java.lang.Class) wildcardClass51);
        enhancer43.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback56 = null;
        enhancer43.setCallback(callback56);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy58 = enhancer43.getStrategy();
        boolean boolean59 = generatorStrategy15.equals((java.lang.Object) enhancer43);
        boolean boolean60 = namingPolicy9.equals((java.lang.Object) generatorStrategy15);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader62 = enhancer61.getClassLoader();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass77);
        java.lang.Class[] classArray79 = new java.lang.Class[] { wildcardClass64, wildcardClass66, wildcardClass69, wildcardClass72, wildcardClass75, wildcardClass77 };
        enhancer61.setInterfaces(classArray79);
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        enhancer61.setSuperclass((java.lang.Class) wildcardClass82);
        enhancer61.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy86 = enhancer61.getStrategy();
        org.mockito.cglib.proxy.Callback callback87 = null;
        enhancer61.setCallback(callback87);
        boolean boolean89 = namingPolicy9.equals((java.lang.Object) enhancer61);
        java.lang.Class<?> wildcardClass90 = enhancer61.getClass();
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(generatorStrategy15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(generatorStrategy28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(generatorStrategy34);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(generatorStrategy58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(generatorStrategy86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test08096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08096");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy4 = enhancer0.getStrategy();
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer7.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer11.getNamingPolicy();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader17 = enhancer16.getClassLoader();
        enhancer11.setClassLoader(classLoader17);
        boolean boolean19 = enhancer11.getUseCache();
        boolean boolean20 = namingPolicy10.equals((java.lang.Object) enhancer11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setAttemptLoad(true);
        boolean boolean24 = enhancer21.getAttemptLoad();
        java.lang.ClassLoader classLoader25 = enhancer21.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy26 = enhancer21.getStrategy();
        enhancer11.setStrategy(generatorStrategy26);
        java.lang.ClassLoader classLoader28 = enhancer11.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = enhancer29.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        boolean boolean41 = enhancer33.getUseCache();
        boolean boolean42 = namingPolicy32.equals((java.lang.Object) enhancer33);
        enhancer11.setNamingPolicy(namingPolicy32);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer11.getStrategy();
        org.mockito.cglib.proxy.Callback callback45 = null;
        enhancer11.setCallback(callback45);
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer11.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy47);
        boolean boolean49 = enhancer0.getUseCache();
        java.lang.Class<?> wildcardClass50 = enhancer0.getClass();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(generatorStrategy4);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(generatorStrategy26);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(namingPolicy32);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test08097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08097");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader14 = enhancer13.getClassLoader();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Class[] classArray31 = new java.lang.Class[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass29 };
        enhancer13.setInterfaces(classArray31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        enhancer13.setClassLoader(classLoader39);
        boolean boolean42 = enhancer13.getUseCache();
        boolean boolean43 = generatorStrategy12.equals((java.lang.Object) enhancer13);
        enhancer13.setInterceptDuringConstruction(true);
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer13.generateClass(classVisitor46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test08098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08098");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer0.setCallbackFilter(callbackFilter25);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback30 = null;
        enhancer0.setCallback(callback30);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(namingPolicy29);
    }

    @Test
    public void test08099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08099");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback40 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray41 = new org.mockito.cglib.proxy.Callback[] { callback40 };
        enhancer0.setCallbacks(callbackArray41);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter43 = null;
        enhancer0.setCallbackFilter(callbackFilter43);
        org.mockito.cglib.proxy.Callback callback45 = null;
        enhancer0.setCallback(callback45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer47.getNamingPolicy();
        java.lang.ClassLoader classLoader51 = enhancer47.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader53 = enhancer52.getClassLoader();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        java.lang.Class[] classArray70 = new java.lang.Class[] { wildcardClass55, wildcardClass57, wildcardClass60, wildcardClass63, wildcardClass66, wildcardClass68 };
        enhancer52.setInterfaces(classArray70);
        org.mockito.cglib.proxy.Enhancer enhancer72 = new org.mockito.cglib.proxy.Enhancer();
        enhancer72.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy75 = enhancer72.getNamingPolicy();
        java.lang.ClassLoader classLoader76 = enhancer72.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer77 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader78 = enhancer77.getClassLoader();
        enhancer72.setClassLoader(classLoader78);
        enhancer52.setClassLoader(classLoader78);
        org.mockito.cglib.proxy.Callback callback81 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray82 = new org.mockito.cglib.proxy.Callback[] { callback81 };
        enhancer52.setCallbacks(callbackArray82);
        enhancer47.setCallbacks(callbackArray82);
        enhancer47.setAttemptLoad(true);
        enhancer47.setInterceptDuringConstruction(false);
        enhancer47.setAttemptLoad(true);
        enhancer47.setAttemptLoad(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter93 = null;
        enhancer47.setCallbackFilter(callbackFilter93);
        java.lang.ClassLoader classLoader95 = enhancer47.getClassLoader();
        java.lang.ClassLoader classLoader96 = enhancer47.getClassLoader();
        java.lang.ClassLoader classLoader97 = enhancer47.getClassLoader();
        enhancer0.setClassLoader(classLoader97);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertNotNull(callbackArray41);
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(namingPolicy75);
        org.junit.Assert.assertNotNull(classLoader76);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertNotNull(callbackArray82);
        org.junit.Assert.assertNotNull(classLoader95);
        org.junit.Assert.assertNotNull(classLoader96);
        org.junit.Assert.assertNotNull(classLoader97);
    }

    @Test
    public void test08100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08100");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        boolean boolean36 = enhancer33.getAttemptLoad();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy38 = enhancer33.getStrategy();
        boolean boolean40 = generatorStrategy38.equals((java.lang.Object) "hi!");
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = enhancer45.getNamingPolicy();
        java.lang.ClassLoader classLoader49 = enhancer45.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader51 = enhancer50.getClassLoader();
        enhancer45.setClassLoader(classLoader51);
        boolean boolean53 = enhancer45.getUseCache();
        boolean boolean54 = namingPolicy44.equals((java.lang.Object) enhancer45);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setAttemptLoad(true);
        boolean boolean58 = enhancer55.getAttemptLoad();
        java.lang.ClassLoader classLoader59 = enhancer55.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy60 = enhancer55.getStrategy();
        enhancer45.setStrategy(generatorStrategy60);
        java.lang.ClassLoader classLoader62 = enhancer45.getClassLoader();
        org.mockito.cglib.proxy.Callback callback63 = null;
        enhancer45.setCallback(callback63);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer65.getNamingPolicy();
        java.lang.ClassLoader classLoader69 = enhancer65.getClassLoader();
        enhancer45.setClassLoader(classLoader69);
        boolean boolean71 = generatorStrategy38.equals((java.lang.Object) classLoader69);
        enhancer0.setClassLoader(classLoader69);
        boolean boolean73 = enhancer0.getAttemptLoad();
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy78 = enhancer0.getNamingPolicy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class79 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback types are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(generatorStrategy38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(namingPolicy48);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(generatorStrategy60);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(namingPolicy68);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(namingPolicy78);
    }

    @Test
    public void test08101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08101");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        java.lang.Class<?> wildcardClass9 = enhancer0.getClass();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader11 = enhancer10.getClassLoader();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Class[] classArray28 = new java.lang.Class[] { wildcardClass13, wildcardClass15, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass26 };
        enhancer10.setInterfaces(classArray28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer30.getNamingPolicy();
        java.lang.ClassLoader classLoader34 = enhancer30.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        enhancer30.setClassLoader(classLoader36);
        enhancer10.setClassLoader(classLoader36);
        org.mockito.cglib.proxy.Callback callback39 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray40 = new org.mockito.cglib.proxy.Callback[] { callback39 };
        enhancer10.setCallbacks(callbackArray40);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        boolean boolean45 = enhancer42.getAttemptLoad();
        java.lang.ClassLoader classLoader46 = enhancer42.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy47 = enhancer42.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setAttemptLoad(true);
        boolean boolean51 = enhancer48.getAttemptLoad();
        java.lang.ClassLoader classLoader52 = enhancer48.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy53 = enhancer48.getStrategy();
        enhancer42.setStrategy(generatorStrategy53);
        enhancer10.setStrategy(generatorStrategy53);
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        enhancer56.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = enhancer56.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader61 = enhancer60.getClassLoader();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass76);
        java.lang.Class[] classArray78 = new java.lang.Class[] { wildcardClass63, wildcardClass65, wildcardClass68, wildcardClass71, wildcardClass74, wildcardClass76 };
        enhancer60.setInterfaces(classArray78);
        org.mockito.cglib.proxy.Enhancer enhancer80 = new org.mockito.cglib.proxy.Enhancer();
        enhancer80.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy83 = enhancer80.getNamingPolicy();
        java.lang.ClassLoader classLoader84 = enhancer80.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer85 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader86 = enhancer85.getClassLoader();
        enhancer80.setClassLoader(classLoader86);
        enhancer60.setClassLoader(classLoader86);
        org.mockito.cglib.proxy.Callback callback89 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray90 = new org.mockito.cglib.proxy.Callback[] { callback89 };
        enhancer60.setCallbacks(callbackArray90);
        enhancer56.setCallbacks(callbackArray90);
        enhancer10.setCallbacks(callbackArray90);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerCallbacks((java.lang.Class) wildcardClass9, callbackArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.proxy.Enhancer is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(callbackArray40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(generatorStrategy47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(generatorStrategy53);
        org.junit.Assert.assertNotNull(namingPolicy59);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(namingPolicy83);
        org.junit.Assert.assertNotNull(classLoader84);
        org.junit.Assert.assertNotNull(classLoader86);
        org.junit.Assert.assertNotNull(callbackArray90);
    }

    @Test
    public void test08102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08102");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setAttemptLoad(true);
        boolean boolean9 = enhancer6.getAttemptLoad();
        java.lang.ClassLoader classLoader10 = enhancer6.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer6.getStrategy();
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        boolean boolean16 = enhancer13.getAttemptLoad();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer13.getStrategy();
        enhancer0.setStrategy(generatorStrategy18);
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseFactory(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setAttemptLoad(false);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(generatorStrategy18);
    }

    @Test
    public void test08103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08103");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer0.setCallback(callback35);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer0.getNamingPolicy();
        enhancer0.setAttemptLoad(false);
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy37);
    }

    @Test
    public void test08104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08104");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray10 = new org.mockito.cglib.proxy.Callback[] { callback9 };
        enhancer0.setCallbacks(callbackArray10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer16.getNamingPolicy();
        java.lang.ClassLoader classLoader20 = enhancer16.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader22 = enhancer21.getClassLoader();
        enhancer16.setClassLoader(classLoader22);
        boolean boolean24 = enhancer16.getUseCache();
        boolean boolean25 = namingPolicy15.equals((java.lang.Object) enhancer16);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setAttemptLoad(true);
        boolean boolean29 = enhancer26.getAttemptLoad();
        java.lang.ClassLoader classLoader30 = enhancer26.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy31 = enhancer26.getStrategy();
        enhancer16.setStrategy(generatorStrategy31);
        java.lang.ClassLoader classLoader33 = enhancer16.getClassLoader();
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer16.setCallback(callback34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer36.getNamingPolicy();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        enhancer16.setClassLoader(classLoader40);
        enhancer16.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer47.getNamingPolicy();
        java.lang.ClassLoader classLoader51 = enhancer47.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader53 = enhancer52.getClassLoader();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        java.lang.Class[] classArray70 = new java.lang.Class[] { wildcardClass55, wildcardClass57, wildcardClass60, wildcardClass63, wildcardClass66, wildcardClass68 };
        enhancer52.setInterfaces(classArray70);
        org.mockito.cglib.proxy.Enhancer enhancer72 = new org.mockito.cglib.proxy.Enhancer();
        enhancer72.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy75 = enhancer72.getNamingPolicy();
        java.lang.ClassLoader classLoader76 = enhancer72.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer77 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader78 = enhancer77.getClassLoader();
        enhancer72.setClassLoader(classLoader78);
        enhancer52.setClassLoader(classLoader78);
        org.mockito.cglib.proxy.Callback callback81 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray82 = new org.mockito.cglib.proxy.Callback[] { callback81 };
        enhancer52.setCallbacks(callbackArray82);
        enhancer47.setCallbacks(callbackArray82);
        enhancer47.setAttemptLoad(true);
        enhancer47.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader89 = enhancer47.getClassLoader();
        enhancer44.setClassLoader(classLoader89);
        enhancer16.setClassLoader(classLoader89);
        enhancer0.setClassLoader(classLoader89);
        org.mockito.cglib.core.NamingPolicy namingPolicy93 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Callback[] callbackArray94 = null;
        enhancer0.setCallbacks(callbackArray94);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class96 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback types are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(callbackArray10);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(generatorStrategy31);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(namingPolicy75);
        org.junit.Assert.assertNotNull(classLoader76);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertNotNull(callbackArray82);
        org.junit.Assert.assertNotNull(classLoader89);
        org.junit.Assert.assertNotNull(namingPolicy93);
    }

    @Test
    public void test08105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08105");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setAttemptLoad(true);
        java.lang.ClassLoader classLoader38 = null;
        enhancer35.setClassLoader(classLoader38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        boolean boolean43 = enhancer40.getAttemptLoad();
        java.lang.ClassLoader classLoader44 = enhancer40.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer40.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setAttemptLoad(true);
        boolean boolean49 = enhancer46.getAttemptLoad();
        java.lang.ClassLoader classLoader50 = enhancer46.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy51 = enhancer46.getStrategy();
        enhancer40.setStrategy(generatorStrategy51);
        enhancer35.setStrategy(generatorStrategy51);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setAttemptLoad(true);
        enhancer54.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer54.setInterceptDuringConstruction(true);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        enhancer54.setSuperclass((java.lang.Class) wildcardClass62);
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        boolean boolean66 = generatorStrategy51.equals((java.lang.Object) wildcardClass62);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass62);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseFactory(true);
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter78 = null;
        enhancer0.setCallbackFilter(callbackFilter78);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(generatorStrategy45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(generatorStrategy51);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test08106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08106");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        boolean boolean7 = enhancer4.getAttemptLoad();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy9 = enhancer4.getStrategy();
        boolean boolean10 = enhancer4.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer4.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        java.lang.ClassLoader classLoader16 = enhancer12.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader18 = enhancer17.getClassLoader();
        enhancer12.setClassLoader(classLoader18);
        enhancer12.setAttemptLoad(true);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass23 };
        enhancer12.setInterfaces(classArray24);
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer12.getNamingPolicy();
        boolean boolean27 = generatorStrategy11.equals((java.lang.Object) enhancer12);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Class[] classArray51 = new java.lang.Class[] { wildcardClass36, wildcardClass38, wildcardClass41, wildcardClass44, wildcardClass47, wildcardClass49 };
        enhancer33.setInterfaces(classArray51);
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        enhancer53.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = enhancer53.getNamingPolicy();
        java.lang.ClassLoader classLoader57 = enhancer53.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader59 = enhancer58.getClassLoader();
        enhancer53.setClassLoader(classLoader59);
        enhancer33.setClassLoader(classLoader59);
        org.mockito.cglib.proxy.Callback callback62 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray63 = new org.mockito.cglib.proxy.Callback[] { callback62 };
        enhancer33.setCallbacks(callbackArray63);
        enhancer28.setCallbacks(callbackArray63);
        enhancer28.setAttemptLoad(true);
        enhancer28.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader70 = enhancer28.getClassLoader();
        java.lang.ClassLoader classLoader71 = enhancer28.getClassLoader();
        java.lang.Class<?> wildcardClass72 = classLoader71.getClass();
        enhancer12.setSuperclass((java.lang.Class) wildcardClass72);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter74 = null;
        enhancer12.setCallbackFilter(callbackFilter74);
        boolean boolean76 = namingPolicy3.equals((java.lang.Object) enhancer12);
        java.lang.Class<?> wildcardClass77 = enhancer12.getClass();
        org.mockito.cglib.proxy.Callback callback78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass77, callback78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(generatorStrategy9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(namingPolicy56);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(callbackArray63);
        org.junit.Assert.assertNotNull(classLoader70);
        org.junit.Assert.assertNotNull(classLoader71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test08107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08107");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader30 = null;
        enhancer0.setClassLoader(classLoader30);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader35 = enhancer34.getClassLoader();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Class[] classArray52 = new java.lang.Class[] { wildcardClass37, wildcardClass39, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass50 };
        enhancer34.setInterfaces(classArray52);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = enhancer54.getNamingPolicy();
        java.lang.ClassLoader classLoader58 = enhancer54.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader60 = enhancer59.getClassLoader();
        enhancer54.setClassLoader(classLoader60);
        enhancer34.setClassLoader(classLoader60);
        org.mockito.cglib.proxy.Callback callback63 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray64 = new org.mockito.cglib.proxy.Callback[] { callback63 };
        enhancer34.setCallbacks(callbackArray64);
        java.lang.Class<?> wildcardClass66 = enhancer34.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass66);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy69 = null;
        enhancer0.setStrategy(generatorStrategy69);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer73 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean74 = enhancer73.getUseCache();
        java.lang.ClassLoader classLoader75 = enhancer73.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        enhancer76.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy79 = enhancer76.getNamingPolicy();
        java.lang.ClassLoader classLoader80 = enhancer76.getClassLoader();
        enhancer73.setClassLoader(classLoader80);
        java.lang.Class[] classArray82 = new java.lang.Class[] {};
        enhancer73.setInterfaces(classArray82);
        enhancer0.setInterfaces(classArray82);
        boolean boolean85 = enhancer0.getUseCache();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(namingPolicy57);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(callbackArray64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(namingPolicy79);
        org.junit.Assert.assertNotNull(classLoader80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test08108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08108");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer25.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy29);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader32 = enhancer31.getClassLoader();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass47);
        java.lang.Class[] classArray49 = new java.lang.Class[] { wildcardClass34, wildcardClass36, wildcardClass39, wildcardClass42, wildcardClass45, wildcardClass47 };
        enhancer31.setInterfaces(classArray49);
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = enhancer51.getNamingPolicy();
        java.lang.ClassLoader classLoader55 = enhancer51.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader57 = enhancer56.getClassLoader();
        enhancer51.setClassLoader(classLoader57);
        enhancer31.setClassLoader(classLoader57);
        java.lang.ClassLoader classLoader60 = enhancer31.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader62 = enhancer61.getClassLoader();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer61.getNamingPolicy();
        enhancer31.setNamingPolicy(namingPolicy65);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy67 = enhancer31.getStrategy();
        enhancer0.setStrategy(generatorStrategy67);
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = enhancer0.getNamingPolicy();
        boolean boolean70 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = enhancer0.getNamingPolicy();
        enhancer0.setUseFactory(false);
        enhancer0.setAttemptLoad(false);
        java.lang.Class<?> wildcardClass76 = enhancer0.getClass();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(classArray49);
        org.junit.Assert.assertNotNull(namingPolicy54);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertNotNull(generatorStrategy67);
        org.junit.Assert.assertNotNull(namingPolicy69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(namingPolicy71);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test08109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08109");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        enhancer0.setAttemptLoad(true);
        java.lang.Class[] classArray35 = null;
        enhancer0.setInterfaces(classArray35);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(generatorStrategy30);
    }

    @Test
    public void test08110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08110");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer0.setCallback(callback12);
        boolean boolean14 = enhancer0.getUseCache();
        enhancer0.setAttemptLoad(false);
        boolean boolean17 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader18 = null;
        enhancer0.setClassLoader(classLoader18);
        java.lang.ClassLoader classLoader20 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy21 = null;
        enhancer0.setStrategy(generatorStrategy21);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback24 = null;
        enhancer0.setCallback(callback24);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(generatorStrategy23);
    }

    @Test
    public void test08111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08111");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter4 = null;
        enhancer0.setCallbackFilter(callbackFilter4);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer0.setCallbackFilter(callbackFilter6);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter10 = null;
        enhancer0.setCallbackFilter(callbackFilter10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer16.getNamingPolicy();
        java.lang.ClassLoader classLoader20 = enhancer16.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader22 = enhancer21.getClassLoader();
        enhancer16.setClassLoader(classLoader22);
        boolean boolean24 = enhancer16.getUseCache();
        boolean boolean25 = namingPolicy15.equals((java.lang.Object) enhancer16);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setAttemptLoad(true);
        boolean boolean29 = enhancer26.getAttemptLoad();
        java.lang.ClassLoader classLoader30 = enhancer26.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy31 = enhancer26.getStrategy();
        enhancer16.setStrategy(generatorStrategy31);
        java.lang.ClassLoader classLoader33 = enhancer16.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer16.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Class[] classArray53 = new java.lang.Class[] { wildcardClass38, wildcardClass40, wildcardClass43, wildcardClass46, wildcardClass49, wildcardClass51 };
        enhancer35.setInterfaces(classArray53);
        enhancer16.setInterfaces(classArray53);
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader57 = enhancer56.getClassLoader();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass72);
        java.lang.Class[] classArray74 = new java.lang.Class[] { wildcardClass59, wildcardClass61, wildcardClass64, wildcardClass67, wildcardClass70, wildcardClass72 };
        enhancer56.setInterfaces(classArray74);
        enhancer16.setInterfaces(classArray74);
        enhancer0.setInterfaces(classArray74);
        boolean boolean78 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer79 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean80 = enhancer79.getUseCache();
        java.lang.ClassLoader classLoader81 = enhancer79.getClassLoader();
        enhancer79.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy84 = enhancer79.getStrategy();
        enhancer0.setStrategy(generatorStrategy84);
        boolean boolean86 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback87 = null;
        enhancer0.setCallback(callback87);
        java.lang.Class<?> wildcardClass89 = enhancer0.getClass();
        boolean boolean90 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass89);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(generatorStrategy31);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(classLoader81);
        org.junit.Assert.assertNotNull(generatorStrategy84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test08112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08112");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer4.setCallback(callback22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        enhancer4.setClassLoader(classLoader28);
        boolean boolean30 = enhancer4.getUseCache();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer4.setCallback(callback33);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer4.setCallback(callback35);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test08113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08113");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        java.lang.ClassLoader classLoader12 = enhancer0.getClassLoader();
        boolean boolean13 = enhancer0.getUseCache();
        boolean boolean14 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy15 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader17 = enhancer16.getClassLoader();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Class[] classArray34 = new java.lang.Class[] { wildcardClass19, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass30, wildcardClass32 };
        enhancer16.setInterfaces(classArray34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        enhancer36.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer36.setInterceptDuringConstruction(true);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        enhancer36.setSuperclass((java.lang.Class) wildcardClass44);
        enhancer16.setSuperclass((java.lang.Class) wildcardClass44);
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        boolean boolean50 = generatorStrategy15.equals((java.lang.Object) wildcardClass44);
        org.mockito.cglib.core.ClassGenerator classGenerator51 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray52 = generatorStrategy15.generate(classGenerator51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(generatorStrategy15);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test08114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08114");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer5.getNamingPolicy();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader11 = enhancer10.getClassLoader();
        enhancer5.setClassLoader(classLoader11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean14 = enhancer13.getUseCache();
        java.lang.ClassLoader classLoader15 = enhancer13.getClassLoader();
        enhancer5.setClassLoader(classLoader15);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer17.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader22 = enhancer21.getClassLoader();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass24, wildcardClass26, wildcardClass29, wildcardClass32, wildcardClass35, wildcardClass37 };
        enhancer21.setInterfaces(classArray39);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        java.lang.ClassLoader classLoader45 = enhancer41.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader47 = enhancer46.getClassLoader();
        enhancer41.setClassLoader(classLoader47);
        enhancer21.setClassLoader(classLoader47);
        org.mockito.cglib.proxy.Callback callback50 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray51 = new org.mockito.cglib.proxy.Callback[] { callback50 };
        enhancer21.setCallbacks(callbackArray51);
        enhancer17.setCallbacks(callbackArray51);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader55 = enhancer54.getClassLoader();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass70);
        java.lang.Class[] classArray72 = new java.lang.Class[] { wildcardClass57, wildcardClass59, wildcardClass62, wildcardClass65, wildcardClass68, wildcardClass70 };
        enhancer54.setInterfaces(classArray72);
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        enhancer74.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer74.getNamingPolicy();
        enhancer54.setNamingPolicy(namingPolicy77);
        enhancer17.setNamingPolicy(namingPolicy77);
        enhancer5.setNamingPolicy(namingPolicy77);
        enhancer0.setNamingPolicy(namingPolicy77);
        boolean boolean82 = enhancer0.getAttemptLoad();
        enhancer0.setUseFactory(true);
        java.lang.Class<?> wildcardClass85 = enhancer0.getClass();
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(callbackArray51);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(classArray72);
        org.junit.Assert.assertNotNull(namingPolicy77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test08115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08115");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = null;
        enhancer0.setNamingPolicy(namingPolicy9);
        java.lang.ClassLoader classLoader11 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader12 = enhancer0.getClassLoader();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(classLoader12);
    }

    @Test
    public void test08116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08116");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        enhancer4.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer4.setInterceptDuringConstruction(true);
        enhancer4.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader14 = enhancer13.getClassLoader();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Class[] classArray31 = new java.lang.Class[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass29 };
        enhancer13.setInterfaces(classArray31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        enhancer13.setClassLoader(classLoader39);
        org.mockito.cglib.proxy.Callback callback42 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray43 = new org.mockito.cglib.proxy.Callback[] { callback42 };
        enhancer13.setCallbacks(callbackArray43);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setAttemptLoad(true);
        boolean boolean48 = enhancer45.getAttemptLoad();
        java.lang.ClassLoader classLoader49 = enhancer45.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy50 = enhancer45.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setAttemptLoad(true);
        boolean boolean54 = enhancer51.getAttemptLoad();
        java.lang.ClassLoader classLoader55 = enhancer51.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy56 = enhancer51.getStrategy();
        enhancer45.setStrategy(generatorStrategy56);
        enhancer13.setStrategy(generatorStrategy56);
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = enhancer59.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader64 = enhancer63.getClassLoader();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        boolean boolean75 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass74);
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        boolean boolean80 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass79);
        java.lang.Class[] classArray81 = new java.lang.Class[] { wildcardClass66, wildcardClass68, wildcardClass71, wildcardClass74, wildcardClass77, wildcardClass79 };
        enhancer63.setInterfaces(classArray81);
        org.mockito.cglib.proxy.Enhancer enhancer83 = new org.mockito.cglib.proxy.Enhancer();
        enhancer83.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy86 = enhancer83.getNamingPolicy();
        java.lang.ClassLoader classLoader87 = enhancer83.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer88 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader89 = enhancer88.getClassLoader();
        enhancer83.setClassLoader(classLoader89);
        enhancer63.setClassLoader(classLoader89);
        org.mockito.cglib.proxy.Callback callback92 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray93 = new org.mockito.cglib.proxy.Callback[] { callback92 };
        enhancer63.setCallbacks(callbackArray93);
        enhancer59.setCallbacks(callbackArray93);
        enhancer13.setCallbacks(callbackArray93);
        enhancer4.setCallbacks(callbackArray93);
        enhancer0.setCallbacks(callbackArray93);
        java.lang.Class<?> wildcardClass99 = callbackArray93.getClass();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(callbackArray43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(generatorStrategy50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(generatorStrategy56);
        org.junit.Assert.assertNotNull(namingPolicy62);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(namingPolicy86);
        org.junit.Assert.assertNotNull(classLoader87);
        org.junit.Assert.assertNotNull(classLoader89);
        org.junit.Assert.assertNotNull(callbackArray93);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test08117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08117");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Callback callback11 = null;
        enhancer0.setCallback(callback11);
    }

    @Test
    public void test08118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08118");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        java.lang.Class<?> wildcardClass33 = classLoader31.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass33);
        enhancer0.setUseCache(true);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer40.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer44.getNamingPolicy();
        java.lang.ClassLoader classLoader48 = enhancer44.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader50 = enhancer49.getClassLoader();
        enhancer44.setClassLoader(classLoader50);
        boolean boolean52 = enhancer44.getUseCache();
        boolean boolean53 = namingPolicy43.equals((java.lang.Object) enhancer44);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setAttemptLoad(true);
        boolean boolean57 = enhancer54.getAttemptLoad();
        java.lang.ClassLoader classLoader58 = enhancer54.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy59 = enhancer54.getStrategy();
        enhancer44.setStrategy(generatorStrategy59);
        java.lang.ClassLoader classLoader61 = enhancer44.getClassLoader();
        java.lang.ClassLoader classLoader62 = enhancer44.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer44.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy63);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter67 = null;
        enhancer0.setCallbackFilter(callbackFilter67);
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = enhancer0.getNamingPolicy();
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Callback callback72 = null;
        enhancer0.setCallback(callback72);
        org.mockito.asm.ClassVisitor classVisitor74 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(generatorStrategy59);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(namingPolicy69);
    }

    @Test
    public void test08119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08119");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter4 = null;
        enhancer0.setCallbackFilter(callbackFilter4);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer0.setCallbackFilter(callbackFilter6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader9 = enhancer8.getClassLoader();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass11, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass24 };
        enhancer8.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer8.setClassLoader(classLoader34);
        java.lang.ClassLoader classLoader37 = enhancer8.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer38.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer38.getNamingPolicy();
        enhancer8.setNamingPolicy(namingPolicy42);
        enhancer0.setNamingPolicy(namingPolicy42);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setAttemptLoad(true);
        java.lang.ClassLoader classLoader48 = null;
        enhancer45.setClassLoader(classLoader48);
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        enhancer50.setAttemptLoad(true);
        boolean boolean53 = enhancer50.getAttemptLoad();
        java.lang.ClassLoader classLoader54 = enhancer50.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy55 = enhancer50.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        enhancer56.setAttemptLoad(true);
        boolean boolean59 = enhancer56.getAttemptLoad();
        java.lang.ClassLoader classLoader60 = enhancer56.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy61 = enhancer56.getStrategy();
        enhancer50.setStrategy(generatorStrategy61);
        enhancer45.setStrategy(generatorStrategy61);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer45.getNamingPolicy();
        boolean boolean65 = enhancer45.getUseCache();
        boolean boolean66 = namingPolicy42.equals((java.lang.Object) enhancer45);
        enhancer45.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Callback callback69 = null;
        enhancer45.setCallback(callback69);
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = enhancer45.getNamingPolicy();
        org.mockito.asm.ClassVisitor classVisitor72 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer45.generateClass(classVisitor72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(generatorStrategy55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(generatorStrategy61);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(namingPolicy71);
    }

    @Test
    public void test08120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08120");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer25.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy29);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader32 = enhancer31.getClassLoader();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass47);
        java.lang.Class[] classArray49 = new java.lang.Class[] { wildcardClass34, wildcardClass36, wildcardClass39, wildcardClass42, wildcardClass45, wildcardClass47 };
        enhancer31.setInterfaces(classArray49);
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = enhancer51.getNamingPolicy();
        java.lang.ClassLoader classLoader55 = enhancer51.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader57 = enhancer56.getClassLoader();
        enhancer51.setClassLoader(classLoader57);
        enhancer31.setClassLoader(classLoader57);
        java.lang.ClassLoader classLoader60 = enhancer31.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader62 = enhancer61.getClassLoader();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer61.getNamingPolicy();
        enhancer31.setNamingPolicy(namingPolicy65);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy67 = enhancer31.getStrategy();
        enhancer0.setStrategy(generatorStrategy67);
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = enhancer0.getNamingPolicy();
        boolean boolean70 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy73 = enhancer0.getStrategy();
        org.mockito.asm.ClassVisitor classVisitor74 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(classArray49);
        org.junit.Assert.assertNotNull(namingPolicy54);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertNotNull(generatorStrategy67);
        org.junit.Assert.assertNotNull(namingPolicy69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(generatorStrategy73);
    }

    @Test
    public void test08121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08121");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        boolean boolean7 = enhancer0.getUseCache();
        boolean boolean8 = enhancer0.getUseCache();
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy14 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertNotNull(generatorStrategy14);
    }

    @Test
    public void test08122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08122");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setAttemptLoad(true);
        java.lang.ClassLoader classLoader13 = null;
        enhancer10.setClassLoader(classLoader13);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setAttemptLoad(true);
        boolean boolean18 = enhancer15.getAttemptLoad();
        java.lang.ClassLoader classLoader19 = enhancer15.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy20 = enhancer15.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setAttemptLoad(true);
        boolean boolean24 = enhancer21.getAttemptLoad();
        java.lang.ClassLoader classLoader25 = enhancer21.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy26 = enhancer21.getStrategy();
        enhancer15.setStrategy(generatorStrategy26);
        enhancer10.setStrategy(generatorStrategy26);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer10.getNamingPolicy();
        enhancer7.setNamingPolicy(namingPolicy29);
        boolean boolean31 = namingPolicy6.equals((java.lang.Object) namingPolicy29);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer32.getNamingPolicy();
        java.lang.ClassLoader classLoader36 = enhancer32.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        enhancer32.setClassLoader(classLoader38);
        java.lang.ClassLoader classLoader40 = enhancer32.getClassLoader();
        enhancer32.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy43 = enhancer32.getStrategy();
        enhancer32.setSerialVersionUID((java.lang.Long) 1L);
        boolean boolean46 = enhancer32.getAttemptLoad();
        enhancer32.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter49 = null;
        enhancer32.setCallbackFilter(callbackFilter49);
        enhancer32.setInterceptDuringConstruction(false);
        boolean boolean53 = namingPolicy29.equals((java.lang.Object) false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertNotNull(generatorStrategy20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(generatorStrategy26);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(generatorStrategy43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test08123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08123");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer4.setCallback(callback22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        enhancer4.setClassLoader(classLoader28);
        java.lang.ClassLoader classLoader30 = enhancer4.getClassLoader();
        boolean boolean31 = enhancer4.getUseCache();
        enhancer4.setInterceptDuringConstruction(true);
        boolean boolean34 = enhancer4.getUseCache();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test08124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08124");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer8.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        java.lang.ClassLoader classLoader16 = enhancer12.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader18 = enhancer17.getClassLoader();
        enhancer12.setClassLoader(classLoader18);
        java.lang.Class<?> wildcardClass20 = enhancer12.getClass();
        enhancer8.setSuperclass((java.lang.Class) wildcardClass20);
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass20);
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer0.setCallbackFilter(callbackFilter25);
        enhancer0.setUseFactory(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class29 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback types are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(namingPolicy24);
    }

    @Test
    public void test08125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08125");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setAttemptLoad(true);
        boolean boolean9 = enhancer6.getAttemptLoad();
        java.lang.ClassLoader classLoader10 = enhancer6.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer6.getStrategy();
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        boolean boolean16 = enhancer13.getAttemptLoad();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer13.getStrategy();
        enhancer0.setStrategy(generatorStrategy18);
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseFactory(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        boolean boolean33 = enhancer30.getAttemptLoad();
        java.lang.ClassLoader classLoader34 = enhancer30.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy35 = enhancer30.getStrategy();
        enhancer30.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Class[] classArray56 = new java.lang.Class[] { wildcardClass41, wildcardClass43, wildcardClass46, wildcardClass49, wildcardClass52, wildcardClass54 };
        enhancer38.setInterfaces(classArray56);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        enhancer58.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy61 = enhancer58.getNamingPolicy();
        java.lang.ClassLoader classLoader62 = enhancer58.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader64 = enhancer63.getClassLoader();
        enhancer58.setClassLoader(classLoader64);
        enhancer38.setClassLoader(classLoader64);
        java.lang.ClassLoader classLoader67 = enhancer38.getClassLoader();
        enhancer30.setClassLoader(classLoader67);
        enhancer30.setSerialVersionUID((java.lang.Long) 0L);
        java.lang.ClassLoader classLoader71 = enhancer30.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy72 = enhancer30.getStrategy();
        boolean boolean73 = enhancer30.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy74 = enhancer30.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy75 = enhancer30.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy75);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(generatorStrategy18);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(generatorStrategy35);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(namingPolicy61);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertNotNull(classLoader71);
        org.junit.Assert.assertNotNull(generatorStrategy72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(generatorStrategy74);
        org.junit.Assert.assertNotNull(namingPolicy75);
    }

    @Test
    public void test08126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08126");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        enhancer0.setUseCache(false);
        enhancer0.setUseCache(true);
        enhancer0.setAttemptLoad(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
    }

    @Test
    public void test08127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08127");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader42 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader44 = enhancer43.getClassLoader();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Class[] classArray61 = new java.lang.Class[] { wildcardClass46, wildcardClass48, wildcardClass51, wildcardClass54, wildcardClass57, wildcardClass59 };
        enhancer43.setInterfaces(classArray61);
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        enhancer63.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy66 = enhancer63.getNamingPolicy();
        java.lang.ClassLoader classLoader67 = enhancer63.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader69 = enhancer68.getClassLoader();
        enhancer63.setClassLoader(classLoader69);
        enhancer43.setClassLoader(classLoader69);
        java.lang.ClassLoader classLoader72 = enhancer43.getClassLoader();
        enhancer0.setClassLoader(classLoader72);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Callback callback82 = null;
        enhancer0.setCallback(callback82);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(namingPolicy66);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(classLoader72);
    }

    @Test
    public void test08128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08128");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass21);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer0.setCallbackFilter(callbackFilter25);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter27 = null;
        enhancer0.setCallbackFilter(callbackFilter27);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        java.lang.Class<?> wildcardClass31 = enhancer0.getClass();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test08129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08129");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        boolean boolean9 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader11 = enhancer10.getClassLoader();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Class[] classArray28 = new java.lang.Class[] { wildcardClass13, wildcardClass15, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass26 };
        enhancer10.setInterfaces(classArray28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer30.getNamingPolicy();
        java.lang.ClassLoader classLoader34 = enhancer30.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        enhancer30.setClassLoader(classLoader36);
        enhancer10.setClassLoader(classLoader36);
        java.lang.ClassLoader classLoader39 = enhancer10.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer40.getNamingPolicy();
        enhancer10.setNamingPolicy(namingPolicy44);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy46 = enhancer10.getStrategy();
        enhancer0.setStrategy(generatorStrategy46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader49 = enhancer48.getClassLoader();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass64);
        java.lang.Class[] classArray66 = new java.lang.Class[] { wildcardClass51, wildcardClass53, wildcardClass56, wildcardClass59, wildcardClass62, wildcardClass64 };
        enhancer48.setInterfaces(classArray66);
        enhancer0.setInterfaces(classArray66);
        enhancer0.setUseFactory(false);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy73 = enhancer0.getStrategy();
        boolean boolean74 = enhancer0.getUseCache();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(generatorStrategy46);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(generatorStrategy73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test08130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08130");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        enhancer4.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer4.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer17.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer21.getNamingPolicy();
        java.lang.ClassLoader classLoader25 = enhancer21.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader27 = enhancer26.getClassLoader();
        enhancer21.setClassLoader(classLoader27);
        boolean boolean29 = enhancer21.getUseCache();
        boolean boolean30 = namingPolicy20.equals((java.lang.Object) enhancer21);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setAttemptLoad(true);
        boolean boolean34 = enhancer31.getAttemptLoad();
        java.lang.ClassLoader classLoader35 = enhancer31.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy36 = enhancer31.getStrategy();
        enhancer21.setStrategy(generatorStrategy36);
        java.lang.ClassLoader classLoader38 = enhancer21.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer21.getNamingPolicy();
        boolean boolean40 = enhancer21.getAttemptLoad();
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader44 = enhancer43.getClassLoader();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Class[] classArray61 = new java.lang.Class[] { wildcardClass46, wildcardClass48, wildcardClass51, wildcardClass54, wildcardClass57, wildcardClass59 };
        enhancer43.setInterfaces(classArray61);
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        enhancer63.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy66 = enhancer63.getNamingPolicy();
        enhancer43.setNamingPolicy(namingPolicy66);
        enhancer21.setNamingPolicy(namingPolicy66);
        boolean boolean69 = enhancer21.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy73 = enhancer70.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        enhancer74.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer74.getNamingPolicy();
        java.lang.ClassLoader classLoader78 = enhancer74.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer79 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader80 = enhancer79.getClassLoader();
        enhancer74.setClassLoader(classLoader80);
        java.lang.Class<?> wildcardClass82 = enhancer74.getClass();
        enhancer70.setSuperclass((java.lang.Class) wildcardClass82);
        boolean boolean84 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass82);
        enhancer21.setSuperclass((java.lang.Class) wildcardClass82);
        boolean boolean86 = generatorStrategy16.equals((java.lang.Object) enhancer21);
        enhancer21.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Callback callback89 = null;
        enhancer21.setCallback(callback89);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(generatorStrategy36);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(namingPolicy66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(namingPolicy73);
        org.junit.Assert.assertNotNull(namingPolicy77);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertNotNull(classLoader80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test08131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08131");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.Class class29 = null;
        enhancer0.setSuperclass(class29);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer0.setCallback(callback31);
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter35 = null;
        enhancer0.setCallbackFilter(callbackFilter35);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer0.setCallback(callback37);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy39 = enhancer0.getStrategy();
        boolean boolean40 = enhancer0.getUseCache();
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(generatorStrategy39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test08132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08132");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader2 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer3.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader8 = enhancer7.getClassLoader();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        java.lang.Class[] classArray25 = new java.lang.Class[] { wildcardClass10, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass21, wildcardClass23 };
        enhancer7.setInterfaces(classArray25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer27.getNamingPolicy();
        java.lang.ClassLoader classLoader31 = enhancer27.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader33 = enhancer32.getClassLoader();
        enhancer27.setClassLoader(classLoader33);
        enhancer7.setClassLoader(classLoader33);
        org.mockito.cglib.proxy.Callback callback36 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray37 = new org.mockito.cglib.proxy.Callback[] { callback36 };
        enhancer7.setCallbacks(callbackArray37);
        enhancer3.setCallbacks(callbackArray37);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Class[] classArray58 = new java.lang.Class[] { wildcardClass43, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass54, wildcardClass56 };
        enhancer40.setInterfaces(classArray58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer60.getNamingPolicy();
        enhancer40.setNamingPolicy(namingPolicy63);
        enhancer3.setNamingPolicy(namingPolicy63);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy66 = enhancer3.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        enhancer67.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy70 = enhancer67.getNamingPolicy();
        enhancer3.setNamingPolicy(namingPolicy70);
        enhancer0.setNamingPolicy(namingPolicy70);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.core.NamingPolicy namingPolicy75 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback76 = null;
        enhancer0.setCallback(callback76);
        enhancer0.setUseCache(false);
        boolean boolean80 = enhancer0.getAttemptLoad();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class81 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(callbackArray37);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(generatorStrategy66);
        org.junit.Assert.assertNotNull(namingPolicy70);
        org.junit.Assert.assertNotNull(namingPolicy75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test08133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08133");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer9.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer13.getNamingPolicy();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader19 = enhancer18.getClassLoader();
        enhancer13.setClassLoader(classLoader19);
        boolean boolean21 = enhancer13.getUseCache();
        boolean boolean22 = namingPolicy12.equals((java.lang.Object) enhancer13);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setAttemptLoad(true);
        boolean boolean26 = enhancer23.getAttemptLoad();
        java.lang.ClassLoader classLoader27 = enhancer23.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy28 = enhancer23.getStrategy();
        enhancer13.setStrategy(generatorStrategy28);
        java.lang.ClassLoader classLoader30 = enhancer13.getClassLoader();
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer13.setCallback(callback31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        enhancer13.setClassLoader(classLoader37);
        enhancer0.setClassLoader(classLoader37);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter40 = null;
        enhancer0.setCallbackFilter(callbackFilter40);
        boolean boolean42 = enhancer0.getUseCache();
        enhancer0.setUseFactory(true);
        java.lang.ClassLoader classLoader45 = enhancer0.getClassLoader();
        java.lang.Class<?> wildcardClass46 = enhancer0.getClass();
        org.mockito.cglib.proxy.Callback[] callbackArray47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerCallbacks((java.lang.Class) wildcardClass46, callbackArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.proxy.Enhancer is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(generatorStrategy28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test08134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08134");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy1 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader3 = enhancer2.getClassLoader();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Class[] classArray20 = new java.lang.Class[] { wildcardClass5, wildcardClass7, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass18 };
        enhancer2.setInterfaces(classArray20);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer22.getNamingPolicy();
        enhancer2.setNamingPolicy(namingPolicy25);
        enhancer0.setNamingPolicy(namingPolicy25);
        boolean boolean28 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter29 = null;
        enhancer0.setCallbackFilter(callbackFilter29);
        enhancer0.setAttemptLoad(true);
        boolean boolean33 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer34.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy41 = enhancer38.getNamingPolicy();
        java.lang.ClassLoader classLoader42 = enhancer38.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader44 = enhancer43.getClassLoader();
        enhancer38.setClassLoader(classLoader44);
        boolean boolean46 = enhancer38.getUseCache();
        boolean boolean47 = namingPolicy37.equals((java.lang.Object) enhancer38);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer48.getNamingPolicy();
        java.lang.ClassLoader classLoader52 = enhancer48.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader54 = enhancer53.getClassLoader();
        enhancer48.setClassLoader(classLoader54);
        java.lang.ClassLoader classLoader56 = enhancer48.getClassLoader();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass58);
        enhancer48.setSuperclass((java.lang.Class) wildcardClass58);
        boolean boolean61 = namingPolicy37.equals((java.lang.Object) enhancer48);
        enhancer48.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader65 = enhancer64.getClassLoader();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        boolean boolean76 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass75);
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        boolean boolean81 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass80);
        java.lang.Class[] classArray82 = new java.lang.Class[] { wildcardClass67, wildcardClass69, wildcardClass72, wildcardClass75, wildcardClass78, wildcardClass80 };
        enhancer64.setInterfaces(classArray82);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter84 = null;
        enhancer64.setCallbackFilter(callbackFilter84);
        enhancer64.setSerialVersionUID((java.lang.Long) 0L);
        boolean boolean88 = enhancer64.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback89 = null;
        enhancer64.setCallback(callback89);
        enhancer64.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy93 = enhancer64.getStrategy();
        enhancer48.setStrategy(generatorStrategy93);
        enhancer0.setStrategy(generatorStrategy93);
        boolean boolean96 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertNotNull(generatorStrategy1);
        org.junit.Assert.assertNotNull(classLoader3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(namingPolicy41);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(classLoader65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(generatorStrategy93);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test08135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08135");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        boolean boolean9 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setAttemptLoad(true);
        java.lang.ClassLoader classLoader19 = null;
        enhancer16.setClassLoader(classLoader19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setAttemptLoad(true);
        boolean boolean24 = enhancer21.getAttemptLoad();
        java.lang.ClassLoader classLoader25 = enhancer21.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy26 = enhancer21.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setAttemptLoad(true);
        boolean boolean30 = enhancer27.getAttemptLoad();
        java.lang.ClassLoader classLoader31 = enhancer27.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy32 = enhancer27.getStrategy();
        enhancer21.setStrategy(generatorStrategy32);
        enhancer16.setStrategy(generatorStrategy32);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer16.setCallback(callback35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        enhancer37.setSuperclass((java.lang.Class) wildcardClass58);
        enhancer37.setUseFactory(true);
        java.lang.Class<?> wildcardClass62 = enhancer37.getClass();
        enhancer16.setSuperclass((java.lang.Class) wildcardClass62);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer16.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer16.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy65);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter67 = null;
        enhancer0.setCallbackFilter(callbackFilter67);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(generatorStrategy26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(generatorStrategy32);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertNotNull(namingPolicy65);
    }

    @Test
    public void test08136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08136");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer4.setCallback(callback14);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter16 = null;
        enhancer4.setCallbackFilter(callbackFilter16);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer18.getNamingPolicy();
        java.lang.ClassLoader classLoader22 = enhancer18.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader24 = enhancer23.getClassLoader();
        enhancer18.setClassLoader(classLoader24);
        enhancer18.setAttemptLoad(true);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class[] classArray30 = new java.lang.Class[] { wildcardClass29 };
        enhancer18.setInterfaces(classArray30);
        enhancer4.setInterfaces(classArray30);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setAttemptLoad(true);
        boolean boolean41 = enhancer38.getAttemptLoad();
        java.lang.ClassLoader classLoader42 = enhancer38.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy43 = enhancer38.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setAttemptLoad(true);
        boolean boolean47 = enhancer44.getAttemptLoad();
        java.lang.ClassLoader classLoader48 = enhancer44.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy49 = enhancer44.getStrategy();
        enhancer38.setStrategy(generatorStrategy49);
        enhancer33.setStrategy(generatorStrategy49);
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        boolean boolean55 = enhancer52.getAttemptLoad();
        java.lang.ClassLoader classLoader56 = enhancer52.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy57 = enhancer52.getStrategy();
        boolean boolean58 = enhancer52.getAttemptLoad();
        boolean boolean59 = generatorStrategy49.equals((java.lang.Object) enhancer52);
        java.lang.Class<?> wildcardClass60 = enhancer52.getClass();
        enhancer4.setSuperclass((java.lang.Class) wildcardClass60);
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        enhancer62.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer62.getNamingPolicy();
        boolean boolean66 = enhancer62.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter67 = null;
        enhancer62.setCallbackFilter(callbackFilter67);
        org.mockito.cglib.proxy.Callback callback69 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray70 = new org.mockito.cglib.proxy.Callback[] { callback69 };
        enhancer62.setCallbacks(callbackArray70);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerStaticCallbacks((java.lang.Class) wildcardClass60, callbackArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.proxy.Enhancer is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(generatorStrategy43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(generatorStrategy49);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(generatorStrategy57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(callbackArray70);
    }

    @Test
    public void test08137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08137");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass10);
        enhancer0.setUseFactory(true);
        enhancer0.setUseFactory(false);
        boolean boolean17 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setAttemptLoad(true);
        enhancer18.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer18.setInterceptDuringConstruction(true);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        enhancer18.setSuperclass((java.lang.Class) wildcardClass26);
        enhancer18.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy31 = enhancer18.getStrategy();
        enhancer18.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setAttemptLoad(true);
        boolean boolean37 = enhancer34.getAttemptLoad();
        enhancer34.setUseCache(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter40 = null;
        enhancer34.setCallbackFilter(callbackFilter40);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader43 = enhancer42.getClassLoader();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass58);
        java.lang.Class[] classArray60 = new java.lang.Class[] { wildcardClass45, wildcardClass47, wildcardClass50, wildcardClass53, wildcardClass56, wildcardClass58 };
        enhancer42.setInterfaces(classArray60);
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        enhancer62.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer62.getNamingPolicy();
        java.lang.ClassLoader classLoader66 = enhancer62.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader68 = enhancer67.getClassLoader();
        enhancer62.setClassLoader(classLoader68);
        enhancer42.setClassLoader(classLoader68);
        java.lang.ClassLoader classLoader71 = enhancer42.getClassLoader();
        enhancer34.setClassLoader(classLoader71);
        enhancer18.setClassLoader(classLoader71);
        enhancer0.setClassLoader(classLoader71);
        org.mockito.asm.ClassVisitor classVisitor75 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(generatorStrategy31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(classLoader71);
    }

    @Test
    public void test08138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08138");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer4.setCallback(callback22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        enhancer4.setClassLoader(classLoader28);
        boolean boolean30 = enhancer4.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer31.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer35.getNamingPolicy();
        java.lang.ClassLoader classLoader39 = enhancer35.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        enhancer35.setClassLoader(classLoader41);
        boolean boolean43 = enhancer35.getUseCache();
        boolean boolean44 = namingPolicy34.equals((java.lang.Object) enhancer35);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setAttemptLoad(true);
        boolean boolean48 = enhancer45.getAttemptLoad();
        java.lang.ClassLoader classLoader49 = enhancer45.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy50 = enhancer45.getStrategy();
        enhancer35.setStrategy(generatorStrategy50);
        java.lang.ClassLoader classLoader52 = enhancer35.getClassLoader();
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer35.setCallback(callback53);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy58 = enhancer55.getNamingPolicy();
        java.lang.ClassLoader classLoader59 = enhancer55.getClassLoader();
        enhancer35.setClassLoader(classLoader59);
        boolean boolean61 = enhancer35.getAttemptLoad();
        enhancer35.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        enhancer68.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = enhancer68.getNamingPolicy();
        java.lang.ClassLoader classLoader72 = enhancer68.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer73 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader74 = enhancer73.getClassLoader();
        enhancer68.setClassLoader(classLoader74);
        boolean boolean76 = enhancer68.getUseCache();
        boolean boolean77 = namingPolicy67.equals((java.lang.Object) enhancer68);
        org.mockito.cglib.proxy.Enhancer enhancer78 = new org.mockito.cglib.proxy.Enhancer();
        enhancer78.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = enhancer78.getNamingPolicy();
        java.lang.ClassLoader classLoader82 = enhancer78.getClassLoader();
        enhancer78.setInterceptDuringConstruction(false);
        boolean boolean85 = enhancer78.getUseCache();
        org.mockito.cglib.core.NamingPolicy namingPolicy86 = enhancer78.getNamingPolicy();
        boolean boolean87 = namingPolicy67.equals((java.lang.Object) namingPolicy86);
        enhancer35.setNamingPolicy(namingPolicy67);
        java.lang.Object obj89 = null;
        boolean boolean90 = namingPolicy67.equals(obj89);
        enhancer4.setNamingPolicy(namingPolicy67);
        boolean boolean92 = enhancer4.getUseCache();
        enhancer4.setSerialVersionUID((java.lang.Long) 1L);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(generatorStrategy50);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(namingPolicy58);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(namingPolicy71);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertNotNull(classLoader74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(namingPolicy81);
        org.junit.Assert.assertNotNull(classLoader82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(namingPolicy86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test08139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08139");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer0.setCallback(callback12);
        boolean boolean14 = enhancer0.getUseCache();
        enhancer0.setAttemptLoad(false);
        boolean boolean17 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setAttemptLoad(true);
        boolean boolean21 = enhancer18.getAttemptLoad();
        java.lang.ClassLoader classLoader22 = enhancer18.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = enhancer18.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        boolean boolean27 = enhancer24.getAttemptLoad();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy29 = enhancer24.getStrategy();
        enhancer18.setStrategy(generatorStrategy29);
        java.lang.Class<?> wildcardClass31 = enhancer18.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        enhancer33.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer33.setInterceptDuringConstruction(true);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        enhancer33.setSuperclass((java.lang.Class) wildcardClass41);
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass41);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter47 = null;
        enhancer0.setCallbackFilter(callbackFilter47);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(generatorStrategy23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(generatorStrategy29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test08140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08140");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader7 = enhancer6.getClassLoader();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass9, wildcardClass11, wildcardClass14, wildcardClass17, wildcardClass20, wildcardClass22 };
        enhancer6.setInterfaces(classArray24);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer26.getNamingPolicy();
        java.lang.ClassLoader classLoader30 = enhancer26.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader32 = enhancer31.getClassLoader();
        enhancer26.setClassLoader(classLoader32);
        enhancer6.setClassLoader(classLoader32);
        org.mockito.cglib.proxy.Callback callback35 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray36 = new org.mockito.cglib.proxy.Callback[] { callback35 };
        enhancer6.setCallbacks(callbackArray36);
        boolean boolean38 = generatorStrategy5.equals((java.lang.Object) enhancer6);
        boolean boolean39 = enhancer6.getUseCache();
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer6.setCallback(callback40);
        enhancer6.setInterceptDuringConstruction(true);
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer6.generateClass(classVisitor44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(callbackArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test08141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08141");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer0.setCallback(callback12);
        boolean boolean14 = enhancer0.getUseCache();
        enhancer0.setAttemptLoad(false);
        boolean boolean17 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setAttemptLoad(true);
        boolean boolean21 = enhancer18.getAttemptLoad();
        java.lang.ClassLoader classLoader22 = enhancer18.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = enhancer18.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        boolean boolean27 = enhancer24.getAttemptLoad();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy29 = enhancer24.getStrategy();
        enhancer18.setStrategy(generatorStrategy29);
        java.lang.Class<?> wildcardClass31 = enhancer18.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass31);
        boolean boolean33 = enhancer0.getAttemptLoad();
        boolean boolean34 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(generatorStrategy23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(generatorStrategy29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test08142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08142");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.Class class29 = null;
        enhancer0.setSuperclass(class29);
        java.lang.ClassLoader classLoader31 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Callback callback32 = null;
        enhancer0.setCallback(callback32);
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer0.setCallback(callback34);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter36 = null;
        enhancer0.setCallbackFilter(callbackFilter36);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = enhancer45.getNamingPolicy();
        java.lang.ClassLoader classLoader49 = enhancer45.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader51 = enhancer50.getClassLoader();
        enhancer45.setClassLoader(classLoader51);
        boolean boolean53 = enhancer45.getUseCache();
        boolean boolean54 = namingPolicy44.equals((java.lang.Object) enhancer45);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setAttemptLoad(true);
        boolean boolean58 = enhancer55.getAttemptLoad();
        java.lang.ClassLoader classLoader59 = enhancer55.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy60 = enhancer55.getStrategy();
        enhancer45.setStrategy(generatorStrategy60);
        java.lang.ClassLoader classLoader62 = enhancer45.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer45.getNamingPolicy();
        boolean boolean64 = enhancer45.getAttemptLoad();
        enhancer45.setSerialVersionUID((java.lang.Long) 100L);
        enhancer45.setUseFactory(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy69 = enhancer45.getStrategy();
        java.lang.ClassLoader classLoader70 = enhancer45.getClassLoader();
        org.mockito.cglib.core.Predicate predicate71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str72 = namingPolicy38.getClassName("hi!", "hi!", (java.lang.Object) enhancer45, predicate71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(namingPolicy48);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(generatorStrategy60);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(generatorStrategy69);
        org.junit.Assert.assertNotNull(classLoader70);
    }

    @Test
    public void test08143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08143");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Callback[] callbackArray20 = null;
        enhancer0.setCallbacks(callbackArray20);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setInterceptDuringConstruction(false);
        boolean boolean27 = enhancer0.getAttemptLoad();
        boolean boolean28 = enhancer0.getAttemptLoad();
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test08144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08144");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback11 = null;
        enhancer0.setCallback(callback11);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = enhancer15.getNamingPolicy();
        java.lang.ClassLoader classLoader19 = enhancer15.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader21 = enhancer20.getClassLoader();
        enhancer15.setClassLoader(classLoader21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean24 = enhancer23.getUseCache();
        java.lang.ClassLoader classLoader25 = enhancer23.getClassLoader();
        enhancer15.setClassLoader(classLoader25);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy27 = enhancer15.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader29 = enhancer28.getClassLoader();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        java.lang.Class[] classArray46 = new java.lang.Class[] { wildcardClass31, wildcardClass33, wildcardClass36, wildcardClass39, wildcardClass42, wildcardClass44 };
        enhancer28.setInterfaces(classArray46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer48.getNamingPolicy();
        java.lang.ClassLoader classLoader52 = enhancer48.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader54 = enhancer53.getClassLoader();
        enhancer48.setClassLoader(classLoader54);
        enhancer28.setClassLoader(classLoader54);
        boolean boolean57 = enhancer28.getUseCache();
        boolean boolean58 = generatorStrategy27.equals((java.lang.Object) enhancer28);
        java.lang.ClassLoader classLoader59 = null;
        enhancer28.setClassLoader(classLoader59);
        enhancer28.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        enhancer63.setAttemptLoad(true);
        boolean boolean66 = enhancer63.getAttemptLoad();
        java.lang.ClassLoader classLoader67 = enhancer63.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy68 = enhancer63.getStrategy();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        enhancer63.setSuperclass((java.lang.Class) wildcardClass70);
        org.mockito.cglib.core.NamingPolicy namingPolicy72 = null;
        enhancer63.setNamingPolicy(namingPolicy72);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy74 = enhancer63.getStrategy();
        java.lang.ClassLoader classLoader75 = enhancer63.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer63.getStrategy();
        enhancer28.setStrategy(generatorStrategy76);
        enhancer0.setStrategy(generatorStrategy76);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.asm.ClassVisitor classVisitor81 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(namingPolicy18);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(generatorStrategy27);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertNotNull(generatorStrategy68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(generatorStrategy74);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(generatorStrategy76);
    }

    @Test
    public void test08145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08145");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setUseCache(true);
        boolean boolean8 = enhancer0.getUseCache();
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer0.getNamingPolicy();
        java.lang.Object obj12 = null;
        boolean boolean13 = namingPolicy11.equals(obj12);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test08146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08146");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer0.getNamingPolicy();
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = null;
        enhancer0.setStrategy(generatorStrategy23);
        enhancer0.setUseFactory(true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(namingPolicy22);
    }

    @Test
    public void test08147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08147");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader32 = enhancer31.getClassLoader();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass47);
        java.lang.Class[] classArray49 = new java.lang.Class[] { wildcardClass34, wildcardClass36, wildcardClass39, wildcardClass42, wildcardClass45, wildcardClass47 };
        enhancer31.setInterfaces(classArray49);
        enhancer31.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        enhancer53.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = enhancer53.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        java.lang.ClassLoader classLoader61 = enhancer57.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader63 = enhancer62.getClassLoader();
        enhancer57.setClassLoader(classLoader63);
        boolean boolean65 = enhancer57.getUseCache();
        boolean boolean66 = namingPolicy56.equals((java.lang.Object) enhancer57);
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        enhancer67.setAttemptLoad(true);
        boolean boolean70 = enhancer67.getAttemptLoad();
        java.lang.ClassLoader classLoader71 = enhancer67.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy72 = enhancer67.getStrategy();
        enhancer57.setStrategy(generatorStrategy72);
        java.lang.ClassLoader classLoader74 = enhancer57.getClassLoader();
        java.lang.ClassLoader classLoader75 = enhancer57.getClassLoader();
        enhancer57.setSerialVersionUID((java.lang.Long) (-1L));
        java.lang.ClassLoader classLoader78 = enhancer57.getClassLoader();
        enhancer31.setClassLoader(classLoader78);
        java.lang.ClassLoader classLoader80 = enhancer31.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy81 = enhancer31.getStrategy();
        boolean boolean82 = generatorStrategy30.equals((java.lang.Object) enhancer31);
        org.mockito.asm.ClassVisitor classVisitor83 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer31.generateClass(classVisitor83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(generatorStrategy30);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(classArray49);
        org.junit.Assert.assertNotNull(namingPolicy56);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(classLoader71);
        org.junit.Assert.assertNotNull(generatorStrategy72);
        org.junit.Assert.assertNotNull(classLoader74);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertNotNull(classLoader80);
        org.junit.Assert.assertNotNull(generatorStrategy81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test08148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08148");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setAttemptLoad(true);
        enhancer9.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer9.setInterceptDuringConstruction(true);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        enhancer9.setSuperclass((java.lang.Class) wildcardClass17);
        enhancer9.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer9.setCallback(callback22);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy24 = enhancer9.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer25.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter30 = null;
        enhancer25.setCallbackFilter(callbackFilter30);
        java.lang.ClassLoader classLoader32 = enhancer25.getClassLoader();
        boolean boolean33 = generatorStrategy24.equals((java.lang.Object) classLoader32);
        enhancer0.setStrategy(generatorStrategy24);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer35.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer39.getNamingPolicy();
        java.lang.ClassLoader classLoader43 = enhancer39.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        enhancer39.setClassLoader(classLoader45);
        boolean boolean47 = enhancer39.getUseCache();
        boolean boolean48 = namingPolicy38.equals((java.lang.Object) enhancer39);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setAttemptLoad(true);
        boolean boolean52 = enhancer49.getAttemptLoad();
        java.lang.ClassLoader classLoader53 = enhancer49.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer49.getStrategy();
        enhancer39.setStrategy(generatorStrategy54);
        java.lang.ClassLoader classLoader56 = enhancer39.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = enhancer39.getNamingPolicy();
        boolean boolean58 = enhancer39.getAttemptLoad();
        enhancer39.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader62 = enhancer61.getClassLoader();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass77);
        java.lang.Class[] classArray79 = new java.lang.Class[] { wildcardClass64, wildcardClass66, wildcardClass69, wildcardClass72, wildcardClass75, wildcardClass77 };
        enhancer61.setInterfaces(classArray79);
        org.mockito.cglib.proxy.Enhancer enhancer81 = new org.mockito.cglib.proxy.Enhancer();
        enhancer81.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy84 = enhancer81.getNamingPolicy();
        enhancer61.setNamingPolicy(namingPolicy84);
        enhancer39.setNamingPolicy(namingPolicy84);
        enhancer39.setUseCache(true);
        boolean boolean89 = generatorStrategy24.equals((java.lang.Object) enhancer39);
        org.mockito.asm.ClassVisitor classVisitor90 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer39.generateClass(classVisitor90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(generatorStrategy24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(namingPolicy57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(namingPolicy84);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test08149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08149");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean31 = enhancer0.getAttemptLoad();
        boolean boolean32 = enhancer0.getUseCache();
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy35 = enhancer0.getStrategy();
        boolean boolean36 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        enhancer37.setSuperclass((java.lang.Class) wildcardClass58);
        boolean boolean60 = enhancer37.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer61.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer65.getNamingPolicy();
        java.lang.ClassLoader classLoader69 = enhancer65.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader71 = enhancer70.getClassLoader();
        enhancer65.setClassLoader(classLoader71);
        boolean boolean73 = enhancer65.getUseCache();
        boolean boolean74 = namingPolicy64.equals((java.lang.Object) enhancer65);
        org.mockito.cglib.proxy.Enhancer enhancer75 = new org.mockito.cglib.proxy.Enhancer();
        enhancer75.setAttemptLoad(true);
        boolean boolean78 = enhancer75.getAttemptLoad();
        java.lang.ClassLoader classLoader79 = enhancer75.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy80 = enhancer75.getStrategy();
        enhancer65.setStrategy(generatorStrategy80);
        java.lang.ClassLoader classLoader82 = enhancer65.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy83 = enhancer65.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy83);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy85 = enhancer37.getStrategy();
        enhancer37.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy88 = enhancer37.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy88);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(generatorStrategy35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertNotNull(namingPolicy68);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(classLoader71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(classLoader79);
        org.junit.Assert.assertNotNull(generatorStrategy80);
        org.junit.Assert.assertNotNull(classLoader82);
        org.junit.Assert.assertNotNull(namingPolicy83);
        org.junit.Assert.assertNotNull(generatorStrategy85);
        org.junit.Assert.assertNotNull(namingPolicy88);
    }

    @Test
    public void test08150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08150");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer0.setCallback(callback19);
        boolean boolean21 = enhancer0.getUseCache();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader24 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader25 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer26.getNamingPolicy();
        boolean boolean30 = enhancer26.getUseCache();
        java.lang.Class[] classArray31 = null;
        enhancer26.setInterfaces(classArray31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = enhancer37.getNamingPolicy();
        java.lang.ClassLoader classLoader41 = enhancer37.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader43 = enhancer42.getClassLoader();
        enhancer37.setClassLoader(classLoader43);
        boolean boolean45 = enhancer37.getUseCache();
        boolean boolean46 = namingPolicy36.equals((java.lang.Object) enhancer37);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setAttemptLoad(true);
        boolean boolean50 = enhancer47.getAttemptLoad();
        java.lang.ClassLoader classLoader51 = enhancer47.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer47.getStrategy();
        enhancer37.setStrategy(generatorStrategy52);
        java.lang.ClassLoader classLoader54 = enhancer37.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer37.getNamingPolicy();
        enhancer26.setNamingPolicy(namingPolicy55);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy57 = enhancer26.getStrategy();
        boolean boolean58 = enhancer26.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean60 = enhancer59.getUseCache();
        java.lang.ClassLoader classLoader61 = enhancer59.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        enhancer62.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer62.getNamingPolicy();
        java.lang.ClassLoader classLoader66 = enhancer62.getClassLoader();
        enhancer59.setClassLoader(classLoader66);
        java.lang.Class[] classArray68 = new java.lang.Class[] {};
        enhancer59.setInterfaces(classArray68);
        enhancer26.setInterfaces(classArray68);
        enhancer0.setInterfaces(classArray68);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(namingPolicy40);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(generatorStrategy57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(classArray68);
    }

    @Test
    public void test08151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08151");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader9 = enhancer8.getClassLoader();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass11, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass24 };
        enhancer8.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer8.setClassLoader(classLoader34);
        java.lang.ClassLoader classLoader37 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader37);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        java.lang.ClassLoader classLoader45 = enhancer41.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader47 = enhancer46.getClassLoader();
        enhancer41.setClassLoader(classLoader47);
        java.lang.ClassLoader classLoader49 = enhancer41.getClassLoader();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer41.getStrategy();
        enhancer0.setStrategy(generatorStrategy52);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Callback[] callbackArray56 = null;
        enhancer0.setCallbacks(callbackArray56);
        org.mockito.cglib.core.NamingPolicy namingPolicy58 = enhancer0.getNamingPolicy();
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter61 = null;
        enhancer0.setCallbackFilter(callbackFilter61);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertNotNull(namingPolicy58);
    }

    @Test
    public void test08152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08152");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback64 = null;
        enhancer0.setCallback(callback64);
        boolean boolean66 = enhancer0.getAttemptLoad();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        java.lang.ClassLoader classLoader69 = enhancer0.getClassLoader();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(generatorStrategy63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(classLoader69);
    }

    @Test
    public void test08153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08153");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.Callback callback29 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray30 = new org.mockito.cglib.proxy.Callback[] { callback29 };
        enhancer0.setCallbacks(callbackArray30);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer32.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer36.getNamingPolicy();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader42 = enhancer41.getClassLoader();
        enhancer36.setClassLoader(classLoader42);
        boolean boolean44 = enhancer36.getUseCache();
        boolean boolean45 = namingPolicy35.equals((java.lang.Object) enhancer36);
        enhancer0.setNamingPolicy(namingPolicy35);
        org.mockito.cglib.proxy.Callback callback47 = null;
        enhancer0.setCallback(callback47);
        boolean boolean49 = enhancer0.getUseCache();
        boolean boolean50 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader51 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer0.setCallback(callback52);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(callbackArray30);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(classLoader51);
    }

    @Test
    public void test08154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08154");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.ClassLoader classLoader6 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(classLoader6);
    }

    @Test
    public void test08155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08155");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer4.getNamingPolicy();
        boolean boolean23 = enhancer4.getAttemptLoad();
        enhancer4.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader27 = enhancer26.getClassLoader();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Class[] classArray44 = new java.lang.Class[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass37, wildcardClass40, wildcardClass42 };
        enhancer26.setInterfaces(classArray44);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = enhancer46.getNamingPolicy();
        enhancer26.setNamingPolicy(namingPolicy49);
        enhancer4.setNamingPolicy(namingPolicy49);
        boolean boolean52 = enhancer4.getAttemptLoad();
        enhancer4.setInterceptDuringConstruction(true);
        enhancer4.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer4.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Callback callback59 = null;
        enhancer4.setCallback(callback59);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader62 = enhancer61.getClassLoader();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass77);
        java.lang.Class[] classArray79 = new java.lang.Class[] { wildcardClass64, wildcardClass66, wildcardClass69, wildcardClass72, wildcardClass75, wildcardClass77 };
        enhancer61.setInterfaces(classArray79);
        org.mockito.cglib.proxy.Enhancer enhancer81 = new org.mockito.cglib.proxy.Enhancer();
        enhancer81.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy84 = enhancer81.getNamingPolicy();
        java.lang.ClassLoader classLoader85 = enhancer81.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer86 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader87 = enhancer86.getClassLoader();
        enhancer81.setClassLoader(classLoader87);
        enhancer61.setClassLoader(classLoader87);
        java.lang.ClassLoader classLoader90 = enhancer61.getClassLoader();
        boolean boolean91 = enhancer61.getUseCache();
        boolean boolean92 = enhancer61.getAttemptLoad();
        enhancer61.setAttemptLoad(true);
        java.lang.Class<?> wildcardClass95 = enhancer61.getClass();
        enhancer4.setSuperclass((java.lang.Class) wildcardClass95);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(namingPolicy49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(namingPolicy84);
        org.junit.Assert.assertNotNull(classLoader85);
        org.junit.Assert.assertNotNull(classLoader87);
        org.junit.Assert.assertNotNull(classLoader90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test08156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08156");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy13 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = enhancer14.getNamingPolicy();
        enhancer14.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer14.setCallback(callback20);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer14.getNamingPolicy();
        boolean boolean23 = generatorStrategy13.equals((java.lang.Object) namingPolicy22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader25 = enhancer24.getClassLoader();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Class[] classArray42 = new java.lang.Class[] { wildcardClass27, wildcardClass29, wildcardClass32, wildcardClass35, wildcardClass38, wildcardClass40 };
        enhancer24.setInterfaces(classArray42);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer44.getNamingPolicy();
        java.lang.ClassLoader classLoader48 = enhancer44.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader50 = enhancer49.getClassLoader();
        enhancer44.setClassLoader(classLoader50);
        enhancer24.setClassLoader(classLoader50);
        java.lang.Class class53 = null;
        enhancer24.setSuperclass(class53);
        org.mockito.cglib.proxy.Callback callback55 = null;
        enhancer24.setCallback(callback55);
        enhancer24.setUseCache(false);
        enhancer24.setSerialVersionUID((java.lang.Long) 0L);
        enhancer24.setUseCache(true);
        enhancer24.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setAttemptLoad(true);
        enhancer65.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer65.setInterceptDuringConstruction(true);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        enhancer65.setSuperclass((java.lang.Class) wildcardClass73);
        boolean boolean75 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass73);
        boolean boolean76 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass73);
        enhancer24.setSuperclass((java.lang.Class) wildcardClass73);
        enhancer24.setUseCache(true);
        boolean boolean80 = generatorStrategy13.equals((java.lang.Object) enhancer24);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(generatorStrategy13);
        org.junit.Assert.assertNotNull(namingPolicy17);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test08157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08157");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer0.getNamingPolicy();
        boolean boolean30 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Class[] classArray53 = new java.lang.Class[] { wildcardClass38, wildcardClass40, wildcardClass43, wildcardClass46, wildcardClass49, wildcardClass51 };
        enhancer35.setInterfaces(classArray53);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy58 = enhancer55.getNamingPolicy();
        enhancer35.setNamingPolicy(namingPolicy58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer60.getNamingPolicy();
        java.lang.ClassLoader classLoader64 = enhancer60.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader66 = enhancer65.getClassLoader();
        enhancer60.setClassLoader(classLoader66);
        java.lang.Class<?> wildcardClass68 = classLoader66.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        enhancer35.setSuperclass((java.lang.Class) wildcardClass68);
        enhancer35.setUseCache(true);
        enhancer35.setUseCache(true);
        java.lang.Class<?> wildcardClass75 = enhancer35.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass75);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        java.lang.ClassLoader classLoader79 = enhancer0.getClassLoader();
        boolean boolean80 = enhancer0.getAttemptLoad();
        boolean boolean81 = enhancer0.getAttemptLoad();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor84 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(namingPolicy58);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classLoader79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test08158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08158");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer25.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy29);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader32 = enhancer31.getClassLoader();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass47);
        java.lang.Class[] classArray49 = new java.lang.Class[] { wildcardClass34, wildcardClass36, wildcardClass39, wildcardClass42, wildcardClass45, wildcardClass47 };
        enhancer31.setInterfaces(classArray49);
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = enhancer51.getNamingPolicy();
        java.lang.ClassLoader classLoader55 = enhancer51.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader57 = enhancer56.getClassLoader();
        enhancer51.setClassLoader(classLoader57);
        enhancer31.setClassLoader(classLoader57);
        java.lang.ClassLoader classLoader60 = enhancer31.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader62 = enhancer61.getClassLoader();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer61.getNamingPolicy();
        enhancer31.setNamingPolicy(namingPolicy65);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy67 = enhancer31.getStrategy();
        enhancer0.setStrategy(generatorStrategy67);
        boolean boolean69 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader70 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setAttemptLoad(true);
        boolean boolean74 = enhancer71.getAttemptLoad();
        java.lang.ClassLoader classLoader75 = enhancer71.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer71.getStrategy();
        enhancer71.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer79 = new org.mockito.cglib.proxy.Enhancer();
        enhancer79.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy82 = enhancer79.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer83 = new org.mockito.cglib.proxy.Enhancer();
        enhancer83.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy86 = enhancer83.getNamingPolicy();
        java.lang.ClassLoader classLoader87 = enhancer83.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer88 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader89 = enhancer88.getClassLoader();
        enhancer83.setClassLoader(classLoader89);
        java.lang.Class<?> wildcardClass91 = enhancer83.getClass();
        enhancer79.setSuperclass((java.lang.Class) wildcardClass91);
        boolean boolean93 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass91);
        enhancer71.setSuperclass((java.lang.Class) wildcardClass91);
        boolean boolean95 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass91);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.cglib.proxy.Enhancer");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(classArray49);
        org.junit.Assert.assertNotNull(namingPolicy54);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertNotNull(generatorStrategy67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(classLoader70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(generatorStrategy76);
        org.junit.Assert.assertNotNull(namingPolicy82);
        org.junit.Assert.assertNotNull(namingPolicy86);
        org.junit.Assert.assertNotNull(classLoader87);
        org.junit.Assert.assertNotNull(classLoader89);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test08159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08159");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader5 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy6 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer0.setCallback(callback9);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer0.getNamingPolicy();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(generatorStrategy6);
        org.junit.Assert.assertNotNull(namingPolicy11);
    }

    @Test
    public void test08160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08160");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter4 = null;
        enhancer0.setCallbackFilter(callbackFilter4);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter8 = null;
        enhancer0.setCallbackFilter(callbackFilter8);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader11 = enhancer10.getClassLoader();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Class[] classArray28 = new java.lang.Class[] { wildcardClass13, wildcardClass15, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass26 };
        enhancer10.setInterfaces(classArray28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer30.getNamingPolicy();
        java.lang.ClassLoader classLoader34 = enhancer30.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        enhancer30.setClassLoader(classLoader36);
        enhancer10.setClassLoader(classLoader36);
        enhancer10.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean41 = enhancer10.getAttemptLoad();
        enhancer10.setAttemptLoad(true);
        java.lang.ClassLoader classLoader44 = enhancer10.getClassLoader();
        boolean boolean45 = enhancer10.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = enhancer46.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        enhancer50.setAttemptLoad(true);
        boolean boolean53 = enhancer50.getAttemptLoad();
        java.lang.ClassLoader classLoader54 = enhancer50.getClassLoader();
        enhancer46.setClassLoader(classLoader54);
        java.lang.Class<?> wildcardClass56 = enhancer46.getClass();
        enhancer10.setSuperclass((java.lang.Class) wildcardClass56);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass56);
        boolean boolean59 = enhancer0.getUseCache();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(namingPolicy49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test08161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08161");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer4.getNamingPolicy();
        boolean boolean24 = namingPolicy22.equals((java.lang.Object) 1.0d);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean26 = enhancer25.getUseCache();
        java.lang.ClassLoader classLoader27 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer32.getNamingPolicy();
        java.lang.ClassLoader classLoader36 = enhancer32.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        enhancer32.setClassLoader(classLoader38);
        boolean boolean40 = enhancer32.getUseCache();
        boolean boolean41 = namingPolicy31.equals((java.lang.Object) enhancer32);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        boolean boolean45 = enhancer42.getAttemptLoad();
        java.lang.ClassLoader classLoader46 = enhancer42.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy47 = enhancer42.getStrategy();
        enhancer32.setStrategy(generatorStrategy47);
        java.lang.ClassLoader classLoader49 = enhancer32.getClassLoader();
        enhancer25.setClassLoader(classLoader49);
        boolean boolean51 = namingPolicy22.equals((java.lang.Object) enhancer25);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer25.setCallback(callback52);
        enhancer25.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        enhancer56.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = enhancer56.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer60.getNamingPolicy();
        java.lang.ClassLoader classLoader64 = enhancer60.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader66 = enhancer65.getClassLoader();
        enhancer60.setClassLoader(classLoader66);
        boolean boolean68 = enhancer60.getUseCache();
        boolean boolean69 = namingPolicy59.equals((java.lang.Object) enhancer60);
        org.mockito.cglib.proxy.Callback callback70 = null;
        enhancer60.setCallback(callback70);
        org.mockito.cglib.core.NamingPolicy namingPolicy72 = enhancer60.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter73 = null;
        enhancer60.setCallbackFilter(callbackFilter73);
        org.mockito.cglib.core.NamingPolicy namingPolicy75 = enhancer60.getNamingPolicy();
        java.lang.Class<?> wildcardClass76 = enhancer60.getClass();
        boolean boolean77 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass76);
        enhancer25.setSuperclass((java.lang.Class) wildcardClass76);
        enhancer25.setUseCache(true);
        boolean boolean81 = enhancer25.getAttemptLoad();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(generatorStrategy47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(namingPolicy59);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(namingPolicy72);
        org.junit.Assert.assertNotNull(namingPolicy75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test08162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08162");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer0.setCallback(callback13);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader16 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader17 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter18 = null;
        enhancer0.setCallbackFilter(callbackFilter18);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(classLoader17);
    }

    @Test
    public void test08163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08163");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer4.setCallback(callback14);
        enhancer4.setUseCache(true);
        enhancer4.setUseFactory(true);
        boolean boolean20 = enhancer4.getUseCache();
        enhancer4.setAttemptLoad(true);
        java.lang.ClassLoader classLoader23 = enhancer4.getClassLoader();
        boolean boolean24 = enhancer4.getUseCache();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test08164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08164");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        boolean boolean14 = enhancer0.getAttemptLoad();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback[] callbackArray17 = null;
        enhancer0.setCallbacks(callbackArray17);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer0.getNamingPolicy();
        boolean boolean20 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(false);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test08165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08165");
        java.lang.Class class0 = null;
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader2 = enhancer1.getClassLoader();
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass4, wildcardClass6, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass17 };
        enhancer1.setInterfaces(classArray19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer21.getNamingPolicy();
        java.lang.ClassLoader classLoader25 = enhancer21.getClassLoader();
        enhancer1.setClassLoader(classLoader25);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy27 = enhancer1.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        boolean boolean31 = enhancer28.getAttemptLoad();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy33 = enhancer28.getStrategy();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        enhancer28.setSuperclass((java.lang.Class) wildcardClass35);
        org.mockito.cglib.proxy.Callback callback37 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray38 = new org.mockito.cglib.proxy.Callback[] { callback37 };
        enhancer28.setCallbacks(callbackArray38);
        enhancer1.setCallbacks(callbackArray38);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerCallbacks(class0, callbackArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(generatorStrategy27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(generatorStrategy33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(callbackArray38);
    }

    @Test
    public void test08166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08166");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.Callback callback29 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray30 = new org.mockito.cglib.proxy.Callback[] { callback29 };
        enhancer0.setCallbacks(callbackArray30);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        boolean boolean44 = enhancer41.getAttemptLoad();
        java.lang.ClassLoader classLoader45 = enhancer41.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy46 = enhancer41.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setAttemptLoad(true);
        boolean boolean50 = enhancer47.getAttemptLoad();
        java.lang.ClassLoader classLoader51 = enhancer47.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer47.getStrategy();
        enhancer41.setStrategy(generatorStrategy52);
        enhancer36.setStrategy(generatorStrategy52);
        org.mockito.cglib.proxy.Callback callback55 = null;
        enhancer36.setCallback(callback55);
        boolean boolean57 = enhancer36.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy58 = enhancer36.getStrategy();
        boolean boolean59 = namingPolicy35.equals((java.lang.Object) generatorStrategy58);
        java.lang.Class<?> wildcardClass60 = namingPolicy35.getClass();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(callbackArray30);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(generatorStrategy46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(generatorStrategy58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test08167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08167");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        boolean boolean29 = enhancer0.getUseCache();
        boolean boolean30 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setAttemptLoad(true);
        boolean boolean34 = enhancer31.getAttemptLoad();
        java.lang.ClassLoader classLoader35 = enhancer31.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy36 = enhancer31.getStrategy();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        enhancer31.setSuperclass((java.lang.Class) wildcardClass38);
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = null;
        enhancer31.setNamingPolicy(namingPolicy40);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer31.getStrategy();
        enhancer0.setStrategy(generatorStrategy42);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer44.getNamingPolicy();
        java.lang.ClassLoader classLoader48 = enhancer44.getClassLoader();
        java.lang.ClassLoader classLoader49 = enhancer44.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy50 = enhancer44.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer44.getNamingPolicy();
        boolean boolean52 = enhancer44.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer44.getNamingPolicy();
        boolean boolean54 = generatorStrategy42.equals((java.lang.Object) enhancer44);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader56 = enhancer55.getClassLoader();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass71);
        java.lang.Class[] classArray73 = new java.lang.Class[] { wildcardClass58, wildcardClass60, wildcardClass63, wildcardClass66, wildcardClass69, wildcardClass71 };
        enhancer55.setInterfaces(classArray73);
        org.mockito.cglib.proxy.Enhancer enhancer75 = new org.mockito.cglib.proxy.Enhancer();
        enhancer75.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy78 = enhancer75.getNamingPolicy();
        java.lang.ClassLoader classLoader79 = enhancer75.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer80 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader81 = enhancer80.getClassLoader();
        enhancer75.setClassLoader(classLoader81);
        enhancer55.setClassLoader(classLoader81);
        boolean boolean84 = enhancer55.getUseCache();
        boolean boolean85 = enhancer55.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy86 = enhancer55.getStrategy();
        boolean boolean87 = generatorStrategy42.equals((java.lang.Object) enhancer55);
        org.mockito.cglib.proxy.Callback callback88 = null;
        enhancer55.setCallback(callback88);
        java.lang.Class<?> wildcardClass90 = enhancer55.getClass();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(generatorStrategy36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(generatorStrategy50);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertNotNull(namingPolicy78);
        org.junit.Assert.assertNotNull(classLoader79);
        org.junit.Assert.assertNotNull(classLoader81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(generatorStrategy86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test08168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08168");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback40 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray41 = new org.mockito.cglib.proxy.Callback[] { callback40 };
        enhancer0.setCallbacks(callbackArray41);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter43 = null;
        enhancer0.setCallbackFilter(callbackFilter43);
        org.mockito.cglib.proxy.Callback callback45 = null;
        enhancer0.setCallback(callback45);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy47 = enhancer0.getStrategy();
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertNotNull(callbackArray41);
        org.junit.Assert.assertNotNull(generatorStrategy47);
    }

    @Test
    public void test08169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08169");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader2 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer0.setCallbackFilter(callbackFilter6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer8.getNamingPolicy();
        java.lang.ClassLoader classLoader12 = enhancer8.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader14 = enhancer13.getClassLoader();
        enhancer8.setClassLoader(classLoader14);
        boolean boolean16 = enhancer8.getUseCache();
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer8.setCallback(callback17);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader20 = enhancer19.getClassLoader();
        enhancer19.setAttemptLoad(true);
        boolean boolean23 = enhancer19.getAttemptLoad();
        java.lang.Class<?> wildcardClass24 = enhancer19.getClass();
        enhancer8.setSuperclass((java.lang.Class) wildcardClass24);
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass24);
        enhancer0.setAttemptLoad(true);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test08170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08170");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer0.setCallback(callback13);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader16 = enhancer15.getClassLoader();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Class[] classArray33 = new java.lang.Class[] { wildcardClass18, wildcardClass20, wildcardClass23, wildcardClass26, wildcardClass29, wildcardClass31 };
        enhancer15.setInterfaces(classArray33);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer35.getNamingPolicy();
        java.lang.ClassLoader classLoader39 = enhancer35.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        enhancer35.setClassLoader(classLoader41);
        enhancer15.setClassLoader(classLoader41);
        enhancer0.setClassLoader(classLoader41);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter45 = null;
        enhancer0.setCallbackFilter(callbackFilter45);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter47 = null;
        enhancer0.setCallbackFilter(callbackFilter47);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(classLoader41);
    }

    @Test
    public void test08171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08171");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter9 = null;
        enhancer0.setCallbackFilter(callbackFilter9);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer11.setSerialVersionUID((java.lang.Long) 100L);
        boolean boolean19 = enhancer11.getUseCache();
        java.lang.ClassLoader classLoader20 = enhancer11.getClassLoader();
        boolean boolean21 = enhancer11.getAttemptLoad();
        enhancer11.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        boolean boolean36 = enhancer28.getUseCache();
        boolean boolean37 = namingPolicy27.equals((java.lang.Object) enhancer28);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer28.setCallback(callback38);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter40 = null;
        enhancer28.setCallbackFilter(callbackFilter40);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer42.getNamingPolicy();
        java.lang.ClassLoader classLoader46 = enhancer42.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader48 = enhancer47.getClassLoader();
        enhancer42.setClassLoader(classLoader48);
        enhancer42.setAttemptLoad(true);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[] { wildcardClass53 };
        enhancer42.setInterfaces(classArray54);
        enhancer28.setInterfaces(classArray54);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter57 = null;
        enhancer28.setCallbackFilter(callbackFilter57);
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = enhancer59.getNamingPolicy();
        java.lang.ClassLoader classLoader63 = enhancer59.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader65 = enhancer64.getClassLoader();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        boolean boolean76 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass75);
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        boolean boolean81 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass80);
        java.lang.Class[] classArray82 = new java.lang.Class[] { wildcardClass67, wildcardClass69, wildcardClass72, wildcardClass75, wildcardClass78, wildcardClass80 };
        enhancer64.setInterfaces(classArray82);
        org.mockito.cglib.proxy.Enhancer enhancer84 = new org.mockito.cglib.proxy.Enhancer();
        enhancer84.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy87 = enhancer84.getNamingPolicy();
        java.lang.ClassLoader classLoader88 = enhancer84.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer89 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader90 = enhancer89.getClassLoader();
        enhancer84.setClassLoader(classLoader90);
        enhancer64.setClassLoader(classLoader90);
        org.mockito.cglib.proxy.Callback callback93 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray94 = new org.mockito.cglib.proxy.Callback[] { callback93 };
        enhancer64.setCallbacks(callbackArray94);
        enhancer59.setCallbacks(callbackArray94);
        enhancer28.setCallbacks(callbackArray94);
        enhancer11.setCallbacks(callbackArray94);
        enhancer0.setCallbacks(callbackArray94);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(namingPolicy62);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertNotNull(classLoader65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(namingPolicy87);
        org.junit.Assert.assertNotNull(classLoader88);
        org.junit.Assert.assertNotNull(classLoader90);
        org.junit.Assert.assertNotNull(callbackArray94);
    }

    @Test
    public void test08172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08172");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader5 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy6 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        boolean boolean8 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer0.setCallback(callback9);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean12 = enhancer11.getUseCache();
        java.lang.ClassLoader classLoader13 = enhancer11.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = enhancer14.getNamingPolicy();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        enhancer11.setClassLoader(classLoader18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer11.setCallback(callback20);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer11.getNamingPolicy();
        enhancer11.setInterceptDuringConstruction(false);
        boolean boolean25 = enhancer11.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setAttemptLoad(true);
        enhancer26.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer26.setInterceptDuringConstruction(true);
        enhancer26.setUseCache(true);
        enhancer26.setSerialVersionUID((java.lang.Long) 1L);
        enhancer26.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader40 = enhancer39.getClassLoader();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Class[] classArray57 = new java.lang.Class[] { wildcardClass42, wildcardClass44, wildcardClass47, wildcardClass50, wildcardClass53, wildcardClass55 };
        enhancer39.setInterfaces(classArray57);
        enhancer39.setUseCache(false);
        boolean boolean61 = enhancer39.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        enhancer62.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer62.getNamingPolicy();
        boolean boolean66 = enhancer62.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter67 = null;
        enhancer62.setCallbackFilter(callbackFilter67);
        org.mockito.cglib.proxy.Callback callback69 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray70 = new org.mockito.cglib.proxy.Callback[] { callback69 };
        enhancer62.setCallbacks(callbackArray70);
        enhancer39.setCallbacks(callbackArray70);
        enhancer26.setCallbacks(callbackArray70);
        enhancer11.setCallbacks(callbackArray70);
        enhancer0.setCallbacks(callbackArray70);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setAttemptLoad(true);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(generatorStrategy6);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertNotNull(namingPolicy17);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(callbackArray70);
    }

    @Test
    public void test08173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08173");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setInterceptDuringConstruction(true);
        boolean boolean9 = enhancer0.getUseCache();
        enhancer0.setAttemptLoad(false);
        java.lang.Class<?> wildcardClass12 = enhancer0.getClass();
        org.mockito.cglib.proxy.Callback callback13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass12, callback13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test08174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08174");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer4.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader24 = enhancer23.getClassLoader();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Class[] classArray41 = new java.lang.Class[] { wildcardClass26, wildcardClass28, wildcardClass31, wildcardClass34, wildcardClass37, wildcardClass39 };
        enhancer23.setInterfaces(classArray41);
        enhancer4.setInterfaces(classArray41);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Class[] classArray62 = new java.lang.Class[] { wildcardClass47, wildcardClass49, wildcardClass52, wildcardClass55, wildcardClass58, wildcardClass60 };
        enhancer44.setInterfaces(classArray62);
        enhancer4.setInterfaces(classArray62);
        enhancer4.setAttemptLoad(false);
        boolean boolean67 = enhancer4.getUseCache();
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer4.getNamingPolicy();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(namingPolicy68);
    }

    @Test
    public void test08175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08175");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter11 = null;
        enhancer0.setCallbackFilter(callbackFilter11);
        java.lang.ClassLoader classLoader13 = enhancer0.getClassLoader();
        java.lang.Class[] classArray14 = null;
        enhancer0.setInterfaces(classArray14);
        boolean boolean16 = enhancer0.getUseCache();
        enhancer0.setUseFactory(false);
        java.lang.ClassLoader classLoader19 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy20 = enhancer0.getStrategy();
        java.lang.Object obj21 = null;
        boolean boolean22 = generatorStrategy20.equals(obj21);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertNotNull(generatorStrategy20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test08176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08176");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer8.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        java.lang.ClassLoader classLoader16 = enhancer12.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader18 = enhancer17.getClassLoader();
        enhancer12.setClassLoader(classLoader18);
        boolean boolean20 = enhancer12.getUseCache();
        boolean boolean21 = namingPolicy11.equals((java.lang.Object) enhancer12);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setAttemptLoad(true);
        boolean boolean25 = enhancer22.getAttemptLoad();
        java.lang.ClassLoader classLoader26 = enhancer22.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy27 = enhancer22.getStrategy();
        enhancer12.setStrategy(generatorStrategy27);
        java.lang.ClassLoader classLoader29 = enhancer12.getClassLoader();
        java.lang.ClassLoader classLoader30 = enhancer12.getClassLoader();
        enhancer12.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = enhancer37.getNamingPolicy();
        java.lang.ClassLoader classLoader41 = enhancer37.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader43 = enhancer42.getClassLoader();
        enhancer37.setClassLoader(classLoader43);
        boolean boolean45 = enhancer37.getUseCache();
        boolean boolean46 = namingPolicy36.equals((java.lang.Object) enhancer37);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setAttemptLoad(true);
        boolean boolean50 = enhancer47.getAttemptLoad();
        java.lang.ClassLoader classLoader51 = enhancer47.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer47.getStrategy();
        enhancer37.setStrategy(generatorStrategy52);
        java.lang.ClassLoader classLoader54 = enhancer37.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer37.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader57 = enhancer56.getClassLoader();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass72);
        java.lang.Class[] classArray74 = new java.lang.Class[] { wildcardClass59, wildcardClass61, wildcardClass64, wildcardClass67, wildcardClass70, wildcardClass72 };
        enhancer56.setInterfaces(classArray74);
        enhancer37.setInterfaces(classArray74);
        enhancer12.setInterfaces(classArray74);
        enhancer0.setInterfaces(classArray74);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy81 = enhancer0.getStrategy();
        enhancer0.setUseCache(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(generatorStrategy27);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(namingPolicy40);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(generatorStrategy81);
    }

    @Test
    public void test08177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08177");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader14 = enhancer13.getClassLoader();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Class[] classArray31 = new java.lang.Class[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass29 };
        enhancer13.setInterfaces(classArray31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        enhancer13.setClassLoader(classLoader39);
        boolean boolean42 = enhancer13.getUseCache();
        boolean boolean43 = generatorStrategy12.equals((java.lang.Object) enhancer13);
        enhancer13.setUseCache(false);
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer13.setCallback(callback46);
        boolean boolean48 = enhancer13.getAttemptLoad();
        java.lang.ClassLoader classLoader49 = enhancer13.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer13.getNamingPolicy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class51 = enhancer13.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(namingPolicy50);
    }

    @Test
    public void test08178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08178");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setAttemptLoad(true);
        boolean boolean9 = enhancer6.getAttemptLoad();
        java.lang.ClassLoader classLoader10 = enhancer6.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer6.getStrategy();
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer13.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader18 = enhancer17.getClassLoader();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Class[] classArray35 = new java.lang.Class[] { wildcardClass20, wildcardClass22, wildcardClass25, wildcardClass28, wildcardClass31, wildcardClass33 };
        enhancer17.setInterfaces(classArray35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = enhancer37.getNamingPolicy();
        java.lang.ClassLoader classLoader41 = enhancer37.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader43 = enhancer42.getClassLoader();
        enhancer37.setClassLoader(classLoader43);
        enhancer17.setClassLoader(classLoader43);
        org.mockito.cglib.proxy.Callback callback46 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray47 = new org.mockito.cglib.proxy.Callback[] { callback46 };
        enhancer17.setCallbacks(callbackArray47);
        enhancer13.setCallbacks(callbackArray47);
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader51 = enhancer50.getClassLoader();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Class[] classArray68 = new java.lang.Class[] { wildcardClass53, wildcardClass55, wildcardClass58, wildcardClass61, wildcardClass64, wildcardClass66 };
        enhancer50.setInterfaces(classArray68);
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy73 = enhancer70.getNamingPolicy();
        enhancer50.setNamingPolicy(namingPolicy73);
        enhancer13.setNamingPolicy(namingPolicy73);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer13.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer77 = new org.mockito.cglib.proxy.Enhancer();
        enhancer77.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy80 = enhancer77.getNamingPolicy();
        enhancer13.setNamingPolicy(namingPolicy80);
        org.mockito.cglib.proxy.Callback callback82 = null;
        enhancer13.setCallback(callback82);
        org.mockito.cglib.proxy.Enhancer enhancer84 = new org.mockito.cglib.proxy.Enhancer();
        enhancer84.setAttemptLoad(true);
        boolean boolean87 = enhancer84.getAttemptLoad();
        java.lang.ClassLoader classLoader88 = enhancer84.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy89 = enhancer84.getStrategy();
        java.lang.Object obj90 = new java.lang.Object();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        enhancer84.setSuperclass((java.lang.Class) wildcardClass91);
        enhancer13.setSuperclass((java.lang.Class) wildcardClass91);
        boolean boolean94 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass91);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass91);
        boolean boolean96 = enhancer0.getUseCache();
        java.lang.Class<?> wildcardClass97 = enhancer0.getClass();
        org.mockito.cglib.proxy.Callback callback98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj99 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass97, callback98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(namingPolicy40);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(callbackArray47);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(classArray68);
        org.junit.Assert.assertNotNull(namingPolicy73);
        org.junit.Assert.assertNotNull(generatorStrategy76);
        org.junit.Assert.assertNotNull(namingPolicy80);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(classLoader88);
        org.junit.Assert.assertNotNull(generatorStrategy89);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test08179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08179");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        boolean boolean4 = enhancer0.getUseCache();
        java.lang.Class[] classArray5 = null;
        enhancer0.setInterfaces(classArray5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer7.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer11.getNamingPolicy();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader17 = enhancer16.getClassLoader();
        enhancer11.setClassLoader(classLoader17);
        boolean boolean19 = enhancer11.getUseCache();
        boolean boolean20 = namingPolicy10.equals((java.lang.Object) enhancer11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setAttemptLoad(true);
        boolean boolean24 = enhancer21.getAttemptLoad();
        java.lang.ClassLoader classLoader25 = enhancer21.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy26 = enhancer21.getStrategy();
        enhancer11.setStrategy(generatorStrategy26);
        java.lang.ClassLoader classLoader28 = enhancer11.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer11.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy29);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy31 = enhancer0.getStrategy();
        java.lang.ClassLoader classLoader32 = enhancer0.getClassLoader();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(generatorStrategy26);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(generatorStrategy31);
        org.junit.Assert.assertNotNull(classLoader32);
    }

    @Test
    public void test08180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08180");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.Class class29 = null;
        enhancer0.setSuperclass(class29);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer0.setCallback(callback33);
        boolean boolean35 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        boolean boolean39 = enhancer36.getAttemptLoad();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer36.getStrategy();
        boolean boolean42 = enhancer36.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer36.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy43);
        enhancer0.setUseFactory(true);
        enhancer0.setAttemptLoad(false);
        boolean boolean49 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader51 = enhancer50.getClassLoader();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Class[] classArray68 = new java.lang.Class[] { wildcardClass53, wildcardClass55, wildcardClass58, wildcardClass61, wildcardClass64, wildcardClass66 };
        enhancer50.setInterfaces(classArray68);
        org.mockito.cglib.proxy.Callback[] callbackArray70 = null;
        enhancer50.setCallbacks(callbackArray70);
        enhancer50.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader75 = enhancer74.getClassLoader();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        boolean boolean80 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass79);
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        boolean boolean83 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass82);
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        boolean boolean86 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass85);
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        boolean boolean91 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass90);
        java.lang.Class[] classArray92 = new java.lang.Class[] { wildcardClass77, wildcardClass79, wildcardClass82, wildcardClass85, wildcardClass88, wildcardClass90 };
        enhancer74.setInterfaces(classArray92);
        enhancer50.setInterfaces(classArray92);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackTypes(classArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class java.lang.Object");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(classArray68);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(classArray92);
    }

    @Test
    public void test08181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08181");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader30 = null;
        enhancer0.setClassLoader(classLoader30);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader35 = enhancer34.getClassLoader();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Class[] classArray52 = new java.lang.Class[] { wildcardClass37, wildcardClass39, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass50 };
        enhancer34.setInterfaces(classArray52);
        enhancer0.setInterfaces(classArray52);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setAttemptLoad(true);
        java.lang.ClassLoader classLoader58 = null;
        enhancer55.setClassLoader(classLoader58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        boolean boolean63 = enhancer60.getAttemptLoad();
        java.lang.ClassLoader classLoader64 = enhancer60.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy65 = enhancer60.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        enhancer66.setAttemptLoad(true);
        boolean boolean69 = enhancer66.getAttemptLoad();
        java.lang.ClassLoader classLoader70 = enhancer66.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy71 = enhancer66.getStrategy();
        enhancer60.setStrategy(generatorStrategy71);
        enhancer55.setStrategy(generatorStrategy71);
        org.mockito.cglib.core.NamingPolicy namingPolicy74 = enhancer55.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy75 = enhancer55.getNamingPolicy();
        java.lang.ClassLoader classLoader76 = null;
        enhancer55.setClassLoader(classLoader76);
        org.mockito.cglib.proxy.Enhancer enhancer78 = new org.mockito.cglib.proxy.Enhancer();
        enhancer78.setAttemptLoad(true);
        boolean boolean81 = enhancer78.getAttemptLoad();
        java.lang.ClassLoader classLoader82 = enhancer78.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy83 = enhancer78.getStrategy();
        enhancer55.setStrategy(generatorStrategy83);
        java.lang.ClassLoader classLoader85 = enhancer55.getClassLoader();
        java.lang.Class<?> wildcardClass86 = enhancer55.getClass();
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.cglib.proxy.Enhancer");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(generatorStrategy65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(classLoader70);
        org.junit.Assert.assertNotNull(generatorStrategy71);
        org.junit.Assert.assertNotNull(namingPolicy74);
        org.junit.Assert.assertNotNull(namingPolicy75);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(classLoader82);
        org.junit.Assert.assertNotNull(generatorStrategy83);
        org.junit.Assert.assertNotNull(classLoader85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test08182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08182");
        java.lang.Class class0 = null;
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader2 = enhancer1.getClassLoader();
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass4, wildcardClass6, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass17 };
        enhancer1.setInterfaces(classArray19);
        enhancer1.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = enhancer1.getStrategy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy24 = enhancer1.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer1.getNamingPolicy();
        enhancer1.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader29 = enhancer28.getClassLoader();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        java.lang.Class[] classArray46 = new java.lang.Class[] { wildcardClass31, wildcardClass33, wildcardClass36, wildcardClass39, wildcardClass42, wildcardClass44 };
        enhancer28.setInterfaces(classArray46);
        enhancer28.setUseCache(false);
        boolean boolean50 = enhancer28.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = enhancer51.getNamingPolicy();
        boolean boolean55 = enhancer51.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter56 = null;
        enhancer51.setCallbackFilter(callbackFilter56);
        org.mockito.cglib.proxy.Callback callback58 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray59 = new org.mockito.cglib.proxy.Callback[] { callback58 };
        enhancer51.setCallbacks(callbackArray59);
        enhancer28.setCallbacks(callbackArray59);
        enhancer1.setCallbacks(callbackArray59);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerStaticCallbacks(class0, callbackArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(generatorStrategy23);
        org.junit.Assert.assertNotNull(generatorStrategy24);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(namingPolicy54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(callbackArray59);
    }

    @Test
    public void test08183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08183");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        boolean boolean7 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer8.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        java.lang.ClassLoader classLoader16 = enhancer12.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader18 = enhancer17.getClassLoader();
        enhancer12.setClassLoader(classLoader18);
        boolean boolean20 = enhancer12.getUseCache();
        boolean boolean21 = namingPolicy11.equals((java.lang.Object) enhancer12);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer12.setCallback(callback22);
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer12.getNamingPolicy();
        java.lang.Object obj25 = null;
        boolean boolean26 = namingPolicy24.equals(obj25);
        enhancer0.setNamingPolicy(namingPolicy24);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter28 = null;
        enhancer0.setCallbackFilter(callbackFilter28);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader33 = enhancer32.getClassLoader();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Class[] classArray50 = new java.lang.Class[] { wildcardClass35, wildcardClass37, wildcardClass40, wildcardClass43, wildcardClass46, wildcardClass48 };
        enhancer32.setInterfaces(classArray50);
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer52.getNamingPolicy();
        java.lang.ClassLoader classLoader56 = enhancer52.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader58 = enhancer57.getClassLoader();
        enhancer52.setClassLoader(classLoader58);
        enhancer32.setClassLoader(classLoader58);
        org.mockito.cglib.proxy.Callback callback61 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray62 = new org.mockito.cglib.proxy.Callback[] { callback61 };
        enhancer32.setCallbacks(callbackArray62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        enhancer68.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = enhancer68.getNamingPolicy();
        java.lang.ClassLoader classLoader72 = enhancer68.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer73 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader74 = enhancer73.getClassLoader();
        enhancer68.setClassLoader(classLoader74);
        boolean boolean76 = enhancer68.getUseCache();
        boolean boolean77 = namingPolicy67.equals((java.lang.Object) enhancer68);
        enhancer32.setNamingPolicy(namingPolicy67);
        org.mockito.cglib.proxy.Callback callback79 = null;
        enhancer32.setCallback(callback79);
        boolean boolean81 = enhancer32.getUseCache();
        boolean boolean82 = enhancer32.getAttemptLoad();
        boolean boolean83 = namingPolicy31.equals((java.lang.Object) enhancer32);
        org.mockito.asm.ClassVisitor classVisitor84 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer32.generateClass(classVisitor84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(generatorStrategy30);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(callbackArray62);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(namingPolicy71);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertNotNull(classLoader74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test08184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08184");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer7.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer11.getNamingPolicy();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader17 = enhancer16.getClassLoader();
        enhancer11.setClassLoader(classLoader17);
        boolean boolean19 = enhancer11.getUseCache();
        boolean boolean20 = namingPolicy10.equals((java.lang.Object) enhancer11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setAttemptLoad(true);
        boolean boolean24 = enhancer21.getAttemptLoad();
        java.lang.ClassLoader classLoader25 = enhancer21.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy26 = enhancer21.getStrategy();
        enhancer11.setStrategy(generatorStrategy26);
        java.lang.ClassLoader classLoader28 = enhancer11.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer11.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        java.lang.Class[] classArray48 = new java.lang.Class[] { wildcardClass33, wildcardClass35, wildcardClass38, wildcardClass41, wildcardClass44, wildcardClass46 };
        enhancer30.setInterfaces(classArray48);
        enhancer11.setInterfaces(classArray48);
        enhancer11.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        enhancer53.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = enhancer53.getNamingPolicy();
        java.lang.ClassLoader classLoader57 = enhancer53.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader59 = enhancer58.getClassLoader();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        boolean boolean75 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass74);
        java.lang.Class[] classArray76 = new java.lang.Class[] { wildcardClass61, wildcardClass63, wildcardClass66, wildcardClass69, wildcardClass72, wildcardClass74 };
        enhancer58.setInterfaces(classArray76);
        org.mockito.cglib.proxy.Enhancer enhancer78 = new org.mockito.cglib.proxy.Enhancer();
        enhancer78.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = enhancer78.getNamingPolicy();
        java.lang.ClassLoader classLoader82 = enhancer78.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer83 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader84 = enhancer83.getClassLoader();
        enhancer78.setClassLoader(classLoader84);
        enhancer58.setClassLoader(classLoader84);
        org.mockito.cglib.proxy.Callback callback87 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray88 = new org.mockito.cglib.proxy.Callback[] { callback87 };
        enhancer58.setCallbacks(callbackArray88);
        enhancer53.setCallbacks(callbackArray88);
        enhancer11.setCallbacks(callbackArray88);
        enhancer0.setCallbacks(callbackArray88);
        org.mockito.cglib.proxy.Callback callback93 = null;
        enhancer0.setCallback(callback93);
        boolean boolean95 = enhancer0.getUseCache();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(generatorStrategy26);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(classArray48);
        org.junit.Assert.assertNotNull(namingPolicy56);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(namingPolicy81);
        org.junit.Assert.assertNotNull(classLoader82);
        org.junit.Assert.assertNotNull(classLoader84);
        org.junit.Assert.assertNotNull(callbackArray88);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test08185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08185");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader9 = enhancer8.getClassLoader();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass11, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass24 };
        enhancer8.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer8.setClassLoader(classLoader34);
        java.lang.ClassLoader classLoader37 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader37);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        java.lang.ClassLoader classLoader41 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter43 = null;
        enhancer0.setCallbackFilter(callbackFilter43);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setAttemptLoad(true);
        boolean boolean51 = enhancer48.getAttemptLoad();
        java.lang.ClassLoader classLoader52 = enhancer48.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy53 = enhancer48.getStrategy();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        enhancer48.setSuperclass((java.lang.Class) wildcardClass55);
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = enhancer48.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy57);
        java.lang.Class<?> wildcardClass59 = enhancer0.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(generatorStrategy45);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(generatorStrategy53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(namingPolicy57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test08186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08186");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer0.setCallback(callback40);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setUseFactory(false);
        enhancer0.setAttemptLoad(false);
        java.lang.Class<?> wildcardClass50 = enhancer0.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test08187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08187");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        boolean boolean9 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader11 = enhancer10.getClassLoader();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Class[] classArray28 = new java.lang.Class[] { wildcardClass13, wildcardClass15, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass26 };
        enhancer10.setInterfaces(classArray28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer30.getNamingPolicy();
        java.lang.ClassLoader classLoader34 = enhancer30.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        enhancer30.setClassLoader(classLoader36);
        enhancer10.setClassLoader(classLoader36);
        java.lang.ClassLoader classLoader39 = enhancer10.getClassLoader();
        enhancer0.setClassLoader(classLoader39);
        boolean boolean41 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer42.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = enhancer46.getNamingPolicy();
        java.lang.ClassLoader classLoader50 = enhancer46.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader52 = enhancer51.getClassLoader();
        enhancer46.setClassLoader(classLoader52);
        boolean boolean54 = enhancer46.getUseCache();
        boolean boolean55 = namingPolicy45.equals((java.lang.Object) enhancer46);
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        enhancer56.setAttemptLoad(true);
        boolean boolean59 = enhancer56.getAttemptLoad();
        java.lang.ClassLoader classLoader60 = enhancer56.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy61 = enhancer56.getStrategy();
        enhancer46.setStrategy(generatorStrategy61);
        java.lang.ClassLoader classLoader63 = enhancer46.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer46.getNamingPolicy();
        boolean boolean66 = namingPolicy64.equals((java.lang.Object) 1.0d);
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean68 = enhancer67.getUseCache();
        java.lang.ClassLoader classLoader69 = enhancer67.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy73 = enhancer70.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        enhancer74.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer74.getNamingPolicy();
        java.lang.ClassLoader classLoader78 = enhancer74.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer79 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader80 = enhancer79.getClassLoader();
        enhancer74.setClassLoader(classLoader80);
        boolean boolean82 = enhancer74.getUseCache();
        boolean boolean83 = namingPolicy73.equals((java.lang.Object) enhancer74);
        org.mockito.cglib.proxy.Enhancer enhancer84 = new org.mockito.cglib.proxy.Enhancer();
        enhancer84.setAttemptLoad(true);
        boolean boolean87 = enhancer84.getAttemptLoad();
        java.lang.ClassLoader classLoader88 = enhancer84.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy89 = enhancer84.getStrategy();
        enhancer74.setStrategy(generatorStrategy89);
        java.lang.ClassLoader classLoader91 = enhancer74.getClassLoader();
        enhancer67.setClassLoader(classLoader91);
        boolean boolean93 = namingPolicy64.equals((java.lang.Object) enhancer67);
        org.mockito.cglib.proxy.Callback callback94 = null;
        enhancer67.setCallback(callback94);
        org.mockito.cglib.core.NamingPolicy namingPolicy96 = enhancer67.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy96);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class98 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback types are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertNotNull(namingPolicy49);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(generatorStrategy61);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(namingPolicy73);
        org.junit.Assert.assertNotNull(namingPolicy77);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertNotNull(classLoader80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(classLoader88);
        org.junit.Assert.assertNotNull(generatorStrategy89);
        org.junit.Assert.assertNotNull(classLoader91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(namingPolicy96);
    }

    @Test
    public void test08188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08188");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        boolean boolean9 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader11 = enhancer10.getClassLoader();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Class[] classArray28 = new java.lang.Class[] { wildcardClass13, wildcardClass15, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass26 };
        enhancer10.setInterfaces(classArray28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer30.getNamingPolicy();
        java.lang.ClassLoader classLoader34 = enhancer30.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        enhancer30.setClassLoader(classLoader36);
        enhancer10.setClassLoader(classLoader36);
        java.lang.ClassLoader classLoader39 = enhancer10.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer40.getNamingPolicy();
        enhancer10.setNamingPolicy(namingPolicy44);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy46 = enhancer10.getStrategy();
        enhancer0.setStrategy(generatorStrategy46);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer0.getStrategy();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer52.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        enhancer56.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = enhancer56.getNamingPolicy();
        java.lang.ClassLoader classLoader60 = enhancer56.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader62 = enhancer61.getClassLoader();
        enhancer56.setClassLoader(classLoader62);
        boolean boolean64 = enhancer56.getUseCache();
        boolean boolean65 = namingPolicy55.equals((java.lang.Object) enhancer56);
        org.mockito.cglib.proxy.Callback callback66 = null;
        enhancer56.setCallback(callback66);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter68 = null;
        enhancer56.setCallbackFilter(callbackFilter68);
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy73 = enhancer70.getNamingPolicy();
        java.lang.ClassLoader classLoader74 = enhancer70.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer75 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader76 = enhancer75.getClassLoader();
        enhancer70.setClassLoader(classLoader76);
        enhancer70.setAttemptLoad(true);
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[] { wildcardClass81 };
        enhancer70.setInterfaces(classArray82);
        enhancer56.setInterfaces(classArray82);
        enhancer0.setInterfaces(classArray82);
        java.lang.ClassLoader classLoader86 = enhancer0.getClassLoader();
        java.lang.Class<?> wildcardClass87 = enhancer0.getClass();
        org.mockito.cglib.proxy.Callback callback88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass87, callback88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(generatorStrategy46);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(namingPolicy59);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(namingPolicy73);
        org.junit.Assert.assertNotNull(classLoader74);
        org.junit.Assert.assertNotNull(classLoader76);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(classLoader86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test08189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08189");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer10.getNamingPolicy();
        java.lang.ClassLoader classLoader14 = enhancer10.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader16 = enhancer15.getClassLoader();
        enhancer10.setClassLoader(classLoader16);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean19 = enhancer18.getUseCache();
        java.lang.ClassLoader classLoader20 = enhancer18.getClassLoader();
        enhancer10.setClassLoader(classLoader20);
        java.lang.ClassLoader classLoader22 = enhancer10.getClassLoader();
        boolean boolean23 = enhancer10.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader25 = enhancer24.getClassLoader();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Class[] classArray42 = new java.lang.Class[] { wildcardClass27, wildcardClass29, wildcardClass32, wildcardClass35, wildcardClass38, wildcardClass40 };
        enhancer24.setInterfaces(classArray42);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer44.getNamingPolicy();
        java.lang.ClassLoader classLoader48 = enhancer44.getClassLoader();
        enhancer24.setClassLoader(classLoader48);
        enhancer24.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer52.getNamingPolicy();
        boolean boolean56 = enhancer52.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter57 = null;
        enhancer52.setCallbackFilter(callbackFilter57);
        org.mockito.cglib.proxy.Callback callback59 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray60 = new org.mockito.cglib.proxy.Callback[] { callback59 };
        enhancer52.setCallbacks(callbackArray60);
        enhancer24.setCallbacks(callbackArray60);
        enhancer10.setCallbacks(callbackArray60);
        enhancer0.setCallbacks(callbackArray60);
        org.mockito.asm.ClassVisitor classVisitor65 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(namingPolicy13);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(callbackArray60);
    }

    @Test
    public void test08190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08190");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer4.setCallback(callback14);
        enhancer4.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = enhancer4.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer19.getNamingPolicy();
        java.lang.ClassLoader classLoader23 = enhancer19.getClassLoader();
        java.lang.ClassLoader classLoader24 = enhancer19.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = enhancer19.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer19.getNamingPolicy();
        boolean boolean27 = enhancer19.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer19.getNamingPolicy();
        enhancer19.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setAttemptLoad(true);
        enhancer31.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer31.setInterceptDuringConstruction(true);
        enhancer31.setUseCache(true);
        enhancer31.setSerialVersionUID((java.lang.Long) 1L);
        enhancer31.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer31.getNamingPolicy();
        enhancer31.setUseCache(true);
        enhancer31.setUseCache(true);
        java.lang.Class<?> wildcardClass49 = enhancer31.getClass();
        enhancer19.setSuperclass((java.lang.Class) wildcardClass49);
        enhancer4.setSuperclass((java.lang.Class) wildcardClass49);
        enhancer4.setAttemptLoad(false);
        enhancer4.setUseFactory(false);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(namingPolicy18);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(generatorStrategy25);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test08191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08191");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        java.lang.ClassLoader classLoader45 = null;
        enhancer42.setClassLoader(classLoader45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setAttemptLoad(true);
        boolean boolean50 = enhancer47.getAttemptLoad();
        java.lang.ClassLoader classLoader51 = enhancer47.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer47.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        enhancer53.setAttemptLoad(true);
        boolean boolean56 = enhancer53.getAttemptLoad();
        java.lang.ClassLoader classLoader57 = enhancer53.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy58 = enhancer53.getStrategy();
        enhancer47.setStrategy(generatorStrategy58);
        enhancer42.setStrategy(generatorStrategy58);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setAttemptLoad(true);
        enhancer61.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer61.setInterceptDuringConstruction(true);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        enhancer61.setSuperclass((java.lang.Class) wildcardClass69);
        boolean boolean72 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        boolean boolean73 = generatorStrategy58.equals((java.lang.Object) wildcardClass69);
        enhancer0.setStrategy(generatorStrategy58);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter75 = null;
        enhancer0.setCallbackFilter(callbackFilter75);
        org.mockito.asm.ClassVisitor classVisitor77 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(generatorStrategy58);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test08192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08192");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer6.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer10.getNamingPolicy();
        java.lang.ClassLoader classLoader14 = enhancer10.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader16 = enhancer15.getClassLoader();
        enhancer10.setClassLoader(classLoader16);
        boolean boolean18 = enhancer10.getUseCache();
        boolean boolean19 = namingPolicy9.equals((java.lang.Object) enhancer10);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        boolean boolean23 = enhancer20.getAttemptLoad();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = enhancer20.getStrategy();
        enhancer10.setStrategy(generatorStrategy25);
        java.lang.ClassLoader classLoader27 = enhancer10.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer10.getNamingPolicy();
        boolean boolean30 = namingPolicy28.equals((java.lang.Object) 1.0d);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean32 = enhancer31.getUseCache();
        java.lang.ClassLoader classLoader33 = enhancer31.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer34.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy41 = enhancer38.getNamingPolicy();
        java.lang.ClassLoader classLoader42 = enhancer38.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader44 = enhancer43.getClassLoader();
        enhancer38.setClassLoader(classLoader44);
        boolean boolean46 = enhancer38.getUseCache();
        boolean boolean47 = namingPolicy37.equals((java.lang.Object) enhancer38);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setAttemptLoad(true);
        boolean boolean51 = enhancer48.getAttemptLoad();
        java.lang.ClassLoader classLoader52 = enhancer48.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy53 = enhancer48.getStrategy();
        enhancer38.setStrategy(generatorStrategy53);
        java.lang.ClassLoader classLoader55 = enhancer38.getClassLoader();
        enhancer31.setClassLoader(classLoader55);
        boolean boolean57 = namingPolicy28.equals((java.lang.Object) enhancer31);
        enhancer0.setNamingPolicy(namingPolicy28);
        boolean boolean59 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Callback callback60 = null;
        enhancer0.setCallback(callback60);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy62 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        enhancer63.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy66 = enhancer63.getNamingPolicy();
        java.lang.ClassLoader classLoader67 = enhancer63.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy68 = enhancer63.getStrategy();
        java.lang.ClassLoader classLoader69 = enhancer63.getClassLoader();
        enhancer63.setInterceptDuringConstruction(true);
        boolean boolean72 = enhancer63.getAttemptLoad();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray73 = generatorStrategy62.generate((org.mockito.cglib.core.ClassGenerator) enhancer63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertNotNull(namingPolicy13);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(generatorStrategy25);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(namingPolicy41);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(generatorStrategy53);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(generatorStrategy62);
        org.junit.Assert.assertNotNull(namingPolicy66);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertNotNull(generatorStrategy68);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test08193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08193");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Callback[] callbackArray20 = null;
        enhancer0.setCallbacks(callbackArray20);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer0.getNamingPolicy();
        boolean boolean23 = enhancer0.getUseCache();
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy26 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader28 = enhancer27.getClassLoader();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Class[] classArray45 = new java.lang.Class[] { wildcardClass30, wildcardClass32, wildcardClass35, wildcardClass38, wildcardClass41, wildcardClass43 };
        enhancer27.setInterfaces(classArray45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer47.getNamingPolicy();
        enhancer27.setNamingPolicy(namingPolicy50);
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer52.getNamingPolicy();
        java.lang.ClassLoader classLoader56 = enhancer52.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader58 = enhancer57.getClassLoader();
        enhancer52.setClassLoader(classLoader58);
        java.lang.Class<?> wildcardClass60 = classLoader58.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        enhancer27.setSuperclass((java.lang.Class) wildcardClass60);
        enhancer27.setUseCache(true);
        enhancer27.setUseCache(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter67 = null;
        enhancer27.setCallbackFilter(callbackFilter67);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy69 = enhancer27.getStrategy();
        boolean boolean70 = generatorStrategy26.equals((java.lang.Object) generatorStrategy69);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean72 = enhancer71.getUseCache();
        java.lang.ClassLoader classLoader73 = enhancer71.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        enhancer74.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer74.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer78 = new org.mockito.cglib.proxy.Enhancer();
        enhancer78.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = enhancer78.getNamingPolicy();
        java.lang.ClassLoader classLoader82 = enhancer78.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer83 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader84 = enhancer83.getClassLoader();
        enhancer78.setClassLoader(classLoader84);
        boolean boolean86 = enhancer78.getUseCache();
        boolean boolean87 = namingPolicy77.equals((java.lang.Object) enhancer78);
        org.mockito.cglib.proxy.Enhancer enhancer88 = new org.mockito.cglib.proxy.Enhancer();
        enhancer88.setAttemptLoad(true);
        boolean boolean91 = enhancer88.getAttemptLoad();
        java.lang.ClassLoader classLoader92 = enhancer88.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy93 = enhancer88.getStrategy();
        enhancer78.setStrategy(generatorStrategy93);
        java.lang.ClassLoader classLoader95 = enhancer78.getClassLoader();
        enhancer71.setClassLoader(classLoader95);
        boolean boolean97 = generatorStrategy26.equals((java.lang.Object) enhancer71);
        org.mockito.asm.ClassVisitor classVisitor98 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer71.generateClass(classVisitor98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(generatorStrategy26);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(generatorStrategy69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertNotNull(namingPolicy77);
        org.junit.Assert.assertNotNull(namingPolicy81);
        org.junit.Assert.assertNotNull(classLoader82);
        org.junit.Assert.assertNotNull(classLoader84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(classLoader92);
        org.junit.Assert.assertNotNull(generatorStrategy93);
        org.junit.Assert.assertNotNull(classLoader95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test08194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08194");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Callback[] callbackArray20 = null;
        enhancer0.setCallbacks(callbackArray20);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer0.getNamingPolicy();
        boolean boolean23 = enhancer0.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy24 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseFactory(false);
        java.lang.Class<?> wildcardClass29 = enhancer0.getClass();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(generatorStrategy24);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test08195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08195");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer0.setCallback(callback35);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer0.getNamingPolicy();
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        boolean boolean43 = enhancer40.getAttemptLoad();
        java.lang.ClassLoader classLoader44 = enhancer40.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer40.getStrategy();
        enhancer40.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader49 = enhancer48.getClassLoader();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass64);
        java.lang.Class[] classArray66 = new java.lang.Class[] { wildcardClass51, wildcardClass53, wildcardClass56, wildcardClass59, wildcardClass62, wildcardClass64 };
        enhancer48.setInterfaces(classArray66);
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        enhancer68.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = enhancer68.getNamingPolicy();
        java.lang.ClassLoader classLoader72 = enhancer68.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer73 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader74 = enhancer73.getClassLoader();
        enhancer68.setClassLoader(classLoader74);
        enhancer48.setClassLoader(classLoader74);
        java.lang.ClassLoader classLoader77 = enhancer48.getClassLoader();
        enhancer40.setClassLoader(classLoader77);
        enhancer40.setSerialVersionUID((java.lang.Long) 0L);
        java.lang.ClassLoader classLoader81 = enhancer40.getClassLoader();
        enhancer40.setUseFactory(true);
        enhancer40.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy86 = enhancer40.getStrategy();
        enhancer0.setStrategy(generatorStrategy86);
        org.mockito.cglib.proxy.Callback callback88 = null;
        enhancer0.setCallback(callback88);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(generatorStrategy45);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(namingPolicy71);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertNotNull(classLoader74);
        org.junit.Assert.assertNotNull(classLoader77);
        org.junit.Assert.assertNotNull(classLoader81);
        org.junit.Assert.assertNotNull(generatorStrategy86);
    }

    @Test
    public void test08196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08196");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter30 = null;
        enhancer0.setCallbackFilter(callbackFilter30);
        enhancer0.setUseCache(true);
        enhancer0.setAttemptLoad(false);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader29);
    }

    @Test
    public void test08197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08197");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setAttemptLoad(true);
        boolean boolean22 = enhancer19.getAttemptLoad();
        java.lang.ClassLoader classLoader23 = enhancer19.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy24 = enhancer19.getStrategy();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        enhancer19.setSuperclass((java.lang.Class) wildcardClass26);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = null;
        enhancer19.setNamingPolicy(namingPolicy28);
        enhancer19.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader33 = enhancer32.getClassLoader();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Class[] classArray50 = new java.lang.Class[] { wildcardClass35, wildcardClass37, wildcardClass40, wildcardClass43, wildcardClass46, wildcardClass48 };
        enhancer32.setInterfaces(classArray50);
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer52.getNamingPolicy();
        java.lang.ClassLoader classLoader56 = enhancer52.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader58 = enhancer57.getClassLoader();
        enhancer52.setClassLoader(classLoader58);
        enhancer32.setClassLoader(classLoader58);
        enhancer32.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        enhancer63.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy66 = enhancer63.getNamingPolicy();
        boolean boolean67 = enhancer63.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter68 = null;
        enhancer63.setCallbackFilter(callbackFilter68);
        org.mockito.cglib.proxy.Callback callback70 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray71 = new org.mockito.cglib.proxy.Callback[] { callback70 };
        enhancer63.setCallbacks(callbackArray71);
        enhancer32.setCallbacks(callbackArray71);
        enhancer19.setCallbacks(callbackArray71);
        enhancer0.setCallbacks(callbackArray71);
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter78 = null;
        enhancer0.setCallbackFilter(callbackFilter78);
        enhancer0.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy82 = enhancer0.getNamingPolicy();
        enhancer0.setUseFactory(false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(generatorStrategy24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(namingPolicy66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(callbackArray71);
        org.junit.Assert.assertNotNull(namingPolicy82);
    }

    @Test
    public void test08198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08198");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader21 = null;
        enhancer0.setClassLoader(classLoader21);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertNotNull(classLoader29);
    }

    @Test
    public void test08199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08199");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer4.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer4.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer4.setCallback(callback17);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer4.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean21 = enhancer20.getUseCache();
        java.lang.ClassLoader classLoader22 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer23.getNamingPolicy();
        java.lang.ClassLoader classLoader27 = enhancer23.getClassLoader();
        enhancer20.setClassLoader(classLoader27);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer20.setCallback(callback29);
        java.lang.ClassLoader classLoader31 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Callback callback32 = null;
        enhancer20.setCallback(callback32);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer34.getNamingPolicy();
        java.lang.ClassLoader classLoader38 = enhancer34.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader40 = enhancer39.getClassLoader();
        enhancer34.setClassLoader(classLoader40);
        enhancer34.setAttemptLoad(true);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class[] classArray46 = new java.lang.Class[] { wildcardClass45 };
        enhancer34.setInterfaces(classArray46);
        enhancer20.setInterfaces(classArray46);
        // The following exception was thrown during execution in test generation
        try {
            enhancer4.setCallbackTypes(classArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class java.lang.Object");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(classArray46);
    }

    @Test
    public void test08200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08200");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        java.lang.Class<?> wildcardClass33 = classLoader31.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass33);
        enhancer0.setUseCache(true);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer40.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer44.getNamingPolicy();
        java.lang.ClassLoader classLoader48 = enhancer44.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader50 = enhancer49.getClassLoader();
        enhancer44.setClassLoader(classLoader50);
        boolean boolean52 = enhancer44.getUseCache();
        boolean boolean53 = namingPolicy43.equals((java.lang.Object) enhancer44);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setAttemptLoad(true);
        boolean boolean57 = enhancer54.getAttemptLoad();
        java.lang.ClassLoader classLoader58 = enhancer54.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy59 = enhancer54.getStrategy();
        enhancer44.setStrategy(generatorStrategy59);
        java.lang.ClassLoader classLoader61 = enhancer44.getClassLoader();
        java.lang.ClassLoader classLoader62 = enhancer44.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer44.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy63);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean69 = enhancer68.getUseCache();
        java.lang.ClassLoader classLoader70 = enhancer68.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy74 = enhancer71.getNamingPolicy();
        java.lang.ClassLoader classLoader75 = enhancer71.getClassLoader();
        enhancer68.setClassLoader(classLoader75);
        org.mockito.cglib.proxy.Callback callback77 = null;
        enhancer68.setCallback(callback77);
        java.lang.ClassLoader classLoader79 = enhancer68.getClassLoader();
        org.mockito.cglib.proxy.Callback callback80 = null;
        enhancer68.setCallback(callback80);
        org.mockito.cglib.proxy.Enhancer enhancer82 = new org.mockito.cglib.proxy.Enhancer();
        enhancer82.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy85 = enhancer82.getNamingPolicy();
        java.lang.ClassLoader classLoader86 = enhancer82.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer87 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader88 = enhancer87.getClassLoader();
        enhancer82.setClassLoader(classLoader88);
        enhancer82.setAttemptLoad(true);
        java.lang.Object obj92 = new java.lang.Object();
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        java.lang.Class[] classArray94 = new java.lang.Class[] { wildcardClass93 };
        enhancer82.setInterfaces(classArray94);
        enhancer68.setInterfaces(classArray94);
        enhancer0.setInterfaces(classArray94);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(generatorStrategy59);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(classLoader70);
        org.junit.Assert.assertNotNull(namingPolicy74);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(classLoader79);
        org.junit.Assert.assertNotNull(namingPolicy85);
        org.junit.Assert.assertNotNull(classLoader86);
        org.junit.Assert.assertNotNull(classLoader88);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(classArray94);
    }

    @Test
    public void test08201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08201");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader2 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer3.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer7.getNamingPolicy();
        java.lang.ClassLoader classLoader11 = enhancer7.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader13 = enhancer12.getClassLoader();
        enhancer7.setClassLoader(classLoader13);
        boolean boolean15 = enhancer7.getUseCache();
        boolean boolean16 = namingPolicy6.equals((java.lang.Object) enhancer7);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setAttemptLoad(true);
        boolean boolean20 = enhancer17.getAttemptLoad();
        java.lang.ClassLoader classLoader21 = enhancer17.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer17.getStrategy();
        enhancer7.setStrategy(generatorStrategy22);
        java.lang.ClassLoader classLoader24 = enhancer7.getClassLoader();
        enhancer0.setClassLoader(classLoader24);
        java.lang.ClassLoader classLoader26 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer27.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer31.getNamingPolicy();
        java.lang.ClassLoader classLoader35 = enhancer31.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader37 = enhancer36.getClassLoader();
        enhancer31.setClassLoader(classLoader37);
        boolean boolean39 = enhancer31.getUseCache();
        boolean boolean40 = namingPolicy30.equals((java.lang.Object) enhancer31);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        java.lang.ClassLoader classLoader45 = enhancer41.getClassLoader();
        enhancer41.setInterceptDuringConstruction(false);
        boolean boolean48 = enhancer41.getUseCache();
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = enhancer41.getNamingPolicy();
        boolean boolean50 = namingPolicy30.equals((java.lang.Object) namingPolicy49);
        enhancer0.setNamingPolicy(namingPolicy30);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseCache(true);
        java.lang.ClassLoader classLoader56 = enhancer0.getClassLoader();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(namingPolicy49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(classLoader56);
    }

    @Test
    public void test08202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08202");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter10 = null;
        enhancer0.setCallbackFilter(callbackFilter10);
        java.lang.ClassLoader classLoader12 = enhancer0.getClassLoader();
        boolean boolean13 = enhancer0.getUseCache();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer0.getNamingPolicy();
        enhancer0.setUseFactory(false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(namingPolicy14);
    }

    @Test
    public void test08203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08203");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader2 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer3.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader8 = enhancer7.getClassLoader();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        java.lang.Class[] classArray25 = new java.lang.Class[] { wildcardClass10, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass21, wildcardClass23 };
        enhancer7.setInterfaces(classArray25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer27.getNamingPolicy();
        java.lang.ClassLoader classLoader31 = enhancer27.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader33 = enhancer32.getClassLoader();
        enhancer27.setClassLoader(classLoader33);
        enhancer7.setClassLoader(classLoader33);
        org.mockito.cglib.proxy.Callback callback36 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray37 = new org.mockito.cglib.proxy.Callback[] { callback36 };
        enhancer7.setCallbacks(callbackArray37);
        enhancer3.setCallbacks(callbackArray37);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Class[] classArray58 = new java.lang.Class[] { wildcardClass43, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass54, wildcardClass56 };
        enhancer40.setInterfaces(classArray58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer60.getNamingPolicy();
        enhancer40.setNamingPolicy(namingPolicy63);
        enhancer3.setNamingPolicy(namingPolicy63);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy66 = enhancer3.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        enhancer67.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy70 = enhancer67.getNamingPolicy();
        enhancer3.setNamingPolicy(namingPolicy70);
        enhancer0.setNamingPolicy(namingPolicy70);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter75 = null;
        enhancer0.setCallbackFilter(callbackFilter75);
        enhancer0.setAttemptLoad(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class79 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback types are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(callbackArray37);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(generatorStrategy66);
        org.junit.Assert.assertNotNull(namingPolicy70);
    }

    @Test
    public void test08204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08204");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy8 = enhancer0.getStrategy();
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        boolean boolean15 = enhancer0.getUseCache();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(generatorStrategy8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test08205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08205");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass21);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer0.setCallbackFilter(callbackFilter25);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Class[] classArray47 = new java.lang.Class[] { wildcardClass32, wildcardClass34, wildcardClass37, wildcardClass40, wildcardClass43, wildcardClass45 };
        enhancer29.setInterfaces(classArray47);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy52 = enhancer49.getNamingPolicy();
        java.lang.ClassLoader classLoader53 = enhancer49.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader55 = enhancer54.getClassLoader();
        enhancer49.setClassLoader(classLoader55);
        enhancer29.setClassLoader(classLoader55);
        java.lang.ClassLoader classLoader58 = enhancer29.getClassLoader();
        java.lang.ClassLoader classLoader59 = null;
        enhancer29.setClassLoader(classLoader59);
        enhancer29.setSerialVersionUID((java.lang.Long) (-1L));
        java.lang.ClassLoader classLoader63 = enhancer29.getClassLoader();
        enhancer0.setClassLoader(classLoader63);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy65 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter66 = null;
        enhancer0.setCallbackFilter(callbackFilter66);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(namingPolicy52);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertNotNull(generatorStrategy65);
    }

    @Test
    public void test08206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08206");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean31 = enhancer0.getAttemptLoad();
        boolean boolean32 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy34 = enhancer0.getStrategy();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(generatorStrategy34);
    }

    @Test
    public void test08207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08207");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy67);
        enhancer0.setInterceptDuringConstruction(true);
        boolean boolean71 = enhancer0.getAttemptLoad();
        boolean boolean72 = enhancer0.getUseCache();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(generatorStrategy63);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test08208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08208");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter4 = null;
        enhancer0.setCallbackFilter(callbackFilter4);
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setAttemptLoad(true);
        enhancer6.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer6.setInterceptDuringConstruction(true);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass14);
        enhancer6.setSuperclass((java.lang.Class) wildcardClass14);
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass14);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass14);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean20 = enhancer19.getUseCache();
        java.lang.ClassLoader classLoader21 = enhancer19.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer22.getNamingPolicy();
        java.lang.ClassLoader classLoader26 = enhancer22.getClassLoader();
        enhancer19.setClassLoader(classLoader26);
        java.lang.Class[] classArray28 = new java.lang.Class[] {};
        enhancer19.setInterfaces(classArray28);
        org.mockito.cglib.proxy.Callback callback30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass14, classArray28, callback30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classArray28);
    }

    @Test
    public void test08209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08209");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        enhancer0.setUseFactory(false);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer0.getStrategy();
        java.lang.Class<?> wildcardClass17 = generatorStrategy16.getClass();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer18.getNamingPolicy();
        java.lang.ClassLoader classLoader22 = enhancer18.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader24 = enhancer23.getClassLoader();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Class[] classArray41 = new java.lang.Class[] { wildcardClass26, wildcardClass28, wildcardClass31, wildcardClass34, wildcardClass37, wildcardClass39 };
        enhancer23.setInterfaces(classArray41);
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer43.getNamingPolicy();
        java.lang.ClassLoader classLoader47 = enhancer43.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader49 = enhancer48.getClassLoader();
        enhancer43.setClassLoader(classLoader49);
        enhancer23.setClassLoader(classLoader49);
        org.mockito.cglib.proxy.Callback callback52 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray53 = new org.mockito.cglib.proxy.Callback[] { callback52 };
        enhancer23.setCallbacks(callbackArray53);
        enhancer18.setCallbacks(callbackArray53);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter56 = null;
        enhancer18.setCallbackFilter(callbackFilter56);
        enhancer18.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        enhancer60.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer60.setInterceptDuringConstruction(true);
        enhancer60.setUseCache(true);
        enhancer60.setSerialVersionUID((java.lang.Long) 1L);
        enhancer60.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy73 = enhancer60.getNamingPolicy();
        enhancer60.setUseCache(true);
        enhancer60.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy78 = enhancer60.getNamingPolicy();
        enhancer18.setNamingPolicy(namingPolicy78);
        org.mockito.cglib.proxy.Enhancer enhancer80 = new org.mockito.cglib.proxy.Enhancer();
        enhancer80.setAttemptLoad(true);
        boolean boolean83 = enhancer80.getAttemptLoad();
        java.lang.ClassLoader classLoader84 = enhancer80.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy85 = enhancer80.getStrategy();
        enhancer80.setAttemptLoad(false);
        boolean boolean88 = enhancer80.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback89 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray90 = new org.mockito.cglib.proxy.Callback[] { callback89 };
        enhancer80.setCallbacks(callbackArray90);
        boolean boolean92 = namingPolicy78.equals((java.lang.Object) callbackArray90);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerStaticCallbacks((java.lang.Class) wildcardClass17, callbackArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.core.DefaultGeneratorStrategy is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(callbackArray53);
        org.junit.Assert.assertNotNull(namingPolicy73);
        org.junit.Assert.assertNotNull(namingPolicy78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(classLoader84);
        org.junit.Assert.assertNotNull(generatorStrategy85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(callbackArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test08210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08210");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        java.lang.ClassLoader classLoader9 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer10.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy13);
        enhancer0.setUseCache(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer19.getNamingPolicy();
        boolean boolean23 = enhancer19.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter24 = null;
        enhancer19.setCallbackFilter(callbackFilter24);
        org.mockito.cglib.proxy.Callback callback26 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray27 = new org.mockito.cglib.proxy.Callback[] { callback26 };
        enhancer19.setCallbacks(callbackArray27);
        java.lang.ClassLoader classLoader29 = enhancer19.getClassLoader();
        enhancer0.setClassLoader(classLoader29);
        enhancer0.setInterceptDuringConstruction(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(namingPolicy13);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(callbackArray27);
        org.junit.Assert.assertNotNull(classLoader29);
    }

    @Test
    public void test08211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08211");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        enhancer20.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer20.setInterceptDuringConstruction(true);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        enhancer20.setSuperclass((java.lang.Class) wildcardClass28);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass28);
        boolean boolean32 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer0.setCallback(callback33);
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy36 = enhancer0.getStrategy();
        java.lang.ClassLoader classLoader37 = enhancer0.getClassLoader();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertNotNull(generatorStrategy36);
        org.junit.Assert.assertNotNull(classLoader37);
    }

    @Test
    public void test08212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08212");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer0.setCallback(callback19);
        boolean boolean21 = enhancer0.getUseCache();
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback24 = null;
        enhancer0.setCallback(callback24);
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer0.getNamingPolicy();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(namingPolicy26);
    }

    @Test
    public void test08213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08213");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader14 = enhancer13.getClassLoader();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Class[] classArray31 = new java.lang.Class[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass29 };
        enhancer13.setInterfaces(classArray31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        enhancer13.setClassLoader(classLoader39);
        boolean boolean42 = enhancer13.getUseCache();
        boolean boolean43 = generatorStrategy12.equals((java.lang.Object) enhancer13);
        java.lang.ClassLoader classLoader44 = null;
        enhancer13.setClassLoader(classLoader44);
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer13.getNamingPolicy();
        enhancer13.setSerialVersionUID((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(namingPolicy46);
    }

    @Test
    public void test08214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08214");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        enhancer0.setUseCache(true);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer0.setCallback(callback23);
        boolean boolean25 = enhancer0.getUseCache();
        enhancer0.setInterceptDuringConstruction(false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test08215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08215");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter4 = null;
        enhancer0.setCallbackFilter(callbackFilter4);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer0.setCallbackFilter(callbackFilter6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader9 = enhancer8.getClassLoader();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass11, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass24 };
        enhancer8.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer8.setClassLoader(classLoader34);
        java.lang.ClassLoader classLoader37 = enhancer8.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer38.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer38.getNamingPolicy();
        enhancer8.setNamingPolicy(namingPolicy42);
        enhancer0.setNamingPolicy(namingPolicy42);
        org.mockito.cglib.proxy.Callback callback45 = null;
        enhancer0.setCallback(callback45);
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(namingPolicy42);
    }

    @Test
    public void test08216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08216");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = enhancer29.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        boolean boolean41 = enhancer33.getUseCache();
        boolean boolean42 = namingPolicy32.equals((java.lang.Object) enhancer33);
        enhancer0.setNamingPolicy(namingPolicy32);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Class[] classArray62 = new java.lang.Class[] { wildcardClass47, wildcardClass49, wildcardClass52, wildcardClass55, wildcardClass58, wildcardClass60 };
        enhancer44.setInterfaces(classArray62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        java.lang.ClassLoader classLoader68 = enhancer64.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader70 = enhancer69.getClassLoader();
        enhancer64.setClassLoader(classLoader70);
        enhancer44.setClassLoader(classLoader70);
        java.lang.ClassLoader classLoader73 = enhancer44.getClassLoader();
        boolean boolean74 = namingPolicy32.equals((java.lang.Object) enhancer44);
        enhancer44.setInterceptDuringConstruction(true);
        java.lang.ClassLoader classLoader77 = enhancer44.getClassLoader();
        org.mockito.cglib.proxy.Callback callback78 = null;
        enhancer44.setCallback(callback78);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter80 = null;
        enhancer44.setCallbackFilter(callbackFilter80);
        enhancer44.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Callback callback84 = null;
        enhancer44.setCallback(callback84);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy32);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(classLoader70);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(classLoader77);
    }

    @Test
    public void test08217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08217");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy67);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseCache(true);
        boolean boolean75 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy76 = enhancer0.getNamingPolicy();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(generatorStrategy63);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(namingPolicy76);
    }

    @Test
    public void test08218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08218");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader42 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader44 = enhancer43.getClassLoader();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Class[] classArray61 = new java.lang.Class[] { wildcardClass46, wildcardClass48, wildcardClass51, wildcardClass54, wildcardClass57, wildcardClass59 };
        enhancer43.setInterfaces(classArray61);
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        enhancer63.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy66 = enhancer63.getNamingPolicy();
        java.lang.ClassLoader classLoader67 = enhancer63.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader69 = enhancer68.getClassLoader();
        enhancer63.setClassLoader(classLoader69);
        enhancer43.setClassLoader(classLoader69);
        java.lang.ClassLoader classLoader72 = enhancer43.getClassLoader();
        enhancer0.setClassLoader(classLoader72);
        java.lang.ClassLoader classLoader74 = enhancer0.getClassLoader();
        java.lang.Class<?> wildcardClass75 = enhancer0.getClass();
        boolean boolean76 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass75);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(namingPolicy66);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertNotNull(classLoader74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test08219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08219");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setSerialVersionUID((java.lang.Long) 100L);
        enhancer10.setUseCache(false);
        enhancer10.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer17.getNamingPolicy();
        java.lang.ClassLoader classLoader21 = enhancer17.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader23 = enhancer22.getClassLoader();
        enhancer17.setClassLoader(classLoader23);
        enhancer10.setClassLoader(classLoader23);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader27 = enhancer26.getClassLoader();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Class[] classArray44 = new java.lang.Class[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass37, wildcardClass40, wildcardClass42 };
        enhancer26.setInterfaces(classArray44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        enhancer26.setSuperclass((java.lang.Class) wildcardClass47);
        enhancer26.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy51 = enhancer26.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        boolean boolean55 = enhancer52.getAttemptLoad();
        java.lang.ClassLoader classLoader56 = enhancer52.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy57 = enhancer52.getStrategy();
        enhancer52.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader61 = enhancer60.getClassLoader();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass76);
        java.lang.Class[] classArray78 = new java.lang.Class[] { wildcardClass63, wildcardClass65, wildcardClass68, wildcardClass71, wildcardClass74, wildcardClass76 };
        enhancer60.setInterfaces(classArray78);
        org.mockito.cglib.proxy.Enhancer enhancer80 = new org.mockito.cglib.proxy.Enhancer();
        enhancer80.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy83 = enhancer80.getNamingPolicy();
        java.lang.ClassLoader classLoader84 = enhancer80.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer85 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader86 = enhancer85.getClassLoader();
        enhancer80.setClassLoader(classLoader86);
        enhancer60.setClassLoader(classLoader86);
        java.lang.ClassLoader classLoader89 = enhancer60.getClassLoader();
        enhancer52.setClassLoader(classLoader89);
        enhancer26.setClassLoader(classLoader89);
        enhancer10.setClassLoader(classLoader89);
        enhancer0.setClassLoader(classLoader89);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Callback callback96 = null;
        enhancer0.setCallback(callback96);
        enhancer0.setUseCache(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(generatorStrategy51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(generatorStrategy57);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(namingPolicy83);
        org.junit.Assert.assertNotNull(classLoader84);
        org.junit.Assert.assertNotNull(classLoader86);
        org.junit.Assert.assertNotNull(classLoader89);
    }

    @Test
    public void test08220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08220");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy67);
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = enhancer0.getNamingPolicy();
        boolean boolean70 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setAttemptLoad(true);
        enhancer71.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer71.setInterceptDuringConstruction(true);
        enhancer71.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy80 = enhancer71.getStrategy();
        enhancer0.setStrategy(generatorStrategy80);
        boolean boolean82 = enhancer0.getUseCache();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(generatorStrategy63);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(namingPolicy69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(generatorStrategy80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test08221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08221");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseFactory(false);
        enhancer0.setUseFactory(true);
        java.lang.ClassLoader classLoader17 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer18.getNamingPolicy();
        java.lang.ClassLoader classLoader22 = enhancer18.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader24 = enhancer23.getClassLoader();
        enhancer18.setClassLoader(classLoader24);
        java.lang.ClassLoader classLoader26 = enhancer18.getClassLoader();
        enhancer18.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy29 = enhancer18.getStrategy();
        enhancer18.setUseFactory(false);
        enhancer18.setAttemptLoad(false);
        boolean boolean34 = enhancer18.getUseCache();
        java.lang.ClassLoader classLoader35 = enhancer18.getClassLoader();
        java.lang.Class<?> wildcardClass36 = enhancer18.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass36);
        org.mockito.cglib.proxy.Callback callback39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass36, callback39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(generatorStrategy29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test08222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08222");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        boolean boolean6 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer0.setCallback(callback9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        boolean boolean15 = enhancer12.getAttemptLoad();
        java.lang.ClassLoader classLoader16 = enhancer12.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy17 = enhancer12.getStrategy();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        enhancer12.setSuperclass((java.lang.Class) wildcardClass19);
        org.mockito.cglib.proxy.Callback callback21 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray22 = new org.mockito.cglib.proxy.Callback[] { callback21 };
        enhancer12.setCallbacks(callbackArray22);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy24 = enhancer12.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        java.lang.ClassLoader classLoader31 = null;
        enhancer28.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        boolean boolean36 = enhancer33.getAttemptLoad();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy38 = enhancer33.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setAttemptLoad(true);
        boolean boolean42 = enhancer39.getAttemptLoad();
        java.lang.ClassLoader classLoader43 = enhancer39.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer39.getStrategy();
        enhancer33.setStrategy(generatorStrategy44);
        enhancer28.setStrategy(generatorStrategy44);
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer28.getNamingPolicy();
        enhancer25.setNamingPolicy(namingPolicy47);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setAttemptLoad(true);
        java.lang.ClassLoader classLoader52 = null;
        enhancer49.setClassLoader(classLoader52);
        enhancer49.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = enhancer49.getNamingPolicy();
        boolean boolean57 = namingPolicy47.equals((java.lang.Object) enhancer49);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader59 = enhancer58.getClassLoader();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        boolean boolean75 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass74);
        java.lang.Class[] classArray76 = new java.lang.Class[] { wildcardClass61, wildcardClass63, wildcardClass66, wildcardClass69, wildcardClass72, wildcardClass74 };
        enhancer58.setInterfaces(classArray76);
        org.mockito.cglib.proxy.Enhancer enhancer78 = new org.mockito.cglib.proxy.Enhancer();
        enhancer78.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = enhancer78.getNamingPolicy();
        java.lang.ClassLoader classLoader82 = enhancer78.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer83 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader84 = enhancer83.getClassLoader();
        enhancer78.setClassLoader(classLoader84);
        enhancer58.setClassLoader(classLoader84);
        java.lang.ClassLoader classLoader87 = enhancer58.getClassLoader();
        java.lang.ClassLoader classLoader88 = null;
        enhancer58.setClassLoader(classLoader88);
        enhancer58.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy92 = enhancer58.getStrategy();
        java.lang.Class[] classArray93 = null;
        enhancer58.setInterfaces(classArray93);
        java.lang.ClassLoader classLoader95 = enhancer58.getClassLoader();
        enhancer49.setClassLoader(classLoader95);
        enhancer12.setClassLoader(classLoader95);
        boolean boolean98 = generatorStrategy11.equals((java.lang.Object) classLoader95);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(generatorStrategy17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(callbackArray22);
        org.junit.Assert.assertNotNull(generatorStrategy24);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(generatorStrategy38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertNotNull(namingPolicy56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(namingPolicy81);
        org.junit.Assert.assertNotNull(classLoader82);
        org.junit.Assert.assertNotNull(classLoader84);
        org.junit.Assert.assertNotNull(classLoader87);
        org.junit.Assert.assertNotNull(generatorStrategy92);
        org.junit.Assert.assertNotNull(classLoader95);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test08223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08223");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray10 = new org.mockito.cglib.proxy.Callback[] { callback9 };
        enhancer0.setCallbacks(callbackArray10);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer0.getStrategy();
        java.lang.Class<?> wildcardClass13 = enhancer0.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = enhancer15.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer19.getNamingPolicy();
        java.lang.ClassLoader classLoader23 = enhancer19.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader25 = enhancer24.getClassLoader();
        enhancer19.setClassLoader(classLoader25);
        boolean boolean27 = enhancer19.getUseCache();
        boolean boolean28 = namingPolicy18.equals((java.lang.Object) enhancer19);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setAttemptLoad(true);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setAttemptLoad(true);
        boolean boolean37 = enhancer34.getAttemptLoad();
        java.lang.ClassLoader classLoader38 = enhancer34.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy39 = enhancer34.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        boolean boolean43 = enhancer40.getAttemptLoad();
        java.lang.ClassLoader classLoader44 = enhancer40.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer40.getStrategy();
        enhancer34.setStrategy(generatorStrategy45);
        enhancer29.setStrategy(generatorStrategy45);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer29.setCallback(callback48);
        boolean boolean50 = enhancer29.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader52 = enhancer51.getClassLoader();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass67);
        java.lang.Class[] classArray69 = new java.lang.Class[] { wildcardClass54, wildcardClass56, wildcardClass59, wildcardClass62, wildcardClass65, wildcardClass67 };
        enhancer51.setInterfaces(classArray69);
        org.mockito.cglib.proxy.Callback[] callbackArray71 = null;
        enhancer51.setCallbacks(callbackArray71);
        enhancer51.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer75 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader76 = enhancer75.getClassLoader();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        boolean boolean81 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass80);
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        boolean boolean84 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass83);
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        boolean boolean87 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass86);
        java.lang.Object obj88 = new java.lang.Object();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = new java.lang.Object();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        boolean boolean92 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass91);
        java.lang.Class[] classArray93 = new java.lang.Class[] { wildcardClass78, wildcardClass80, wildcardClass83, wildcardClass86, wildcardClass89, wildcardClass91 };
        enhancer75.setInterfaces(classArray93);
        enhancer51.setInterfaces(classArray93);
        enhancer29.setInterfaces(classArray93);
        enhancer19.setInterfaces(classArray93);
        java.util.List list98 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods((java.lang.Class) wildcardClass13, classArray93, list98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(callbackArray10);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(namingPolicy18);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(generatorStrategy39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(generatorStrategy45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(classLoader76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(classArray93);
    }

    @Test
    public void test08224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08224");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer42.getNamingPolicy();
        java.lang.ClassLoader classLoader46 = enhancer42.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader48 = enhancer47.getClassLoader();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Class[] classArray65 = new java.lang.Class[] { wildcardClass50, wildcardClass52, wildcardClass55, wildcardClass58, wildcardClass61, wildcardClass63 };
        enhancer47.setInterfaces(classArray65);
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        enhancer67.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy70 = enhancer67.getNamingPolicy();
        java.lang.ClassLoader classLoader71 = enhancer67.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer72 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader73 = enhancer72.getClassLoader();
        enhancer67.setClassLoader(classLoader73);
        enhancer47.setClassLoader(classLoader73);
        org.mockito.cglib.proxy.Callback callback76 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray77 = new org.mockito.cglib.proxy.Callback[] { callback76 };
        enhancer47.setCallbacks(callbackArray77);
        enhancer42.setCallbacks(callbackArray77);
        enhancer42.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback82 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray83 = new org.mockito.cglib.proxy.Callback[] { callback82 };
        enhancer42.setCallbacks(callbackArray83);
        enhancer0.setCallbacks(callbackArray83);
        boolean boolean86 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(false);
        java.lang.Class<?> wildcardClass89 = enhancer0.getClass();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(classArray65);
        org.junit.Assert.assertNotNull(namingPolicy70);
        org.junit.Assert.assertNotNull(classLoader71);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertNotNull(callbackArray77);
        org.junit.Assert.assertNotNull(callbackArray83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test08225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08225");
        java.lang.Class class0 = null;
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy4 = enhancer1.getNamingPolicy();
        java.lang.ClassLoader classLoader5 = enhancer1.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy6 = enhancer1.getStrategy();
        enhancer1.setUseCache(true);
        enhancer1.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Callback callback11 = null;
        enhancer1.setCallback(callback11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        boolean boolean16 = enhancer13.getAttemptLoad();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer13.getStrategy();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        enhancer13.setSuperclass((java.lang.Class) wildcardClass20);
        java.lang.ClassLoader classLoader22 = enhancer13.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter23 = null;
        enhancer13.setCallbackFilter(callbackFilter23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Class[] classArray47 = new java.lang.Class[] { wildcardClass32, wildcardClass34, wildcardClass37, wildcardClass40, wildcardClass43, wildcardClass45 };
        enhancer29.setInterfaces(classArray47);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy52 = enhancer49.getNamingPolicy();
        java.lang.ClassLoader classLoader53 = enhancer49.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader55 = enhancer54.getClassLoader();
        enhancer49.setClassLoader(classLoader55);
        enhancer29.setClassLoader(classLoader55);
        org.mockito.cglib.proxy.Callback callback58 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray59 = new org.mockito.cglib.proxy.Callback[] { callback58 };
        enhancer29.setCallbacks(callbackArray59);
        enhancer25.setCallbacks(callbackArray59);
        enhancer13.setCallbacks(callbackArray59);
        enhancer1.setCallbacks(callbackArray59);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerCallbacks(class0, callbackArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy4);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(generatorStrategy6);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(generatorStrategy18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(namingPolicy52);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(callbackArray59);
    }

    @Test
    public void test08226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08226");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer4.setCallback(callback14);
        enhancer4.setUseFactory(true);
        boolean boolean18 = enhancer4.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter19 = null;
        enhancer4.setCallbackFilter(callbackFilter19);
        boolean boolean21 = enhancer4.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader23 = enhancer22.getClassLoader();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        java.lang.Class[] classArray40 = new java.lang.Class[] { wildcardClass25, wildcardClass27, wildcardClass30, wildcardClass33, wildcardClass36, wildcardClass38 };
        enhancer22.setInterfaces(classArray40);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer42.getNamingPolicy();
        enhancer22.setNamingPolicy(namingPolicy45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer47.getNamingPolicy();
        java.lang.ClassLoader classLoader51 = enhancer47.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader53 = enhancer52.getClassLoader();
        enhancer47.setClassLoader(classLoader53);
        java.lang.Class<?> wildcardClass55 = classLoader53.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        enhancer22.setSuperclass((java.lang.Class) wildcardClass55);
        enhancer22.setUseCache(true);
        enhancer22.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        enhancer62.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer62.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        enhancer66.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = enhancer66.getNamingPolicy();
        java.lang.ClassLoader classLoader70 = enhancer66.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader72 = enhancer71.getClassLoader();
        enhancer66.setClassLoader(classLoader72);
        boolean boolean74 = enhancer66.getUseCache();
        boolean boolean75 = namingPolicy65.equals((java.lang.Object) enhancer66);
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        enhancer76.setAttemptLoad(true);
        boolean boolean79 = enhancer76.getAttemptLoad();
        java.lang.ClassLoader classLoader80 = enhancer76.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy81 = enhancer76.getStrategy();
        enhancer66.setStrategy(generatorStrategy81);
        java.lang.ClassLoader classLoader83 = enhancer66.getClassLoader();
        java.lang.ClassLoader classLoader84 = enhancer66.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy85 = enhancer66.getNamingPolicy();
        enhancer22.setNamingPolicy(namingPolicy85);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter87 = null;
        enhancer22.setCallbackFilter(callbackFilter87);
        java.lang.Class<?> wildcardClass89 = enhancer22.getClass();
        // The following exception was thrown during execution in test generation
        try {
            enhancer4.setCallbackType((java.lang.Class) wildcardClass89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.cglib.proxy.Enhancer");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertNotNull(namingPolicy69);
        org.junit.Assert.assertNotNull(classLoader70);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(classLoader80);
        org.junit.Assert.assertNotNull(generatorStrategy81);
        org.junit.Assert.assertNotNull(classLoader83);
        org.junit.Assert.assertNotNull(classLoader84);
        org.junit.Assert.assertNotNull(namingPolicy85);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test08227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08227");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer4.setCallback(callback14);
        enhancer4.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.ClassLoader classLoader18 = enhancer4.getClassLoader();
        java.lang.ClassLoader classLoader19 = enhancer4.getClassLoader();
        boolean boolean20 = enhancer4.getUseCache();
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer4.getStrategy();
        enhancer4.setUseCache(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = enhancer4.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(generatorStrategy22);
    }

    @Test
    public void test08228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08228");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter10 = null;
        enhancer0.setCallbackFilter(callbackFilter10);
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer0.setCallback(callback16);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy20 = enhancer0.getStrategy();
        enhancer0.setInterceptDuringConstruction(false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(generatorStrategy20);
    }

    @Test
    public void test08229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08229");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        boolean boolean4 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray8 = new org.mockito.cglib.proxy.Callback[] { callback7 };
        enhancer0.setCallbacks(callbackArray8);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer11.getNamingPolicy();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader17 = enhancer16.getClassLoader();
        enhancer11.setClassLoader(classLoader17);
        java.lang.ClassLoader classLoader19 = enhancer11.getClassLoader();
        enhancer11.setAttemptLoad(true);
        boolean boolean22 = namingPolicy10.equals((java.lang.Object) true);
        java.lang.Object obj23 = null;
        boolean boolean24 = namingPolicy10.equals(obj23);
        java.lang.Class<?> wildcardClass25 = namingPolicy10.getClass();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(callbackArray8);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test08230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08230");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader5 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy6 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        boolean boolean8 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer16.getNamingPolicy();
        java.lang.ClassLoader classLoader20 = enhancer16.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader22 = enhancer21.getClassLoader();
        enhancer16.setClassLoader(classLoader22);
        boolean boolean24 = enhancer16.getUseCache();
        boolean boolean25 = namingPolicy15.equals((java.lang.Object) enhancer16);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setAttemptLoad(true);
        boolean boolean29 = enhancer26.getAttemptLoad();
        java.lang.ClassLoader classLoader30 = enhancer26.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy31 = enhancer26.getStrategy();
        enhancer16.setStrategy(generatorStrategy31);
        java.lang.ClassLoader classLoader33 = enhancer16.getClassLoader();
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer16.setCallback(callback34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer36.getNamingPolicy();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        enhancer16.setClassLoader(classLoader40);
        boolean boolean42 = enhancer16.getAttemptLoad();
        enhancer16.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = null;
        enhancer16.setNamingPolicy(namingPolicy45);
        org.mockito.cglib.core.Predicate predicate47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = namingPolicy9.getClassName("hi!", "hi!", (java.lang.Object) namingPolicy45, predicate47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(generatorStrategy6);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(generatorStrategy31);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test08231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08231");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        enhancer0.setAttemptLoad(true);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[] { wildcardClass11 };
        enhancer0.setInterfaces(classArray12);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = enhancer14.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer18.getNamingPolicy();
        java.lang.ClassLoader classLoader22 = enhancer18.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader24 = enhancer23.getClassLoader();
        enhancer18.setClassLoader(classLoader24);
        java.lang.Class<?> wildcardClass26 = enhancer18.getClass();
        enhancer14.setSuperclass((java.lang.Class) wildcardClass26);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        boolean boolean29 = enhancer0.getAttemptLoad();
        java.lang.Class<?> wildcardClass30 = enhancer0.getClass();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer31.getNamingPolicy();
        java.lang.ClassLoader classLoader35 = enhancer31.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader37 = enhancer36.getClassLoader();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Class[] classArray54 = new java.lang.Class[] { wildcardClass39, wildcardClass41, wildcardClass44, wildcardClass47, wildcardClass50, wildcardClass52 };
        enhancer36.setInterfaces(classArray54);
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        enhancer56.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = enhancer56.getNamingPolicy();
        java.lang.ClassLoader classLoader60 = enhancer56.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader62 = enhancer61.getClassLoader();
        enhancer56.setClassLoader(classLoader62);
        enhancer36.setClassLoader(classLoader62);
        org.mockito.cglib.proxy.Callback callback65 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray66 = new org.mockito.cglib.proxy.Callback[] { callback65 };
        enhancer36.setCallbacks(callbackArray66);
        enhancer31.setCallbacks(callbackArray66);
        enhancer31.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback71 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray72 = new org.mockito.cglib.proxy.Callback[] { callback71 };
        enhancer31.setCallbacks(callbackArray72);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerStaticCallbacks((java.lang.Class) wildcardClass30, callbackArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.proxy.Enhancer is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(namingPolicy17);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(namingPolicy59);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(callbackArray66);
        org.junit.Assert.assertNotNull(callbackArray72);
    }

    @Test
    public void test08232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08232");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader21 = null;
        enhancer0.setClassLoader(classLoader21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer23.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer27.getNamingPolicy();
        java.lang.ClassLoader classLoader31 = enhancer27.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader33 = enhancer32.getClassLoader();
        enhancer27.setClassLoader(classLoader33);
        boolean boolean35 = enhancer27.getUseCache();
        boolean boolean36 = namingPolicy26.equals((java.lang.Object) enhancer27);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer27.setCallback(callback37);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer27.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter40 = null;
        enhancer27.setCallbackFilter(callbackFilter40);
        enhancer27.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setAttemptLoad(true);
        boolean boolean47 = enhancer44.getAttemptLoad();
        java.lang.ClassLoader classLoader48 = enhancer44.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy49 = enhancer44.getStrategy();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        enhancer44.setSuperclass((java.lang.Class) wildcardClass51);
        java.lang.ClassLoader classLoader53 = enhancer44.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter54 = null;
        enhancer44.setCallbackFilter(callbackFilter54);
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        enhancer56.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = enhancer56.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader61 = enhancer60.getClassLoader();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass76);
        java.lang.Class[] classArray78 = new java.lang.Class[] { wildcardClass63, wildcardClass65, wildcardClass68, wildcardClass71, wildcardClass74, wildcardClass76 };
        enhancer60.setInterfaces(classArray78);
        org.mockito.cglib.proxy.Enhancer enhancer80 = new org.mockito.cglib.proxy.Enhancer();
        enhancer80.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy83 = enhancer80.getNamingPolicy();
        java.lang.ClassLoader classLoader84 = enhancer80.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer85 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader86 = enhancer85.getClassLoader();
        enhancer80.setClassLoader(classLoader86);
        enhancer60.setClassLoader(classLoader86);
        org.mockito.cglib.proxy.Callback callback89 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray90 = new org.mockito.cglib.proxy.Callback[] { callback89 };
        enhancer60.setCallbacks(callbackArray90);
        enhancer56.setCallbacks(callbackArray90);
        enhancer44.setCallbacks(callbackArray90);
        enhancer27.setCallbacks(callbackArray90);
        enhancer0.setCallbacks(callbackArray90);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(generatorStrategy49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(namingPolicy59);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(namingPolicy83);
        org.junit.Assert.assertNotNull(classLoader84);
        org.junit.Assert.assertNotNull(classLoader86);
        org.junit.Assert.assertNotNull(callbackArray90);
    }

    @Test
    public void test08233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08233");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        java.lang.Class<?> wildcardClass10 = namingPolicy9.getClass();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer11.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = enhancer15.getNamingPolicy();
        java.lang.ClassLoader classLoader19 = enhancer15.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader21 = enhancer20.getClassLoader();
        enhancer15.setClassLoader(classLoader21);
        boolean boolean23 = enhancer15.getUseCache();
        boolean boolean24 = namingPolicy14.equals((java.lang.Object) enhancer15);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        boolean boolean28 = enhancer25.getAttemptLoad();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = enhancer25.getStrategy();
        enhancer15.setStrategy(generatorStrategy30);
        java.lang.ClassLoader classLoader32 = enhancer15.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer15.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader35 = enhancer34.getClassLoader();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Class[] classArray52 = new java.lang.Class[] { wildcardClass37, wildcardClass39, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass50 };
        enhancer34.setInterfaces(classArray52);
        enhancer15.setInterfaces(classArray52);
        org.mockito.cglib.proxy.Callback callback55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass10, classArray52, callback55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(namingPolicy18);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(generatorStrategy30);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(classArray52);
    }

    @Test
    public void test08234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08234");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass21);
        boolean boolean23 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        boolean boolean36 = enhancer28.getUseCache();
        boolean boolean37 = namingPolicy27.equals((java.lang.Object) enhancer28);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setAttemptLoad(true);
        boolean boolean41 = enhancer38.getAttemptLoad();
        java.lang.ClassLoader classLoader42 = enhancer38.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy43 = enhancer38.getStrategy();
        enhancer28.setStrategy(generatorStrategy43);
        java.lang.ClassLoader classLoader45 = enhancer28.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer28.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy46);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer0.getStrategy();
        enhancer0.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer0.getNamingPolicy();
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader56 = enhancer55.getClassLoader();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass71);
        java.lang.Class[] classArray73 = new java.lang.Class[] { wildcardClass58, wildcardClass60, wildcardClass63, wildcardClass66, wildcardClass69, wildcardClass71 };
        enhancer55.setInterfaces(classArray73);
        org.mockito.cglib.proxy.Enhancer enhancer75 = new org.mockito.cglib.proxy.Enhancer();
        enhancer75.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy78 = enhancer75.getNamingPolicy();
        java.lang.ClassLoader classLoader79 = enhancer75.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer80 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader81 = enhancer80.getClassLoader();
        enhancer75.setClassLoader(classLoader81);
        enhancer55.setClassLoader(classLoader81);
        java.lang.ClassLoader classLoader84 = enhancer55.getClassLoader();
        java.lang.ClassLoader classLoader85 = null;
        enhancer55.setClassLoader(classLoader85);
        org.mockito.cglib.proxy.Callback callback87 = null;
        enhancer55.setCallback(callback87);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray89 = generatorStrategy54.generate((org.mockito.cglib.core.ClassGenerator) enhancer55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(generatorStrategy43);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertNotNull(namingPolicy78);
        org.junit.Assert.assertNotNull(classLoader79);
        org.junit.Assert.assertNotNull(classLoader81);
        org.junit.Assert.assertNotNull(classLoader84);
    }

    @Test
    public void test08235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08235");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        boolean boolean7 = generatorStrategy5.equals((java.lang.Object) "hi!");
        boolean boolean9 = generatorStrategy5.equals((java.lang.Object) false);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer10.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader15 = enhancer14.getClassLoader();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        java.lang.Class[] classArray32 = new java.lang.Class[] { wildcardClass17, wildcardClass19, wildcardClass22, wildcardClass25, wildcardClass28, wildcardClass30 };
        enhancer14.setInterfaces(classArray32);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer34.getNamingPolicy();
        java.lang.ClassLoader classLoader38 = enhancer34.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader40 = enhancer39.getClassLoader();
        enhancer34.setClassLoader(classLoader40);
        enhancer14.setClassLoader(classLoader40);
        org.mockito.cglib.proxy.Callback callback43 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray44 = new org.mockito.cglib.proxy.Callback[] { callback43 };
        enhancer14.setCallbacks(callbackArray44);
        enhancer10.setCallbacks(callbackArray44);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader48 = enhancer47.getClassLoader();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Class[] classArray65 = new java.lang.Class[] { wildcardClass50, wildcardClass52, wildcardClass55, wildcardClass58, wildcardClass61, wildcardClass63 };
        enhancer47.setInterfaces(classArray65);
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        enhancer67.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy70 = enhancer67.getNamingPolicy();
        enhancer47.setNamingPolicy(namingPolicy70);
        enhancer10.setNamingPolicy(namingPolicy70);
        enhancer10.setAttemptLoad(true);
        boolean boolean75 = enhancer10.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback76 = null;
        enhancer10.setCallback(callback76);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray78 = generatorStrategy5.generate((org.mockito.cglib.core.ClassGenerator) enhancer10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(namingPolicy13);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(callbackArray44);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(classArray65);
        org.junit.Assert.assertNotNull(namingPolicy70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test08236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08236");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setInterceptDuringConstruction(true);
        boolean boolean13 = enhancer0.getAttemptLoad();
        boolean boolean14 = enhancer0.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy15 = enhancer0.getStrategy();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(generatorStrategy15);
    }

    @Test
    public void test08237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08237");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setAttemptLoad(true);
        enhancer8.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer8.setInterceptDuringConstruction(true);
        enhancer8.setUseCache(true);
        boolean boolean17 = enhancer8.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader19 = enhancer18.getClassLoader();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Class[] classArray36 = new java.lang.Class[] { wildcardClass21, wildcardClass23, wildcardClass26, wildcardClass29, wildcardClass32, wildcardClass34 };
        enhancer18.setInterfaces(classArray36);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy41 = enhancer38.getNamingPolicy();
        java.lang.ClassLoader classLoader42 = enhancer38.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader44 = enhancer43.getClassLoader();
        enhancer38.setClassLoader(classLoader44);
        enhancer18.setClassLoader(classLoader44);
        java.lang.ClassLoader classLoader47 = enhancer18.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader49 = enhancer48.getClassLoader();
        enhancer48.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy52 = enhancer48.getNamingPolicy();
        enhancer18.setNamingPolicy(namingPolicy52);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer18.getStrategy();
        enhancer8.setStrategy(generatorStrategy54);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy56 = enhancer8.getStrategy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy57 = enhancer8.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy58 = enhancer8.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy59 = enhancer8.getStrategy();
        enhancer0.setStrategy(generatorStrategy59);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertNotNull(namingPolicy41);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(namingPolicy52);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(generatorStrategy56);
        org.junit.Assert.assertNotNull(generatorStrategy57);
        org.junit.Assert.assertNotNull(namingPolicy58);
        org.junit.Assert.assertNotNull(generatorStrategy59);
    }

    @Test
    public void test08238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08238");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader30 = null;
        enhancer0.setClassLoader(classLoader30);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean34 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter37 = null;
        enhancer0.setCallbackFilter(callbackFilter37);
        boolean boolean39 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader40 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer0.setCallback(callback41);
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(classLoader40);
    }

    @Test
    public void test08239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08239");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = null;
        enhancer0.setNamingPolicy(namingPolicy9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        enhancer0.setInterceptDuringConstruction(true);
        boolean boolean14 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = enhancer15.getNamingPolicy();
        java.lang.ClassLoader classLoader19 = enhancer15.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader21 = enhancer20.getClassLoader();
        enhancer15.setClassLoader(classLoader21);
        java.lang.ClassLoader classLoader23 = enhancer15.getClassLoader();
        enhancer15.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer15.setCallbackFilter(callbackFilter26);
        java.lang.ClassLoader classLoader28 = enhancer15.getClassLoader();
        java.lang.Class[] classArray29 = null;
        enhancer15.setInterfaces(classArray29);
        boolean boolean31 = enhancer15.getUseCache();
        enhancer15.setUseFactory(false);
        enhancer15.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader36 = enhancer15.getClassLoader();
        enhancer0.setClassLoader(classLoader36);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(namingPolicy18);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(classLoader36);
    }

    @Test
    public void test08240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08240");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        boolean boolean9 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader11 = enhancer10.getClassLoader();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Class[] classArray28 = new java.lang.Class[] { wildcardClass13, wildcardClass15, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass26 };
        enhancer10.setInterfaces(classArray28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer30.getNamingPolicy();
        java.lang.ClassLoader classLoader34 = enhancer30.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        enhancer30.setClassLoader(classLoader36);
        enhancer10.setClassLoader(classLoader36);
        java.lang.ClassLoader classLoader39 = enhancer10.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer40.getNamingPolicy();
        enhancer10.setNamingPolicy(namingPolicy44);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy46 = enhancer10.getStrategy();
        enhancer0.setStrategy(generatorStrategy46);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer0.getStrategy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy49 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy51 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        enhancer52.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer52.setInterceptDuringConstruction(true);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        enhancer52.setSuperclass((java.lang.Class) wildcardClass60);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter62 = null;
        enhancer52.setCallbackFilter(callbackFilter62);
        enhancer52.setAttemptLoad(true);
        boolean boolean66 = enhancer52.getUseCache();
        enhancer52.setUseFactory(true);
        enhancer52.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy71 = enhancer52.getStrategy();
        enhancer0.setStrategy(generatorStrategy71);
        org.mockito.asm.ClassVisitor classVisitor73 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(generatorStrategy46);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertNotNull(generatorStrategy49);
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertNotNull(generatorStrategy51);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(generatorStrategy71);
    }

    @Test
    public void test08241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08241");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer0.setCallback(callback40);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setUseFactory(false);
        enhancer0.setUseFactory(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class50 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
    }

    @Test
    public void test08242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08242");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader9 = enhancer8.getClassLoader();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass11, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass24 };
        enhancer8.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer8.setClassLoader(classLoader34);
        java.lang.ClassLoader classLoader37 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader37);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        java.lang.ClassLoader classLoader41 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter43 = null;
        enhancer0.setCallbackFilter(callbackFilter43);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader46 = enhancer45.getClassLoader();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.Class[] classArray63 = new java.lang.Class[] { wildcardClass48, wildcardClass50, wildcardClass53, wildcardClass56, wildcardClass59, wildcardClass61 };
        enhancer45.setInterfaces(classArray63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        enhancer45.setSuperclass((java.lang.Class) wildcardClass66);
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer45.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy68);
        org.mockito.cglib.proxy.Enhancer enhancer72 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean73 = enhancer72.getUseCache();
        java.lang.ClassLoader classLoader74 = enhancer72.getClassLoader();
        org.mockito.cglib.core.Predicate predicate75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = namingPolicy68.getClassName("hi!", "hi!", (java.lang.Object) enhancer72, predicate75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(classArray63);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(namingPolicy68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(classLoader74);
    }

    @Test
    public void test08243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08243");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer0.setCallback(callback13);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader16 = enhancer15.getClassLoader();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Class[] classArray33 = new java.lang.Class[] { wildcardClass18, wildcardClass20, wildcardClass23, wildcardClass26, wildcardClass29, wildcardClass31 };
        enhancer15.setInterfaces(classArray33);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer35.getNamingPolicy();
        java.lang.ClassLoader classLoader39 = enhancer35.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        enhancer35.setClassLoader(classLoader41);
        enhancer15.setClassLoader(classLoader41);
        enhancer0.setClassLoader(classLoader41);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy46 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer47.getNamingPolicy();
        java.lang.ClassLoader classLoader51 = enhancer47.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader53 = enhancer52.getClassLoader();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        java.lang.Class[] classArray70 = new java.lang.Class[] { wildcardClass55, wildcardClass57, wildcardClass60, wildcardClass63, wildcardClass66, wildcardClass68 };
        enhancer52.setInterfaces(classArray70);
        org.mockito.cglib.proxy.Enhancer enhancer72 = new org.mockito.cglib.proxy.Enhancer();
        enhancer72.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy75 = enhancer72.getNamingPolicy();
        java.lang.ClassLoader classLoader76 = enhancer72.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer77 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader78 = enhancer77.getClassLoader();
        enhancer72.setClassLoader(classLoader78);
        enhancer52.setClassLoader(classLoader78);
        org.mockito.cglib.proxy.Callback callback81 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray82 = new org.mockito.cglib.proxy.Callback[] { callback81 };
        enhancer52.setCallbacks(callbackArray82);
        enhancer47.setCallbacks(callbackArray82);
        enhancer47.setAttemptLoad(true);
        enhancer47.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader89 = enhancer47.getClassLoader();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy92 = enhancer47.getStrategy();
        boolean boolean93 = enhancer47.getUseCache();
        org.mockito.cglib.core.NamingPolicy namingPolicy94 = enhancer47.getNamingPolicy();
        boolean boolean95 = enhancer47.getUseCache();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray96 = generatorStrategy46.generate((org.mockito.cglib.core.ClassGenerator) enhancer47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertNotNull(generatorStrategy46);
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(namingPolicy75);
        org.junit.Assert.assertNotNull(classLoader76);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertNotNull(callbackArray82);
        org.junit.Assert.assertNotNull(classLoader89);
        org.junit.Assert.assertNotNull(generatorStrategy92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(namingPolicy94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test08244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08244");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        boolean boolean8 = enhancer0.getUseCache();
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer11.getNamingPolicy();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        java.lang.ClassLoader classLoader16 = enhancer11.getClassLoader();
        enhancer0.setClassLoader(classLoader16);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer18.getNamingPolicy();
        java.lang.ClassLoader classLoader22 = enhancer18.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader24 = enhancer23.getClassLoader();
        enhancer18.setClassLoader(classLoader24);
        enhancer18.setAttemptLoad(true);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class[] classArray30 = new java.lang.Class[] { wildcardClass29 };
        enhancer18.setInterfaces(classArray30);
        enhancer0.setInterfaces(classArray30);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy34 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Class[] classArray53 = new java.lang.Class[] { wildcardClass38, wildcardClass40, wildcardClass43, wildcardClass46, wildcardClass49, wildcardClass51 };
        enhancer35.setInterfaces(classArray53);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy58 = enhancer55.getNamingPolicy();
        enhancer35.setNamingPolicy(namingPolicy58);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter60 = null;
        enhancer35.setCallbackFilter(callbackFilter60);
        enhancer35.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader65 = enhancer64.getClassLoader();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        boolean boolean76 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass75);
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        boolean boolean81 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass80);
        java.lang.Class[] classArray82 = new java.lang.Class[] { wildcardClass67, wildcardClass69, wildcardClass72, wildcardClass75, wildcardClass78, wildcardClass80 };
        enhancer64.setInterfaces(classArray82);
        org.mockito.cglib.proxy.Callback[] callbackArray84 = null;
        enhancer64.setCallbacks(callbackArray84);
        java.lang.Class<?> wildcardClass86 = enhancer64.getClass();
        enhancer35.setSuperclass((java.lang.Class) wildcardClass86);
        boolean boolean88 = generatorStrategy34.equals((java.lang.Object) enhancer35);
        java.lang.ClassLoader classLoader89 = enhancer35.getClassLoader();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(generatorStrategy34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(namingPolicy58);
        org.junit.Assert.assertNotNull(classLoader65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(classLoader89);
    }

    @Test
    public void test08245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08245");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        boolean boolean7 = enhancer0.getUseCache();
        boolean boolean8 = enhancer0.getUseCache();
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        java.lang.ClassLoader classLoader14 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader16 = enhancer15.getClassLoader();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Class[] classArray33 = new java.lang.Class[] { wildcardClass18, wildcardClass20, wildcardClass23, wildcardClass26, wildcardClass29, wildcardClass31 };
        enhancer15.setInterfaces(classArray33);
        enhancer15.setUseCache(false);
        boolean boolean37 = enhancer15.getAttemptLoad();
        java.lang.Class<?> wildcardClass38 = enhancer15.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass38);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setAttemptLoad(true);
        boolean boolean46 = enhancer43.getAttemptLoad();
        java.lang.ClassLoader classLoader47 = enhancer43.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer43.getStrategy();
        enhancer43.setAttemptLoad(false);
        enhancer43.setInterceptDuringConstruction(true);
        boolean boolean53 = generatorStrategy42.equals((java.lang.Object) enhancer43);
        enhancer43.setUseFactory(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter56 = null;
        enhancer43.setCallbackFilter(callbackFilter56);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test08246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08246");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter42 = null;
        enhancer0.setCallbackFilter(callbackFilter42);
        enhancer0.setUseCache(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class46 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
    }

    @Test
    public void test08247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08247");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader42 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(generatorStrategy45);
    }

    @Test
    public void test08248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08248");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer4.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer4.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter17 = null;
        enhancer4.setCallbackFilter(callbackFilter17);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer4.getStrategy();
        boolean boolean20 = enhancer4.getAttemptLoad();
        java.lang.Class<?> wildcardClass21 = enhancer4.getClass();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test08249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08249");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer4.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader24 = enhancer23.getClassLoader();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Class[] classArray41 = new java.lang.Class[] { wildcardClass26, wildcardClass28, wildcardClass31, wildcardClass34, wildcardClass37, wildcardClass39 };
        enhancer23.setInterfaces(classArray41);
        enhancer4.setInterfaces(classArray41);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Class[] classArray62 = new java.lang.Class[] { wildcardClass47, wildcardClass49, wildcardClass52, wildcardClass55, wildcardClass58, wildcardClass60 };
        enhancer44.setInterfaces(classArray62);
        enhancer4.setInterfaces(classArray62);
        enhancer4.setAttemptLoad(false);
        enhancer4.setAttemptLoad(false);
        boolean boolean69 = enhancer4.getAttemptLoad();
        boolean boolean70 = enhancer4.getAttemptLoad();
        boolean boolean71 = enhancer4.getUseCache();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test08250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08250");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setAttemptLoad(true);
        boolean boolean9 = enhancer6.getAttemptLoad();
        java.lang.ClassLoader classLoader10 = enhancer6.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer6.getStrategy();
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        boolean boolean16 = enhancer13.getAttemptLoad();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer13.getStrategy();
        enhancer0.setStrategy(generatorStrategy18);
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseFactory(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        enhancer0.setUseFactory(false);
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseCache(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(generatorStrategy18);
    }

    @Test
    public void test08251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08251");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer0.setCallback(callback19);
        boolean boolean21 = enhancer0.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer0.getStrategy();
        java.lang.ClassLoader classLoader23 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy24 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean26 = enhancer25.getUseCache();
        java.lang.ClassLoader classLoader27 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        enhancer25.setClassLoader(classLoader32);
        java.lang.Class[] classArray34 = new java.lang.Class[] {};
        enhancer25.setInterfaces(classArray34);
        enhancer0.setInterfaces(classArray34);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(generatorStrategy24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classArray34);
    }

    @Test
    public void test08252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08252");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader5 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy6 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        boolean boolean8 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        enhancer0.setAttemptLoad(false);
        boolean boolean12 = enhancer0.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy13 = enhancer0.getStrategy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy14 = enhancer0.getStrategy();
        boolean boolean15 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(generatorStrategy6);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(generatorStrategy13);
        org.junit.Assert.assertNotNull(generatorStrategy14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test08253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08253");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader30 = null;
        enhancer0.setClassLoader(classLoader30);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean34 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter37 = null;
        enhancer0.setCallbackFilter(callbackFilter37);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        java.lang.ClassLoader classLoader44 = null;
        enhancer41.setClassLoader(classLoader44);
        enhancer41.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer48.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer52.getNamingPolicy();
        java.lang.ClassLoader classLoader56 = enhancer52.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader58 = enhancer57.getClassLoader();
        enhancer52.setClassLoader(classLoader58);
        boolean boolean60 = enhancer52.getUseCache();
        boolean boolean61 = namingPolicy51.equals((java.lang.Object) enhancer52);
        java.lang.Object obj62 = null;
        boolean boolean63 = namingPolicy51.equals(obj62);
        enhancer41.setNamingPolicy(namingPolicy51);
        enhancer0.setNamingPolicy(namingPolicy51);
        enhancer0.setInterceptDuringConstruction(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class68 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback types are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test08254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08254");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer7.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer11.getNamingPolicy();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader17 = enhancer16.getClassLoader();
        enhancer11.setClassLoader(classLoader17);
        boolean boolean19 = enhancer11.getUseCache();
        boolean boolean20 = namingPolicy10.equals((java.lang.Object) enhancer11);
        java.lang.Object obj21 = null;
        boolean boolean22 = namingPolicy10.equals(obj21);
        enhancer0.setNamingPolicy(namingPolicy10);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader25 = enhancer24.getClassLoader();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Class[] classArray42 = new java.lang.Class[] { wildcardClass27, wildcardClass29, wildcardClass32, wildcardClass35, wildcardClass38, wildcardClass40 };
        enhancer24.setInterfaces(classArray42);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer44.getNamingPolicy();
        java.lang.ClassLoader classLoader48 = enhancer44.getClassLoader();
        enhancer24.setClassLoader(classLoader48);
        enhancer24.setSerialVersionUID((java.lang.Long) 0L);
        boolean boolean52 = namingPolicy10.equals((java.lang.Object) enhancer24);
        enhancer24.setUseFactory(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy55 = enhancer24.getStrategy();
        java.lang.Class<?> wildcardClass56 = generatorStrategy55.getClass();
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(generatorStrategy55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test08255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08255");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer0.getNamingPolicy();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer0.getNamingPolicy();
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter27 = null;
        enhancer0.setCallbackFilter(callbackFilter27);
        enhancer0.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader33 = enhancer32.getClassLoader();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Class[] classArray50 = new java.lang.Class[] { wildcardClass35, wildcardClass37, wildcardClass40, wildcardClass43, wildcardClass46, wildcardClass48 };
        enhancer32.setInterfaces(classArray50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        enhancer32.setSuperclass((java.lang.Class) wildcardClass53);
        enhancer32.setUseFactory(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter57 = null;
        enhancer32.setCallbackFilter(callbackFilter57);
        enhancer32.setUseCache(true);
        boolean boolean61 = enhancer32.getAttemptLoad();
        java.lang.ClassLoader classLoader62 = enhancer32.getClassLoader();
        boolean boolean63 = enhancer32.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter64 = null;
        enhancer32.setCallbackFilter(callbackFilter64);
        enhancer32.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        enhancer68.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = enhancer68.getNamingPolicy();
        java.lang.ClassLoader classLoader72 = enhancer68.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy73 = enhancer68.getStrategy();
        enhancer68.setAttemptLoad(false);
        java.lang.ClassLoader classLoader76 = enhancer68.getClassLoader();
        enhancer32.setClassLoader(classLoader76);
        enhancer0.setClassLoader(classLoader76);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(namingPolicy71);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertNotNull(generatorStrategy73);
        org.junit.Assert.assertNotNull(classLoader76);
    }

    @Test
    public void test08256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08256");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer0.getNamingPolicy();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertNotNull(namingPolicy38);
    }

    @Test
    public void test08257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08257");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = null;
        enhancer0.setNamingPolicy(namingPolicy9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        java.lang.ClassLoader classLoader12 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader14 = enhancer13.getClassLoader();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Class[] classArray31 = new java.lang.Class[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass29 };
        enhancer13.setInterfaces(classArray31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        enhancer13.setClassLoader(classLoader39);
        java.lang.ClassLoader classLoader42 = enhancer13.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader44 = enhancer43.getClassLoader();
        enhancer43.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer43.getNamingPolicy();
        enhancer13.setNamingPolicy(namingPolicy47);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy49 = enhancer13.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        enhancer50.setAttemptLoad(true);
        boolean boolean53 = enhancer50.getAttemptLoad();
        java.lang.ClassLoader classLoader54 = enhancer50.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy55 = enhancer50.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        enhancer56.setAttemptLoad(true);
        boolean boolean59 = enhancer56.getAttemptLoad();
        java.lang.ClassLoader classLoader60 = enhancer56.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy61 = enhancer56.getStrategy();
        enhancer50.setStrategy(generatorStrategy61);
        java.lang.ClassLoader classLoader63 = enhancer50.getClassLoader();
        boolean boolean64 = generatorStrategy49.equals((java.lang.Object) classLoader63);
        enhancer0.setStrategy(generatorStrategy49);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter68 = null;
        enhancer0.setCallbackFilter(callbackFilter68);
        org.mockito.cglib.proxy.Callback callback70 = null;
        enhancer0.setCallback(callback70);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.asm.ClassVisitor classVisitor76 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertNotNull(generatorStrategy49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(generatorStrategy55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(generatorStrategy61);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test08258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08258");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer25.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy29);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader32 = enhancer31.getClassLoader();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass47);
        java.lang.Class[] classArray49 = new java.lang.Class[] { wildcardClass34, wildcardClass36, wildcardClass39, wildcardClass42, wildcardClass45, wildcardClass47 };
        enhancer31.setInterfaces(classArray49);
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = enhancer51.getNamingPolicy();
        java.lang.ClassLoader classLoader55 = enhancer51.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader57 = enhancer56.getClassLoader();
        enhancer51.setClassLoader(classLoader57);
        enhancer31.setClassLoader(classLoader57);
        java.lang.ClassLoader classLoader60 = enhancer31.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader62 = enhancer61.getClassLoader();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer61.getNamingPolicy();
        enhancer31.setNamingPolicy(namingPolicy65);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy67 = enhancer31.getStrategy();
        enhancer0.setStrategy(generatorStrategy67);
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = enhancer0.getNamingPolicy();
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter72 = null;
        enhancer0.setCallbackFilter(callbackFilter72);
        enhancer0.setUseFactory(true);
        boolean boolean76 = enhancer0.getUseCache();
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer0.getNamingPolicy();
        java.lang.Class<?> wildcardClass78 = namingPolicy77.getClass();
        boolean boolean79 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass78);
        org.mockito.cglib.proxy.Callback callback80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj81 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass78, callback80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(classArray49);
        org.junit.Assert.assertNotNull(namingPolicy54);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertNotNull(generatorStrategy67);
        org.junit.Assert.assertNotNull(namingPolicy69);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(namingPolicy77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test08259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08259");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer4.setCallback(callback22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        enhancer4.setClassLoader(classLoader28);
        enhancer4.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy32 = enhancer4.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy38 = enhancer33.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer39.getNamingPolicy();
        java.lang.ClassLoader classLoader43 = enhancer39.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Class[] classArray62 = new java.lang.Class[] { wildcardClass47, wildcardClass49, wildcardClass52, wildcardClass55, wildcardClass58, wildcardClass60 };
        enhancer44.setInterfaces(classArray62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        java.lang.ClassLoader classLoader68 = enhancer64.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader70 = enhancer69.getClassLoader();
        enhancer64.setClassLoader(classLoader70);
        enhancer44.setClassLoader(classLoader70);
        org.mockito.cglib.proxy.Callback callback73 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray74 = new org.mockito.cglib.proxy.Callback[] { callback73 };
        enhancer44.setCallbacks(callbackArray74);
        enhancer39.setCallbacks(callbackArray74);
        enhancer39.setUseFactory(false);
        enhancer39.setAttemptLoad(false);
        boolean boolean81 = generatorStrategy38.equals((java.lang.Object) enhancer39);
        org.mockito.cglib.proxy.Enhancer enhancer82 = new org.mockito.cglib.proxy.Enhancer();
        enhancer82.setAttemptLoad(true);
        boolean boolean85 = enhancer82.getAttemptLoad();
        java.lang.ClassLoader classLoader86 = enhancer82.getClassLoader();
        enhancer82.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback89 = null;
        enhancer82.setCallback(callback89);
        enhancer82.setUseCache(false);
        boolean boolean93 = generatorStrategy38.equals((java.lang.Object) enhancer82);
        enhancer4.setStrategy(generatorStrategy38);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class95 = enhancer4.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(generatorStrategy32);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(generatorStrategy38);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(classLoader70);
        org.junit.Assert.assertNotNull(callbackArray74);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(classLoader86);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test08260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08260");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter11 = null;
        enhancer0.setCallbackFilter(callbackFilter11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        enhancer13.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer13.setInterceptDuringConstruction(true);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        enhancer13.setSuperclass((java.lang.Class) wildcardClass21);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass21);
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test08261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08261");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader13 = enhancer12.getClassLoader();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.Class[] classArray30 = new java.lang.Class[] { wildcardClass15, wildcardClass17, wildcardClass20, wildcardClass23, wildcardClass26, wildcardClass28 };
        enhancer12.setInterfaces(classArray30);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer32.getNamingPolicy();
        java.lang.ClassLoader classLoader36 = enhancer32.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        enhancer32.setClassLoader(classLoader38);
        enhancer12.setClassLoader(classLoader38);
        java.lang.ClassLoader classLoader41 = enhancer12.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader43 = enhancer42.getClassLoader();
        enhancer42.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer42.getNamingPolicy();
        enhancer12.setNamingPolicy(namingPolicy46);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer12.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setAttemptLoad(true);
        java.lang.ClassLoader classLoader52 = null;
        enhancer49.setClassLoader(classLoader52);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setAttemptLoad(true);
        boolean boolean57 = enhancer54.getAttemptLoad();
        java.lang.ClassLoader classLoader58 = enhancer54.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy59 = enhancer54.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        boolean boolean63 = enhancer60.getAttemptLoad();
        java.lang.ClassLoader classLoader64 = enhancer60.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy65 = enhancer60.getStrategy();
        enhancer54.setStrategy(generatorStrategy65);
        enhancer49.setStrategy(generatorStrategy65);
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        enhancer68.setAttemptLoad(true);
        enhancer68.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer68.setInterceptDuringConstruction(true);
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass76);
        enhancer68.setSuperclass((java.lang.Class) wildcardClass76);
        boolean boolean79 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass76);
        boolean boolean80 = generatorStrategy65.equals((java.lang.Object) wildcardClass76);
        boolean boolean81 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass76);
        java.lang.Class[] classArray82 = new java.lang.Class[] { wildcardClass76 };
        enhancer12.setInterfaces(classArray82);
        enhancer0.setInterfaces(classArray82);
        org.mockito.cglib.core.NamingPolicy namingPolicy85 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader86 = enhancer0.getClassLoader();
        org.mockito.asm.ClassVisitor classVisitor87 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(generatorStrategy59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(generatorStrategy65);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(namingPolicy85);
        org.junit.Assert.assertNotNull(classLoader86);
    }

    @Test
    public void test08262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08262");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setAttemptLoad(true);
        boolean boolean12 = enhancer9.getAttemptLoad();
        java.lang.ClassLoader classLoader13 = enhancer9.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy14 = enhancer9.getStrategy();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        enhancer9.setSuperclass((java.lang.Class) wildcardClass16);
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = null;
        enhancer9.setNamingPolicy(namingPolicy18);
        enhancer9.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader23 = enhancer22.getClassLoader();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        java.lang.Class[] classArray40 = new java.lang.Class[] { wildcardClass25, wildcardClass27, wildcardClass30, wildcardClass33, wildcardClass36, wildcardClass38 };
        enhancer22.setInterfaces(classArray40);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer42.getNamingPolicy();
        java.lang.ClassLoader classLoader46 = enhancer42.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader48 = enhancer47.getClassLoader();
        enhancer42.setClassLoader(classLoader48);
        enhancer22.setClassLoader(classLoader48);
        enhancer22.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        enhancer53.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = enhancer53.getNamingPolicy();
        boolean boolean57 = enhancer53.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter58 = null;
        enhancer53.setCallbackFilter(callbackFilter58);
        org.mockito.cglib.proxy.Callback callback60 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray61 = new org.mockito.cglib.proxy.Callback[] { callback60 };
        enhancer53.setCallbacks(callbackArray61);
        enhancer22.setCallbacks(callbackArray61);
        enhancer9.setCallbacks(callbackArray61);
        java.lang.Class<?> wildcardClass65 = callbackArray61.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        boolean boolean68 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass65);
        org.mockito.cglib.core.NamingPolicy namingPolicy70 = enhancer0.getNamingPolicy();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertNotNull(generatorStrategy14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(namingPolicy56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(callbackArray61);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(namingPolicy70);
    }

    @Test
    public void test08263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08263");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer8.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        java.lang.ClassLoader classLoader16 = enhancer12.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader18 = enhancer17.getClassLoader();
        enhancer12.setClassLoader(classLoader18);
        java.lang.Class<?> wildcardClass20 = enhancer12.getClass();
        enhancer8.setSuperclass((java.lang.Class) wildcardClass20);
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass20);
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer0.setCallbackFilter(callbackFilter25);
        java.lang.Class class27 = null;
        enhancer0.setSuperclass(class27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class29 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback types are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(namingPolicy24);
    }

    @Test
    public void test08264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08264");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader30 = null;
        enhancer0.setClassLoader(classLoader30);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer0.setCallback(callback34);
        org.mockito.asm.ClassVisitor classVisitor36 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader29);
    }

    @Test
    public void test08265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08265");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setAttemptLoad(true);
        boolean boolean68 = enhancer65.getAttemptLoad();
        java.lang.ClassLoader classLoader69 = enhancer65.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy70 = enhancer65.getStrategy();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        enhancer65.setSuperclass((java.lang.Class) wildcardClass72);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass72);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy75 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        enhancer76.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy79 = enhancer76.getNamingPolicy();
        java.lang.ClassLoader classLoader80 = enhancer76.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer81 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader82 = enhancer81.getClassLoader();
        enhancer76.setClassLoader(classLoader82);
        java.lang.Class<?> wildcardClass84 = classLoader82.getClass();
        boolean boolean85 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass84);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass84);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(generatorStrategy70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(generatorStrategy75);
        org.junit.Assert.assertNotNull(namingPolicy79);
        org.junit.Assert.assertNotNull(classLoader80);
        org.junit.Assert.assertNotNull(classLoader82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test08266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08266");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader14 = enhancer13.getClassLoader();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Class[] classArray31 = new java.lang.Class[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass29 };
        enhancer13.setInterfaces(classArray31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        enhancer13.setClassLoader(classLoader39);
        boolean boolean42 = enhancer13.getUseCache();
        boolean boolean43 = generatorStrategy12.equals((java.lang.Object) enhancer13);
        java.lang.ClassLoader classLoader44 = null;
        enhancer13.setClassLoader(classLoader44);
        java.lang.ClassLoader classLoader46 = enhancer13.getClassLoader();
        org.mockito.cglib.proxy.Callback callback47 = null;
        enhancer13.setCallback(callback47);
        boolean boolean49 = enhancer13.getAttemptLoad();
        enhancer13.setSerialVersionUID((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test08267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08267");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader9 = enhancer8.getClassLoader();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass11, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass24 };
        enhancer8.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer8.setClassLoader(classLoader34);
        java.lang.ClassLoader classLoader37 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader37);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        java.lang.ClassLoader classLoader41 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(true);
        enhancer0.setUseFactory(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader41);
    }

    @Test
    public void test08268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08268");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean31 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer0.setCallback(callback34);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass38 = enhancer0.getClass();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test08269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08269");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader2 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer3.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer7.getNamingPolicy();
        java.lang.ClassLoader classLoader11 = enhancer7.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader13 = enhancer12.getClassLoader();
        enhancer7.setClassLoader(classLoader13);
        boolean boolean15 = enhancer7.getUseCache();
        boolean boolean16 = namingPolicy6.equals((java.lang.Object) enhancer7);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setAttemptLoad(true);
        boolean boolean20 = enhancer17.getAttemptLoad();
        java.lang.ClassLoader classLoader21 = enhancer17.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer17.getStrategy();
        enhancer7.setStrategy(generatorStrategy22);
        java.lang.ClassLoader classLoader24 = enhancer7.getClassLoader();
        enhancer0.setClassLoader(classLoader24);
        enhancer0.setAttemptLoad(false);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = null;
        enhancer0.setStrategy(generatorStrategy30);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy32 = enhancer0.getStrategy();
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter35 = null;
        enhancer0.setCallbackFilter(callbackFilter35);
        boolean boolean37 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter38 = null;
        enhancer0.setCallbackFilter(callbackFilter38);
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(generatorStrategy32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test08270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08270");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader21 = enhancer20.getClassLoader();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Class[] classArray38 = new java.lang.Class[] { wildcardClass23, wildcardClass25, wildcardClass28, wildcardClass31, wildcardClass34, wildcardClass36 };
        enhancer20.setInterfaces(classArray38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer40.getNamingPolicy();
        java.lang.ClassLoader classLoader44 = enhancer40.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader46 = enhancer45.getClassLoader();
        enhancer40.setClassLoader(classLoader46);
        enhancer20.setClassLoader(classLoader46);
        org.mockito.cglib.proxy.Callback callback49 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray50 = new org.mockito.cglib.proxy.Callback[] { callback49 };
        enhancer20.setCallbacks(callbackArray50);
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        boolean boolean55 = enhancer52.getAttemptLoad();
        java.lang.ClassLoader classLoader56 = enhancer52.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy57 = enhancer52.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        enhancer58.setAttemptLoad(true);
        boolean boolean61 = enhancer58.getAttemptLoad();
        java.lang.ClassLoader classLoader62 = enhancer58.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer58.getStrategy();
        enhancer52.setStrategy(generatorStrategy63);
        enhancer20.setStrategy(generatorStrategy63);
        enhancer0.setStrategy(generatorStrategy63);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer0.getNamingPolicy();
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.asm.ClassVisitor classVisitor72 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(callbackArray50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(generatorStrategy57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(generatorStrategy63);
        org.junit.Assert.assertNotNull(namingPolicy67);
    }

    @Test
    public void test08271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08271");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter10 = null;
        enhancer0.setCallbackFilter(callbackFilter10);
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer0.setCallback(callback16);
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Class<?> wildcardClass20 = enhancer0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test08272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08272");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        boolean boolean7 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        enhancer0.setAttemptLoad(true);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test08273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08273");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        boolean boolean28 = enhancer20.getUseCache();
        boolean boolean29 = namingPolicy19.equals((java.lang.Object) enhancer20);
        enhancer20.setUseCache(true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test08274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08274");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer0.setCallback(callback19);
        boolean boolean21 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader23 = enhancer22.getClassLoader();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        java.lang.Class[] classArray40 = new java.lang.Class[] { wildcardClass25, wildcardClass27, wildcardClass30, wildcardClass33, wildcardClass36, wildcardClass38 };
        enhancer22.setInterfaces(classArray40);
        org.mockito.cglib.proxy.Callback[] callbackArray42 = null;
        enhancer22.setCallbacks(callbackArray42);
        enhancer22.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader47 = enhancer46.getClassLoader();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        java.lang.Class[] classArray64 = new java.lang.Class[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass57, wildcardClass60, wildcardClass62 };
        enhancer46.setInterfaces(classArray64);
        enhancer22.setInterfaces(classArray64);
        enhancer0.setInterfaces(classArray64);
        boolean boolean68 = enhancer0.getAttemptLoad();
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean72 = enhancer71.getUseCache();
        java.lang.ClassLoader classLoader73 = enhancer71.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        enhancer74.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer74.getNamingPolicy();
        java.lang.ClassLoader classLoader78 = enhancer74.getClassLoader();
        enhancer71.setClassLoader(classLoader78);
        org.mockito.cglib.proxy.Callback callback80 = null;
        enhancer71.setCallback(callback80);
        java.lang.ClassLoader classLoader82 = enhancer71.getClassLoader();
        java.lang.Class<?> wildcardClass83 = enhancer71.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass83);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(classArray64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertNotNull(namingPolicy77);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertNotNull(classLoader82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test08275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08275");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter4 = null;
        enhancer0.setCallbackFilter(callbackFilter4);
        enhancer0.setAttemptLoad(true);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        enhancer11.setSuperclass((java.lang.Class) wildcardClass18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        enhancer20.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer20.setInterceptDuringConstruction(true);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        enhancer20.setSuperclass((java.lang.Class) wildcardClass28);
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        enhancer11.setSuperclass((java.lang.Class) wildcardClass28);
        enhancer11.setUseFactory(true);
        boolean boolean35 = enhancer11.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy36 = enhancer11.getStrategy();
        enhancer0.setStrategy(generatorStrategy36);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer0.setCallback(callback38);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(generatorStrategy36);
    }

    @Test
    public void test08276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08276");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        java.lang.ClassLoader classLoader22 = enhancer4.getClassLoader();
        enhancer4.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        boolean boolean28 = enhancer25.getAttemptLoad();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = enhancer25.getStrategy();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        enhancer25.setSuperclass((java.lang.Class) wildcardClass32);
        java.lang.ClassLoader classLoader34 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter35 = null;
        enhancer25.setCallbackFilter(callbackFilter35);
        enhancer25.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy39 = enhancer25.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean41 = enhancer40.getUseCache();
        java.lang.ClassLoader classLoader42 = enhancer40.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer43.getNamingPolicy();
        java.lang.ClassLoader classLoader47 = enhancer43.getClassLoader();
        enhancer40.setClassLoader(classLoader47);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer40.setCallback(callback49);
        java.lang.ClassLoader classLoader51 = enhancer40.getClassLoader();
        java.lang.Class<?> wildcardClass52 = enhancer40.getClass();
        enhancer25.setSuperclass((java.lang.Class) wildcardClass52);
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        enhancer4.setSuperclass((java.lang.Class) wildcardClass52);
        org.mockito.cglib.proxy.Callback callback56 = null;
        enhancer4.setCallback(callback56);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(generatorStrategy30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(generatorStrategy39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test08277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08277");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass21);
        boolean boolean23 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        boolean boolean36 = enhancer28.getUseCache();
        boolean boolean37 = namingPolicy27.equals((java.lang.Object) enhancer28);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setAttemptLoad(true);
        boolean boolean41 = enhancer38.getAttemptLoad();
        java.lang.ClassLoader classLoader42 = enhancer38.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy43 = enhancer38.getStrategy();
        enhancer28.setStrategy(generatorStrategy43);
        java.lang.ClassLoader classLoader45 = enhancer28.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer28.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy46);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer0.getStrategy();
        boolean boolean49 = enhancer0.getAttemptLoad();
        boolean boolean50 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        boolean boolean55 = enhancer0.getUseCache();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(generatorStrategy43);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test08278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08278");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer0.getNamingPolicy();
        enhancer0.setUseCache(true);
        enhancer0.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer19.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer23.getNamingPolicy();
        java.lang.ClassLoader classLoader27 = enhancer23.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader29 = enhancer28.getClassLoader();
        enhancer23.setClassLoader(classLoader29);
        boolean boolean31 = enhancer23.getUseCache();
        boolean boolean32 = namingPolicy22.equals((java.lang.Object) enhancer23);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        boolean boolean36 = enhancer33.getAttemptLoad();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy38 = enhancer33.getStrategy();
        enhancer23.setStrategy(generatorStrategy38);
        java.lang.ClassLoader classLoader40 = enhancer23.getClassLoader();
        java.lang.ClassLoader classLoader41 = enhancer23.getClassLoader();
        enhancer23.setUseFactory(false);
        enhancer23.setAttemptLoad(false);
        enhancer23.setInterceptDuringConstruction(false);
        boolean boolean48 = namingPolicy18.equals((java.lang.Object) enhancer23);
        org.junit.Assert.assertNotNull(namingPolicy13);
        org.junit.Assert.assertNotNull(namingPolicy18);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(generatorStrategy38);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test08279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08279");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer4.setCallback(callback14);
        enhancer4.setUseCache(true);
        enhancer4.setUseFactory(true);
        java.lang.Class<?> wildcardClass20 = enhancer4.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer22.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer26.getNamingPolicy();
        java.lang.ClassLoader classLoader30 = enhancer26.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader32 = enhancer31.getClassLoader();
        enhancer26.setClassLoader(classLoader32);
        boolean boolean34 = enhancer26.getUseCache();
        boolean boolean35 = namingPolicy25.equals((java.lang.Object) enhancer26);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        boolean boolean39 = enhancer36.getAttemptLoad();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer36.getStrategy();
        enhancer26.setStrategy(generatorStrategy41);
        java.lang.ClassLoader classLoader43 = enhancer26.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer26.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader46 = enhancer45.getClassLoader();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.Class[] classArray63 = new java.lang.Class[] { wildcardClass48, wildcardClass50, wildcardClass53, wildcardClass56, wildcardClass59, wildcardClass61 };
        enhancer45.setInterfaces(classArray63);
        enhancer26.setInterfaces(classArray63);
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader67 = enhancer66.getClassLoader();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        boolean boolean75 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass74);
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass77);
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        boolean boolean83 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass82);
        java.lang.Class[] classArray84 = new java.lang.Class[] { wildcardClass69, wildcardClass71, wildcardClass74, wildcardClass77, wildcardClass80, wildcardClass82 };
        enhancer66.setInterfaces(classArray84);
        enhancer26.setInterfaces(classArray84);
        org.mockito.cglib.proxy.Callback callback87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj88 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass20, classArray84, callback87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(classArray63);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(classArray84);
    }

    @Test
    public void test08280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08280");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer21.getNamingPolicy();
        java.lang.ClassLoader classLoader25 = enhancer21.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader27 = enhancer26.getClassLoader();
        enhancer21.setClassLoader(classLoader27);
        java.lang.ClassLoader classLoader29 = enhancer21.getClassLoader();
        enhancer21.setAttemptLoad(true);
        boolean boolean32 = generatorStrategy19.equals((java.lang.Object) true);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean34 = enhancer33.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setAttemptLoad(true);
        java.lang.ClassLoader classLoader38 = null;
        enhancer35.setClassLoader(classLoader38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        boolean boolean43 = enhancer40.getAttemptLoad();
        java.lang.ClassLoader classLoader44 = enhancer40.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer40.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setAttemptLoad(true);
        boolean boolean49 = enhancer46.getAttemptLoad();
        java.lang.ClassLoader classLoader50 = enhancer46.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy51 = enhancer46.getStrategy();
        enhancer40.setStrategy(generatorStrategy51);
        enhancer35.setStrategy(generatorStrategy51);
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = enhancer35.getNamingPolicy();
        enhancer33.setNamingPolicy(namingPolicy54);
        java.lang.Class<?> wildcardClass56 = namingPolicy54.getClass();
        boolean boolean57 = generatorStrategy19.equals((java.lang.Object) namingPolicy54);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        enhancer58.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy61 = enhancer58.getNamingPolicy();
        java.lang.ClassLoader classLoader62 = enhancer58.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader64 = enhancer63.getClassLoader();
        enhancer58.setClassLoader(classLoader64);
        enhancer58.setUseFactory(true);
        boolean boolean68 = generatorStrategy19.equals((java.lang.Object) enhancer58);
        enhancer58.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy74 = enhancer71.getNamingPolicy();
        java.lang.ClassLoader classLoader75 = enhancer71.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader77 = enhancer76.getClassLoader();
        enhancer71.setClassLoader(classLoader77);
        java.lang.ClassLoader classLoader79 = enhancer71.getClassLoader();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        boolean boolean82 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass81);
        enhancer71.setSuperclass((java.lang.Class) wildcardClass81);
        enhancer71.setUseFactory(true);
        enhancer71.setUseCache(true);
        java.lang.ClassLoader classLoader88 = enhancer71.getClassLoader();
        java.lang.Class<?> wildcardClass89 = classLoader88.getClass();
        enhancer58.setSuperclass((java.lang.Class) wildcardClass89);
        org.mockito.asm.ClassVisitor classVisitor91 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer58.generateClass(classVisitor91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(generatorStrategy45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(generatorStrategy51);
        org.junit.Assert.assertNotNull(namingPolicy54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(namingPolicy61);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(namingPolicy74);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(classLoader77);
        org.junit.Assert.assertNotNull(classLoader79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(classLoader88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test08281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08281");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean7 = enhancer6.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setAttemptLoad(true);
        java.lang.ClassLoader classLoader11 = null;
        enhancer8.setClassLoader(classLoader11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        boolean boolean16 = enhancer13.getAttemptLoad();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer13.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setAttemptLoad(true);
        boolean boolean22 = enhancer19.getAttemptLoad();
        java.lang.ClassLoader classLoader23 = enhancer19.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy24 = enhancer19.getStrategy();
        enhancer13.setStrategy(generatorStrategy24);
        enhancer8.setStrategy(generatorStrategy24);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer8.getNamingPolicy();
        enhancer6.setNamingPolicy(namingPolicy27);
        enhancer6.setSerialVersionUID((java.lang.Long) 1L);
        java.lang.Class<?> wildcardClass31 = enhancer6.getClass();
        boolean boolean32 = generatorStrategy5.equals((java.lang.Object) enhancer6);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        enhancer33.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer33.setInterceptDuringConstruction(true);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        enhancer33.setSuperclass((java.lang.Class) wildcardClass41);
        enhancer33.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer33.setCallback(callback46);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer33.getStrategy();
        boolean boolean49 = generatorStrategy5.equals((java.lang.Object) enhancer33);
        boolean boolean50 = enhancer33.getAttemptLoad();
        enhancer33.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy53 = enhancer33.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader55 = enhancer54.getClassLoader();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass70);
        java.lang.Class[] classArray72 = new java.lang.Class[] { wildcardClass57, wildcardClass59, wildcardClass62, wildcardClass65, wildcardClass68, wildcardClass70 };
        enhancer54.setInterfaces(classArray72);
        org.mockito.cglib.proxy.Callback[] callbackArray74 = null;
        enhancer54.setCallbacks(callbackArray74);
        org.mockito.cglib.core.NamingPolicy namingPolicy76 = enhancer54.getNamingPolicy();
        boolean boolean77 = enhancer54.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy78 = enhancer54.getStrategy();
        org.mockito.cglib.proxy.Callback callback79 = null;
        enhancer54.setCallback(callback79);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray81 = generatorStrategy53.generate((org.mockito.cglib.core.ClassGenerator) enhancer54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(generatorStrategy18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(generatorStrategy24);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(generatorStrategy53);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(classArray72);
        org.junit.Assert.assertNotNull(namingPolicy76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(generatorStrategy78);
    }

    @Test
    public void test08282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08282");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer6.getNamingPolicy();
        boolean boolean10 = enhancer6.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter11 = null;
        enhancer6.setCallbackFilter(callbackFilter11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader14 = enhancer13.getClassLoader();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Class[] classArray31 = new java.lang.Class[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass29 };
        enhancer13.setInterfaces(classArray31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        enhancer13.setClassLoader(classLoader39);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer42.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = enhancer46.getNamingPolicy();
        java.lang.ClassLoader classLoader50 = enhancer46.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader52 = enhancer51.getClassLoader();
        enhancer46.setClassLoader(classLoader52);
        boolean boolean54 = enhancer46.getUseCache();
        boolean boolean55 = namingPolicy45.equals((java.lang.Object) enhancer46);
        enhancer13.setNamingPolicy(namingPolicy45);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        java.lang.ClassLoader classLoader61 = enhancer57.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader63 = enhancer62.getClassLoader();
        enhancer57.setClassLoader(classLoader63);
        enhancer57.setAttemptLoad(true);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class[] classArray69 = new java.lang.Class[] { wildcardClass68 };
        enhancer57.setInterfaces(classArray69);
        enhancer13.setInterfaces(classArray69);
        enhancer6.setInterfaces(classArray69);
        boolean boolean73 = generatorStrategy5.equals((java.lang.Object) enhancer6);
        org.mockito.asm.ClassVisitor classVisitor74 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer6.generateClass(classVisitor74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertNotNull(namingPolicy49);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test08283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08283");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer4.getNamingPolicy();
        boolean boolean24 = namingPolicy22.equals((java.lang.Object) 1.0d);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean26 = enhancer25.getUseCache();
        java.lang.ClassLoader classLoader27 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer32.getNamingPolicy();
        java.lang.ClassLoader classLoader36 = enhancer32.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        enhancer32.setClassLoader(classLoader38);
        boolean boolean40 = enhancer32.getUseCache();
        boolean boolean41 = namingPolicy31.equals((java.lang.Object) enhancer32);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        boolean boolean45 = enhancer42.getAttemptLoad();
        java.lang.ClassLoader classLoader46 = enhancer42.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy47 = enhancer42.getStrategy();
        enhancer32.setStrategy(generatorStrategy47);
        java.lang.ClassLoader classLoader49 = enhancer32.getClassLoader();
        enhancer25.setClassLoader(classLoader49);
        boolean boolean51 = namingPolicy22.equals((java.lang.Object) enhancer25);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer25.setCallback(callback52);
        org.mockito.cglib.proxy.Callback callback54 = null;
        enhancer25.setCallback(callback54);
        boolean boolean56 = enhancer25.getUseCache();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(generatorStrategy47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test08284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08284");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader2 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer3.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer7.getNamingPolicy();
        java.lang.ClassLoader classLoader11 = enhancer7.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader13 = enhancer12.getClassLoader();
        enhancer7.setClassLoader(classLoader13);
        boolean boolean15 = enhancer7.getUseCache();
        boolean boolean16 = namingPolicy6.equals((java.lang.Object) enhancer7);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setAttemptLoad(true);
        boolean boolean20 = enhancer17.getAttemptLoad();
        java.lang.ClassLoader classLoader21 = enhancer17.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer17.getStrategy();
        enhancer7.setStrategy(generatorStrategy22);
        java.lang.ClassLoader classLoader24 = enhancer7.getClassLoader();
        enhancer0.setClassLoader(classLoader24);
        java.lang.ClassLoader classLoader26 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(true);
        boolean boolean29 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test08285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08285");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader22 = enhancer21.getClassLoader();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass24, wildcardClass26, wildcardClass29, wildcardClass32, wildcardClass35, wildcardClass37 };
        enhancer21.setInterfaces(classArray39);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        java.lang.ClassLoader classLoader45 = enhancer41.getClassLoader();
        enhancer21.setClassLoader(classLoader45);
        enhancer4.setClassLoader(classLoader45);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer4.setCallback(callback48);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class50 = enhancer4.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(classLoader45);
    }

    @Test
    public void test08286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08286");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy67);
        org.mockito.cglib.proxy.Callback callback69 = null;
        enhancer0.setCallback(callback69);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setAttemptLoad(true);
        boolean boolean74 = enhancer71.getAttemptLoad();
        java.lang.ClassLoader classLoader75 = enhancer71.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer71.getStrategy();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        enhancer71.setSuperclass((java.lang.Class) wildcardClass78);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass78);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class class83 = null;
        enhancer0.setSuperclass(class83);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy85 = enhancer0.getStrategy();
        enhancer0.setUseFactory(true);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(generatorStrategy63);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(generatorStrategy76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(generatorStrategy85);
    }

    @Test
    public void test08287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08287");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setAttemptLoad(true);
        java.lang.ClassLoader classLoader38 = null;
        enhancer35.setClassLoader(classLoader38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        boolean boolean43 = enhancer40.getAttemptLoad();
        java.lang.ClassLoader classLoader44 = enhancer40.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer40.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setAttemptLoad(true);
        boolean boolean49 = enhancer46.getAttemptLoad();
        java.lang.ClassLoader classLoader50 = enhancer46.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy51 = enhancer46.getStrategy();
        enhancer40.setStrategy(generatorStrategy51);
        enhancer35.setStrategy(generatorStrategy51);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setAttemptLoad(true);
        enhancer54.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer54.setInterceptDuringConstruction(true);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        enhancer54.setSuperclass((java.lang.Class) wildcardClass62);
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        boolean boolean66 = generatorStrategy51.equals((java.lang.Object) wildcardClass62);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass62);
        enhancer0.setUseCache(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(generatorStrategy45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(generatorStrategy51);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test08288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08288");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        enhancer0.setAttemptLoad(true);
        boolean boolean65 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback66 = null;
        enhancer0.setCallback(callback66);
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        enhancer68.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = enhancer68.getNamingPolicy();
        java.lang.ClassLoader classLoader72 = enhancer68.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer73 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader74 = enhancer73.getClassLoader();
        enhancer68.setClassLoader(classLoader74);
        java.lang.Class<?> wildcardClass76 = classLoader74.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass76);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy80 = enhancer0.getNamingPolicy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj81 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(namingPolicy71);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertNotNull(classLoader74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(namingPolicy80);
    }

    @Test
    public void test08289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08289");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        java.lang.ClassLoader classLoader17 = null;
        enhancer14.setClassLoader(classLoader17);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setAttemptLoad(true);
        boolean boolean22 = enhancer19.getAttemptLoad();
        java.lang.ClassLoader classLoader23 = enhancer19.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy24 = enhancer19.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        boolean boolean28 = enhancer25.getAttemptLoad();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = enhancer25.getStrategy();
        enhancer19.setStrategy(generatorStrategy30);
        enhancer14.setStrategy(generatorStrategy30);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer14.getNamingPolicy();
        enhancer14.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer14.getNamingPolicy();
        enhancer14.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer14.getNamingPolicy();
        boolean boolean40 = namingPolicy3.equals((java.lang.Object) enhancer14);
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer43.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer47.getNamingPolicy();
        java.lang.ClassLoader classLoader51 = enhancer47.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader53 = enhancer52.getClassLoader();
        enhancer47.setClassLoader(classLoader53);
        boolean boolean55 = enhancer47.getUseCache();
        boolean boolean56 = namingPolicy46.equals((java.lang.Object) enhancer47);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        boolean boolean60 = enhancer57.getAttemptLoad();
        java.lang.ClassLoader classLoader61 = enhancer57.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy62 = enhancer57.getStrategy();
        enhancer47.setStrategy(generatorStrategy62);
        java.lang.ClassLoader classLoader64 = enhancer47.getClassLoader();
        org.mockito.cglib.proxy.Callback callback65 = null;
        enhancer47.setCallback(callback65);
        org.mockito.cglib.proxy.Callback callback67 = null;
        enhancer47.setCallback(callback67);
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        enhancer69.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy72 = enhancer69.getNamingPolicy();
        java.lang.ClassLoader classLoader73 = enhancer69.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader75 = enhancer74.getClassLoader();
        enhancer69.setClassLoader(classLoader75);
        boolean boolean77 = enhancer69.getUseCache();
        org.mockito.cglib.proxy.Callback callback78 = null;
        enhancer69.setCallback(callback78);
        org.mockito.cglib.proxy.Enhancer enhancer80 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader81 = enhancer80.getClassLoader();
        enhancer80.setAttemptLoad(true);
        boolean boolean84 = enhancer80.getAttemptLoad();
        java.lang.Class<?> wildcardClass85 = enhancer80.getClass();
        enhancer69.setSuperclass((java.lang.Class) wildcardClass85);
        boolean boolean87 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass85);
        enhancer47.setSuperclass((java.lang.Class) wildcardClass85);
        org.mockito.cglib.core.Predicate predicate89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str90 = namingPolicy3.getClassName("", "", (java.lang.Object) enhancer47, predicate89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(generatorStrategy24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(generatorStrategy30);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(generatorStrategy62);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(namingPolicy72);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(classLoader81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test08290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08290");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer0.setCallbackFilter(callbackFilter6);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader11 = enhancer10.getClassLoader();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Class[] classArray28 = new java.lang.Class[] { wildcardClass13, wildcardClass15, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass26 };
        enhancer10.setInterfaces(classArray28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer30.getNamingPolicy();
        java.lang.ClassLoader classLoader34 = enhancer30.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        enhancer30.setClassLoader(classLoader36);
        enhancer10.setClassLoader(classLoader36);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer39.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer43.getNamingPolicy();
        java.lang.ClassLoader classLoader47 = enhancer43.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader49 = enhancer48.getClassLoader();
        enhancer43.setClassLoader(classLoader49);
        boolean boolean51 = enhancer43.getUseCache();
        boolean boolean52 = namingPolicy42.equals((java.lang.Object) enhancer43);
        enhancer10.setNamingPolicy(namingPolicy42);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader55 = enhancer54.getClassLoader();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass70);
        java.lang.Class[] classArray72 = new java.lang.Class[] { wildcardClass57, wildcardClass59, wildcardClass62, wildcardClass65, wildcardClass68, wildcardClass70 };
        enhancer54.setInterfaces(classArray72);
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        enhancer74.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer74.getNamingPolicy();
        java.lang.ClassLoader classLoader78 = enhancer74.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer79 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader80 = enhancer79.getClassLoader();
        enhancer74.setClassLoader(classLoader80);
        enhancer54.setClassLoader(classLoader80);
        java.lang.ClassLoader classLoader83 = enhancer54.getClassLoader();
        boolean boolean84 = namingPolicy42.equals((java.lang.Object) enhancer54);
        enhancer0.setNamingPolicy(namingPolicy42);
        org.mockito.cglib.proxy.Callback[] callbackArray86 = null;
        enhancer0.setCallbacks(callbackArray86);
        enhancer0.setUseCache(true);
        enhancer0.setUseCache(true);
        org.mockito.asm.ClassVisitor classVisitor92 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(classArray72);
        org.junit.Assert.assertNotNull(namingPolicy77);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertNotNull(classLoader80);
        org.junit.Assert.assertNotNull(classLoader83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test08291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08291");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter4 = null;
        enhancer0.setCallbackFilter(callbackFilter4);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer0.setCallbackFilter(callbackFilter6);
        boolean boolean8 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer9.getNamingPolicy();
        java.lang.ClassLoader classLoader13 = enhancer9.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader15 = enhancer14.getClassLoader();
        enhancer9.setClassLoader(classLoader15);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean18 = enhancer17.getUseCache();
        java.lang.ClassLoader classLoader19 = enhancer17.getClassLoader();
        enhancer9.setClassLoader(classLoader19);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy21 = enhancer9.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader23 = enhancer22.getClassLoader();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        java.lang.Class[] classArray40 = new java.lang.Class[] { wildcardClass25, wildcardClass27, wildcardClass30, wildcardClass33, wildcardClass36, wildcardClass38 };
        enhancer22.setInterfaces(classArray40);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer42.getNamingPolicy();
        java.lang.ClassLoader classLoader46 = enhancer42.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader48 = enhancer47.getClassLoader();
        enhancer42.setClassLoader(classLoader48);
        enhancer22.setClassLoader(classLoader48);
        boolean boolean51 = enhancer22.getUseCache();
        boolean boolean52 = generatorStrategy21.equals((java.lang.Object) enhancer22);
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer22.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = enhancer54.getNamingPolicy();
        java.lang.ClassLoader classLoader58 = enhancer54.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader60 = enhancer59.getClassLoader();
        enhancer54.setClassLoader(classLoader60);
        java.lang.ClassLoader classLoader62 = enhancer54.getClassLoader();
        enhancer54.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter65 = null;
        enhancer54.setCallbackFilter(callbackFilter65);
        java.lang.ClassLoader classLoader67 = enhancer54.getClassLoader();
        java.lang.Class[] classArray68 = null;
        enhancer54.setInterfaces(classArray68);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy70 = enhancer54.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean72 = enhancer71.getUseCache();
        java.lang.ClassLoader classLoader73 = enhancer71.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        enhancer74.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer74.getNamingPolicy();
        java.lang.ClassLoader classLoader78 = enhancer74.getClassLoader();
        enhancer71.setClassLoader(classLoader78);
        org.mockito.cglib.proxy.Callback callback80 = null;
        enhancer71.setCallback(callback80);
        java.lang.ClassLoader classLoader82 = enhancer71.getClassLoader();
        enhancer54.setClassLoader(classLoader82);
        boolean boolean84 = namingPolicy53.equals((java.lang.Object) classLoader82);
        enhancer0.setNamingPolicy(namingPolicy53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class86 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback types are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertNotNull(generatorStrategy21);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertNotNull(namingPolicy57);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertNotNull(generatorStrategy70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertNotNull(namingPolicy77);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertNotNull(classLoader82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test08292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08292");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter9 = null;
        enhancer0.setCallbackFilter(callbackFilter9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(classLoader8);
    }

    @Test
    public void test08293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08293");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader2 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer3.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader8 = enhancer7.getClassLoader();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        java.lang.Class[] classArray25 = new java.lang.Class[] { wildcardClass10, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass21, wildcardClass23 };
        enhancer7.setInterfaces(classArray25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer27.getNamingPolicy();
        java.lang.ClassLoader classLoader31 = enhancer27.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader33 = enhancer32.getClassLoader();
        enhancer27.setClassLoader(classLoader33);
        enhancer7.setClassLoader(classLoader33);
        org.mockito.cglib.proxy.Callback callback36 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray37 = new org.mockito.cglib.proxy.Callback[] { callback36 };
        enhancer7.setCallbacks(callbackArray37);
        enhancer3.setCallbacks(callbackArray37);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Class[] classArray58 = new java.lang.Class[] { wildcardClass43, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass54, wildcardClass56 };
        enhancer40.setInterfaces(classArray58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer60.getNamingPolicy();
        enhancer40.setNamingPolicy(namingPolicy63);
        enhancer3.setNamingPolicy(namingPolicy63);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy66 = enhancer3.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        enhancer67.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy70 = enhancer67.getNamingPolicy();
        enhancer3.setNamingPolicy(namingPolicy70);
        enhancer0.setNamingPolicy(namingPolicy70);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter75 = null;
        enhancer0.setCallbackFilter(callbackFilter75);
        boolean boolean77 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter78 = null;
        enhancer0.setCallbackFilter(callbackFilter78);
        enhancer0.setUseFactory(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(callbackArray37);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(generatorStrategy66);
        org.junit.Assert.assertNotNull(namingPolicy70);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test08294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08294");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy67);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter69 = null;
        enhancer0.setCallbackFilter(callbackFilter69);
        java.lang.Class<?> wildcardClass71 = enhancer0.getClass();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(generatorStrategy63);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test08295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08295");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = enhancer29.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        boolean boolean41 = enhancer33.getUseCache();
        boolean boolean42 = namingPolicy32.equals((java.lang.Object) enhancer33);
        enhancer0.setNamingPolicy(namingPolicy32);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Class[] classArray62 = new java.lang.Class[] { wildcardClass47, wildcardClass49, wildcardClass52, wildcardClass55, wildcardClass58, wildcardClass60 };
        enhancer44.setInterfaces(classArray62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        java.lang.ClassLoader classLoader68 = enhancer64.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader70 = enhancer69.getClassLoader();
        enhancer64.setClassLoader(classLoader70);
        enhancer44.setClassLoader(classLoader70);
        java.lang.ClassLoader classLoader73 = enhancer44.getClassLoader();
        boolean boolean74 = namingPolicy32.equals((java.lang.Object) enhancer44);
        org.mockito.cglib.core.NamingPolicy namingPolicy75 = enhancer44.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer44.getStrategy();
        org.mockito.cglib.proxy.Callback callback77 = null;
        enhancer44.setCallback(callback77);
        boolean boolean79 = enhancer44.getAttemptLoad();
        enhancer44.setUseFactory(true);
        java.lang.ClassLoader classLoader82 = enhancer44.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy83 = enhancer44.getNamingPolicy();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy32);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(classLoader70);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(namingPolicy75);
        org.junit.Assert.assertNotNull(generatorStrategy76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(classLoader82);
        org.junit.Assert.assertNotNull(namingPolicy83);
    }

    @Test
    public void test08296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08296");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass21);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer0.setCallback(callback26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader29 = enhancer28.getClassLoader();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        java.lang.Class[] classArray46 = new java.lang.Class[] { wildcardClass31, wildcardClass33, wildcardClass36, wildcardClass39, wildcardClass42, wildcardClass44 };
        enhancer28.setInterfaces(classArray46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer48.getNamingPolicy();
        java.lang.ClassLoader classLoader52 = enhancer48.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader54 = enhancer53.getClassLoader();
        enhancer48.setClassLoader(classLoader54);
        enhancer28.setClassLoader(classLoader54);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer61.getNamingPolicy();
        java.lang.ClassLoader classLoader65 = enhancer61.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader67 = enhancer66.getClassLoader();
        enhancer61.setClassLoader(classLoader67);
        boolean boolean69 = enhancer61.getUseCache();
        boolean boolean70 = namingPolicy60.equals((java.lang.Object) enhancer61);
        enhancer28.setNamingPolicy(namingPolicy60);
        boolean boolean73 = namingPolicy60.equals((java.lang.Object) (short) 100);
        enhancer0.setNamingPolicy(namingPolicy60);
        enhancer0.setAttemptLoad(false);
        boolean boolean77 = enhancer0.getAttemptLoad();
        org.mockito.asm.ClassVisitor classVisitor78 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(generatorStrategy25);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertNotNull(classLoader65);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test08297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08297");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer0.setCallback(callback31);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy33 = null;
        enhancer0.setStrategy(generatorStrategy33);
        enhancer0.setUseCache(false);
        boolean boolean37 = enhancer0.getUseCache();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(generatorStrategy30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test08298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08298");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy67);
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = enhancer0.getNamingPolicy();
        boolean boolean70 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(false);
        enhancer0.setAttemptLoad(false);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(generatorStrategy63);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(namingPolicy69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test08299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08299");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader17 = enhancer16.getClassLoader();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Class[] classArray34 = new java.lang.Class[] { wildcardClass19, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass30, wildcardClass32 };
        enhancer16.setInterfaces(classArray34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer36.getNamingPolicy();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader42 = enhancer41.getClassLoader();
        enhancer36.setClassLoader(classLoader42);
        enhancer16.setClassLoader(classLoader42);
        org.mockito.cglib.proxy.Callback callback45 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray46 = new org.mockito.cglib.proxy.Callback[] { callback45 };
        enhancer16.setCallbacks(callbackArray46);
        enhancer12.setCallbacks(callbackArray46);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader50 = enhancer49.getClassLoader();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.Class[] classArray67 = new java.lang.Class[] { wildcardClass52, wildcardClass54, wildcardClass57, wildcardClass60, wildcardClass63, wildcardClass65 };
        enhancer49.setInterfaces(classArray67);
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        enhancer69.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy72 = enhancer69.getNamingPolicy();
        enhancer49.setNamingPolicy(namingPolicy72);
        enhancer12.setNamingPolicy(namingPolicy72);
        enhancer0.setNamingPolicy(namingPolicy72);
        enhancer0.setAttemptLoad(false);
        enhancer0.setAttemptLoad(false);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback82 = null;
        enhancer0.setCallback(callback82);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.asm.ClassVisitor classVisitor86 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(callbackArray46);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(classArray67);
        org.junit.Assert.assertNotNull(namingPolicy72);
    }

    @Test
    public void test08300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08300");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer0.setCallback(callback19);
        boolean boolean21 = enhancer0.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean24 = enhancer23.getUseCache();
        java.lang.ClassLoader classLoader25 = enhancer23.getClassLoader();
        enhancer0.setClassLoader(classLoader25);
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseCache(true);
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader35 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        boolean boolean39 = enhancer36.getAttemptLoad();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer36.getStrategy();
        enhancer36.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer44.getNamingPolicy();
        java.lang.ClassLoader classLoader48 = enhancer44.getClassLoader();
        java.lang.ClassLoader classLoader49 = enhancer44.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy50 = enhancer44.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer44.getNamingPolicy();
        boolean boolean52 = enhancer44.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer44.getNamingPolicy();
        enhancer36.setNamingPolicy(namingPolicy53);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader56 = enhancer55.getClassLoader();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass71);
        java.lang.Class[] classArray73 = new java.lang.Class[] { wildcardClass58, wildcardClass60, wildcardClass63, wildcardClass66, wildcardClass69, wildcardClass71 };
        enhancer55.setInterfaces(classArray73);
        org.mockito.cglib.proxy.Enhancer enhancer75 = new org.mockito.cglib.proxy.Enhancer();
        enhancer75.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy78 = enhancer75.getNamingPolicy();
        java.lang.ClassLoader classLoader79 = enhancer75.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer80 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader81 = enhancer80.getClassLoader();
        enhancer75.setClassLoader(classLoader81);
        enhancer55.setClassLoader(classLoader81);
        java.lang.Class class84 = null;
        enhancer55.setSuperclass(class84);
        java.lang.ClassLoader classLoader86 = enhancer55.getClassLoader();
        org.mockito.cglib.proxy.Callback callback87 = null;
        enhancer55.setCallback(callback87);
        org.mockito.cglib.proxy.Callback callback89 = null;
        enhancer55.setCallback(callback89);
        enhancer55.setUseCache(true);
        enhancer55.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean95 = namingPolicy53.equals((java.lang.Object) enhancer55);
        enhancer0.setNamingPolicy(namingPolicy53);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(generatorStrategy50);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertNotNull(namingPolicy78);
        org.junit.Assert.assertNotNull(classLoader79);
        org.junit.Assert.assertNotNull(classLoader81);
        org.junit.Assert.assertNotNull(classLoader86);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test08301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08301");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        enhancer2.setAttemptLoad(true);
        java.lang.ClassLoader classLoader5 = null;
        enhancer2.setClassLoader(classLoader5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        boolean boolean10 = enhancer7.getAttemptLoad();
        java.lang.ClassLoader classLoader11 = enhancer7.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer7.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        boolean boolean16 = enhancer13.getAttemptLoad();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer13.getStrategy();
        enhancer7.setStrategy(generatorStrategy18);
        enhancer2.setStrategy(generatorStrategy18);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer2.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy21);
        boolean boolean23 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        boolean boolean27 = enhancer24.getAttemptLoad();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy29 = enhancer24.getStrategy();
        enhancer24.setSerialVersionUID((java.lang.Long) 100L);
        boolean boolean32 = enhancer24.getUseCache();
        java.lang.ClassLoader classLoader33 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer24.setCallback(callback34);
        java.lang.ClassLoader classLoader36 = enhancer24.getClassLoader();
        enhancer0.setClassLoader(classLoader36);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer0.setCallback(callback38);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(generatorStrategy18);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(generatorStrategy29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(classLoader36);
    }

    @Test
    public void test08302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08302");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy1 = enhancer0.getStrategy();
        boolean boolean2 = enhancer0.getAttemptLoad();
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer9.setUseCache(false);
        java.lang.ClassLoader classLoader13 = enhancer9.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer9.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = enhancer15.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer19.getNamingPolicy();
        java.lang.ClassLoader classLoader23 = enhancer19.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader25 = enhancer24.getClassLoader();
        enhancer19.setClassLoader(classLoader25);
        boolean boolean27 = enhancer19.getUseCache();
        boolean boolean28 = namingPolicy18.equals((java.lang.Object) enhancer19);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setAttemptLoad(true);
        boolean boolean32 = enhancer29.getAttemptLoad();
        java.lang.ClassLoader classLoader33 = enhancer29.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy34 = enhancer29.getStrategy();
        enhancer19.setStrategy(generatorStrategy34);
        java.lang.ClassLoader classLoader36 = enhancer19.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer19.getNamingPolicy();
        boolean boolean38 = enhancer19.getAttemptLoad();
        enhancer19.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader42 = enhancer41.getClassLoader();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Class[] classArray59 = new java.lang.Class[] { wildcardClass44, wildcardClass46, wildcardClass49, wildcardClass52, wildcardClass55, wildcardClass57 };
        enhancer41.setInterfaces(classArray59);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer61.getNamingPolicy();
        enhancer41.setNamingPolicy(namingPolicy64);
        enhancer19.setNamingPolicy(namingPolicy64);
        boolean boolean67 = enhancer19.getAttemptLoad();
        enhancer19.setInterceptDuringConstruction(true);
        enhancer19.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy72 = enhancer19.getStrategy();
        boolean boolean73 = namingPolicy14.equals((java.lang.Object) generatorStrategy72);
        enhancer0.setStrategy(generatorStrategy72);
        java.lang.ClassLoader classLoader75 = enhancer0.getClassLoader();
        org.junit.Assert.assertNotNull(generatorStrategy1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(namingPolicy18);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(generatorStrategy34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(generatorStrategy72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(classLoader75);
    }

    @Test
    public void test08303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08303");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer0.setCallback(callback22);
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter29 = null;
        enhancer25.setCallbackFilter(callbackFilter29);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setAttemptLoad(true);
        enhancer31.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer31.setInterceptDuringConstruction(true);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        enhancer31.setSuperclass((java.lang.Class) wildcardClass39);
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        enhancer25.setSuperclass((java.lang.Class) wildcardClass39);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Class[] classArray62 = new java.lang.Class[] { wildcardClass47, wildcardClass49, wildcardClass52, wildcardClass55, wildcardClass58, wildcardClass60 };
        enhancer44.setInterfaces(classArray62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        java.lang.ClassLoader classLoader68 = enhancer64.getClassLoader();
        enhancer44.setClassLoader(classLoader68);
        enhancer25.setClassLoader(classLoader68);
        java.lang.Class class71 = null;
        enhancer25.setSuperclass(class71);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy73 = enhancer25.getStrategy();
        enhancer0.setStrategy(generatorStrategy73);
        org.mockito.cglib.core.ClassGenerator classGenerator75 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray76 = generatorStrategy73.generate(classGenerator75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(generatorStrategy73);
    }

    @Test
    public void test08304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08304");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy9 = enhancer0.getStrategy();
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer0.getStrategy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy9);
        org.junit.Assert.assertNotNull(generatorStrategy12);
    }

    @Test
    public void test08305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08305");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer0.setCallbackFilter(callbackFilter25);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter27 = null;
        enhancer0.setCallbackFilter(callbackFilter27);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer0.getNamingPolicy();
        enhancer0.setAttemptLoad(false);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(namingPolicy29);
    }

    @Test
    public void test08306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08306");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.Callback callback29 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray30 = new org.mockito.cglib.proxy.Callback[] { callback29 };
        enhancer0.setCallbacks(callbackArray30);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setAttemptLoad(true);
        boolean boolean35 = enhancer32.getAttemptLoad();
        java.lang.ClassLoader classLoader36 = enhancer32.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy37 = enhancer32.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setAttemptLoad(true);
        boolean boolean41 = enhancer38.getAttemptLoad();
        java.lang.ClassLoader classLoader42 = enhancer38.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy43 = enhancer38.getStrategy();
        enhancer32.setStrategy(generatorStrategy43);
        enhancer0.setStrategy(generatorStrategy43);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer48.getNamingPolicy();
        java.lang.ClassLoader classLoader52 = enhancer48.getClassLoader();
        java.lang.ClassLoader classLoader53 = enhancer48.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer48.getStrategy();
        enhancer0.setStrategy(generatorStrategy54);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean59 = enhancer58.getUseCache();
        java.lang.ClassLoader classLoader60 = enhancer58.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer61.getNamingPolicy();
        java.lang.ClassLoader classLoader65 = enhancer61.getClassLoader();
        enhancer58.setClassLoader(classLoader65);
        org.mockito.cglib.proxy.Callback callback67 = null;
        enhancer58.setCallback(callback67);
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = enhancer58.getNamingPolicy();
        enhancer58.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer72 = new org.mockito.cglib.proxy.Enhancer();
        enhancer72.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy75 = enhancer72.getNamingPolicy();
        java.lang.ClassLoader classLoader76 = enhancer72.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer77 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader78 = enhancer77.getClassLoader();
        enhancer72.setClassLoader(classLoader78);
        enhancer58.setClassLoader(classLoader78);
        enhancer0.setClassLoader(classLoader78);
        enhancer0.setAttemptLoad(false);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(callbackArray30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(generatorStrategy37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(generatorStrategy43);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertNotNull(classLoader65);
        org.junit.Assert.assertNotNull(namingPolicy69);
        org.junit.Assert.assertNotNull(namingPolicy75);
        org.junit.Assert.assertNotNull(classLoader76);
        org.junit.Assert.assertNotNull(classLoader78);
    }

    @Test
    public void test08307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08307");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer3.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer7.getNamingPolicy();
        java.lang.ClassLoader classLoader11 = enhancer7.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader13 = enhancer12.getClassLoader();
        enhancer7.setClassLoader(classLoader13);
        boolean boolean15 = enhancer7.getUseCache();
        boolean boolean16 = namingPolicy6.equals((java.lang.Object) enhancer7);
        enhancer0.setNamingPolicy(namingPolicy6);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        boolean boolean23 = enhancer20.getAttemptLoad();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = enhancer20.getStrategy();
        enhancer20.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer20.setClassLoader(classLoader34);
        enhancer20.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy39 = enhancer20.getStrategy();
        enhancer0.setStrategy(generatorStrategy39);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter45 = null;
        enhancer41.setCallbackFilter(callbackFilter45);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter47 = null;
        enhancer41.setCallbackFilter(callbackFilter47);
        enhancer41.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter51 = null;
        enhancer41.setCallbackFilter(callbackFilter51);
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        enhancer53.setAttemptLoad(true);
        enhancer53.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer53.setInterceptDuringConstruction(true);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        enhancer53.setSuperclass((java.lang.Class) wildcardClass61);
        enhancer53.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback66 = null;
        enhancer53.setCallback(callback66);
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer53.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter69 = null;
        enhancer53.setCallbackFilter(callbackFilter69);
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = null;
        enhancer53.setNamingPolicy(namingPolicy71);
        org.mockito.cglib.core.NamingPolicy namingPolicy73 = enhancer53.getNamingPolicy();
        enhancer41.setNamingPolicy(namingPolicy73);
        enhancer0.setNamingPolicy(namingPolicy73);
        org.mockito.cglib.proxy.Callback callback76 = null;
        enhancer0.setCallback(callback76);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(generatorStrategy25);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(generatorStrategy39);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(namingPolicy68);
        org.junit.Assert.assertNotNull(namingPolicy73);
    }

    @Test
    public void test08308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08308");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray10 = new org.mockito.cglib.proxy.Callback[] { callback9 };
        enhancer0.setCallbacks(callbackArray10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer16.getNamingPolicy();
        java.lang.ClassLoader classLoader20 = enhancer16.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader22 = enhancer21.getClassLoader();
        enhancer16.setClassLoader(classLoader22);
        boolean boolean24 = enhancer16.getUseCache();
        boolean boolean25 = namingPolicy15.equals((java.lang.Object) enhancer16);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setAttemptLoad(true);
        boolean boolean29 = enhancer26.getAttemptLoad();
        java.lang.ClassLoader classLoader30 = enhancer26.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy31 = enhancer26.getStrategy();
        enhancer16.setStrategy(generatorStrategy31);
        java.lang.ClassLoader classLoader33 = enhancer16.getClassLoader();
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer16.setCallback(callback34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer36.getNamingPolicy();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        enhancer16.setClassLoader(classLoader40);
        enhancer16.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer47.getNamingPolicy();
        java.lang.ClassLoader classLoader51 = enhancer47.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader53 = enhancer52.getClassLoader();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        java.lang.Class[] classArray70 = new java.lang.Class[] { wildcardClass55, wildcardClass57, wildcardClass60, wildcardClass63, wildcardClass66, wildcardClass68 };
        enhancer52.setInterfaces(classArray70);
        org.mockito.cglib.proxy.Enhancer enhancer72 = new org.mockito.cglib.proxy.Enhancer();
        enhancer72.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy75 = enhancer72.getNamingPolicy();
        java.lang.ClassLoader classLoader76 = enhancer72.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer77 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader78 = enhancer77.getClassLoader();
        enhancer72.setClassLoader(classLoader78);
        enhancer52.setClassLoader(classLoader78);
        org.mockito.cglib.proxy.Callback callback81 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray82 = new org.mockito.cglib.proxy.Callback[] { callback81 };
        enhancer52.setCallbacks(callbackArray82);
        enhancer47.setCallbacks(callbackArray82);
        enhancer47.setAttemptLoad(true);
        enhancer47.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader89 = enhancer47.getClassLoader();
        enhancer44.setClassLoader(classLoader89);
        enhancer16.setClassLoader(classLoader89);
        enhancer0.setClassLoader(classLoader89);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy95 = enhancer0.getStrategy();
        boolean boolean96 = enhancer0.getAttemptLoad();
        org.mockito.asm.ClassVisitor classVisitor97 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(callbackArray10);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(generatorStrategy31);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(namingPolicy75);
        org.junit.Assert.assertNotNull(classLoader76);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertNotNull(callbackArray82);
        org.junit.Assert.assertNotNull(classLoader89);
        org.junit.Assert.assertNotNull(generatorStrategy95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test08309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08309");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer9.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer13.getNamingPolicy();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader19 = enhancer18.getClassLoader();
        enhancer13.setClassLoader(classLoader19);
        boolean boolean21 = enhancer13.getUseCache();
        boolean boolean22 = namingPolicy12.equals((java.lang.Object) enhancer13);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setAttemptLoad(true);
        boolean boolean26 = enhancer23.getAttemptLoad();
        java.lang.ClassLoader classLoader27 = enhancer23.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy28 = enhancer23.getStrategy();
        enhancer13.setStrategy(generatorStrategy28);
        java.lang.ClassLoader classLoader30 = enhancer13.getClassLoader();
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer13.setCallback(callback31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        enhancer13.setClassLoader(classLoader37);
        enhancer0.setClassLoader(classLoader37);
        enhancer0.setUseFactory(false);
        java.lang.ClassLoader classLoader42 = enhancer0.getClassLoader();
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = enhancer45.getNamingPolicy();
        java.lang.ClassLoader classLoader49 = enhancer45.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader51 = enhancer50.getClassLoader();
        enhancer45.setClassLoader(classLoader51);
        java.lang.Class<?> wildcardClass53 = enhancer45.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass53);
        org.mockito.asm.ClassVisitor classVisitor55 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(generatorStrategy28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(namingPolicy48);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test08310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08310");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass21);
        boolean boolean23 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy24 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        java.lang.Class[] classArray43 = new java.lang.Class[] { wildcardClass28, wildcardClass30, wildcardClass33, wildcardClass36, wildcardClass39, wildcardClass41 };
        enhancer25.setInterfaces(classArray43);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = enhancer45.getNamingPolicy();
        java.lang.ClassLoader classLoader49 = enhancer45.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader51 = enhancer50.getClassLoader();
        enhancer45.setClassLoader(classLoader51);
        enhancer25.setClassLoader(classLoader51);
        enhancer25.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean56 = enhancer25.getAttemptLoad();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = enhancer59.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        enhancer63.setAttemptLoad(true);
        boolean boolean66 = enhancer63.getAttemptLoad();
        java.lang.ClassLoader classLoader67 = enhancer63.getClassLoader();
        enhancer59.setClassLoader(classLoader67);
        java.lang.Class<?> wildcardClass69 = enhancer59.getClass();
        enhancer25.setSuperclass((java.lang.Class) wildcardClass69);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass69);
        boolean boolean72 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        org.mockito.cglib.proxy.Callback callback73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj74 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass69, callback73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(generatorStrategy24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(namingPolicy48);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(namingPolicy62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test08311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08311");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader42 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer0.setCallback(callback46);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer0.setCallback(callback50);
        enhancer0.setInterceptDuringConstruction(false);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(generatorStrategy45);
    }

    @Test
    public void test08312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08312");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        enhancer0.setClassLoader(classLoader24);
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader28 = enhancer27.getClassLoader();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Class[] classArray45 = new java.lang.Class[] { wildcardClass30, wildcardClass32, wildcardClass35, wildcardClass38, wildcardClass41, wildcardClass43 };
        enhancer27.setInterfaces(classArray45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer47.getNamingPolicy();
        java.lang.ClassLoader classLoader51 = enhancer47.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader53 = enhancer52.getClassLoader();
        enhancer47.setClassLoader(classLoader53);
        enhancer27.setClassLoader(classLoader53);
        org.mockito.cglib.proxy.Callback callback56 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray57 = new org.mockito.cglib.proxy.Callback[] { callback56 };
        enhancer27.setCallbacks(callbackArray57);
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setAttemptLoad(true);
        boolean boolean62 = enhancer59.getAttemptLoad();
        java.lang.ClassLoader classLoader63 = enhancer59.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy64 = enhancer59.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setAttemptLoad(true);
        boolean boolean68 = enhancer65.getAttemptLoad();
        java.lang.ClassLoader classLoader69 = enhancer65.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy70 = enhancer65.getStrategy();
        enhancer59.setStrategy(generatorStrategy70);
        enhancer27.setStrategy(generatorStrategy70);
        enhancer27.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer75 = new org.mockito.cglib.proxy.Enhancer();
        enhancer75.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy78 = enhancer75.getNamingPolicy();
        java.lang.ClassLoader classLoader79 = enhancer75.getClassLoader();
        java.lang.ClassLoader classLoader80 = enhancer75.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy81 = enhancer75.getStrategy();
        enhancer27.setStrategy(generatorStrategy81);
        enhancer0.setStrategy(generatorStrategy81);
        enhancer0.setUseCache(false);
        boolean boolean86 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(callbackArray57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertNotNull(generatorStrategy64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(generatorStrategy70);
        org.junit.Assert.assertNotNull(namingPolicy78);
        org.junit.Assert.assertNotNull(classLoader79);
        org.junit.Assert.assertNotNull(classLoader80);
        org.junit.Assert.assertNotNull(generatorStrategy81);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test08313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08313");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer0.getStrategy();
        boolean boolean11 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader13 = enhancer12.getClassLoader();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.Class[] classArray30 = new java.lang.Class[] { wildcardClass15, wildcardClass17, wildcardClass20, wildcardClass23, wildcardClass26, wildcardClass28 };
        enhancer12.setInterfaces(classArray30);
        enhancer12.setUseCache(false);
        boolean boolean34 = enhancer12.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer35.getNamingPolicy();
        boolean boolean39 = enhancer35.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter40 = null;
        enhancer35.setCallbackFilter(callbackFilter40);
        org.mockito.cglib.proxy.Callback callback42 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray43 = new org.mockito.cglib.proxy.Callback[] { callback42 };
        enhancer35.setCallbacks(callbackArray43);
        enhancer12.setCallbacks(callbackArray43);
        java.lang.ClassLoader classLoader46 = enhancer12.getClassLoader();
        enhancer12.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setAttemptLoad(true);
        boolean boolean52 = enhancer49.getAttemptLoad();
        java.lang.ClassLoader classLoader53 = enhancer49.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer49.getStrategy();
        boolean boolean56 = generatorStrategy54.equals((java.lang.Object) "hi!");
        boolean boolean58 = generatorStrategy54.equals((java.lang.Object) false);
        enhancer12.setStrategy(generatorStrategy54);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer60.getNamingPolicy();
        java.lang.ClassLoader classLoader64 = enhancer60.getClassLoader();
        java.lang.ClassLoader classLoader65 = enhancer60.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy66 = enhancer60.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer60.getNamingPolicy();
        boolean boolean68 = enhancer60.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = enhancer60.getNamingPolicy();
        java.lang.ClassLoader classLoader70 = enhancer60.getClassLoader();
        enhancer12.setClassLoader(classLoader70);
        enhancer0.setClassLoader(classLoader70);
        enhancer0.setAttemptLoad(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(callbackArray43);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(classLoader65);
        org.junit.Assert.assertNotNull(generatorStrategy66);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(namingPolicy69);
        org.junit.Assert.assertNotNull(classLoader70);
    }

    @Test
    public void test08314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08314");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer0.setCallbackFilter(callbackFilter25);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter27 = null;
        enhancer0.setCallbackFilter(callbackFilter27);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer0.setCallback(callback29);
        boolean boolean31 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(false);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test08315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08315");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer9.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer13.getNamingPolicy();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader19 = enhancer18.getClassLoader();
        enhancer13.setClassLoader(classLoader19);
        boolean boolean21 = enhancer13.getUseCache();
        boolean boolean22 = namingPolicy12.equals((java.lang.Object) enhancer13);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setAttemptLoad(true);
        boolean boolean26 = enhancer23.getAttemptLoad();
        java.lang.ClassLoader classLoader27 = enhancer23.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy28 = enhancer23.getStrategy();
        enhancer13.setStrategy(generatorStrategy28);
        java.lang.ClassLoader classLoader30 = enhancer13.getClassLoader();
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer13.setCallback(callback31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        enhancer13.setClassLoader(classLoader37);
        enhancer0.setClassLoader(classLoader37);
        enhancer0.setUseFactory(false);
        java.lang.ClassLoader classLoader42 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setAttemptLoad(true);
        enhancer43.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer43.setInterceptDuringConstruction(true);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        enhancer43.setSuperclass((java.lang.Class) wildcardClass51);
        enhancer43.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback56 = null;
        enhancer43.setCallback(callback56);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy58 = enhancer43.getStrategy();
        enhancer0.setStrategy(generatorStrategy58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        java.lang.ClassLoader classLoader63 = null;
        enhancer60.setClassLoader(classLoader63);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setAttemptLoad(true);
        boolean boolean68 = enhancer65.getAttemptLoad();
        java.lang.ClassLoader classLoader69 = enhancer65.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy70 = enhancer65.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setAttemptLoad(true);
        boolean boolean74 = enhancer71.getAttemptLoad();
        java.lang.ClassLoader classLoader75 = enhancer71.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer71.getStrategy();
        enhancer65.setStrategy(generatorStrategy76);
        enhancer60.setStrategy(generatorStrategy76);
        org.mockito.cglib.proxy.Callback callback79 = null;
        enhancer60.setCallback(callback79);
        boolean boolean81 = enhancer60.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy82 = enhancer60.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer83 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean84 = enhancer83.getUseCache();
        java.lang.ClassLoader classLoader85 = enhancer83.getClassLoader();
        enhancer60.setClassLoader(classLoader85);
        enhancer60.setAttemptLoad(true);
        enhancer60.setSerialVersionUID((java.lang.Long) 0L);
        enhancer60.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy93 = enhancer60.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy94 = enhancer60.getNamingPolicy();
        java.lang.ClassLoader classLoader95 = enhancer60.getClassLoader();
        boolean boolean96 = enhancer60.getAttemptLoad();
        java.lang.ClassLoader classLoader97 = enhancer60.getClassLoader();
        enhancer0.setClassLoader(classLoader97);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(generatorStrategy28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(generatorStrategy58);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(generatorStrategy70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(generatorStrategy76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(generatorStrategy82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(classLoader85);
        org.junit.Assert.assertNotNull(generatorStrategy93);
        org.junit.Assert.assertNotNull(namingPolicy94);
        org.junit.Assert.assertNotNull(classLoader95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(classLoader97);
    }

    @Test
    public void test08316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08316");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        boolean boolean4 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray8 = new org.mockito.cglib.proxy.Callback[] { callback7 };
        enhancer0.setCallbacks(callbackArray8);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy14 = enhancer13.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader16 = enhancer15.getClassLoader();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Class[] classArray33 = new java.lang.Class[] { wildcardClass18, wildcardClass20, wildcardClass23, wildcardClass26, wildcardClass29, wildcardClass31 };
        enhancer15.setInterfaces(classArray33);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer35.getNamingPolicy();
        enhancer15.setNamingPolicy(namingPolicy38);
        enhancer13.setNamingPolicy(namingPolicy38);
        enhancer13.setUseCache(false);
        enhancer13.setAttemptLoad(true);
        java.lang.ClassLoader classLoader45 = enhancer13.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter46 = null;
        enhancer13.setCallbackFilter(callbackFilter46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer48.getNamingPolicy();
        java.lang.ClassLoader classLoader52 = enhancer48.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader54 = enhancer53.getClassLoader();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Class[] classArray71 = new java.lang.Class[] { wildcardClass56, wildcardClass58, wildcardClass61, wildcardClass64, wildcardClass67, wildcardClass69 };
        enhancer53.setInterfaces(classArray71);
        org.mockito.cglib.proxy.Enhancer enhancer73 = new org.mockito.cglib.proxy.Enhancer();
        enhancer73.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy76 = enhancer73.getNamingPolicy();
        java.lang.ClassLoader classLoader77 = enhancer73.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer78 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader79 = enhancer78.getClassLoader();
        enhancer73.setClassLoader(classLoader79);
        enhancer53.setClassLoader(classLoader79);
        org.mockito.cglib.proxy.Callback callback82 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray83 = new org.mockito.cglib.proxy.Callback[] { callback82 };
        enhancer53.setCallbacks(callbackArray83);
        enhancer48.setCallbacks(callbackArray83);
        enhancer48.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback88 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray89 = new org.mockito.cglib.proxy.Callback[] { callback88 };
        enhancer48.setCallbacks(callbackArray89);
        enhancer13.setCallbacks(callbackArray89);
        enhancer0.setCallbacks(callbackArray89);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter93 = null;
        enhancer0.setCallbackFilter(callbackFilter93);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(callbackArray8);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertNotNull(generatorStrategy14);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(classArray71);
        org.junit.Assert.assertNotNull(namingPolicy76);
        org.junit.Assert.assertNotNull(classLoader77);
        org.junit.Assert.assertNotNull(classLoader79);
        org.junit.Assert.assertNotNull(callbackArray83);
        org.junit.Assert.assertNotNull(callbackArray89);
    }

    @Test
    public void test08317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08317");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        boolean boolean36 = enhancer33.getAttemptLoad();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy38 = enhancer33.getStrategy();
        boolean boolean40 = generatorStrategy38.equals((java.lang.Object) "hi!");
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = enhancer45.getNamingPolicy();
        java.lang.ClassLoader classLoader49 = enhancer45.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader51 = enhancer50.getClassLoader();
        enhancer45.setClassLoader(classLoader51);
        boolean boolean53 = enhancer45.getUseCache();
        boolean boolean54 = namingPolicy44.equals((java.lang.Object) enhancer45);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setAttemptLoad(true);
        boolean boolean58 = enhancer55.getAttemptLoad();
        java.lang.ClassLoader classLoader59 = enhancer55.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy60 = enhancer55.getStrategy();
        enhancer45.setStrategy(generatorStrategy60);
        java.lang.ClassLoader classLoader62 = enhancer45.getClassLoader();
        org.mockito.cglib.proxy.Callback callback63 = null;
        enhancer45.setCallback(callback63);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer65.getNamingPolicy();
        java.lang.ClassLoader classLoader69 = enhancer65.getClassLoader();
        enhancer45.setClassLoader(classLoader69);
        boolean boolean71 = generatorStrategy38.equals((java.lang.Object) classLoader69);
        enhancer0.setClassLoader(classLoader69);
        java.lang.Class<?> wildcardClass73 = classLoader69.getClass();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(generatorStrategy38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(namingPolicy48);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(generatorStrategy60);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(namingPolicy68);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test08318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08318");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(false);
        enhancer0.setAttemptLoad(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        boolean boolean19 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader21 = enhancer20.getClassLoader();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Class[] classArray38 = new java.lang.Class[] { wildcardClass23, wildcardClass25, wildcardClass28, wildcardClass31, wildcardClass34, wildcardClass36 };
        enhancer20.setInterfaces(classArray38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer40.getNamingPolicy();
        java.lang.ClassLoader classLoader44 = enhancer40.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader46 = enhancer45.getClassLoader();
        enhancer40.setClassLoader(classLoader46);
        enhancer20.setClassLoader(classLoader46);
        java.lang.Class class49 = null;
        enhancer20.setSuperclass(class49);
        java.lang.ClassLoader classLoader51 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer20.setCallback(callback52);
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = enhancer20.getNamingPolicy();
        enhancer20.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy57);
        enhancer0.setInterceptDuringConstruction(false);
        boolean boolean61 = enhancer0.getUseCache();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(namingPolicy54);
        org.junit.Assert.assertNotNull(namingPolicy57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test08319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08319");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setAttemptLoad(true);
        enhancer9.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer9.setInterceptDuringConstruction(true);
        enhancer9.setUseCache(true);
        boolean boolean18 = enhancer9.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader20 = enhancer19.getClassLoader();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass22, wildcardClass24, wildcardClass27, wildcardClass30, wildcardClass33, wildcardClass35 };
        enhancer19.setInterfaces(classArray37);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer39.getNamingPolicy();
        java.lang.ClassLoader classLoader43 = enhancer39.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        enhancer39.setClassLoader(classLoader45);
        enhancer19.setClassLoader(classLoader45);
        java.lang.ClassLoader classLoader48 = enhancer19.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader50 = enhancer49.getClassLoader();
        enhancer49.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer49.getNamingPolicy();
        enhancer19.setNamingPolicy(namingPolicy53);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy55 = enhancer19.getStrategy();
        enhancer9.setStrategy(generatorStrategy55);
        boolean boolean57 = enhancer9.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        enhancer58.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy61 = enhancer58.getNamingPolicy();
        java.lang.ClassLoader classLoader62 = enhancer58.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader64 = enhancer63.getClassLoader();
        enhancer58.setClassLoader(classLoader64);
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean67 = enhancer66.getUseCache();
        java.lang.ClassLoader classLoader68 = enhancer66.getClassLoader();
        enhancer58.setClassLoader(classLoader68);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy70 = enhancer58.getStrategy();
        enhancer9.setStrategy(generatorStrategy70);
        enhancer0.setStrategy(generatorStrategy70);
        boolean boolean73 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter74 = null;
        enhancer0.setCallbackFilter(callbackFilter74);
        enhancer0.setUseFactory(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertNotNull(generatorStrategy55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(namingPolicy61);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(generatorStrategy70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test08320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08320");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass10);
        enhancer0.setUseCache(true);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy17 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer18.getNamingPolicy();
        java.lang.ClassLoader classLoader22 = enhancer18.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader24 = enhancer23.getClassLoader();
        enhancer18.setClassLoader(classLoader24);
        java.lang.ClassLoader classLoader26 = enhancer18.getClassLoader();
        enhancer18.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy29 = enhancer18.getStrategy();
        enhancer18.setUseFactory(false);
        enhancer18.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy34 = enhancer18.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Class[] classArray53 = new java.lang.Class[] { wildcardClass38, wildcardClass40, wildcardClass43, wildcardClass46, wildcardClass49, wildcardClass51 };
        enhancer35.setInterfaces(classArray53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        enhancer35.setSuperclass((java.lang.Class) wildcardClass56);
        enhancer35.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy60 = enhancer35.getStrategy();
        boolean boolean61 = generatorStrategy34.equals((java.lang.Object) enhancer35);
        boolean boolean62 = generatorStrategy17.equals((java.lang.Object) enhancer35);
        enhancer35.setUseFactory(false);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(generatorStrategy17);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(generatorStrategy29);
        org.junit.Assert.assertNotNull(generatorStrategy34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(generatorStrategy60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test08321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08321");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = null;
        enhancer0.setNamingPolicy(namingPolicy9);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader14 = enhancer13.getClassLoader();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Class[] classArray31 = new java.lang.Class[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass29 };
        enhancer13.setInterfaces(classArray31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        enhancer13.setNamingPolicy(namingPolicy36);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer38.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer38.getNamingPolicy();
        enhancer13.setNamingPolicy(namingPolicy42);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Class[] classArray62 = new java.lang.Class[] { wildcardClass47, wildcardClass49, wildcardClass52, wildcardClass55, wildcardClass58, wildcardClass60 };
        enhancer44.setInterfaces(classArray62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        java.lang.ClassLoader classLoader68 = enhancer64.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader70 = enhancer69.getClassLoader();
        enhancer64.setClassLoader(classLoader70);
        enhancer44.setClassLoader(classLoader70);
        java.lang.ClassLoader classLoader73 = enhancer44.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader75 = enhancer74.getClassLoader();
        enhancer74.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy78 = enhancer74.getNamingPolicy();
        enhancer44.setNamingPolicy(namingPolicy78);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy80 = enhancer44.getStrategy();
        enhancer13.setStrategy(generatorStrategy80);
        org.mockito.cglib.core.NamingPolicy namingPolicy82 = enhancer13.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy82);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy84 = enhancer0.getStrategy();
        enhancer0.setUseCache(true);
        boolean boolean87 = enhancer0.getUseCache();
        java.lang.Class<?> wildcardClass88 = enhancer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(classLoader70);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(namingPolicy78);
        org.junit.Assert.assertNotNull(generatorStrategy80);
        org.junit.Assert.assertNotNull(namingPolicy82);
        org.junit.Assert.assertNotNull(generatorStrategy84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test08322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08322");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer30.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer30.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy34);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy36 = enhancer0.getStrategy();
        boolean boolean37 = enhancer0.getUseCache();
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Class[] classArray58 = new java.lang.Class[] { wildcardClass43, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass54, wildcardClass56 };
        enhancer40.setInterfaces(classArray58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        enhancer60.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer60.setInterceptDuringConstruction(true);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        enhancer60.setSuperclass((java.lang.Class) wildcardClass68);
        enhancer40.setSuperclass((java.lang.Class) wildcardClass68);
        enhancer40.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        enhancer74.setAttemptLoad(true);
        enhancer74.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer74.setInterceptDuringConstruction(true);
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        enhancer74.setSuperclass((java.lang.Class) wildcardClass82);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy84 = null;
        enhancer74.setStrategy(generatorStrategy84);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy86 = enhancer74.getStrategy();
        enhancer40.setStrategy(generatorStrategy86);
        enhancer0.setStrategy(generatorStrategy86);
        java.lang.Object obj89 = null;
        boolean boolean90 = generatorStrategy86.equals(obj89);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertNotNull(generatorStrategy36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(generatorStrategy86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test08323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08323");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        enhancer0.setUseCache(true);
        enhancer0.setAttemptLoad(false);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy14 = enhancer0.getStrategy();
        java.lang.ClassLoader classLoader15 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean17 = enhancer16.getUseCache();
        java.lang.ClassLoader classLoader18 = enhancer16.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer19.getNamingPolicy();
        java.lang.ClassLoader classLoader23 = enhancer19.getClassLoader();
        enhancer16.setClassLoader(classLoader23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        enhancer25.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer25.setInterceptDuringConstruction(true);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        enhancer25.setSuperclass((java.lang.Class) wildcardClass33);
        enhancer16.setSuperclass((java.lang.Class) wildcardClass33);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer16.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy38 = enhancer16.getStrategy();
        enhancer0.setStrategy(generatorStrategy38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        enhancer40.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer40.setInterceptDuringConstruction(true);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        enhancer40.setSuperclass((java.lang.Class) wildcardClass48);
        enhancer40.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer40.setCallback(callback53);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer40.getNamingPolicy();
        java.lang.ClassLoader classLoader56 = enhancer40.getClassLoader();
        boolean boolean57 = enhancer40.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter58 = null;
        enhancer40.setCallbackFilter(callbackFilter58);
        boolean boolean60 = enhancer40.getUseCache();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray61 = generatorStrategy38.generate((org.mockito.cglib.core.ClassGenerator) enhancer40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(generatorStrategy14);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(generatorStrategy38);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test08324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08324");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray10 = new org.mockito.cglib.proxy.Callback[] { callback9 };
        enhancer0.setCallbacks(callbackArray10);
        boolean boolean12 = enhancer0.getUseCache();
        enhancer0.setUseFactory(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(callbackArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test08325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08325");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer30.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer30.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy34);
        org.mockito.cglib.proxy.Callback callback36 = null;
        enhancer0.setCallback(callback36);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setAttemptLoad(true);
        boolean boolean41 = enhancer38.getAttemptLoad();
        java.lang.ClassLoader classLoader42 = enhancer38.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy43 = enhancer38.getStrategy();
        boolean boolean45 = generatorStrategy43.equals((java.lang.Object) "hi!");
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = enhancer46.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        enhancer50.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer50.getNamingPolicy();
        java.lang.ClassLoader classLoader54 = enhancer50.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader56 = enhancer55.getClassLoader();
        enhancer50.setClassLoader(classLoader56);
        boolean boolean58 = enhancer50.getUseCache();
        boolean boolean59 = namingPolicy49.equals((java.lang.Object) enhancer50);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        boolean boolean63 = enhancer60.getAttemptLoad();
        java.lang.ClassLoader classLoader64 = enhancer60.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy65 = enhancer60.getStrategy();
        enhancer50.setStrategy(generatorStrategy65);
        java.lang.ClassLoader classLoader67 = enhancer50.getClassLoader();
        org.mockito.cglib.proxy.Callback callback68 = null;
        enhancer50.setCallback(callback68);
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy73 = enhancer70.getNamingPolicy();
        java.lang.ClassLoader classLoader74 = enhancer70.getClassLoader();
        enhancer50.setClassLoader(classLoader74);
        boolean boolean76 = generatorStrategy43.equals((java.lang.Object) classLoader74);
        enhancer0.setStrategy(generatorStrategy43);
        enhancer0.setUseCache(true);
        boolean boolean80 = enhancer0.getUseCache();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(generatorStrategy43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(namingPolicy49);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(generatorStrategy65);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertNotNull(namingPolicy73);
        org.junit.Assert.assertNotNull(classLoader74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test08326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08326");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        enhancer20.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer20.setInterceptDuringConstruction(true);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        enhancer20.setSuperclass((java.lang.Class) wildcardClass28);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass28);
        enhancer0.setUseFactory(true);
        java.lang.ClassLoader classLoader34 = enhancer0.getClassLoader();
        boolean boolean35 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test08327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08327");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setAttemptLoad(true);
        boolean boolean13 = enhancer10.getAttemptLoad();
        java.lang.ClassLoader classLoader14 = enhancer10.getClassLoader();
        enhancer10.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer10.setCallback(callback17);
        enhancer10.setUseCache(false);
        enhancer10.setUseCache(true);
        enhancer10.setUseCache(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = enhancer10.getStrategy();
        enhancer10.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy28 = enhancer10.getStrategy();
        boolean boolean29 = namingPolicy9.equals((java.lang.Object) enhancer10);
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(generatorStrategy25);
        org.junit.Assert.assertNotNull(generatorStrategy28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test08328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08328");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer0.getNamingPolicy();
        enhancer0.setUseCache(true);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer0.getStrategy();
        org.junit.Assert.assertNotNull(namingPolicy13);
        org.junit.Assert.assertNotNull(generatorStrategy18);
    }

    @Test
    public void test08329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08329");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader7 = enhancer6.getClassLoader();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass9, wildcardClass11, wildcardClass14, wildcardClass17, wildcardClass20, wildcardClass22 };
        enhancer6.setInterfaces(classArray24);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer26.getNamingPolicy();
        java.lang.ClassLoader classLoader30 = enhancer26.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader32 = enhancer31.getClassLoader();
        enhancer26.setClassLoader(classLoader32);
        enhancer6.setClassLoader(classLoader32);
        org.mockito.cglib.proxy.Callback callback35 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray36 = new org.mockito.cglib.proxy.Callback[] { callback35 };
        enhancer6.setCallbacks(callbackArray36);
        boolean boolean38 = generatorStrategy5.equals((java.lang.Object) enhancer6);
        org.mockito.cglib.proxy.Callback callback39 = null;
        enhancer6.setCallback(callback39);
        enhancer6.setAttemptLoad(true);
        java.lang.ClassLoader classLoader43 = enhancer6.getClassLoader();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(callbackArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classLoader43);
    }

    @Test
    public void test08330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08330");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        enhancer2.setAttemptLoad(true);
        java.lang.ClassLoader classLoader5 = null;
        enhancer2.setClassLoader(classLoader5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        boolean boolean10 = enhancer7.getAttemptLoad();
        java.lang.ClassLoader classLoader11 = enhancer7.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer7.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        boolean boolean16 = enhancer13.getAttemptLoad();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer13.getStrategy();
        enhancer7.setStrategy(generatorStrategy18);
        enhancer2.setStrategy(generatorStrategy18);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer2.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy21);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer0.setCallback(callback25);
        java.lang.Class<?> wildcardClass27 = enhancer0.getClass();
        org.mockito.cglib.proxy.Callback[] callbackArray28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerCallbacks((java.lang.Class) wildcardClass27, callbackArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.proxy.Enhancer is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(generatorStrategy18);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test08331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08331");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(false);
        enhancer0.setAttemptLoad(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        boolean boolean19 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader21 = enhancer20.getClassLoader();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Class[] classArray38 = new java.lang.Class[] { wildcardClass23, wildcardClass25, wildcardClass28, wildcardClass31, wildcardClass34, wildcardClass36 };
        enhancer20.setInterfaces(classArray38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer40.getNamingPolicy();
        java.lang.ClassLoader classLoader44 = enhancer40.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader46 = enhancer45.getClassLoader();
        enhancer40.setClassLoader(classLoader46);
        enhancer20.setClassLoader(classLoader46);
        java.lang.Class class49 = null;
        enhancer20.setSuperclass(class49);
        java.lang.ClassLoader classLoader51 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer20.setCallback(callback52);
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = enhancer20.getNamingPolicy();
        enhancer20.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy57);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setInterceptDuringConstruction(true);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(namingPolicy54);
        org.junit.Assert.assertNotNull(namingPolicy57);
    }

    @Test
    public void test08332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08332");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(false);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer0.getNamingPolicy();
        boolean boolean11 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer0.setCallback(callback12);
        java.lang.ClassLoader classLoader14 = enhancer0.getClassLoader();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(classLoader14);
    }

    @Test
    public void test08333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08333");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        boolean boolean25 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer26.getNamingPolicy();
        java.lang.ClassLoader classLoader30 = enhancer26.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader32 = enhancer31.getClassLoader();
        enhancer26.setClassLoader(classLoader32);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean35 = enhancer34.getUseCache();
        java.lang.ClassLoader classLoader36 = enhancer34.getClassLoader();
        enhancer26.setClassLoader(classLoader36);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy38 = enhancer26.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader40 = enhancer39.getClassLoader();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Class[] classArray57 = new java.lang.Class[] { wildcardClass42, wildcardClass44, wildcardClass47, wildcardClass50, wildcardClass53, wildcardClass55 };
        enhancer39.setInterfaces(classArray57);
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = enhancer59.getNamingPolicy();
        java.lang.ClassLoader classLoader63 = enhancer59.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader65 = enhancer64.getClassLoader();
        enhancer59.setClassLoader(classLoader65);
        enhancer39.setClassLoader(classLoader65);
        boolean boolean68 = enhancer39.getUseCache();
        boolean boolean69 = generatorStrategy38.equals((java.lang.Object) enhancer39);
        java.lang.ClassLoader classLoader70 = null;
        enhancer39.setClassLoader(classLoader70);
        org.mockito.cglib.core.NamingPolicy namingPolicy72 = enhancer39.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy72);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(generatorStrategy38);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(namingPolicy62);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertNotNull(classLoader65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(namingPolicy72);
    }

    @Test
    public void test08334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08334");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer0.getNamingPolicy();
        boolean boolean30 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Class[] classArray53 = new java.lang.Class[] { wildcardClass38, wildcardClass40, wildcardClass43, wildcardClass46, wildcardClass49, wildcardClass51 };
        enhancer35.setInterfaces(classArray53);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy58 = enhancer55.getNamingPolicy();
        enhancer35.setNamingPolicy(namingPolicy58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer60.getNamingPolicy();
        java.lang.ClassLoader classLoader64 = enhancer60.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader66 = enhancer65.getClassLoader();
        enhancer60.setClassLoader(classLoader66);
        java.lang.Class<?> wildcardClass68 = classLoader66.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        enhancer35.setSuperclass((java.lang.Class) wildcardClass68);
        enhancer35.setUseCache(true);
        enhancer35.setUseCache(true);
        java.lang.Class<?> wildcardClass75 = enhancer35.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass75);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Callback callback79 = null;
        enhancer0.setCallback(callback79);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(namingPolicy58);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test08335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08335");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        java.lang.Class<?> wildcardClass8 = classLoader6.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer10.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter14 = null;
        enhancer10.setCallbackFilter(callbackFilter14);
        enhancer10.setAttemptLoad(true);
        enhancer10.setUseFactory(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer10.getNamingPolicy();
        boolean boolean21 = enhancer10.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer22.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer26.getNamingPolicy();
        java.lang.ClassLoader classLoader30 = enhancer26.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader32 = enhancer31.getClassLoader();
        enhancer26.setClassLoader(classLoader32);
        boolean boolean34 = enhancer26.getUseCache();
        boolean boolean35 = namingPolicy25.equals((java.lang.Object) enhancer26);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        boolean boolean39 = enhancer36.getAttemptLoad();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer36.getStrategy();
        enhancer26.setStrategy(generatorStrategy41);
        java.lang.ClassLoader classLoader43 = enhancer26.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer26.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader46 = enhancer45.getClassLoader();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.Class[] classArray63 = new java.lang.Class[] { wildcardClass48, wildcardClass50, wildcardClass53, wildcardClass56, wildcardClass59, wildcardClass61 };
        enhancer45.setInterfaces(classArray63);
        enhancer26.setInterfaces(classArray63);
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader67 = enhancer66.getClassLoader();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        boolean boolean75 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass74);
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass77);
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        boolean boolean83 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass82);
        java.lang.Class[] classArray84 = new java.lang.Class[] { wildcardClass69, wildcardClass71, wildcardClass74, wildcardClass77, wildcardClass80, wildcardClass82 };
        enhancer66.setInterfaces(classArray84);
        enhancer26.setInterfaces(classArray84);
        enhancer10.setInterfaces(classArray84);
        org.mockito.cglib.proxy.Callback callback88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass8, classArray84, callback88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(namingPolicy13);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(classArray63);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(classArray84);
    }

    @Test
    public void test08336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08336");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = enhancer29.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        boolean boolean41 = enhancer33.getUseCache();
        boolean boolean42 = namingPolicy32.equals((java.lang.Object) enhancer33);
        enhancer0.setNamingPolicy(namingPolicy32);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer44.getNamingPolicy();
        java.lang.ClassLoader classLoader48 = enhancer44.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader50 = enhancer49.getClassLoader();
        enhancer44.setClassLoader(classLoader50);
        enhancer44.setAttemptLoad(true);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[] { wildcardClass55 };
        enhancer44.setInterfaces(classArray56);
        enhancer0.setInterfaces(classArray56);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy59 = enhancer0.getStrategy();
        java.lang.ClassLoader classLoader60 = enhancer0.getClassLoader();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy32);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(generatorStrategy59);
        org.junit.Assert.assertNotNull(classLoader60);
    }

    @Test
    public void test08337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08337");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer25.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy29);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader32 = enhancer31.getClassLoader();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass47);
        java.lang.Class[] classArray49 = new java.lang.Class[] { wildcardClass34, wildcardClass36, wildcardClass39, wildcardClass42, wildcardClass45, wildcardClass47 };
        enhancer31.setInterfaces(classArray49);
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = enhancer51.getNamingPolicy();
        java.lang.ClassLoader classLoader55 = enhancer51.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader57 = enhancer56.getClassLoader();
        enhancer51.setClassLoader(classLoader57);
        enhancer31.setClassLoader(classLoader57);
        java.lang.ClassLoader classLoader60 = enhancer31.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader62 = enhancer61.getClassLoader();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer61.getNamingPolicy();
        enhancer31.setNamingPolicy(namingPolicy65);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy67 = enhancer31.getStrategy();
        enhancer0.setStrategy(generatorStrategy67);
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback70 = null;
        enhancer0.setCallback(callback70);
        enhancer0.setUseFactory(false);
        boolean boolean74 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter75 = null;
        enhancer0.setCallbackFilter(callbackFilter75);
        boolean boolean77 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(classArray49);
        org.junit.Assert.assertNotNull(namingPolicy54);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertNotNull(generatorStrategy67);
        org.junit.Assert.assertNotNull(namingPolicy69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test08338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08338");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader42 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader43 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter44 = null;
        enhancer0.setCallbackFilter(callbackFilter44);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setAttemptLoad(true);
        boolean boolean52 = enhancer49.getAttemptLoad();
        java.lang.ClassLoader classLoader53 = enhancer49.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer49.getStrategy();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        enhancer49.setSuperclass((java.lang.Class) wildcardClass56);
        java.lang.ClassLoader classLoader58 = enhancer49.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = enhancer59.getNamingPolicy();
        enhancer49.setNamingPolicy(namingPolicy62);
        boolean boolean64 = enhancer49.getAttemptLoad();
        enhancer49.setAttemptLoad(false);
        enhancer49.setUseCache(false);
        boolean boolean69 = generatorStrategy48.equals((java.lang.Object) enhancer49);
        java.lang.Class<?> wildcardClass70 = enhancer49.getClass();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(namingPolicy62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test08339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08339");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer0.setCallback(callback35);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer0.getNamingPolicy();
        enhancer0.setUseFactory(true);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer0.getNamingPolicy();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(namingPolicy44);
    }

    @Test
    public void test08340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08340");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        enhancer0.setAttemptLoad(true);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[] { wildcardClass11 };
        enhancer0.setInterfaces(classArray12);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter14 = null;
        enhancer0.setCallbackFilter(callbackFilter14);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setAttemptLoad(true);
        boolean boolean19 = enhancer16.getAttemptLoad();
        java.lang.ClassLoader classLoader20 = enhancer16.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy21 = enhancer16.getStrategy();
        enhancer16.setAttemptLoad(false);
        enhancer16.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer16.getNamingPolicy();
        java.lang.ClassLoader classLoader27 = enhancer16.getClassLoader();
        enhancer0.setClassLoader(classLoader27);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        boolean boolean30 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setAttemptLoad(true);
        java.lang.ClassLoader classLoader34 = null;
        enhancer31.setClassLoader(classLoader34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        boolean boolean39 = enhancer36.getAttemptLoad();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer36.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        boolean boolean45 = enhancer42.getAttemptLoad();
        java.lang.ClassLoader classLoader46 = enhancer42.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy47 = enhancer42.getStrategy();
        enhancer36.setStrategy(generatorStrategy47);
        enhancer31.setStrategy(generatorStrategy47);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer31.setCallback(callback50);
        boolean boolean52 = enhancer31.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy53 = enhancer31.getStrategy();
        java.lang.ClassLoader classLoader54 = enhancer31.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy55 = enhancer31.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean57 = enhancer56.getUseCache();
        java.lang.ClassLoader classLoader58 = enhancer56.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = enhancer59.getNamingPolicy();
        java.lang.ClassLoader classLoader63 = enhancer59.getClassLoader();
        enhancer56.setClassLoader(classLoader63);
        java.lang.Class[] classArray65 = new java.lang.Class[] {};
        enhancer56.setInterfaces(classArray65);
        enhancer31.setInterfaces(classArray65);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackTypes(classArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(generatorStrategy21);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(generatorStrategy47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(generatorStrategy53);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(generatorStrategy55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(namingPolicy62);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertNotNull(classArray65);
    }

    @Test
    public void test08341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08341");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader22 = enhancer21.getClassLoader();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass24, wildcardClass26, wildcardClass29, wildcardClass32, wildcardClass35, wildcardClass37 };
        enhancer21.setInterfaces(classArray39);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        java.lang.ClassLoader classLoader45 = enhancer41.getClassLoader();
        enhancer21.setClassLoader(classLoader45);
        enhancer4.setClassLoader(classLoader45);
        enhancer4.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer4.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter51 = null;
        enhancer4.setCallbackFilter(callbackFilter51);
        java.lang.ClassLoader classLoader53 = enhancer4.getClassLoader();
        enhancer4.setUseFactory(false);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertNotNull(classLoader53);
    }

    @Test
    public void test08342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08342");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer0.setCallback(callback35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = enhancer37.getNamingPolicy();
        java.lang.ClassLoader classLoader41 = enhancer37.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader43 = enhancer42.getClassLoader();
        enhancer37.setClassLoader(classLoader43);
        java.lang.ClassLoader classLoader45 = enhancer37.getClassLoader();
        enhancer37.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer37.getStrategy();
        enhancer37.setUseFactory(false);
        enhancer37.setAttemptLoad(false);
        boolean boolean53 = enhancer37.getUseCache();
        java.lang.ClassLoader classLoader54 = enhancer37.getClassLoader();
        enhancer0.setClassLoader(classLoader54);
        enhancer0.setAttemptLoad(false);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy40);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(classLoader54);
    }

    @Test
    public void test08343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08343");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer6.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer10.getNamingPolicy();
        java.lang.ClassLoader classLoader14 = enhancer10.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader16 = enhancer15.getClassLoader();
        enhancer10.setClassLoader(classLoader16);
        boolean boolean18 = enhancer10.getUseCache();
        boolean boolean19 = namingPolicy9.equals((java.lang.Object) enhancer10);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        boolean boolean23 = enhancer20.getAttemptLoad();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = enhancer20.getStrategy();
        enhancer10.setStrategy(generatorStrategy25);
        java.lang.ClassLoader classLoader27 = enhancer10.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer10.getNamingPolicy();
        boolean boolean30 = namingPolicy28.equals((java.lang.Object) 1.0d);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean32 = enhancer31.getUseCache();
        java.lang.ClassLoader classLoader33 = enhancer31.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer34.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy41 = enhancer38.getNamingPolicy();
        java.lang.ClassLoader classLoader42 = enhancer38.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader44 = enhancer43.getClassLoader();
        enhancer38.setClassLoader(classLoader44);
        boolean boolean46 = enhancer38.getUseCache();
        boolean boolean47 = namingPolicy37.equals((java.lang.Object) enhancer38);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setAttemptLoad(true);
        boolean boolean51 = enhancer48.getAttemptLoad();
        java.lang.ClassLoader classLoader52 = enhancer48.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy53 = enhancer48.getStrategy();
        enhancer38.setStrategy(generatorStrategy53);
        java.lang.ClassLoader classLoader55 = enhancer38.getClassLoader();
        enhancer31.setClassLoader(classLoader55);
        boolean boolean57 = namingPolicy28.equals((java.lang.Object) enhancer31);
        enhancer0.setNamingPolicy(namingPolicy28);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setAttemptLoad(false);
        java.lang.ClassLoader classLoader65 = enhancer0.getClassLoader();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertNotNull(namingPolicy13);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(generatorStrategy25);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(namingPolicy41);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(generatorStrategy53);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(classLoader65);
    }

    @Test
    public void test08344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08344");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setAttemptLoad(true);
        boolean boolean9 = enhancer6.getAttemptLoad();
        java.lang.ClassLoader classLoader10 = enhancer6.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer6.getStrategy();
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        boolean boolean16 = enhancer13.getAttemptLoad();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer13.getStrategy();
        enhancer0.setStrategy(generatorStrategy18);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer0.setCallback(callback22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader25 = enhancer24.getClassLoader();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Class[] classArray42 = new java.lang.Class[] { wildcardClass27, wildcardClass29, wildcardClass32, wildcardClass35, wildcardClass38, wildcardClass40 };
        enhancer24.setInterfaces(classArray42);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer44.getNamingPolicy();
        enhancer24.setNamingPolicy(namingPolicy47);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader50 = enhancer49.getClassLoader();
        enhancer49.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer49.getNamingPolicy();
        enhancer24.setNamingPolicy(namingPolicy53);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean56 = enhancer55.getUseCache();
        java.lang.ClassLoader classLoader57 = enhancer55.getClassLoader();
        enhancer24.setClassLoader(classLoader57);
        enhancer24.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer61.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer65.getNamingPolicy();
        java.lang.ClassLoader classLoader69 = enhancer65.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader71 = enhancer70.getClassLoader();
        enhancer65.setClassLoader(classLoader71);
        boolean boolean73 = enhancer65.getUseCache();
        boolean boolean74 = namingPolicy64.equals((java.lang.Object) enhancer65);
        java.lang.Class<?> wildcardClass75 = enhancer65.getClass();
        enhancer24.setSuperclass((java.lang.Class) wildcardClass75);
        enhancer24.setUseFactory(true);
        java.lang.Class<?> wildcardClass79 = enhancer24.getClass();
        boolean boolean80 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass79);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass79);
        boolean boolean82 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(generatorStrategy18);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertNotNull(namingPolicy68);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(classLoader71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test08345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08345");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader17 = enhancer16.getClassLoader();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Class[] classArray34 = new java.lang.Class[] { wildcardClass19, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass30, wildcardClass32 };
        enhancer16.setInterfaces(classArray34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer36.getNamingPolicy();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader42 = enhancer41.getClassLoader();
        enhancer36.setClassLoader(classLoader42);
        enhancer16.setClassLoader(classLoader42);
        org.mockito.cglib.proxy.Callback callback45 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray46 = new org.mockito.cglib.proxy.Callback[] { callback45 };
        enhancer16.setCallbacks(callbackArray46);
        enhancer12.setCallbacks(callbackArray46);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader50 = enhancer49.getClassLoader();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.Class[] classArray67 = new java.lang.Class[] { wildcardClass52, wildcardClass54, wildcardClass57, wildcardClass60, wildcardClass63, wildcardClass65 };
        enhancer49.setInterfaces(classArray67);
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        enhancer69.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy72 = enhancer69.getNamingPolicy();
        enhancer49.setNamingPolicy(namingPolicy72);
        enhancer12.setNamingPolicy(namingPolicy72);
        enhancer0.setNamingPolicy(namingPolicy72);
        org.mockito.cglib.core.NamingPolicy namingPolicy76 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        boolean boolean79 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Callback callback80 = null;
        enhancer0.setCallback(callback80);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(callbackArray46);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(classArray67);
        org.junit.Assert.assertNotNull(namingPolicy72);
        org.junit.Assert.assertNotNull(namingPolicy76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test08346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08346");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader42 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader43 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter44 = null;
        enhancer0.setCallbackFilter(callbackFilter44);
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer0.setCallback(callback46);
        enhancer0.setUseFactory(true);
        boolean boolean50 = enhancer0.getUseCache();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test08347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08347");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer0.setCallback(callback19);
        boolean boolean21 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader23 = enhancer22.getClassLoader();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        java.lang.Class[] classArray40 = new java.lang.Class[] { wildcardClass25, wildcardClass27, wildcardClass30, wildcardClass33, wildcardClass36, wildcardClass38 };
        enhancer22.setInterfaces(classArray40);
        org.mockito.cglib.proxy.Callback[] callbackArray42 = null;
        enhancer22.setCallbacks(callbackArray42);
        enhancer22.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader47 = enhancer46.getClassLoader();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        java.lang.Class[] classArray64 = new java.lang.Class[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass57, wildcardClass60, wildcardClass62 };
        enhancer46.setInterfaces(classArray64);
        enhancer22.setInterfaces(classArray64);
        enhancer0.setInterfaces(classArray64);
        boolean boolean68 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy69 = enhancer0.getStrategy();
        enhancer0.setUseFactory(false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(classArray64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(generatorStrategy69);
    }

    @Test
    public void test08348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08348");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setInterceptDuringConstruction(true);
        boolean boolean9 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(false);
        java.lang.Class<?> wildcardClass12 = enhancer0.getClass();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer13.getNamingPolicy();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer13.getStrategy();
        enhancer13.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer13.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer22.getNamingPolicy();
        java.lang.ClassLoader classLoader26 = enhancer22.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy27 = enhancer22.getStrategy();
        enhancer22.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        java.lang.Class[] classArray48 = new java.lang.Class[] { wildcardClass33, wildcardClass35, wildcardClass38, wildcardClass41, wildcardClass44, wildcardClass46 };
        enhancer30.setInterfaces(classArray48);
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        enhancer50.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer50.getNamingPolicy();
        java.lang.ClassLoader classLoader54 = enhancer50.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader56 = enhancer55.getClassLoader();
        enhancer50.setClassLoader(classLoader56);
        enhancer30.setClassLoader(classLoader56);
        java.lang.ClassLoader classLoader59 = enhancer30.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer60.getNamingPolicy();
        java.lang.ClassLoader classLoader64 = enhancer60.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader66 = enhancer65.getClassLoader();
        enhancer60.setClassLoader(classLoader66);
        enhancer60.setAttemptLoad(true);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class[] classArray72 = new java.lang.Class[] { wildcardClass71 };
        enhancer60.setInterfaces(classArray72);
        enhancer30.setInterfaces(classArray72);
        enhancer22.setInterfaces(classArray72);
        enhancer13.setInterfaces(classArray72);
        org.mockito.cglib.proxy.Callback callback77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass12, classArray72, callback77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(generatorStrategy18);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(generatorStrategy27);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(classArray48);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(classArray72);
    }

    @Test
    public void test08349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08349");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer11.getNamingPolicy();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader17 = enhancer16.getClassLoader();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Class[] classArray34 = new java.lang.Class[] { wildcardClass19, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass30, wildcardClass32 };
        enhancer16.setInterfaces(classArray34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer36.getNamingPolicy();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader42 = enhancer41.getClassLoader();
        enhancer36.setClassLoader(classLoader42);
        enhancer16.setClassLoader(classLoader42);
        org.mockito.cglib.proxy.Callback callback45 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray46 = new org.mockito.cglib.proxy.Callback[] { callback45 };
        enhancer16.setCallbacks(callbackArray46);
        enhancer11.setCallbacks(callbackArray46);
        enhancer0.setCallbacks(callbackArray46);
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy51 = enhancer50.getStrategy();
        java.lang.Class<?> wildcardClass52 = enhancer50.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass52);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = enhancer59.getNamingPolicy();
        java.lang.ClassLoader classLoader63 = enhancer59.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy64 = enhancer59.getStrategy();
        enhancer59.setAttemptLoad(false);
        java.lang.ClassLoader classLoader67 = enhancer59.getClassLoader();
        enhancer59.setSerialVersionUID((java.lang.Long) 0L);
        boolean boolean70 = enhancer59.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setAttemptLoad(true);
        boolean boolean74 = enhancer71.getAttemptLoad();
        java.lang.ClassLoader classLoader75 = enhancer71.getClassLoader();
        enhancer71.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback78 = null;
        enhancer71.setCallback(callback78);
        org.mockito.cglib.proxy.Enhancer enhancer80 = new org.mockito.cglib.proxy.Enhancer();
        enhancer80.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy83 = enhancer80.getNamingPolicy();
        java.lang.ClassLoader classLoader84 = enhancer80.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer85 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader86 = enhancer85.getClassLoader();
        enhancer80.setClassLoader(classLoader86);
        enhancer80.setAttemptLoad(true);
        java.lang.Object obj90 = new java.lang.Object();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Class[] classArray92 = new java.lang.Class[] { wildcardClass91 };
        enhancer80.setInterfaces(classArray92);
        enhancer71.setInterfaces(classArray92);
        enhancer59.setInterfaces(classArray92);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackTypes(classArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class java.lang.Object");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(callbackArray46);
        org.junit.Assert.assertNotNull(generatorStrategy51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(namingPolicy62);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertNotNull(generatorStrategy64);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(namingPolicy83);
        org.junit.Assert.assertNotNull(classLoader84);
        org.junit.Assert.assertNotNull(classLoader86);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(classArray92);
    }

    @Test
    public void test08350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08350");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        boolean boolean5 = enhancer0.getAttemptLoad();
        boolean boolean6 = enhancer0.getUseCache();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer8.getNamingPolicy();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader15 = enhancer14.getClassLoader();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        java.lang.Class[] classArray32 = new java.lang.Class[] { wildcardClass17, wildcardClass19, wildcardClass22, wildcardClass25, wildcardClass28, wildcardClass30 };
        enhancer14.setInterfaces(classArray32);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer34.getNamingPolicy();
        java.lang.ClassLoader classLoader38 = enhancer34.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader40 = enhancer39.getClassLoader();
        enhancer34.setClassLoader(classLoader40);
        enhancer14.setClassLoader(classLoader40);
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer43.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer47.getNamingPolicy();
        java.lang.ClassLoader classLoader51 = enhancer47.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader53 = enhancer52.getClassLoader();
        enhancer47.setClassLoader(classLoader53);
        boolean boolean55 = enhancer47.getUseCache();
        boolean boolean56 = namingPolicy46.equals((java.lang.Object) enhancer47);
        enhancer14.setNamingPolicy(namingPolicy46);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader59 = enhancer58.getClassLoader();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        boolean boolean75 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass74);
        java.lang.Class[] classArray76 = new java.lang.Class[] { wildcardClass61, wildcardClass63, wildcardClass66, wildcardClass69, wildcardClass72, wildcardClass74 };
        enhancer58.setInterfaces(classArray76);
        org.mockito.cglib.proxy.Enhancer enhancer78 = new org.mockito.cglib.proxy.Enhancer();
        enhancer78.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = enhancer78.getNamingPolicy();
        java.lang.ClassLoader classLoader82 = enhancer78.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer83 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader84 = enhancer83.getClassLoader();
        enhancer78.setClassLoader(classLoader84);
        enhancer58.setClassLoader(classLoader84);
        java.lang.ClassLoader classLoader87 = enhancer58.getClassLoader();
        boolean boolean88 = namingPolicy46.equals((java.lang.Object) enhancer58);
        java.lang.Class<?> wildcardClass89 = namingPolicy46.getClass();
        boolean boolean90 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass89);
        java.lang.Class[] classArray91 = new java.lang.Class[] { wildcardClass13, wildcardClass89 };
        enhancer8.setInterfaces(classArray91);
        java.lang.Object obj93 = new java.lang.Object();
        java.lang.Class<?> wildcardClass94 = obj93.getClass();
        enhancer8.setSuperclass((java.lang.Class) wildcardClass94);
        boolean boolean96 = namingPolicy7.equals((java.lang.Object) enhancer8);
        enhancer8.setSerialVersionUID((java.lang.Long) 1L);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(namingPolicy81);
        org.junit.Assert.assertNotNull(classLoader82);
        org.junit.Assert.assertNotNull(classLoader84);
        org.junit.Assert.assertNotNull(classLoader87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(classArray91);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test08351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08351");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = enhancer29.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        boolean boolean41 = enhancer33.getUseCache();
        boolean boolean42 = namingPolicy32.equals((java.lang.Object) enhancer33);
        enhancer0.setNamingPolicy(namingPolicy32);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer44.getNamingPolicy();
        java.lang.ClassLoader classLoader48 = enhancer44.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader50 = enhancer49.getClassLoader();
        enhancer44.setClassLoader(classLoader50);
        java.lang.ClassLoader classLoader52 = enhancer44.getClassLoader();
        enhancer44.setAttemptLoad(true);
        boolean boolean55 = namingPolicy32.equals((java.lang.Object) enhancer44);
        enhancer44.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer44.generateClass(classVisitor58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy32);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test08352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08352");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy67);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setAttemptLoad(false);
        boolean boolean73 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy74 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader75 = enhancer0.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy76 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer0.getNamingPolicy();
        enhancer0.setUseCache(true);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback82 = null;
        enhancer0.setCallback(callback82);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(generatorStrategy63);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(namingPolicy74);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(namingPolicy76);
        org.junit.Assert.assertNotNull(namingPolicy77);
    }

    @Test
    public void test08353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08353");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader30 = null;
        enhancer0.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback32 = null;
        enhancer0.setCallback(callback32);
        boolean boolean34 = enhancer0.getUseCache();
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test08354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08354");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer0.setCallback(callback35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        enhancer62.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer62.getNamingPolicy();
        java.lang.ClassLoader classLoader66 = enhancer62.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader68 = enhancer67.getClassLoader();
        enhancer62.setClassLoader(classLoader68);
        java.lang.Class<?> wildcardClass70 = classLoader68.getClass();
        boolean boolean71 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass70);
        enhancer37.setSuperclass((java.lang.Class) wildcardClass70);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass70);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        enhancer76.setAttemptLoad(true);
        boolean boolean79 = enhancer76.getAttemptLoad();
        java.lang.ClassLoader classLoader80 = enhancer76.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy81 = enhancer76.getStrategy();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        enhancer76.setSuperclass((java.lang.Class) wildcardClass83);
        org.mockito.cglib.proxy.Callback callback85 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray86 = new org.mockito.cglib.proxy.Callback[] { callback85 };
        enhancer76.setCallbacks(callbackArray86);
        enhancer0.setCallbacks(callbackArray86);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(classLoader80);
        org.junit.Assert.assertNotNull(generatorStrategy81);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(callbackArray86);
    }

    @Test
    public void test08355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08355");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer9.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer13.getNamingPolicy();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader19 = enhancer18.getClassLoader();
        enhancer13.setClassLoader(classLoader19);
        boolean boolean21 = enhancer13.getUseCache();
        boolean boolean22 = namingPolicy12.equals((java.lang.Object) enhancer13);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setAttemptLoad(true);
        boolean boolean26 = enhancer23.getAttemptLoad();
        java.lang.ClassLoader classLoader27 = enhancer23.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy28 = enhancer23.getStrategy();
        enhancer13.setStrategy(generatorStrategy28);
        java.lang.ClassLoader classLoader30 = enhancer13.getClassLoader();
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer13.setCallback(callback31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        enhancer13.setClassLoader(classLoader37);
        enhancer0.setClassLoader(classLoader37);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter40 = null;
        enhancer0.setCallbackFilter(callbackFilter40);
        boolean boolean42 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer0.setCallback(callback43);
        java.lang.ClassLoader classLoader45 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer48.getNamingPolicy();
        boolean boolean52 = enhancer48.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter53 = null;
        enhancer48.setCallbackFilter(callbackFilter53);
        org.mockito.cglib.proxy.Callback callback55 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray56 = new org.mockito.cglib.proxy.Callback[] { callback55 };
        enhancer48.setCallbacks(callbackArray56);
        java.lang.ClassLoader classLoader58 = enhancer48.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader60 = enhancer59.getClassLoader();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        boolean boolean76 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass75);
        java.lang.Class[] classArray77 = new java.lang.Class[] { wildcardClass62, wildcardClass64, wildcardClass67, wildcardClass70, wildcardClass73, wildcardClass75 };
        enhancer59.setInterfaces(classArray77);
        org.mockito.cglib.proxy.Callback[] callbackArray79 = null;
        enhancer59.setCallbacks(callbackArray79);
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = enhancer59.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy82 = enhancer59.getStrategy();
        java.lang.ClassLoader classLoader83 = enhancer59.getClassLoader();
        enhancer48.setClassLoader(classLoader83);
        enhancer0.setClassLoader(classLoader83);
        java.lang.Class<?> wildcardClass86 = classLoader83.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(generatorStrategy28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(callbackArray56);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(namingPolicy81);
        org.junit.Assert.assertNotNull(generatorStrategy82);
        org.junit.Assert.assertNotNull(classLoader83);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test08356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08356");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass21);
        boolean boolean23 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        boolean boolean36 = enhancer28.getUseCache();
        boolean boolean37 = namingPolicy27.equals((java.lang.Object) enhancer28);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setAttemptLoad(true);
        boolean boolean41 = enhancer38.getAttemptLoad();
        java.lang.ClassLoader classLoader42 = enhancer38.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy43 = enhancer38.getStrategy();
        enhancer28.setStrategy(generatorStrategy43);
        java.lang.ClassLoader classLoader45 = enhancer28.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer28.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy46);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer0.getStrategy();
        enhancer0.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer0.getNamingPolicy();
        java.lang.Class<?> wildcardClass52 = enhancer0.getClass();
        org.mockito.cglib.proxy.Callback callback53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass52, callback53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(generatorStrategy43);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test08357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08357");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        boolean boolean8 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer0.setCallback(callback9);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader12 = enhancer11.getClassLoader();
        enhancer11.setAttemptLoad(true);
        boolean boolean15 = enhancer11.getAttemptLoad();
        java.lang.Class<?> wildcardClass16 = enhancer11.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass16);
        enhancer0.setUseCache(true);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test08358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08358");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setAttemptLoad(true);
        boolean boolean11 = enhancer8.getAttemptLoad();
        java.lang.ClassLoader classLoader12 = enhancer8.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy13 = enhancer8.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader15 = enhancer14.getClassLoader();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        java.lang.Class[] classArray32 = new java.lang.Class[] { wildcardClass17, wildcardClass19, wildcardClass22, wildcardClass25, wildcardClass28, wildcardClass30 };
        enhancer14.setInterfaces(classArray32);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer34.getNamingPolicy();
        java.lang.ClassLoader classLoader38 = enhancer34.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader40 = enhancer39.getClassLoader();
        enhancer34.setClassLoader(classLoader40);
        enhancer14.setClassLoader(classLoader40);
        org.mockito.cglib.proxy.Callback callback43 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray44 = new org.mockito.cglib.proxy.Callback[] { callback43 };
        enhancer14.setCallbacks(callbackArray44);
        boolean boolean46 = generatorStrategy13.equals((java.lang.Object) enhancer14);
        boolean boolean47 = enhancer14.getUseCache();
        enhancer14.setUseCache(false);
        java.lang.ClassLoader classLoader50 = enhancer14.getClassLoader();
        enhancer0.setClassLoader(classLoader50);
        enhancer0.setUseCache(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertNotNull(generatorStrategy13);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(callbackArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(classLoader50);
    }

    @Test
    public void test08359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08359");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        boolean boolean14 = enhancer0.getAttemptLoad();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer19.getNamingPolicy();
        java.lang.ClassLoader classLoader23 = enhancer19.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader25 = enhancer24.getClassLoader();
        enhancer19.setClassLoader(classLoader25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean28 = enhancer27.getUseCache();
        java.lang.ClassLoader classLoader29 = enhancer27.getClassLoader();
        enhancer19.setClassLoader(classLoader29);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy31 = enhancer19.getStrategy();
        enhancer19.setAttemptLoad(false);
        java.lang.ClassLoader classLoader34 = enhancer19.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Class[] classArray53 = new java.lang.Class[] { wildcardClass38, wildcardClass40, wildcardClass43, wildcardClass46, wildcardClass49, wildcardClass51 };
        enhancer35.setInterfaces(classArray53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        enhancer35.setSuperclass((java.lang.Class) wildcardClass56);
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        enhancer19.setSuperclass((java.lang.Class) wildcardClass56);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer60.getNamingPolicy();
        java.lang.ClassLoader classLoader64 = enhancer60.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy65 = enhancer60.getStrategy();
        enhancer60.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer60.getNamingPolicy();
        enhancer19.setNamingPolicy(namingPolicy68);
        enhancer0.setNamingPolicy(namingPolicy68);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy71 = enhancer0.getStrategy();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(generatorStrategy31);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(generatorStrategy65);
        org.junit.Assert.assertNotNull(namingPolicy68);
        org.junit.Assert.assertNotNull(generatorStrategy71);
    }

    @Test
    public void test08360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08360");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter20 = null;
        enhancer0.setCallbackFilter(callbackFilter20);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        java.lang.ClassLoader classLoader24 = enhancer0.getClassLoader();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(classLoader24);
    }

    @Test
    public void test08361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08361");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer0.setCallback(callback13);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader16 = enhancer15.getClassLoader();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Class[] classArray33 = new java.lang.Class[] { wildcardClass18, wildcardClass20, wildcardClass23, wildcardClass26, wildcardClass29, wildcardClass31 };
        enhancer15.setInterfaces(classArray33);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer35.getNamingPolicy();
        java.lang.ClassLoader classLoader39 = enhancer35.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        enhancer35.setClassLoader(classLoader41);
        enhancer15.setClassLoader(classLoader41);
        enhancer0.setClassLoader(classLoader41);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader46 = enhancer45.getClassLoader();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.Class[] classArray63 = new java.lang.Class[] { wildcardClass48, wildcardClass50, wildcardClass53, wildcardClass56, wildcardClass59, wildcardClass61 };
        enhancer45.setInterfaces(classArray63);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer65.getNamingPolicy();
        java.lang.ClassLoader classLoader69 = enhancer65.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader71 = enhancer70.getClassLoader();
        enhancer65.setClassLoader(classLoader71);
        enhancer45.setClassLoader(classLoader71);
        org.mockito.cglib.core.NamingPolicy namingPolicy74 = enhancer45.getNamingPolicy();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass76);
        boolean boolean78 = namingPolicy74.equals((java.lang.Object) boolean77);
        enhancer0.setNamingPolicy(namingPolicy74);
        java.lang.ClassLoader classLoader80 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy81 = null;
        enhancer0.setStrategy(generatorStrategy81);
        org.mockito.cglib.proxy.Callback[] callbackArray83 = null;
        enhancer0.setCallbacks(callbackArray83);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy85 = enhancer0.getStrategy();
        java.lang.ClassLoader classLoader86 = enhancer0.getClassLoader();
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(classArray63);
        org.junit.Assert.assertNotNull(namingPolicy68);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(classLoader71);
        org.junit.Assert.assertNotNull(namingPolicy74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(classLoader80);
        org.junit.Assert.assertNotNull(generatorStrategy85);
        org.junit.Assert.assertNotNull(classLoader86);
    }

    @Test
    public void test08362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08362");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        boolean boolean8 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer9.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer9.setCallback(callback13);
        enhancer9.setUseFactory(true);
        enhancer9.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setAttemptLoad(true);
        java.lang.ClassLoader classLoader22 = null;
        enhancer19.setClassLoader(classLoader22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        boolean boolean27 = enhancer24.getAttemptLoad();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy29 = enhancer24.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        boolean boolean33 = enhancer30.getAttemptLoad();
        java.lang.ClassLoader classLoader34 = enhancer30.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy35 = enhancer30.getStrategy();
        enhancer24.setStrategy(generatorStrategy35);
        enhancer19.setStrategy(generatorStrategy35);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer19.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer19.getNamingPolicy();
        java.lang.ClassLoader classLoader40 = null;
        enhancer19.setClassLoader(classLoader40);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        boolean boolean45 = enhancer42.getAttemptLoad();
        java.lang.ClassLoader classLoader46 = enhancer42.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy47 = enhancer42.getStrategy();
        enhancer19.setStrategy(generatorStrategy47);
        java.lang.ClassLoader classLoader49 = enhancer19.getClassLoader();
        java.lang.Class<?> wildcardClass50 = enhancer19.getClass();
        enhancer9.setSuperclass((java.lang.Class) wildcardClass50);
        boolean boolean52 = enhancer9.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        enhancer53.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = enhancer53.getNamingPolicy();
        java.lang.ClassLoader classLoader57 = enhancer53.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader59 = enhancer58.getClassLoader();
        enhancer53.setClassLoader(classLoader59);
        enhancer53.setAttemptLoad(true);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class[] classArray65 = new java.lang.Class[] { wildcardClass64 };
        enhancer53.setInterfaces(classArray65);
        enhancer9.setInterfaces(classArray65);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackTypes(classArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class java.lang.Object");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(generatorStrategy29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(generatorStrategy35);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(generatorStrategy47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(namingPolicy56);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(classArray65);
    }

    @Test
    public void test08363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08363");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer4.setCallback(callback22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        enhancer4.setClassLoader(classLoader28);
        enhancer4.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer35.getNamingPolicy();
        java.lang.ClassLoader classLoader39 = enhancer35.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Class[] classArray58 = new java.lang.Class[] { wildcardClass43, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass54, wildcardClass56 };
        enhancer40.setInterfaces(classArray58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer60.getNamingPolicy();
        java.lang.ClassLoader classLoader64 = enhancer60.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader66 = enhancer65.getClassLoader();
        enhancer60.setClassLoader(classLoader66);
        enhancer40.setClassLoader(classLoader66);
        org.mockito.cglib.proxy.Callback callback69 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray70 = new org.mockito.cglib.proxy.Callback[] { callback69 };
        enhancer40.setCallbacks(callbackArray70);
        enhancer35.setCallbacks(callbackArray70);
        enhancer35.setAttemptLoad(true);
        enhancer35.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader77 = enhancer35.getClassLoader();
        enhancer32.setClassLoader(classLoader77);
        enhancer4.setClassLoader(classLoader77);
        org.mockito.cglib.proxy.Callback callback80 = null;
        enhancer4.setCallback(callback80);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy82 = enhancer4.getStrategy();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(callbackArray70);
        org.junit.Assert.assertNotNull(classLoader77);
        org.junit.Assert.assertNotNull(generatorStrategy82);
    }

    @Test
    public void test08364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08364");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy67);
        org.mockito.cglib.proxy.Callback callback69 = null;
        enhancer0.setCallback(callback69);
        java.lang.ClassLoader classLoader71 = null;
        enhancer0.setClassLoader(classLoader71);
        boolean boolean73 = enhancer0.getAttemptLoad();
        boolean boolean74 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer0.getNamingPolicy();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(generatorStrategy63);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(namingPolicy77);
    }

    @Test
    public void test08365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08365");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer25.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy29);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer0.setCallback(callback31);
        java.lang.ClassLoader classLoader33 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(true);
        enhancer0.setAttemptLoad(false);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseFactory(true);
        boolean boolean42 = enhancer0.getUseCache();
        enhancer0.setUseCache(true);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test08366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08366");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setUseFactory(false);
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseCache(false);
        boolean boolean44 = enhancer0.getUseCache();
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        java.lang.ClassLoader classLoader47 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(true);
        boolean boolean50 = enhancer0.getUseCache();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test08367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08367");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer4.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader24 = enhancer23.getClassLoader();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Class[] classArray41 = new java.lang.Class[] { wildcardClass26, wildcardClass28, wildcardClass31, wildcardClass34, wildcardClass37, wildcardClass39 };
        enhancer23.setInterfaces(classArray41);
        enhancer4.setInterfaces(classArray41);
        org.mockito.cglib.proxy.Callback callback44 = null;
        enhancer4.setCallback(callback44);
        enhancer4.setInterceptDuringConstruction(false);
        enhancer4.setUseCache(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class50 = enhancer4.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(classArray41);
    }

    @Test
    public void test08368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08368");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer0.setCallback(callback13);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy15 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer0.getNamingPolicy();
        boolean boolean17 = enhancer0.getAttemptLoad();
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        java.lang.Class<?> wildcardClass28 = enhancer20.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(generatorStrategy15);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test08369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08369");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        boolean boolean2 = enhancer0.getAttemptLoad();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        enhancer0.setAttemptLoad(true);
        boolean boolean7 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setAttemptLoad(true);
        enhancer8.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer8.setInterceptDuringConstruction(true);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        enhancer8.setSuperclass((java.lang.Class) wildcardClass16);
        enhancer8.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer8.setCallback(callback21);
        enhancer8.setSerialVersionUID((java.lang.Long) 1L);
        boolean boolean25 = enhancer8.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy26 = enhancer8.getStrategy();
        boolean boolean27 = enhancer8.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        enhancer28.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer28.setInterceptDuringConstruction(true);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        enhancer28.setSuperclass((java.lang.Class) wildcardClass36);
        enhancer28.setAttemptLoad(false);
        enhancer28.setUseFactory(false);
        enhancer28.setUseFactory(true);
        java.lang.ClassLoader classLoader45 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = enhancer46.getNamingPolicy();
        java.lang.ClassLoader classLoader50 = enhancer46.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader52 = enhancer51.getClassLoader();
        enhancer46.setClassLoader(classLoader52);
        java.lang.ClassLoader classLoader54 = enhancer46.getClassLoader();
        enhancer46.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy57 = enhancer46.getStrategy();
        enhancer46.setUseFactory(false);
        enhancer46.setAttemptLoad(false);
        boolean boolean62 = enhancer46.getUseCache();
        java.lang.ClassLoader classLoader63 = enhancer46.getClassLoader();
        java.lang.Class<?> wildcardClass64 = enhancer46.getClass();
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass64);
        enhancer28.setSuperclass((java.lang.Class) wildcardClass64);
        enhancer8.setSuperclass((java.lang.Class) wildcardClass64);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass64);
        org.mockito.asm.ClassVisitor classVisitor69 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(generatorStrategy26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(namingPolicy49);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(generatorStrategy57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test08370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08370");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer21.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        java.lang.Class[] classArray43 = new java.lang.Class[] { wildcardClass28, wildcardClass30, wildcardClass33, wildcardClass36, wildcardClass39, wildcardClass41 };
        enhancer25.setInterfaces(classArray43);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = enhancer45.getNamingPolicy();
        java.lang.ClassLoader classLoader49 = enhancer45.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader51 = enhancer50.getClassLoader();
        enhancer45.setClassLoader(classLoader51);
        enhancer25.setClassLoader(classLoader51);
        org.mockito.cglib.proxy.Callback callback54 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray55 = new org.mockito.cglib.proxy.Callback[] { callback54 };
        enhancer25.setCallbacks(callbackArray55);
        enhancer21.setCallbacks(callbackArray55);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader59 = enhancer58.getClassLoader();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        boolean boolean75 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass74);
        java.lang.Class[] classArray76 = new java.lang.Class[] { wildcardClass61, wildcardClass63, wildcardClass66, wildcardClass69, wildcardClass72, wildcardClass74 };
        enhancer58.setInterfaces(classArray76);
        org.mockito.cglib.proxy.Enhancer enhancer78 = new org.mockito.cglib.proxy.Enhancer();
        enhancer78.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = enhancer78.getNamingPolicy();
        enhancer58.setNamingPolicy(namingPolicy81);
        enhancer21.setNamingPolicy(namingPolicy81);
        boolean boolean84 = enhancer21.getUseCache();
        boolean boolean85 = namingPolicy20.equals((java.lang.Object) enhancer21);
        boolean boolean86 = enhancer21.getUseCache();
        enhancer21.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter89 = null;
        enhancer21.setCallbackFilter(callbackFilter89);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(namingPolicy48);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(callbackArray55);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(namingPolicy81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test08371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08371");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        boolean boolean7 = generatorStrategy5.equals((java.lang.Object) "hi!");
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer8.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        java.lang.ClassLoader classLoader16 = enhancer12.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader18 = enhancer17.getClassLoader();
        enhancer12.setClassLoader(classLoader18);
        boolean boolean20 = enhancer12.getUseCache();
        boolean boolean21 = namingPolicy11.equals((java.lang.Object) enhancer12);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setAttemptLoad(true);
        boolean boolean25 = enhancer22.getAttemptLoad();
        java.lang.ClassLoader classLoader26 = enhancer22.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy27 = enhancer22.getStrategy();
        enhancer12.setStrategy(generatorStrategy27);
        java.lang.ClassLoader classLoader29 = enhancer12.getClassLoader();
        org.mockito.cglib.proxy.Callback callback30 = null;
        enhancer12.setCallback(callback30);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer32.getNamingPolicy();
        java.lang.ClassLoader classLoader36 = enhancer32.getClassLoader();
        enhancer12.setClassLoader(classLoader36);
        boolean boolean38 = generatorStrategy5.equals((java.lang.Object) classLoader36);
        java.lang.Class<?> wildcardClass39 = generatorStrategy5.getClass();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer40.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter44 = null;
        enhancer40.setCallbackFilter(callbackFilter44);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter46 = null;
        enhancer40.setCallbackFilter(callbackFilter46);
        enhancer40.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader51 = enhancer50.getClassLoader();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Class[] classArray68 = new java.lang.Class[] { wildcardClass53, wildcardClass55, wildcardClass58, wildcardClass61, wildcardClass64, wildcardClass66 };
        enhancer50.setInterfaces(classArray68);
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy73 = enhancer70.getNamingPolicy();
        java.lang.ClassLoader classLoader74 = enhancer70.getClassLoader();
        enhancer50.setClassLoader(classLoader74);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer50.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer77 = new org.mockito.cglib.proxy.Enhancer();
        enhancer77.setAttemptLoad(true);
        boolean boolean80 = enhancer77.getAttemptLoad();
        java.lang.ClassLoader classLoader81 = enhancer77.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy82 = enhancer77.getStrategy();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        enhancer77.setSuperclass((java.lang.Class) wildcardClass84);
        org.mockito.cglib.proxy.Callback callback86 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray87 = new org.mockito.cglib.proxy.Callback[] { callback86 };
        enhancer77.setCallbacks(callbackArray87);
        enhancer50.setCallbacks(callbackArray87);
        enhancer40.setCallbacks(callbackArray87);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerCallbacks((java.lang.Class) wildcardClass39, callbackArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.core.DefaultGeneratorStrategy is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(generatorStrategy27);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(classArray68);
        org.junit.Assert.assertNotNull(namingPolicy73);
        org.junit.Assert.assertNotNull(classLoader74);
        org.junit.Assert.assertNotNull(generatorStrategy76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(classLoader81);
        org.junit.Assert.assertNotNull(generatorStrategy82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(callbackArray87);
    }

    @Test
    public void test08372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08372");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer30.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer30.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy34);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy36 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setAttemptLoad(true);
        boolean boolean40 = enhancer37.getAttemptLoad();
        java.lang.ClassLoader classLoader41 = enhancer37.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer37.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setAttemptLoad(true);
        boolean boolean46 = enhancer43.getAttemptLoad();
        java.lang.ClassLoader classLoader47 = enhancer43.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer43.getStrategy();
        enhancer37.setStrategy(generatorStrategy48);
        java.lang.ClassLoader classLoader50 = enhancer37.getClassLoader();
        boolean boolean51 = generatorStrategy36.equals((java.lang.Object) classLoader50);
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        enhancer52.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer52.setInterceptDuringConstruction(true);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        enhancer52.setSuperclass((java.lang.Class) wildcardClass60);
        enhancer52.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback65 = null;
        enhancer52.setCallback(callback65);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer52.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter68 = null;
        enhancer52.setCallbackFilter(callbackFilter68);
        org.mockito.cglib.core.NamingPolicy namingPolicy70 = null;
        enhancer52.setNamingPolicy(namingPolicy70);
        java.lang.ClassLoader classLoader72 = enhancer52.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer73 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy74 = enhancer73.getStrategy();
        java.lang.Class<?> wildcardClass75 = enhancer73.getClass();
        enhancer52.setSuperclass((java.lang.Class) wildcardClass75);
        boolean boolean77 = generatorStrategy36.equals((java.lang.Object) enhancer52);
        org.mockito.cglib.proxy.Callback callback78 = null;
        enhancer52.setCallback(callback78);
        enhancer52.setAttemptLoad(false);
        boolean boolean82 = enhancer52.getAttemptLoad();
        enhancer52.setUseFactory(true);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertNotNull(generatorStrategy36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertNotNull(generatorStrategy74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test08373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08373");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass21);
        boolean boolean23 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter24 = null;
        enhancer0.setCallbackFilter(callbackFilter24);
        enhancer0.setUseCache(false);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test08374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08374");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer0.setCallback(callback13);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy15 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer19.getNamingPolicy();
        java.lang.ClassLoader classLoader23 = enhancer19.getClassLoader();
        enhancer19.setInterceptDuringConstruction(false);
        boolean boolean26 = enhancer19.getUseCache();
        boolean boolean27 = enhancer19.getUseCache();
        enhancer19.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer19.getNamingPolicy();
        enhancer19.setSerialVersionUID((java.lang.Long) 0L);
        java.lang.ClassLoader classLoader33 = enhancer19.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader35 = enhancer34.getClassLoader();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Class[] classArray52 = new java.lang.Class[] { wildcardClass37, wildcardClass39, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass50 };
        enhancer34.setInterfaces(classArray52);
        enhancer34.setUseCache(false);
        boolean boolean56 = enhancer34.getAttemptLoad();
        java.lang.Class<?> wildcardClass57 = enhancer34.getClass();
        enhancer19.setSuperclass((java.lang.Class) wildcardClass57);
        java.lang.ClassLoader classLoader59 = enhancer19.getClassLoader();
        org.mockito.cglib.core.Predicate predicate60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = namingPolicy16.getClassName("", "", (java.lang.Object) classLoader59, predicate60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(generatorStrategy15);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classLoader59);
    }

    @Test
    public void test08375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08375");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer0.setCallback(callback35);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Class[] classArray56 = new java.lang.Class[] { wildcardClass41, wildcardClass43, wildcardClass46, wildcardClass49, wildcardClass52, wildcardClass54 };
        enhancer38.setInterfaces(classArray56);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        enhancer58.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy61 = enhancer58.getNamingPolicy();
        java.lang.ClassLoader classLoader62 = enhancer58.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader64 = enhancer63.getClassLoader();
        enhancer58.setClassLoader(classLoader64);
        enhancer38.setClassLoader(classLoader64);
        org.mockito.cglib.proxy.Callback callback67 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray68 = new org.mockito.cglib.proxy.Callback[] { callback67 };
        enhancer38.setCallbacks(callbackArray68);
        enhancer38.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy72 = enhancer38.getStrategy();
        enhancer0.setStrategy(generatorStrategy72);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback76 = null;
        enhancer0.setCallback(callback76);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class78 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(namingPolicy61);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(callbackArray68);
        org.junit.Assert.assertNotNull(generatorStrategy72);
    }

    @Test
    public void test08376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08376");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer8.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        java.lang.ClassLoader classLoader16 = enhancer12.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader18 = enhancer17.getClassLoader();
        enhancer12.setClassLoader(classLoader18);
        java.lang.Class<?> wildcardClass20 = enhancer12.getClass();
        enhancer8.setSuperclass((java.lang.Class) wildcardClass20);
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass20);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy24 = enhancer0.getStrategy();
        enhancer0.setUseFactory(true);
        java.lang.ClassLoader classLoader27 = enhancer0.getClassLoader();
        boolean boolean28 = enhancer0.getUseCache();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(generatorStrategy24);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test08377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08377");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.Callback callback29 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray30 = new org.mockito.cglib.proxy.Callback[] { callback29 };
        enhancer0.setCallbacks(callbackArray30);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter40 = null;
        enhancer0.setCallbackFilter(callbackFilter40);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(callbackArray30);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertNotNull(namingPolicy35);
    }

    @Test
    public void test08378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08378");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer4.setCallback(callback22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        enhancer4.setClassLoader(classLoader28);
        enhancer4.setAttemptLoad(false);
        enhancer4.setSerialVersionUID((java.lang.Long) 1L);
        enhancer4.setAttemptLoad(false);
        enhancer4.setAttemptLoad(true);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
    }

    @Test
    public void test08379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08379");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        enhancer0.setUseFactory(false);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader18 = enhancer17.getClassLoader();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Class[] classArray35 = new java.lang.Class[] { wildcardClass20, wildcardClass22, wildcardClass25, wildcardClass28, wildcardClass31, wildcardClass33 };
        enhancer17.setInterfaces(classArray35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        enhancer17.setSuperclass((java.lang.Class) wildcardClass38);
        enhancer17.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer17.getStrategy();
        boolean boolean43 = generatorStrategy16.equals((java.lang.Object) enhancer17);
        enhancer17.setSerialVersionUID((java.lang.Long) 0L);
        java.lang.Class class46 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer17.setCallbackType(class46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test08380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08380");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        boolean boolean9 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader11 = enhancer10.getClassLoader();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Class[] classArray28 = new java.lang.Class[] { wildcardClass13, wildcardClass15, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass26 };
        enhancer10.setInterfaces(classArray28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer30.getNamingPolicy();
        java.lang.ClassLoader classLoader34 = enhancer30.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        enhancer30.setClassLoader(classLoader36);
        enhancer10.setClassLoader(classLoader36);
        java.lang.ClassLoader classLoader39 = enhancer10.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer40.getNamingPolicy();
        enhancer10.setNamingPolicy(namingPolicy44);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy46 = enhancer10.getStrategy();
        enhancer0.setStrategy(generatorStrategy46);
        boolean boolean48 = enhancer0.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy49 = enhancer0.getStrategy();
        java.lang.ClassLoader classLoader50 = enhancer0.getClassLoader();
        enhancer0.setUseCache(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        boolean boolean55 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter56 = null;
        enhancer0.setCallbackFilter(callbackFilter56);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        enhancer58.setAttemptLoad(true);
        boolean boolean61 = enhancer58.getAttemptLoad();
        java.lang.ClassLoader classLoader62 = enhancer58.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer58.getStrategy();
        enhancer58.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        enhancer66.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = enhancer66.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy73 = enhancer70.getNamingPolicy();
        java.lang.ClassLoader classLoader74 = enhancer70.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer75 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader76 = enhancer75.getClassLoader();
        enhancer70.setClassLoader(classLoader76);
        java.lang.Class<?> wildcardClass78 = enhancer70.getClass();
        enhancer66.setSuperclass((java.lang.Class) wildcardClass78);
        boolean boolean80 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass78);
        enhancer58.setSuperclass((java.lang.Class) wildcardClass78);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy82 = enhancer58.getStrategy();
        enhancer0.setStrategy(generatorStrategy82);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.asm.ClassVisitor classVisitor86 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(generatorStrategy46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(generatorStrategy49);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(generatorStrategy63);
        org.junit.Assert.assertNotNull(namingPolicy69);
        org.junit.Assert.assertNotNull(namingPolicy73);
        org.junit.Assert.assertNotNull(classLoader74);
        org.junit.Assert.assertNotNull(classLoader76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(generatorStrategy82);
    }

    @Test
    public void test08381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08381");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        enhancer4.setAttemptLoad(false);
        enhancer4.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader19 = enhancer18.getClassLoader();
        enhancer18.setUseCache(false);
        java.lang.ClassLoader classLoader22 = enhancer18.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer18.getNamingPolicy();
        enhancer4.setNamingPolicy(namingPolicy23);
        enhancer4.setAttemptLoad(false);
        boolean boolean27 = enhancer4.getAttemptLoad();
        java.lang.Class class28 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer4.setCallbackType(class28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test08382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08382");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        enhancer0.setAttemptLoad(true);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[] { wildcardClass11 };
        enhancer0.setInterfaces(classArray12);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(false);
        boolean boolean18 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Callback[] callbackArray19 = null;
        enhancer0.setCallbacks(callbackArray19);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer0.setCallback(callback23);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test08383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08383");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer0.setCallback(callback31);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter33 = null;
        enhancer0.setCallbackFilter(callbackFilter33);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer39.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer43.getNamingPolicy();
        java.lang.ClassLoader classLoader47 = enhancer43.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader49 = enhancer48.getClassLoader();
        enhancer43.setClassLoader(classLoader49);
        boolean boolean51 = enhancer43.getUseCache();
        boolean boolean52 = namingPolicy42.equals((java.lang.Object) enhancer43);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer43.setCallback(callback53);
        enhancer43.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter57 = null;
        enhancer43.setCallbackFilter(callbackFilter57);
        java.lang.Class<?> wildcardClass59 = enhancer43.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass59);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(generatorStrategy30);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test08384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08384");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        enhancer0.setUseCache(false);
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader7 = enhancer6.getClassLoader();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass9, wildcardClass11, wildcardClass14, wildcardClass17, wildcardClass20, wildcardClass22 };
        enhancer6.setInterfaces(classArray24);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer26.getNamingPolicy();
        java.lang.ClassLoader classLoader30 = enhancer26.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader32 = enhancer31.getClassLoader();
        enhancer26.setClassLoader(classLoader32);
        enhancer6.setClassLoader(classLoader32);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer35.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer39.getNamingPolicy();
        java.lang.ClassLoader classLoader43 = enhancer39.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        enhancer39.setClassLoader(classLoader45);
        boolean boolean47 = enhancer39.getUseCache();
        boolean boolean48 = namingPolicy38.equals((java.lang.Object) enhancer39);
        enhancer6.setNamingPolicy(namingPolicy38);
        boolean boolean50 = namingPolicy5.equals((java.lang.Object) enhancer6);
        enhancer6.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass53 = enhancer6.getClass();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(namingPolicy5);
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test08385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08385");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader2 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer3.getNamingPolicy();
        java.lang.ClassLoader classLoader7 = enhancer3.getClassLoader();
        enhancer0.setClassLoader(classLoader7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer0.setCallback(callback9);
        java.lang.ClassLoader classLoader11 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader17 = enhancer16.getClassLoader();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Class[] classArray34 = new java.lang.Class[] { wildcardClass19, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass30, wildcardClass32 };
        enhancer16.setInterfaces(classArray34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer36.getNamingPolicy();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader42 = enhancer41.getClassLoader();
        enhancer36.setClassLoader(classLoader42);
        enhancer16.setClassLoader(classLoader42);
        org.mockito.cglib.proxy.Callback callback45 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray46 = new org.mockito.cglib.proxy.Callback[] { callback45 };
        enhancer16.setCallbacks(callbackArray46);
        enhancer12.setCallbacks(callbackArray46);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader50 = enhancer49.getClassLoader();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.Class[] classArray67 = new java.lang.Class[] { wildcardClass52, wildcardClass54, wildcardClass57, wildcardClass60, wildcardClass63, wildcardClass65 };
        enhancer49.setInterfaces(classArray67);
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        enhancer69.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy72 = enhancer69.getNamingPolicy();
        enhancer49.setNamingPolicy(namingPolicy72);
        enhancer12.setNamingPolicy(namingPolicy72);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy75 = enhancer12.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        enhancer76.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy79 = enhancer76.getNamingPolicy();
        enhancer12.setNamingPolicy(namingPolicy79);
        org.mockito.cglib.proxy.Callback callback81 = null;
        enhancer12.setCallback(callback81);
        org.mockito.cglib.proxy.Enhancer enhancer83 = new org.mockito.cglib.proxy.Enhancer();
        enhancer83.setAttemptLoad(true);
        boolean boolean86 = enhancer83.getAttemptLoad();
        java.lang.ClassLoader classLoader87 = enhancer83.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy88 = enhancer83.getStrategy();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        enhancer83.setSuperclass((java.lang.Class) wildcardClass90);
        enhancer12.setSuperclass((java.lang.Class) wildcardClass90);
        boolean boolean93 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass90);
        boolean boolean94 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass90);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass90);
        boolean boolean96 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(callbackArray46);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(classArray67);
        org.junit.Assert.assertNotNull(namingPolicy72);
        org.junit.Assert.assertNotNull(generatorStrategy75);
        org.junit.Assert.assertNotNull(namingPolicy79);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(classLoader87);
        org.junit.Assert.assertNotNull(generatorStrategy88);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test08386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08386");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer3.getNamingPolicy();
        java.lang.ClassLoader classLoader7 = enhancer3.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader9 = enhancer8.getClassLoader();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass11, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass24 };
        enhancer8.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer8.setClassLoader(classLoader34);
        org.mockito.cglib.proxy.Callback callback37 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray38 = new org.mockito.cglib.proxy.Callback[] { callback37 };
        enhancer8.setCallbacks(callbackArray38);
        enhancer3.setCallbacks(callbackArray38);
        enhancer3.setAttemptLoad(true);
        enhancer3.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader45 = enhancer3.getClassLoader();
        enhancer0.setClassLoader(classLoader45);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter47 = null;
        enhancer0.setCallbackFilter(callbackFilter47);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = enhancer51.getNamingPolicy();
        java.lang.ClassLoader classLoader55 = enhancer51.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader57 = enhancer56.getClassLoader();
        enhancer51.setClassLoader(classLoader57);
        boolean boolean59 = enhancer51.getUseCache();
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer51.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer61.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer65.getNamingPolicy();
        java.lang.ClassLoader classLoader69 = enhancer65.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader71 = enhancer70.getClassLoader();
        enhancer65.setClassLoader(classLoader71);
        boolean boolean73 = enhancer65.getUseCache();
        boolean boolean74 = namingPolicy64.equals((java.lang.Object) enhancer65);
        java.lang.Class<?> wildcardClass75 = enhancer65.getClass();
        boolean boolean76 = namingPolicy60.equals((java.lang.Object) wildcardClass75);
        enhancer0.setNamingPolicy(namingPolicy60);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(callbackArray38);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(namingPolicy54);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertNotNull(namingPolicy68);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(classLoader71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test08387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08387");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader30 = null;
        enhancer0.setClassLoader(classLoader30);
        java.lang.ClassLoader classLoader32 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter33 = null;
        enhancer0.setCallbackFilter(callbackFilter33);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer0.setCallback(callback35);
        java.lang.ClassLoader classLoader37 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        enhancer0.setUseFactory(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader37);
    }

    @Test
    public void test08388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08388");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer0.setCallbackFilter(callbackFilter25);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback30 = null;
        enhancer0.setCallback(callback30);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(namingPolicy29);
    }

    @Test
    public void test08389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08389");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        boolean boolean10 = enhancer7.getAttemptLoad();
        java.lang.ClassLoader classLoader11 = enhancer7.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer7.getStrategy();
        boolean boolean13 = enhancer7.getAttemptLoad();
        java.lang.ClassLoader classLoader14 = enhancer7.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = enhancer15.getNamingPolicy();
        java.lang.ClassLoader classLoader19 = enhancer15.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy20 = enhancer15.getStrategy();
        enhancer15.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer15.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy29 = enhancer24.getStrategy();
        enhancer24.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader33 = enhancer32.getClassLoader();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Class[] classArray50 = new java.lang.Class[] { wildcardClass35, wildcardClass37, wildcardClass40, wildcardClass43, wildcardClass46, wildcardClass48 };
        enhancer32.setInterfaces(classArray50);
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer52.getNamingPolicy();
        java.lang.ClassLoader classLoader56 = enhancer52.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader58 = enhancer57.getClassLoader();
        enhancer52.setClassLoader(classLoader58);
        enhancer32.setClassLoader(classLoader58);
        java.lang.ClassLoader classLoader61 = enhancer32.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        enhancer62.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer62.getNamingPolicy();
        java.lang.ClassLoader classLoader66 = enhancer62.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader68 = enhancer67.getClassLoader();
        enhancer62.setClassLoader(classLoader68);
        enhancer62.setAttemptLoad(true);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[] { wildcardClass73 };
        enhancer62.setInterfaces(classArray74);
        enhancer32.setInterfaces(classArray74);
        enhancer24.setInterfaces(classArray74);
        enhancer15.setInterfaces(classArray74);
        enhancer7.setInterfaces(classArray74);
        enhancer0.setInterfaces(classArray74);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter83 = null;
        enhancer0.setCallbackFilter(callbackFilter83);
        org.mockito.cglib.proxy.Callback callback85 = null;
        enhancer0.setCallback(callback85);
        org.mockito.cglib.core.NamingPolicy namingPolicy87 = enhancer0.getNamingPolicy();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(namingPolicy18);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertNotNull(generatorStrategy20);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(generatorStrategy29);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(namingPolicy87);
    }

    @Test
    public void test08390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08390");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer4.setCallback(callback22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        enhancer4.setClassLoader(classLoader28);
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer4.getNamingPolicy();
        boolean boolean31 = enhancer4.getAttemptLoad();
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer4.generateClass(classVisitor32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test08391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08391");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer4.setCallback(callback22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        boolean boolean36 = enhancer28.getUseCache();
        boolean boolean37 = namingPolicy27.equals((java.lang.Object) enhancer28);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setAttemptLoad(true);
        boolean boolean41 = enhancer38.getAttemptLoad();
        java.lang.ClassLoader classLoader42 = enhancer38.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy43 = enhancer38.getStrategy();
        enhancer28.setStrategy(generatorStrategy43);
        enhancer4.setStrategy(generatorStrategy43);
        enhancer4.setUseCache(true);
        enhancer4.setSerialVersionUID((java.lang.Long) 10L);
        boolean boolean50 = enhancer4.getUseCache();
        boolean boolean51 = enhancer4.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer4.getStrategy();
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer4.setCallback(callback53);
        org.mockito.asm.ClassVisitor classVisitor55 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer4.generateClass(classVisitor55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(generatorStrategy43);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(generatorStrategy52);
    }

    @Test
    public void test08392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08392");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer3.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer7.getNamingPolicy();
        java.lang.ClassLoader classLoader11 = enhancer7.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader13 = enhancer12.getClassLoader();
        enhancer7.setClassLoader(classLoader13);
        boolean boolean15 = enhancer7.getUseCache();
        boolean boolean16 = namingPolicy6.equals((java.lang.Object) enhancer7);
        enhancer0.setNamingPolicy(namingPolicy6);
        enhancer0.setUseFactory(true);
        boolean boolean20 = enhancer0.getAttemptLoad();
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy26 = enhancer25.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader28 = enhancer27.getClassLoader();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Class[] classArray45 = new java.lang.Class[] { wildcardClass30, wildcardClass32, wildcardClass35, wildcardClass38, wildcardClass41, wildcardClass43 };
        enhancer27.setInterfaces(classArray45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer47.getNamingPolicy();
        java.lang.ClassLoader classLoader51 = enhancer47.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader53 = enhancer52.getClassLoader();
        enhancer47.setClassLoader(classLoader53);
        enhancer27.setClassLoader(classLoader53);
        java.lang.ClassLoader classLoader56 = enhancer27.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader58 = enhancer57.getClassLoader();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy61 = enhancer57.getNamingPolicy();
        enhancer27.setNamingPolicy(namingPolicy61);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer27.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        boolean boolean67 = enhancer64.getAttemptLoad();
        java.lang.ClassLoader classLoader68 = enhancer64.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy69 = enhancer64.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setAttemptLoad(true);
        boolean boolean73 = enhancer70.getAttemptLoad();
        java.lang.ClassLoader classLoader74 = enhancer70.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy75 = enhancer70.getStrategy();
        enhancer64.setStrategy(generatorStrategy75);
        java.lang.ClassLoader classLoader77 = enhancer64.getClassLoader();
        boolean boolean78 = generatorStrategy63.equals((java.lang.Object) classLoader77);
        enhancer25.setClassLoader(classLoader77);
        enhancer0.setClassLoader(classLoader77);
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = enhancer0.getNamingPolicy();
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(generatorStrategy26);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(namingPolicy61);
        org.junit.Assert.assertNotNull(generatorStrategy63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(generatorStrategy69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(classLoader74);
        org.junit.Assert.assertNotNull(generatorStrategy75);
        org.junit.Assert.assertNotNull(classLoader77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(namingPolicy81);
    }

    @Test
    public void test08393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08393");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = null;
        enhancer0.setNamingPolicy(namingPolicy9);
        enhancer0.setUseFactory(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class13 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback types are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test08394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08394");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setSerialVersionUID((java.lang.Long) 100L);
        enhancer5.setUseCache(false);
        enhancer5.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        java.lang.ClassLoader classLoader16 = enhancer12.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader18 = enhancer17.getClassLoader();
        enhancer12.setClassLoader(classLoader18);
        enhancer5.setClassLoader(classLoader18);
        enhancer0.setClassLoader(classLoader18);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        java.lang.ClassLoader classLoader27 = null;
        enhancer24.setClassLoader(classLoader27);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setAttemptLoad(true);
        boolean boolean32 = enhancer29.getAttemptLoad();
        java.lang.ClassLoader classLoader33 = enhancer29.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy34 = enhancer29.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setAttemptLoad(true);
        boolean boolean38 = enhancer35.getAttemptLoad();
        java.lang.ClassLoader classLoader39 = enhancer35.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy40 = enhancer35.getStrategy();
        enhancer29.setStrategy(generatorStrategy40);
        enhancer24.setStrategy(generatorStrategy40);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer24.setCallback(callback43);
        java.lang.Class[] classArray45 = new java.lang.Class[] {};
        enhancer24.setInterfaces(classArray45);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackTypes(classArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(generatorStrategy34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(generatorStrategy40);
        org.junit.Assert.assertNotNull(classArray45);
    }

    @Test
    public void test08395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08395");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer4.setCallback(callback22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        enhancer4.setClassLoader(classLoader28);
        boolean boolean30 = enhancer4.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer31.getNamingPolicy();
        java.lang.ClassLoader classLoader35 = enhancer31.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy36 = enhancer31.getStrategy();
        enhancer31.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer31.getNamingPolicy();
        java.lang.Class<?> wildcardClass40 = namingPolicy39.getClass();
        enhancer4.setSuperclass((java.lang.Class) wildcardClass40);
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(generatorStrategy36);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test08396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08396");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = null;
        enhancer0.setNamingPolicy(namingPolicy9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer0.setCallback(callback12);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(generatorStrategy11);
    }

    @Test
    public void test08397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08397");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setAttemptLoad(true);
        boolean boolean13 = enhancer10.getAttemptLoad();
        java.lang.ClassLoader classLoader14 = enhancer10.getClassLoader();
        enhancer10.setUseFactory(false);
        enhancer10.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setAttemptLoad(true);
        enhancer19.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer19.setInterceptDuringConstruction(true);
        enhancer19.setUseCache(true);
        boolean boolean28 = enhancer19.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Class[] classArray47 = new java.lang.Class[] { wildcardClass32, wildcardClass34, wildcardClass37, wildcardClass40, wildcardClass43, wildcardClass45 };
        enhancer29.setInterfaces(classArray47);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy52 = enhancer49.getNamingPolicy();
        java.lang.ClassLoader classLoader53 = enhancer49.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader55 = enhancer54.getClassLoader();
        enhancer49.setClassLoader(classLoader55);
        enhancer29.setClassLoader(classLoader55);
        java.lang.ClassLoader classLoader58 = enhancer29.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader60 = enhancer59.getClassLoader();
        enhancer59.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer59.getNamingPolicy();
        enhancer29.setNamingPolicy(namingPolicy63);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy65 = enhancer29.getStrategy();
        enhancer19.setStrategy(generatorStrategy65);
        boolean boolean67 = enhancer19.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        enhancer68.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = enhancer68.getNamingPolicy();
        java.lang.ClassLoader classLoader72 = enhancer68.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer73 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader74 = enhancer73.getClassLoader();
        enhancer68.setClassLoader(classLoader74);
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean77 = enhancer76.getUseCache();
        java.lang.ClassLoader classLoader78 = enhancer76.getClassLoader();
        enhancer68.setClassLoader(classLoader78);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy80 = enhancer68.getStrategy();
        enhancer19.setStrategy(generatorStrategy80);
        enhancer10.setStrategy(generatorStrategy80);
        java.lang.ClassLoader classLoader83 = enhancer10.getClassLoader();
        enhancer0.setClassLoader(classLoader83);
        org.mockito.asm.ClassVisitor classVisitor85 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(namingPolicy52);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(generatorStrategy65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(namingPolicy71);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertNotNull(classLoader74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertNotNull(generatorStrategy80);
        org.junit.Assert.assertNotNull(classLoader83);
    }

    @Test
    public void test08398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08398");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(false);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer0.getNamingPolicy();
        boolean boolean11 = enhancer0.getUseCache();
        enhancer0.setUseFactory(true);
        enhancer0.setUseFactory(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test08399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08399");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseCache(true);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
    }

    @Test
    public void test08400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08400");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer0.setCallback(callback19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader22 = enhancer21.getClassLoader();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass24, wildcardClass26, wildcardClass29, wildcardClass32, wildcardClass35, wildcardClass37 };
        enhancer21.setInterfaces(classArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        enhancer21.setSuperclass((java.lang.Class) wildcardClass42);
        enhancer21.setUseFactory(true);
        java.lang.Class<?> wildcardClass46 = enhancer21.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass46);
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy49 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        enhancer50.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer50.getNamingPolicy();
        java.lang.ClassLoader classLoader54 = enhancer50.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy55 = enhancer50.getStrategy();
        java.lang.ClassLoader classLoader56 = enhancer50.getClassLoader();
        org.mockito.cglib.proxy.Callback callback57 = null;
        enhancer50.setCallback(callback57);
        boolean boolean59 = generatorStrategy49.equals((java.lang.Object) enhancer50);
        enhancer50.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        enhancer62.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer62.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        enhancer66.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = enhancer66.getNamingPolicy();
        java.lang.ClassLoader classLoader70 = enhancer66.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader72 = enhancer71.getClassLoader();
        enhancer66.setClassLoader(classLoader72);
        boolean boolean74 = enhancer66.getUseCache();
        boolean boolean75 = namingPolicy65.equals((java.lang.Object) enhancer66);
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        enhancer76.setAttemptLoad(true);
        boolean boolean79 = enhancer76.getAttemptLoad();
        java.lang.ClassLoader classLoader80 = enhancer76.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy81 = enhancer76.getStrategy();
        enhancer66.setStrategy(generatorStrategy81);
        java.lang.ClassLoader classLoader83 = enhancer66.getClassLoader();
        org.mockito.cglib.proxy.Callback callback84 = null;
        enhancer66.setCallback(callback84);
        org.mockito.cglib.proxy.Enhancer enhancer86 = new org.mockito.cglib.proxy.Enhancer();
        enhancer86.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy89 = enhancer86.getNamingPolicy();
        java.lang.ClassLoader classLoader90 = enhancer86.getClassLoader();
        enhancer66.setClassLoader(classLoader90);
        enhancer66.setAttemptLoad(false);
        java.lang.Class<?> wildcardClass94 = enhancer66.getClass();
        boolean boolean95 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass94);
        // The following exception was thrown during execution in test generation
        try {
            enhancer50.setCallbackType((java.lang.Class) wildcardClass94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.cglib.proxy.Enhancer");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(namingPolicy48);
        org.junit.Assert.assertNotNull(generatorStrategy49);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(generatorStrategy55);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertNotNull(namingPolicy69);
        org.junit.Assert.assertNotNull(classLoader70);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(classLoader80);
        org.junit.Assert.assertNotNull(generatorStrategy81);
        org.junit.Assert.assertNotNull(classLoader83);
        org.junit.Assert.assertNotNull(namingPolicy89);
        org.junit.Assert.assertNotNull(classLoader90);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test08401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08401");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer4.setCallback(callback22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        enhancer4.setClassLoader(classLoader28);
        enhancer4.setAttemptLoad(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter32 = null;
        enhancer4.setCallbackFilter(callbackFilter32);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer34.getNamingPolicy();
        java.lang.ClassLoader classLoader38 = enhancer34.getClassLoader();
        java.lang.ClassLoader classLoader39 = enhancer34.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy40 = enhancer34.getStrategy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer34.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader43 = enhancer42.getClassLoader();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass58);
        java.lang.Class[] classArray60 = new java.lang.Class[] { wildcardClass45, wildcardClass47, wildcardClass50, wildcardClass53, wildcardClass56, wildcardClass58 };
        enhancer42.setInterfaces(classArray60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        enhancer42.setSuperclass((java.lang.Class) wildcardClass63);
        enhancer42.setUseFactory(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter67 = null;
        enhancer42.setCallbackFilter(callbackFilter67);
        enhancer42.setUseCache(true);
        boolean boolean71 = enhancer42.getAttemptLoad();
        enhancer42.setUseFactory(true);
        boolean boolean74 = generatorStrategy41.equals((java.lang.Object) enhancer42);
        enhancer4.setStrategy(generatorStrategy41);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(generatorStrategy40);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test08402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08402");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer9.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer13.getNamingPolicy();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader19 = enhancer18.getClassLoader();
        enhancer13.setClassLoader(classLoader19);
        boolean boolean21 = enhancer13.getUseCache();
        boolean boolean22 = namingPolicy12.equals((java.lang.Object) enhancer13);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setAttemptLoad(true);
        boolean boolean26 = enhancer23.getAttemptLoad();
        java.lang.ClassLoader classLoader27 = enhancer23.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy28 = enhancer23.getStrategy();
        enhancer13.setStrategy(generatorStrategy28);
        java.lang.ClassLoader classLoader30 = enhancer13.getClassLoader();
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer13.setCallback(callback31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        enhancer13.setClassLoader(classLoader37);
        enhancer0.setClassLoader(classLoader37);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter40 = null;
        enhancer0.setCallbackFilter(callbackFilter40);
        boolean boolean42 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer0.setCallback(callback43);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = enhancer45.getNamingPolicy();
        java.lang.ClassLoader classLoader49 = enhancer45.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader51 = enhancer50.getClassLoader();
        enhancer45.setClassLoader(classLoader51);
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean54 = enhancer53.getUseCache();
        java.lang.ClassLoader classLoader55 = enhancer53.getClassLoader();
        enhancer45.setClassLoader(classLoader55);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy57 = enhancer45.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader59 = enhancer58.getClassLoader();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        boolean boolean75 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass74);
        java.lang.Class[] classArray76 = new java.lang.Class[] { wildcardClass61, wildcardClass63, wildcardClass66, wildcardClass69, wildcardClass72, wildcardClass74 };
        enhancer58.setInterfaces(classArray76);
        org.mockito.cglib.proxy.Enhancer enhancer78 = new org.mockito.cglib.proxy.Enhancer();
        enhancer78.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = enhancer78.getNamingPolicy();
        java.lang.ClassLoader classLoader82 = enhancer78.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer83 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader84 = enhancer83.getClassLoader();
        enhancer78.setClassLoader(classLoader84);
        enhancer58.setClassLoader(classLoader84);
        boolean boolean87 = enhancer58.getUseCache();
        boolean boolean88 = generatorStrategy57.equals((java.lang.Object) enhancer58);
        enhancer58.setUseCache(false);
        java.lang.ClassLoader classLoader91 = enhancer58.getClassLoader();
        enhancer0.setClassLoader(classLoader91);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy93 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback94 = null;
        enhancer0.setCallback(callback94);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(generatorStrategy28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(namingPolicy48);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(generatorStrategy57);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(namingPolicy81);
        org.junit.Assert.assertNotNull(classLoader82);
        org.junit.Assert.assertNotNull(classLoader84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(classLoader91);
        org.junit.Assert.assertNotNull(generatorStrategy93);
    }

    @Test
    public void test08403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08403");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer0.getNamingPolicy();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader24 = enhancer23.getClassLoader();
        enhancer23.setInterceptDuringConstruction(false);
        enhancer23.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = enhancer29.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        boolean boolean41 = enhancer33.getUseCache();
        boolean boolean42 = namingPolicy32.equals((java.lang.Object) enhancer33);
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setAttemptLoad(true);
        boolean boolean46 = enhancer43.getAttemptLoad();
        java.lang.ClassLoader classLoader47 = enhancer43.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer43.getStrategy();
        enhancer33.setStrategy(generatorStrategy48);
        java.lang.ClassLoader classLoader50 = enhancer33.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer33.getNamingPolicy();
        boolean boolean53 = namingPolicy51.equals((java.lang.Object) 1.0d);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean55 = enhancer54.getUseCache();
        java.lang.ClassLoader classLoader56 = enhancer54.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer61.getNamingPolicy();
        java.lang.ClassLoader classLoader65 = enhancer61.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader67 = enhancer66.getClassLoader();
        enhancer61.setClassLoader(classLoader67);
        boolean boolean69 = enhancer61.getUseCache();
        boolean boolean70 = namingPolicy60.equals((java.lang.Object) enhancer61);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setAttemptLoad(true);
        boolean boolean74 = enhancer71.getAttemptLoad();
        java.lang.ClassLoader classLoader75 = enhancer71.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer71.getStrategy();
        enhancer61.setStrategy(generatorStrategy76);
        java.lang.ClassLoader classLoader78 = enhancer61.getClassLoader();
        enhancer54.setClassLoader(classLoader78);
        boolean boolean80 = namingPolicy51.equals((java.lang.Object) enhancer54);
        enhancer23.setNamingPolicy(namingPolicy51);
        enhancer0.setNamingPolicy(namingPolicy51);
        org.mockito.cglib.proxy.Callback callback83 = null;
        enhancer0.setCallback(callback83);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setUseCache(false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(namingPolicy32);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertNotNull(classLoader65);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(generatorStrategy76);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test08404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08404");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.Class<?> wildcardClass7 = enhancer0.getClass();
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        org.mockito.cglib.proxy.Callback callback10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass7, callback10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test08405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08405");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter10 = null;
        enhancer0.setCallbackFilter(callbackFilter10);
        enhancer0.setAttemptLoad(true);
        boolean boolean14 = enhancer0.getUseCache();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer0.setCallback(callback20);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(generatorStrategy19);
    }

    @Test
    public void test08406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08406");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer6.getNamingPolicy();
        java.lang.ClassLoader classLoader10 = enhancer6.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader12 = enhancer11.getClassLoader();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Class[] classArray29 = new java.lang.Class[] { wildcardClass14, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass25, wildcardClass27 };
        enhancer11.setInterfaces(classArray29);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer31.getNamingPolicy();
        java.lang.ClassLoader classLoader35 = enhancer31.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader37 = enhancer36.getClassLoader();
        enhancer31.setClassLoader(classLoader37);
        enhancer11.setClassLoader(classLoader37);
        org.mockito.cglib.proxy.Callback callback40 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray41 = new org.mockito.cglib.proxy.Callback[] { callback40 };
        enhancer11.setCallbacks(callbackArray41);
        enhancer6.setCallbacks(callbackArray41);
        enhancer6.setUseFactory(false);
        enhancer6.setAttemptLoad(false);
        boolean boolean48 = generatorStrategy5.equals((java.lang.Object) enhancer6);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setAttemptLoad(true);
        boolean boolean52 = enhancer49.getAttemptLoad();
        java.lang.ClassLoader classLoader53 = enhancer49.getClassLoader();
        enhancer49.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback56 = null;
        enhancer49.setCallback(callback56);
        enhancer49.setUseCache(false);
        boolean boolean60 = generatorStrategy5.equals((java.lang.Object) enhancer49);
        org.mockito.cglib.core.NamingPolicy namingPolicy61 = enhancer49.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter62 = null;
        enhancer49.setCallbackFilter(callbackFilter62);
        enhancer49.setAttemptLoad(false);
        enhancer49.setSerialVersionUID((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(callbackArray41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(namingPolicy61);
    }

    @Test
    public void test08407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08407");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer0.setCallback(callback13);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader16 = enhancer15.getClassLoader();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Class[] classArray33 = new java.lang.Class[] { wildcardClass18, wildcardClass20, wildcardClass23, wildcardClass26, wildcardClass29, wildcardClass31 };
        enhancer15.setInterfaces(classArray33);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer35.getNamingPolicy();
        java.lang.ClassLoader classLoader39 = enhancer35.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        enhancer35.setClassLoader(classLoader41);
        enhancer15.setClassLoader(classLoader41);
        enhancer0.setClassLoader(classLoader41);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter45 = null;
        enhancer0.setCallbackFilter(callbackFilter45);
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer0.getNamingPolicy();
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(namingPolicy47);
    }

    @Test
    public void test08408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08408");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader14 = enhancer13.getClassLoader();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Class[] classArray31 = new java.lang.Class[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass29 };
        enhancer13.setInterfaces(classArray31);
        enhancer13.setUseCache(false);
        boolean boolean35 = enhancer13.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer36.getNamingPolicy();
        boolean boolean40 = enhancer36.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter41 = null;
        enhancer36.setCallbackFilter(callbackFilter41);
        org.mockito.cglib.proxy.Callback callback43 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray44 = new org.mockito.cglib.proxy.Callback[] { callback43 };
        enhancer36.setCallbacks(callbackArray44);
        enhancer13.setCallbacks(callbackArray44);
        enhancer0.setCallbacks(callbackArray44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(callbackArray44);
    }

    @Test
    public void test08409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08409");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = enhancer29.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        boolean boolean41 = enhancer33.getUseCache();
        boolean boolean42 = namingPolicy32.equals((java.lang.Object) enhancer33);
        enhancer0.setNamingPolicy(namingPolicy32);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Class[] classArray62 = new java.lang.Class[] { wildcardClass47, wildcardClass49, wildcardClass52, wildcardClass55, wildcardClass58, wildcardClass60 };
        enhancer44.setInterfaces(classArray62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        java.lang.ClassLoader classLoader68 = enhancer64.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader70 = enhancer69.getClassLoader();
        enhancer64.setClassLoader(classLoader70);
        enhancer44.setClassLoader(classLoader70);
        java.lang.ClassLoader classLoader73 = enhancer44.getClassLoader();
        boolean boolean74 = namingPolicy32.equals((java.lang.Object) enhancer44);
        org.mockito.cglib.core.NamingPolicy namingPolicy75 = enhancer44.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer44.getStrategy();
        enhancer44.setInterceptDuringConstruction(false);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy32);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(classLoader70);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(namingPolicy75);
        org.junit.Assert.assertNotNull(generatorStrategy76);
    }

    @Test
    public void test08410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08410");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class9 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
    }

    @Test
    public void test08411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08411");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter4 = null;
        enhancer0.setCallbackFilter(callbackFilter4);
        enhancer0.setUseFactory(false);
        boolean boolean8 = enhancer0.getAttemptLoad();
        java.lang.Class<?> wildcardClass9 = enhancer0.getClass();
        org.mockito.cglib.proxy.Callback callback10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass9, callback10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test08412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08412");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader2 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer0.setCallbackFilter(callbackFilter6);
        org.mockito.cglib.proxy.Callback[] callbackArray8 = null;
        enhancer0.setCallbacks(callbackArray8);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer10.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = enhancer14.getNamingPolicy();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader20 = enhancer19.getClassLoader();
        enhancer14.setClassLoader(classLoader20);
        boolean boolean22 = enhancer14.getUseCache();
        boolean boolean23 = namingPolicy13.equals((java.lang.Object) enhancer14);
        org.mockito.cglib.proxy.Callback callback24 = null;
        enhancer14.setCallback(callback24);
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer14.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter27 = null;
        enhancer14.setCallbackFilter(callbackFilter27);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer14.getNamingPolicy();
        java.lang.Class<?> wildcardClass30 = enhancer14.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.cglib.proxy.Enhancer");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(namingPolicy13);
        org.junit.Assert.assertNotNull(namingPolicy17);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test08413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08413");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer4.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader24 = enhancer23.getClassLoader();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Class[] classArray41 = new java.lang.Class[] { wildcardClass26, wildcardClass28, wildcardClass31, wildcardClass34, wildcardClass37, wildcardClass39 };
        enhancer23.setInterfaces(classArray41);
        enhancer4.setInterfaces(classArray41);
        org.mockito.cglib.proxy.Callback callback44 = null;
        enhancer4.setCallback(callback44);
        boolean boolean46 = enhancer4.getAttemptLoad();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test08414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08414");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer22.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer26.getNamingPolicy();
        java.lang.ClassLoader classLoader30 = enhancer26.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader32 = enhancer31.getClassLoader();
        enhancer26.setClassLoader(classLoader32);
        boolean boolean34 = enhancer26.getUseCache();
        boolean boolean35 = namingPolicy25.equals((java.lang.Object) enhancer26);
        enhancer4.setNamingPolicy(namingPolicy25);
        enhancer4.setUseFactory(true);
        boolean boolean39 = enhancer4.getUseCache();
        enhancer4.setAttemptLoad(false);
        enhancer4.setInterceptDuringConstruction(false);
        enhancer4.setUseCache(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter46 = null;
        enhancer4.setCallbackFilter(callbackFilter46);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test08415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08415");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader42 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader44 = enhancer43.getClassLoader();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Class[] classArray61 = new java.lang.Class[] { wildcardClass46, wildcardClass48, wildcardClass51, wildcardClass54, wildcardClass57, wildcardClass59 };
        enhancer43.setInterfaces(classArray61);
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        enhancer63.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy66 = enhancer63.getNamingPolicy();
        java.lang.ClassLoader classLoader67 = enhancer63.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader69 = enhancer68.getClassLoader();
        enhancer63.setClassLoader(classLoader69);
        enhancer43.setClassLoader(classLoader69);
        java.lang.ClassLoader classLoader72 = enhancer43.getClassLoader();
        enhancer0.setClassLoader(classLoader72);
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader76 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy77 = enhancer0.getStrategy();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(namingPolicy66);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertNotNull(classLoader76);
        org.junit.Assert.assertNotNull(generatorStrategy77);
    }

    @Test
    public void test08416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08416");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer7.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer11.getNamingPolicy();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader17 = enhancer16.getClassLoader();
        enhancer11.setClassLoader(classLoader17);
        boolean boolean19 = enhancer11.getUseCache();
        boolean boolean20 = namingPolicy10.equals((java.lang.Object) enhancer11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setAttemptLoad(true);
        boolean boolean24 = enhancer21.getAttemptLoad();
        java.lang.ClassLoader classLoader25 = enhancer21.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy26 = enhancer21.getStrategy();
        enhancer11.setStrategy(generatorStrategy26);
        java.lang.ClassLoader classLoader28 = enhancer11.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer11.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        java.lang.Class[] classArray48 = new java.lang.Class[] { wildcardClass33, wildcardClass35, wildcardClass38, wildcardClass41, wildcardClass44, wildcardClass46 };
        enhancer30.setInterfaces(classArray48);
        enhancer11.setInterfaces(classArray48);
        enhancer11.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        enhancer53.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = enhancer53.getNamingPolicy();
        java.lang.ClassLoader classLoader57 = enhancer53.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader59 = enhancer58.getClassLoader();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        boolean boolean75 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass74);
        java.lang.Class[] classArray76 = new java.lang.Class[] { wildcardClass61, wildcardClass63, wildcardClass66, wildcardClass69, wildcardClass72, wildcardClass74 };
        enhancer58.setInterfaces(classArray76);
        org.mockito.cglib.proxy.Enhancer enhancer78 = new org.mockito.cglib.proxy.Enhancer();
        enhancer78.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = enhancer78.getNamingPolicy();
        java.lang.ClassLoader classLoader82 = enhancer78.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer83 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader84 = enhancer83.getClassLoader();
        enhancer78.setClassLoader(classLoader84);
        enhancer58.setClassLoader(classLoader84);
        org.mockito.cglib.proxy.Callback callback87 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray88 = new org.mockito.cglib.proxy.Callback[] { callback87 };
        enhancer58.setCallbacks(callbackArray88);
        enhancer53.setCallbacks(callbackArray88);
        enhancer11.setCallbacks(callbackArray88);
        enhancer0.setCallbacks(callbackArray88);
        enhancer0.setUseCache(true);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(generatorStrategy26);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(classArray48);
        org.junit.Assert.assertNotNull(namingPolicy56);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(namingPolicy81);
        org.junit.Assert.assertNotNull(classLoader82);
        org.junit.Assert.assertNotNull(classLoader84);
        org.junit.Assert.assertNotNull(callbackArray88);
    }

    @Test
    public void test08417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08417");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseFactory(false);
        enhancer0.setUseFactory(true);
        java.lang.ClassLoader classLoader17 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer0.setCallback(callback18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(classLoader17);
    }

    @Test
    public void test08418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08418");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader2 = enhancer1.getClassLoader();
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass4, wildcardClass6, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass17 };
        enhancer1.setInterfaces(classArray19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer21.getNamingPolicy();
        java.lang.ClassLoader classLoader25 = enhancer21.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader27 = enhancer26.getClassLoader();
        enhancer21.setClassLoader(classLoader27);
        enhancer1.setClassLoader(classLoader27);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer30.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer34.getNamingPolicy();
        java.lang.ClassLoader classLoader38 = enhancer34.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader40 = enhancer39.getClassLoader();
        enhancer34.setClassLoader(classLoader40);
        boolean boolean42 = enhancer34.getUseCache();
        boolean boolean43 = namingPolicy33.equals((java.lang.Object) enhancer34);
        enhancer1.setNamingPolicy(namingPolicy33);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader46 = enhancer45.getClassLoader();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.Class[] classArray63 = new java.lang.Class[] { wildcardClass48, wildcardClass50, wildcardClass53, wildcardClass56, wildcardClass59, wildcardClass61 };
        enhancer45.setInterfaces(classArray63);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer65.getNamingPolicy();
        java.lang.ClassLoader classLoader69 = enhancer65.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader71 = enhancer70.getClassLoader();
        enhancer65.setClassLoader(classLoader71);
        enhancer45.setClassLoader(classLoader71);
        java.lang.ClassLoader classLoader74 = enhancer45.getClassLoader();
        boolean boolean75 = namingPolicy33.equals((java.lang.Object) enhancer45);
        java.lang.Class<?> wildcardClass76 = namingPolicy33.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass76);
        java.lang.ClassLoader classLoader78 = enhancer0.getClassLoader();
        boolean boolean79 = enhancer0.getUseCache();
        org.mockito.asm.ClassVisitor classVisitor80 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(classArray63);
        org.junit.Assert.assertNotNull(namingPolicy68);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(classLoader71);
        org.junit.Assert.assertNotNull(classLoader74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test08419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08419");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        java.lang.ClassLoader classLoader9 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter10 = null;
        enhancer0.setCallbackFilter(callbackFilter10);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter14 = null;
        enhancer0.setCallbackFilter(callbackFilter14);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer16.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        boolean boolean28 = enhancer20.getUseCache();
        boolean boolean29 = namingPolicy19.equals((java.lang.Object) enhancer20);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        boolean boolean33 = enhancer30.getAttemptLoad();
        java.lang.ClassLoader classLoader34 = enhancer30.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy35 = enhancer30.getStrategy();
        enhancer20.setStrategy(generatorStrategy35);
        java.lang.ClassLoader classLoader37 = enhancer20.getClassLoader();
        boolean boolean38 = enhancer20.getUseCache();
        org.mockito.cglib.proxy.Callback callback39 = null;
        enhancer20.setCallback(callback39);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        java.lang.ClassLoader classLoader44 = null;
        enhancer41.setClassLoader(classLoader44);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setAttemptLoad(true);
        boolean boolean49 = enhancer46.getAttemptLoad();
        java.lang.ClassLoader classLoader50 = enhancer46.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy51 = enhancer46.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        boolean boolean55 = enhancer52.getAttemptLoad();
        java.lang.ClassLoader classLoader56 = enhancer52.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy57 = enhancer52.getStrategy();
        enhancer46.setStrategy(generatorStrategy57);
        enhancer41.setStrategy(generatorStrategy57);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer41.getNamingPolicy();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer41.getNamingPolicy();
        enhancer41.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy66 = enhancer41.getStrategy();
        enhancer20.setStrategy(generatorStrategy66);
        enhancer0.setStrategy(generatorStrategy66);
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(generatorStrategy35);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(generatorStrategy51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(generatorStrategy57);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(generatorStrategy66);
        org.junit.Assert.assertNotNull(namingPolicy69);
    }

    @Test
    public void test08420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08420");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader21 = null;
        enhancer0.setClassLoader(classLoader21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setAttemptLoad(true);
        boolean boolean26 = enhancer23.getAttemptLoad();
        java.lang.ClassLoader classLoader27 = enhancer23.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy28 = enhancer23.getStrategy();
        enhancer0.setStrategy(generatorStrategy28);
        java.lang.ClassLoader classLoader30 = enhancer0.getClassLoader();
        java.lang.Class<?> wildcardClass31 = enhancer0.getClass();
        org.mockito.cglib.proxy.Callback callback32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass31, callback32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(generatorStrategy28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test08421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08421");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer4.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer4.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter17 = null;
        enhancer4.setCallbackFilter(callbackFilter17);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer4.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        boolean boolean23 = enhancer20.getAttemptLoad();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = enhancer20.getStrategy();
        enhancer20.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader29 = enhancer28.getClassLoader();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        java.lang.Class[] classArray46 = new java.lang.Class[] { wildcardClass31, wildcardClass33, wildcardClass36, wildcardClass39, wildcardClass42, wildcardClass44 };
        enhancer28.setInterfaces(classArray46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer48.getNamingPolicy();
        java.lang.ClassLoader classLoader52 = enhancer48.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader54 = enhancer53.getClassLoader();
        enhancer48.setClassLoader(classLoader54);
        enhancer28.setClassLoader(classLoader54);
        java.lang.ClassLoader classLoader57 = enhancer28.getClassLoader();
        enhancer20.setClassLoader(classLoader57);
        enhancer20.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer61.getNamingPolicy();
        java.lang.ClassLoader classLoader65 = enhancer61.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader67 = enhancer66.getClassLoader();
        enhancer61.setClassLoader(classLoader67);
        java.lang.ClassLoader classLoader69 = enhancer61.getClassLoader();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy72 = enhancer61.getStrategy();
        enhancer20.setStrategy(generatorStrategy72);
        org.mockito.cglib.core.NamingPolicy namingPolicy74 = enhancer20.getNamingPolicy();
        boolean boolean75 = namingPolicy19.equals((java.lang.Object) enhancer20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = enhancer20.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(generatorStrategy25);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertNotNull(classLoader65);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(generatorStrategy72);
        org.junit.Assert.assertNotNull(namingPolicy74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test08422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08422");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass21);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer0.setCallback(callback26);
        enhancer0.setAttemptLoad(false);
        java.lang.Class class30 = null;
        enhancer0.setSuperclass(class30);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer0.setCallback(callback34);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(generatorStrategy25);
    }

    @Test
    public void test08423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08423");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer0.setCallback(callback13);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy15 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader17 = enhancer16.getClassLoader();
        enhancer16.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader20 = enhancer16.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter21 = null;
        enhancer16.setCallbackFilter(callbackFilter21);
        java.lang.ClassLoader classLoader23 = enhancer16.getClassLoader();
        boolean boolean24 = generatorStrategy15.equals((java.lang.Object) classLoader23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        java.lang.ClassLoader classLoader33 = enhancer25.getClassLoader();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy36 = enhancer25.getStrategy();
        boolean boolean37 = generatorStrategy15.equals((java.lang.Object) generatorStrategy36);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setAttemptLoad(true);
        java.lang.ClassLoader classLoader41 = null;
        enhancer38.setClassLoader(classLoader41);
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setAttemptLoad(true);
        boolean boolean46 = enhancer43.getAttemptLoad();
        java.lang.ClassLoader classLoader47 = enhancer43.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer43.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setAttemptLoad(true);
        boolean boolean52 = enhancer49.getAttemptLoad();
        java.lang.ClassLoader classLoader53 = enhancer49.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer49.getStrategy();
        enhancer43.setStrategy(generatorStrategy54);
        enhancer38.setStrategy(generatorStrategy54);
        org.mockito.cglib.proxy.Callback callback57 = null;
        enhancer38.setCallback(callback57);
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader60 = enhancer59.getClassLoader();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        boolean boolean76 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass75);
        java.lang.Class[] classArray77 = new java.lang.Class[] { wildcardClass62, wildcardClass64, wildcardClass67, wildcardClass70, wildcardClass73, wildcardClass75 };
        enhancer59.setInterfaces(classArray77);
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        enhancer59.setSuperclass((java.lang.Class) wildcardClass80);
        enhancer59.setUseFactory(true);
        java.lang.Class<?> wildcardClass84 = enhancer59.getClass();
        enhancer38.setSuperclass((java.lang.Class) wildcardClass84);
        org.mockito.cglib.core.NamingPolicy namingPolicy86 = enhancer38.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy87 = enhancer38.getNamingPolicy();
        boolean boolean88 = enhancer38.getUseCache();
        enhancer38.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean91 = generatorStrategy36.equals((java.lang.Object) enhancer38);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(generatorStrategy15);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(generatorStrategy36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(namingPolicy86);
        org.junit.Assert.assertNotNull(namingPolicy87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test08424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08424");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setAttemptLoad(true);
        boolean boolean9 = enhancer6.getAttemptLoad();
        java.lang.ClassLoader classLoader10 = enhancer6.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer6.getStrategy();
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        boolean boolean16 = enhancer13.getAttemptLoad();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer13.getStrategy();
        enhancer0.setStrategy(generatorStrategy18);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy20 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(true);
        boolean boolean23 = enhancer0.getUseCache();
        boolean boolean24 = enhancer0.getUseCache();
        enhancer0.setInterceptDuringConstruction(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(generatorStrategy18);
        org.junit.Assert.assertNotNull(generatorStrategy20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test08425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08425");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy9 = enhancer0.getStrategy();
        java.lang.Class<?> wildcardClass10 = generatorStrategy9.getClass();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer11.getNamingPolicy();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        enhancer11.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = enhancer11.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean20 = enhancer19.getAttemptLoad();
        enhancer19.setUseCache(false);
        boolean boolean23 = namingPolicy18.equals((java.lang.Object) enhancer19);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Class[] classArray47 = new java.lang.Class[] { wildcardClass32, wildcardClass34, wildcardClass37, wildcardClass40, wildcardClass43, wildcardClass45 };
        enhancer29.setInterfaces(classArray47);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy52 = enhancer49.getNamingPolicy();
        java.lang.ClassLoader classLoader53 = enhancer49.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader55 = enhancer54.getClassLoader();
        enhancer49.setClassLoader(classLoader55);
        enhancer29.setClassLoader(classLoader55);
        org.mockito.cglib.proxy.Callback callback58 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray59 = new org.mockito.cglib.proxy.Callback[] { callback58 };
        enhancer29.setCallbacks(callbackArray59);
        enhancer24.setCallbacks(callbackArray59);
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback64 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray65 = new org.mockito.cglib.proxy.Callback[] { callback64 };
        enhancer24.setCallbacks(callbackArray65);
        enhancer19.setCallbacks(callbackArray65);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerCallbacks((java.lang.Class) wildcardClass10, callbackArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.core.DefaultGeneratorStrategy is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(namingPolicy18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(namingPolicy52);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(callbackArray59);
        org.junit.Assert.assertNotNull(callbackArray65);
    }

    @Test
    public void test08426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08426");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader5 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy6 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer7.getNamingPolicy();
        java.lang.ClassLoader classLoader11 = enhancer7.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer7.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer13.getNamingPolicy();
        boolean boolean17 = enhancer13.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter18 = null;
        enhancer13.setCallbackFilter(callbackFilter18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader21 = enhancer20.getClassLoader();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Class[] classArray38 = new java.lang.Class[] { wildcardClass23, wildcardClass25, wildcardClass28, wildcardClass31, wildcardClass34, wildcardClass36 };
        enhancer20.setInterfaces(classArray38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer40.getNamingPolicy();
        java.lang.ClassLoader classLoader44 = enhancer40.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader46 = enhancer45.getClassLoader();
        enhancer40.setClassLoader(classLoader46);
        enhancer20.setClassLoader(classLoader46);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy52 = enhancer49.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        enhancer53.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = enhancer53.getNamingPolicy();
        java.lang.ClassLoader classLoader57 = enhancer53.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader59 = enhancer58.getClassLoader();
        enhancer53.setClassLoader(classLoader59);
        boolean boolean61 = enhancer53.getUseCache();
        boolean boolean62 = namingPolicy52.equals((java.lang.Object) enhancer53);
        enhancer20.setNamingPolicy(namingPolicy52);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        java.lang.ClassLoader classLoader68 = enhancer64.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader70 = enhancer69.getClassLoader();
        enhancer64.setClassLoader(classLoader70);
        enhancer64.setAttemptLoad(true);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[] { wildcardClass75 };
        enhancer64.setInterfaces(classArray76);
        enhancer20.setInterfaces(classArray76);
        enhancer13.setInterfaces(classArray76);
        boolean boolean80 = generatorStrategy12.equals((java.lang.Object) enhancer13);
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = enhancer13.getNamingPolicy();
        boolean boolean82 = generatorStrategy6.equals((java.lang.Object) enhancer13);
        enhancer13.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.core.NamingPolicy namingPolicy85 = enhancer13.getNamingPolicy();
        java.lang.ClassLoader classLoader86 = enhancer13.getClassLoader();
        enhancer13.setUseCache(true);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(generatorStrategy6);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(namingPolicy52);
        org.junit.Assert.assertNotNull(namingPolicy56);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(classLoader70);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(namingPolicy81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(namingPolicy85);
        org.junit.Assert.assertNotNull(classLoader86);
    }

    @Test
    public void test08427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08427");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer22.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer26.getNamingPolicy();
        java.lang.ClassLoader classLoader30 = enhancer26.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader32 = enhancer31.getClassLoader();
        enhancer26.setClassLoader(classLoader32);
        boolean boolean34 = enhancer26.getUseCache();
        boolean boolean35 = namingPolicy25.equals((java.lang.Object) enhancer26);
        enhancer4.setNamingPolicy(namingPolicy25);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy37 = enhancer4.getStrategy();
        enhancer4.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer4.generateClass(classVisitor40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(generatorStrategy37);
    }

    @Test
    public void test08428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08428");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer4.getNamingPolicy();
        boolean boolean23 = enhancer4.getAttemptLoad();
        enhancer4.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader27 = enhancer26.getClassLoader();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Class[] classArray44 = new java.lang.Class[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass37, wildcardClass40, wildcardClass42 };
        enhancer26.setInterfaces(classArray44);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = enhancer46.getNamingPolicy();
        enhancer26.setNamingPolicy(namingPolicy49);
        enhancer4.setNamingPolicy(namingPolicy49);
        boolean boolean52 = enhancer4.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        enhancer53.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = enhancer53.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        java.lang.ClassLoader classLoader61 = enhancer57.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader63 = enhancer62.getClassLoader();
        enhancer57.setClassLoader(classLoader63);
        java.lang.Class<?> wildcardClass65 = enhancer57.getClass();
        enhancer53.setSuperclass((java.lang.Class) wildcardClass65);
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        enhancer4.setSuperclass((java.lang.Class) wildcardClass65);
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        enhancer69.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy72 = enhancer69.getNamingPolicy();
        java.lang.ClassLoader classLoader73 = enhancer69.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader75 = enhancer74.getClassLoader();
        enhancer69.setClassLoader(classLoader75);
        enhancer69.setAttemptLoad(true);
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[] { wildcardClass80 };
        enhancer69.setInterfaces(classArray81);
        java.util.List list83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods((java.lang.Class) wildcardClass65, classArray81, list83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(namingPolicy49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(namingPolicy56);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(namingPolicy72);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray81);
    }

    @Test
    public void test08429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08429");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        enhancer20.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer20.setInterceptDuringConstruction(true);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        enhancer20.setSuperclass((java.lang.Class) wildcardClass28);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass28);
        enhancer0.setUseCache(true);
        enhancer0.setInterceptDuringConstruction(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test08430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08430");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy67);
        org.mockito.cglib.proxy.Callback callback69 = null;
        enhancer0.setCallback(callback69);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setAttemptLoad(true);
        boolean boolean74 = enhancer71.getAttemptLoad();
        java.lang.ClassLoader classLoader75 = enhancer71.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer71.getStrategy();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        enhancer71.setSuperclass((java.lang.Class) wildcardClass78);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass78);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        boolean boolean83 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy84 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback85 = null;
        enhancer0.setCallback(callback85);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(generatorStrategy63);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(generatorStrategy76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(generatorStrategy84);
    }

    @Test
    public void test08431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08431");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer4.getNamingPolicy();
        boolean boolean23 = enhancer4.getAttemptLoad();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        enhancer4.setSuperclass((java.lang.Class) wildcardClass25);
        enhancer4.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Callback callback30 = null;
        enhancer4.setCallback(callback30);
        java.lang.Class[] classArray32 = null;
        enhancer4.setInterfaces(classArray32);
        enhancer4.setInterceptDuringConstruction(false);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test08432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08432");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader9 = enhancer8.getClassLoader();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass11, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass24 };
        enhancer8.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer8.setClassLoader(classLoader34);
        java.lang.ClassLoader classLoader37 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader37);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        java.lang.ClassLoader classLoader45 = enhancer41.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader47 = enhancer46.getClassLoader();
        enhancer41.setClassLoader(classLoader47);
        java.lang.ClassLoader classLoader49 = enhancer41.getClassLoader();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer41.getStrategy();
        enhancer0.setStrategy(generatorStrategy52);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Callback[] callbackArray56 = null;
        enhancer0.setCallbacks(callbackArray56);
        org.mockito.cglib.core.NamingPolicy namingPolicy58 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        boolean boolean63 = enhancer60.getAttemptLoad();
        java.lang.ClassLoader classLoader64 = enhancer60.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy65 = enhancer60.getStrategy();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        enhancer60.setSuperclass((java.lang.Class) wildcardClass67);
        java.lang.ClassLoader classLoader69 = enhancer60.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter70 = null;
        enhancer60.setCallbackFilter(callbackFilter70);
        enhancer60.setUseCache(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter74 = null;
        enhancer60.setCallbackFilter(callbackFilter74);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter76 = null;
        enhancer60.setCallbackFilter(callbackFilter76);
        boolean boolean78 = namingPolicy59.equals((java.lang.Object) enhancer60);
        java.lang.Object obj81 = null;
        org.mockito.cglib.core.Predicate predicate82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str83 = namingPolicy59.getClassName("hi!", "", obj81, predicate82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertNotNull(namingPolicy58);
        org.junit.Assert.assertNotNull(namingPolicy59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(generatorStrategy65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test08433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08433");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer30.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer30.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy34);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy36 = enhancer0.getStrategy();
        boolean boolean37 = enhancer0.getUseCache();
        boolean boolean38 = enhancer0.getAttemptLoad();
        boolean boolean39 = enhancer0.getUseCache();
        boolean boolean40 = enhancer0.getAttemptLoad();
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertNotNull(generatorStrategy36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test08434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08434");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        java.lang.ClassLoader classLoader9 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter10 = null;
        enhancer0.setCallbackFilter(callbackFilter10);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter14 = null;
        enhancer0.setCallbackFilter(callbackFilter14);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer16.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        boolean boolean28 = enhancer20.getUseCache();
        boolean boolean29 = namingPolicy19.equals((java.lang.Object) enhancer20);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        boolean boolean33 = enhancer30.getAttemptLoad();
        java.lang.ClassLoader classLoader34 = enhancer30.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy35 = enhancer30.getStrategy();
        enhancer20.setStrategy(generatorStrategy35);
        java.lang.ClassLoader classLoader37 = enhancer20.getClassLoader();
        boolean boolean38 = enhancer20.getUseCache();
        org.mockito.cglib.proxy.Callback callback39 = null;
        enhancer20.setCallback(callback39);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        java.lang.ClassLoader classLoader44 = null;
        enhancer41.setClassLoader(classLoader44);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setAttemptLoad(true);
        boolean boolean49 = enhancer46.getAttemptLoad();
        java.lang.ClassLoader classLoader50 = enhancer46.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy51 = enhancer46.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        boolean boolean55 = enhancer52.getAttemptLoad();
        java.lang.ClassLoader classLoader56 = enhancer52.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy57 = enhancer52.getStrategy();
        enhancer46.setStrategy(generatorStrategy57);
        enhancer41.setStrategy(generatorStrategy57);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer41.getNamingPolicy();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer41.getNamingPolicy();
        enhancer41.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy66 = enhancer41.getStrategy();
        enhancer20.setStrategy(generatorStrategy66);
        enhancer0.setStrategy(generatorStrategy66);
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        enhancer69.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy72 = enhancer69.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter73 = null;
        enhancer69.setCallbackFilter(callbackFilter73);
        enhancer69.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy77 = enhancer69.getStrategy();
        enhancer0.setStrategy(generatorStrategy77);
        enhancer0.setAttemptLoad(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(generatorStrategy35);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(generatorStrategy51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(generatorStrategy57);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(generatorStrategy66);
        org.junit.Assert.assertNotNull(namingPolicy72);
        org.junit.Assert.assertNotNull(generatorStrategy77);
    }

    @Test
    public void test08435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08435");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader2 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader8 = enhancer7.getClassLoader();
        enhancer7.setInterceptDuringConstruction(false);
        enhancer7.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer13.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer17.getNamingPolicy();
        java.lang.ClassLoader classLoader21 = enhancer17.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader23 = enhancer22.getClassLoader();
        enhancer17.setClassLoader(classLoader23);
        boolean boolean25 = enhancer17.getUseCache();
        boolean boolean26 = namingPolicy16.equals((java.lang.Object) enhancer17);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setAttemptLoad(true);
        boolean boolean30 = enhancer27.getAttemptLoad();
        java.lang.ClassLoader classLoader31 = enhancer27.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy32 = enhancer27.getStrategy();
        enhancer17.setStrategy(generatorStrategy32);
        java.lang.ClassLoader classLoader34 = enhancer17.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer17.getNamingPolicy();
        boolean boolean37 = namingPolicy35.equals((java.lang.Object) 1.0d);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean39 = enhancer38.getUseCache();
        java.lang.ClassLoader classLoader40 = enhancer38.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer41.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = enhancer45.getNamingPolicy();
        java.lang.ClassLoader classLoader49 = enhancer45.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader51 = enhancer50.getClassLoader();
        enhancer45.setClassLoader(classLoader51);
        boolean boolean53 = enhancer45.getUseCache();
        boolean boolean54 = namingPolicy44.equals((java.lang.Object) enhancer45);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setAttemptLoad(true);
        boolean boolean58 = enhancer55.getAttemptLoad();
        java.lang.ClassLoader classLoader59 = enhancer55.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy60 = enhancer55.getStrategy();
        enhancer45.setStrategy(generatorStrategy60);
        java.lang.ClassLoader classLoader62 = enhancer45.getClassLoader();
        enhancer38.setClassLoader(classLoader62);
        boolean boolean64 = namingPolicy35.equals((java.lang.Object) enhancer38);
        enhancer7.setNamingPolicy(namingPolicy35);
        enhancer0.setNamingPolicy(namingPolicy35);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader68 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = enhancer0.getNamingPolicy();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(generatorStrategy32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(namingPolicy48);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(generatorStrategy60);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(namingPolicy71);
    }

    @Test
    public void test08436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08436");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer4.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer4.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter17 = null;
        enhancer4.setCallbackFilter(callbackFilter17);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer4.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        boolean boolean23 = enhancer20.getAttemptLoad();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        enhancer20.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setAttemptLoad(true);
        enhancer27.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer27.setInterceptDuringConstruction(true);
        enhancer27.setUseCache(true);
        enhancer27.setSerialVersionUID((java.lang.Long) 1L);
        enhancer27.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = enhancer27.getNamingPolicy();
        enhancer20.setNamingPolicy(namingPolicy40);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        enhancer42.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer42.setInterceptDuringConstruction(true);
        enhancer42.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy51 = enhancer42.getStrategy();
        enhancer20.setStrategy(generatorStrategy51);
        enhancer4.setStrategy(generatorStrategy51);
        enhancer4.setSerialVersionUID((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(namingPolicy40);
        org.junit.Assert.assertNotNull(generatorStrategy51);
    }

    @Test
    public void test08437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08437");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        boolean boolean7 = enhancer0.getUseCache();
        boolean boolean8 = enhancer0.getUseCache();
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer0.getNamingPolicy();
        boolean boolean12 = enhancer0.getAttemptLoad();
        boolean boolean13 = enhancer0.getUseCache();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test08438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08438");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter4 = null;
        enhancer0.setCallbackFilter(callbackFilter4);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer0.getNamingPolicy();
        boolean boolean7 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader9 = enhancer8.getClassLoader();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass11, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass24 };
        enhancer8.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer8.setClassLoader(classLoader34);
        java.lang.Class class37 = null;
        enhancer8.setSuperclass(class37);
        org.mockito.cglib.proxy.Callback callback39 = null;
        enhancer8.setCallback(callback39);
        enhancer8.setSerialVersionUID((java.lang.Long) 100L);
        boolean boolean43 = enhancer8.getAttemptLoad();
        java.lang.ClassLoader classLoader44 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader44);
        enhancer0.setUseFactory(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classLoader44);
    }

    @Test
    public void test08439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08439");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.Class class29 = null;
        enhancer0.setSuperclass(class29);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer0.setCallback(callback33);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setAttemptLoad(true);
        java.lang.ClassLoader classLoader38 = null;
        enhancer35.setClassLoader(classLoader38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        boolean boolean43 = enhancer40.getAttemptLoad();
        java.lang.ClassLoader classLoader44 = enhancer40.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer40.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setAttemptLoad(true);
        boolean boolean49 = enhancer46.getAttemptLoad();
        java.lang.ClassLoader classLoader50 = enhancer46.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy51 = enhancer46.getStrategy();
        enhancer40.setStrategy(generatorStrategy51);
        enhancer35.setStrategy(generatorStrategy51);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setAttemptLoad(true);
        boolean boolean57 = enhancer54.getAttemptLoad();
        java.lang.ClassLoader classLoader58 = enhancer54.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy59 = enhancer54.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        boolean boolean63 = enhancer60.getAttemptLoad();
        java.lang.ClassLoader classLoader64 = enhancer60.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy65 = enhancer60.getStrategy();
        enhancer54.setStrategy(generatorStrategy65);
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        enhancer67.setAttemptLoad(true);
        boolean boolean70 = enhancer67.getAttemptLoad();
        java.lang.ClassLoader classLoader71 = enhancer67.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy72 = enhancer67.getStrategy();
        enhancer54.setStrategy(generatorStrategy72);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy74 = enhancer54.getStrategy();
        boolean boolean75 = generatorStrategy51.equals((java.lang.Object) enhancer54);
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader77 = enhancer76.getClassLoader();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        boolean boolean82 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass81);
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        boolean boolean85 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass84);
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        boolean boolean88 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass87);
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = new java.lang.Object();
        java.lang.Class<?> wildcardClass92 = obj91.getClass();
        boolean boolean93 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass92);
        java.lang.Class[] classArray94 = new java.lang.Class[] { wildcardClass79, wildcardClass81, wildcardClass84, wildcardClass87, wildcardClass90, wildcardClass92 };
        enhancer76.setInterfaces(classArray94);
        enhancer54.setInterfaces(classArray94);
        enhancer0.setInterfaces(classArray94);
        org.mockito.cglib.core.NamingPolicy namingPolicy98 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader99 = enhancer0.getClassLoader();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(generatorStrategy45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(generatorStrategy51);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(generatorStrategy59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(generatorStrategy65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(classLoader71);
        org.junit.Assert.assertNotNull(generatorStrategy72);
        org.junit.Assert.assertNotNull(generatorStrategy74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(classLoader77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(classArray94);
        org.junit.Assert.assertNotNull(namingPolicy98);
        org.junit.Assert.assertNotNull(classLoader99);
    }

    @Test
    public void test08440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08440");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy6 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer7.getNamingPolicy();
        java.lang.ClassLoader classLoader11 = enhancer7.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer7.getStrategy();
        enhancer7.setAttemptLoad(false);
        java.lang.ClassLoader classLoader15 = enhancer7.getClassLoader();
        java.lang.Class<?> wildcardClass16 = classLoader15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class sun.misc.Launcher$AppClassLoader");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(generatorStrategy6);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test08441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08441");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter20 = null;
        enhancer0.setCallbackFilter(callbackFilter20);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        boolean boolean24 = enhancer0.getAttemptLoad();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean28 = enhancer27.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setAttemptLoad(true);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setAttemptLoad(true);
        boolean boolean37 = enhancer34.getAttemptLoad();
        java.lang.ClassLoader classLoader38 = enhancer34.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy39 = enhancer34.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        boolean boolean43 = enhancer40.getAttemptLoad();
        java.lang.ClassLoader classLoader44 = enhancer40.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer40.getStrategy();
        enhancer34.setStrategy(generatorStrategy45);
        enhancer29.setStrategy(generatorStrategy45);
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = enhancer29.getNamingPolicy();
        enhancer27.setNamingPolicy(namingPolicy48);
        enhancer27.setSerialVersionUID((java.lang.Long) 1L);
        java.lang.Class<?> wildcardClass52 = enhancer27.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass52);
        org.mockito.cglib.proxy.Callback callback55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass52, callback55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(generatorStrategy39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(generatorStrategy45);
        org.junit.Assert.assertNotNull(namingPolicy48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test08442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08442");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer4.setCallback(callback22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        enhancer4.setClassLoader(classLoader28);
        boolean boolean30 = enhancer4.getUseCache();
        enhancer4.setAttemptLoad(true);
        java.lang.ClassLoader classLoader33 = enhancer4.getClassLoader();
        enhancer4.setUseFactory(false);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(classLoader33);
    }

    @Test
    public void test08443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08443");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setAttemptLoad(true);
        boolean boolean8 = enhancer5.getAttemptLoad();
        java.lang.ClassLoader classLoader9 = enhancer5.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer5.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        boolean boolean14 = enhancer11.getAttemptLoad();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer11.getStrategy();
        enhancer5.setStrategy(generatorStrategy16);
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer0.setCallback(callback19);
        boolean boolean21 = enhancer0.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer23.getNamingPolicy();
        java.lang.ClassLoader classLoader27 = enhancer23.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader29 = enhancer28.getClassLoader();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        java.lang.Class[] classArray46 = new java.lang.Class[] { wildcardClass31, wildcardClass33, wildcardClass36, wildcardClass39, wildcardClass42, wildcardClass44 };
        enhancer28.setInterfaces(classArray46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer48.getNamingPolicy();
        java.lang.ClassLoader classLoader52 = enhancer48.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader54 = enhancer53.getClassLoader();
        enhancer48.setClassLoader(classLoader54);
        enhancer28.setClassLoader(classLoader54);
        org.mockito.cglib.proxy.Callback callback57 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray58 = new org.mockito.cglib.proxy.Callback[] { callback57 };
        enhancer28.setCallbacks(callbackArray58);
        enhancer23.setCallbacks(callbackArray58);
        enhancer23.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback63 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray64 = new org.mockito.cglib.proxy.Callback[] { callback63 };
        enhancer23.setCallbacks(callbackArray64);
        enhancer23.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy68 = enhancer23.getStrategy();
        boolean boolean69 = generatorStrategy22.equals((java.lang.Object) generatorStrategy68);
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy73 = enhancer70.getNamingPolicy();
        java.lang.ClassLoader classLoader74 = enhancer70.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer75 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader76 = enhancer75.getClassLoader();
        enhancer70.setClassLoader(classLoader76);
        java.lang.ClassLoader classLoader78 = enhancer70.getClassLoader();
        enhancer70.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter81 = null;
        enhancer70.setCallbackFilter(callbackFilter81);
        boolean boolean83 = generatorStrategy68.equals((java.lang.Object) enhancer70);
        org.mockito.cglib.proxy.Enhancer enhancer84 = new org.mockito.cglib.proxy.Enhancer();
        enhancer84.setAttemptLoad(true);
        boolean boolean87 = enhancer84.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter88 = null;
        enhancer84.setCallbackFilter(callbackFilter88);
        boolean boolean90 = enhancer84.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy91 = enhancer84.getStrategy();
        boolean boolean92 = generatorStrategy68.equals((java.lang.Object) enhancer84);
        java.lang.Class<?> wildcardClass93 = generatorStrategy68.getClass();
        org.mockito.cglib.proxy.Callback callback94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj95 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass93, callback94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(callbackArray58);
        org.junit.Assert.assertNotNull(callbackArray64);
        org.junit.Assert.assertNotNull(generatorStrategy68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(namingPolicy73);
        org.junit.Assert.assertNotNull(classLoader74);
        org.junit.Assert.assertNotNull(classLoader76);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(generatorStrategy91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test08444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08444");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean1 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader2 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer3.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader8 = enhancer7.getClassLoader();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        java.lang.Class[] classArray25 = new java.lang.Class[] { wildcardClass10, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass21, wildcardClass23 };
        enhancer7.setInterfaces(classArray25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer27.getNamingPolicy();
        java.lang.ClassLoader classLoader31 = enhancer27.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader33 = enhancer32.getClassLoader();
        enhancer27.setClassLoader(classLoader33);
        enhancer7.setClassLoader(classLoader33);
        org.mockito.cglib.proxy.Callback callback36 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray37 = new org.mockito.cglib.proxy.Callback[] { callback36 };
        enhancer7.setCallbacks(callbackArray37);
        enhancer3.setCallbacks(callbackArray37);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Class[] classArray58 = new java.lang.Class[] { wildcardClass43, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass54, wildcardClass56 };
        enhancer40.setInterfaces(classArray58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer60.getNamingPolicy();
        enhancer40.setNamingPolicy(namingPolicy63);
        enhancer3.setNamingPolicy(namingPolicy63);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy66 = enhancer3.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        enhancer67.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy70 = enhancer67.getNamingPolicy();
        enhancer3.setNamingPolicy(namingPolicy70);
        enhancer0.setNamingPolicy(namingPolicy70);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter75 = null;
        enhancer0.setCallbackFilter(callbackFilter75);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy77 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer78 = new org.mockito.cglib.proxy.Enhancer();
        enhancer78.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = enhancer78.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer82 = new org.mockito.cglib.proxy.Enhancer();
        enhancer82.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy85 = enhancer82.getNamingPolicy();
        java.lang.ClassLoader classLoader86 = enhancer82.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer87 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader88 = enhancer87.getClassLoader();
        enhancer82.setClassLoader(classLoader88);
        boolean boolean90 = enhancer82.getUseCache();
        boolean boolean91 = namingPolicy81.equals((java.lang.Object) enhancer82);
        org.mockito.cglib.proxy.Callback callback92 = null;
        enhancer82.setCallback(callback92);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter94 = null;
        enhancer82.setCallbackFilter(callbackFilter94);
        boolean boolean96 = generatorStrategy77.equals((java.lang.Object) callbackFilter94);
        java.lang.Class<?> wildcardClass97 = generatorStrategy77.getClass();
        org.mockito.cglib.proxy.Callback callback98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj99 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass97, callback98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(classLoader2);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(callbackArray37);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(generatorStrategy66);
        org.junit.Assert.assertNotNull(namingPolicy70);
        org.junit.Assert.assertNotNull(generatorStrategy77);
        org.junit.Assert.assertNotNull(namingPolicy81);
        org.junit.Assert.assertNotNull(namingPolicy85);
        org.junit.Assert.assertNotNull(classLoader86);
        org.junit.Assert.assertNotNull(classLoader88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test08445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08445");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter4 = null;
        enhancer0.setCallbackFilter(callbackFilter4);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer0.setCallbackFilter(callbackFilter6);
        boolean boolean8 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setAttemptLoad(true);
        boolean boolean12 = enhancer9.getAttemptLoad();
        java.lang.ClassLoader classLoader13 = enhancer9.getClassLoader();
        enhancer9.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer9.setCallback(callback16);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer18.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer22.getNamingPolicy();
        java.lang.ClassLoader classLoader26 = enhancer22.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader28 = enhancer27.getClassLoader();
        enhancer22.setClassLoader(classLoader28);
        boolean boolean30 = enhancer22.getUseCache();
        boolean boolean31 = namingPolicy21.equals((java.lang.Object) enhancer22);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setAttemptLoad(true);
        boolean boolean35 = enhancer32.getAttemptLoad();
        java.lang.ClassLoader classLoader36 = enhancer32.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy37 = enhancer32.getStrategy();
        enhancer22.setStrategy(generatorStrategy37);
        java.lang.ClassLoader classLoader39 = enhancer22.getClassLoader();
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer22.setCallback(callback40);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer42.getNamingPolicy();
        java.lang.ClassLoader classLoader46 = enhancer42.getClassLoader();
        enhancer22.setClassLoader(classLoader46);
        enhancer9.setClassLoader(classLoader46);
        enhancer0.setClassLoader(classLoader46);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer0.setCallback(callback50);
        enhancer0.setAttemptLoad(false);
        enhancer0.setAttemptLoad(false);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(generatorStrategy37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertNotNull(classLoader46);
    }

    @Test
    public void test08446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08446");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer4.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer4.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = enhancer4.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader19 = enhancer18.getClassLoader();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Class[] classArray36 = new java.lang.Class[] { wildcardClass21, wildcardClass23, wildcardClass26, wildcardClass29, wildcardClass32, wildcardClass34 };
        enhancer18.setInterfaces(classArray36);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter38 = null;
        enhancer18.setCallbackFilter(callbackFilter38);
        enhancer18.setSerialVersionUID((java.lang.Long) 0L);
        boolean boolean42 = enhancer18.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer18.setCallback(callback43);
        enhancer18.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy47 = enhancer18.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader49 = enhancer48.getClassLoader();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass64);
        java.lang.Class[] classArray66 = new java.lang.Class[] { wildcardClass51, wildcardClass53, wildcardClass56, wildcardClass59, wildcardClass62, wildcardClass64 };
        enhancer48.setInterfaces(classArray66);
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        enhancer68.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = enhancer68.getNamingPolicy();
        java.lang.ClassLoader classLoader72 = enhancer68.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer73 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader74 = enhancer73.getClassLoader();
        enhancer68.setClassLoader(classLoader74);
        enhancer48.setClassLoader(classLoader74);
        java.lang.ClassLoader classLoader77 = enhancer48.getClassLoader();
        java.lang.ClassLoader classLoader78 = null;
        enhancer48.setClassLoader(classLoader78);
        enhancer48.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean82 = enhancer48.getAttemptLoad();
        java.lang.Class<?> wildcardClass83 = enhancer48.getClass();
        enhancer18.setSuperclass((java.lang.Class) wildcardClass83);
        // The following exception was thrown during execution in test generation
        try {
            enhancer4.setCallbackType((java.lang.Class) wildcardClass83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.cglib.proxy.Enhancer");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(namingPolicy17);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(generatorStrategy47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(namingPolicy71);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertNotNull(classLoader74);
        org.junit.Assert.assertNotNull(classLoader77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test08447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08447");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.Callback callback29 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray30 = new org.mockito.cglib.proxy.Callback[] { callback29 };
        enhancer0.setCallbacks(callbackArray30);
        enhancer0.setAttemptLoad(false);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        boolean boolean39 = enhancer36.getAttemptLoad();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        enhancer36.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer36.setCallback(callback43);
        enhancer36.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy47 = enhancer36.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = enhancer36.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy48);
        enhancer0.setAttemptLoad(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class52 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(callbackArray30);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(generatorStrategy47);
        org.junit.Assert.assertNotNull(namingPolicy48);
    }

    @Test
    public void test08448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08448");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        java.lang.ClassLoader classLoader12 = enhancer0.getClassLoader();
        boolean boolean13 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer0.setCallback(callback14);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer16.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        boolean boolean28 = enhancer20.getUseCache();
        boolean boolean29 = namingPolicy19.equals((java.lang.Object) enhancer20);
        org.mockito.cglib.proxy.Callback callback30 = null;
        enhancer20.setCallback(callback30);
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = enhancer20.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter33 = null;
        enhancer20.setCallbackFilter(callbackFilter33);
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer20.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = enhancer37.getNamingPolicy();
        java.lang.ClassLoader classLoader41 = enhancer37.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader43 = enhancer42.getClassLoader();
        enhancer37.setClassLoader(classLoader43);
        boolean boolean45 = enhancer37.getUseCache();
        enhancer37.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = enhancer37.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy52 = enhancer49.getNamingPolicy();
        java.lang.ClassLoader classLoader53 = enhancer49.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader55 = enhancer54.getClassLoader();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass70);
        java.lang.Class[] classArray72 = new java.lang.Class[] { wildcardClass57, wildcardClass59, wildcardClass62, wildcardClass65, wildcardClass68, wildcardClass70 };
        enhancer54.setInterfaces(classArray72);
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        enhancer74.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer74.getNamingPolicy();
        java.lang.ClassLoader classLoader78 = enhancer74.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer79 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader80 = enhancer79.getClassLoader();
        enhancer74.setClassLoader(classLoader80);
        enhancer54.setClassLoader(classLoader80);
        org.mockito.cglib.proxy.Callback callback83 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray84 = new org.mockito.cglib.proxy.Callback[] { callback83 };
        enhancer54.setCallbacks(callbackArray84);
        enhancer49.setCallbacks(callbackArray84);
        enhancer49.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback89 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray90 = new org.mockito.cglib.proxy.Callback[] { callback89 };
        enhancer49.setCallbacks(callbackArray90);
        boolean boolean92 = enhancer49.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter93 = null;
        enhancer49.setCallbackFilter(callbackFilter93);
        boolean boolean95 = namingPolicy48.equals((java.lang.Object) enhancer49);
        boolean boolean96 = namingPolicy35.equals((java.lang.Object) namingPolicy48);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(namingPolicy32);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertNotNull(namingPolicy40);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(namingPolicy48);
        org.junit.Assert.assertNotNull(namingPolicy52);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(classArray72);
        org.junit.Assert.assertNotNull(namingPolicy77);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertNotNull(classLoader80);
        org.junit.Assert.assertNotNull(callbackArray84);
        org.junit.Assert.assertNotNull(callbackArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test08449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08449");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        boolean boolean9 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader11 = enhancer10.getClassLoader();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Class[] classArray28 = new java.lang.Class[] { wildcardClass13, wildcardClass15, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass26 };
        enhancer10.setInterfaces(classArray28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer30.getNamingPolicy();
        java.lang.ClassLoader classLoader34 = enhancer30.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        enhancer30.setClassLoader(classLoader36);
        enhancer10.setClassLoader(classLoader36);
        java.lang.ClassLoader classLoader39 = enhancer10.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer40.getNamingPolicy();
        enhancer10.setNamingPolicy(namingPolicy44);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy46 = enhancer10.getStrategy();
        enhancer0.setStrategy(generatorStrategy46);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer0.getStrategy();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setAttemptLoad(true);
        enhancer54.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer54.setInterceptDuringConstruction(true);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        enhancer54.setSuperclass((java.lang.Class) wildcardClass62);
        enhancer54.setAttemptLoad(false);
        boolean boolean67 = enhancer54.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy68 = enhancer54.getStrategy();
        enhancer54.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter71 = null;
        enhancer54.setCallbackFilter(callbackFilter71);
        org.mockito.cglib.core.Predicate predicate73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str74 = namingPolicy51.getClassName("hi!", "", (java.lang.Object) enhancer54, predicate73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(generatorStrategy46);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(generatorStrategy68);
    }

    @Test
    public void test08450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08450");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.Class class29 = null;
        enhancer0.setSuperclass(class29);
        java.lang.ClassLoader classLoader31 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy34 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        enhancer35.setUseCache(false);
        java.lang.ClassLoader classLoader39 = enhancer35.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = enhancer35.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader42 = enhancer41.getClassLoader();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Class[] classArray59 = new java.lang.Class[] { wildcardClass44, wildcardClass46, wildcardClass49, wildcardClass52, wildcardClass55, wildcardClass57 };
        enhancer41.setInterfaces(classArray59);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer61.getNamingPolicy();
        java.lang.ClassLoader classLoader65 = enhancer61.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader67 = enhancer66.getClassLoader();
        enhancer61.setClassLoader(classLoader67);
        enhancer41.setClassLoader(classLoader67);
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy73 = enhancer70.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        enhancer74.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer74.getNamingPolicy();
        java.lang.ClassLoader classLoader78 = enhancer74.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer79 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader80 = enhancer79.getClassLoader();
        enhancer74.setClassLoader(classLoader80);
        boolean boolean82 = enhancer74.getUseCache();
        boolean boolean83 = namingPolicy73.equals((java.lang.Object) enhancer74);
        enhancer41.setNamingPolicy(namingPolicy73);
        boolean boolean85 = namingPolicy40.equals((java.lang.Object) enhancer41);
        enhancer0.setNamingPolicy(namingPolicy40);
        enhancer0.setUseFactory(false);
        boolean boolean89 = enhancer0.getUseCache();
        boolean boolean90 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(generatorStrategy34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(namingPolicy40);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertNotNull(classLoader65);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertNotNull(namingPolicy73);
        org.junit.Assert.assertNotNull(namingPolicy77);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertNotNull(classLoader80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test08451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08451");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = null;
        enhancer0.setStrategy(generatorStrategy10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        java.lang.ClassLoader classLoader16 = enhancer12.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader18 = enhancer17.getClassLoader();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Class[] classArray35 = new java.lang.Class[] { wildcardClass20, wildcardClass22, wildcardClass25, wildcardClass28, wildcardClass31, wildcardClass33 };
        enhancer17.setInterfaces(classArray35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = enhancer37.getNamingPolicy();
        java.lang.ClassLoader classLoader41 = enhancer37.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader43 = enhancer42.getClassLoader();
        enhancer37.setClassLoader(classLoader43);
        enhancer17.setClassLoader(classLoader43);
        org.mockito.cglib.proxy.Callback callback46 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray47 = new org.mockito.cglib.proxy.Callback[] { callback46 };
        enhancer17.setCallbacks(callbackArray47);
        enhancer12.setCallbacks(callbackArray47);
        enhancer12.setAttemptLoad(true);
        enhancer12.setInterceptDuringConstruction(false);
        enhancer12.setAttemptLoad(true);
        enhancer12.setAttemptLoad(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter58 = null;
        enhancer12.setCallbackFilter(callbackFilter58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader61 = enhancer60.getClassLoader();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass76);
        java.lang.Class[] classArray78 = new java.lang.Class[] { wildcardClass63, wildcardClass65, wildcardClass68, wildcardClass71, wildcardClass74, wildcardClass76 };
        enhancer60.setInterfaces(classArray78);
        org.mockito.cglib.proxy.Enhancer enhancer80 = new org.mockito.cglib.proxy.Enhancer();
        enhancer80.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy83 = enhancer80.getNamingPolicy();
        java.lang.ClassLoader classLoader84 = enhancer80.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer85 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader86 = enhancer85.getClassLoader();
        enhancer80.setClassLoader(classLoader86);
        enhancer60.setClassLoader(classLoader86);
        java.lang.ClassLoader classLoader89 = enhancer60.getClassLoader();
        java.lang.ClassLoader classLoader90 = null;
        enhancer60.setClassLoader(classLoader90);
        java.lang.ClassLoader classLoader92 = enhancer60.getClassLoader();
        enhancer12.setClassLoader(classLoader92);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy94 = enhancer12.getStrategy();
        enhancer0.setStrategy(generatorStrategy94);
        org.mockito.cglib.proxy.Callback callback96 = null;
        enhancer0.setCallback(callback96);
        enhancer0.setInterceptDuringConstruction(true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(namingPolicy40);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(callbackArray47);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(namingPolicy83);
        org.junit.Assert.assertNotNull(classLoader84);
        org.junit.Assert.assertNotNull(classLoader86);
        org.junit.Assert.assertNotNull(classLoader89);
        org.junit.Assert.assertNotNull(classLoader92);
        org.junit.Assert.assertNotNull(generatorStrategy94);
    }

    @Test
    public void test08452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08452");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer40.getNamingPolicy();
        java.lang.ClassLoader classLoader44 = enhancer40.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader46 = enhancer45.getClassLoader();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.Class[] classArray63 = new java.lang.Class[] { wildcardClass48, wildcardClass50, wildcardClass53, wildcardClass56, wildcardClass59, wildcardClass61 };
        enhancer45.setInterfaces(classArray63);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer65.getNamingPolicy();
        java.lang.ClassLoader classLoader69 = enhancer65.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader71 = enhancer70.getClassLoader();
        enhancer65.setClassLoader(classLoader71);
        enhancer45.setClassLoader(classLoader71);
        org.mockito.cglib.proxy.Callback callback74 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray75 = new org.mockito.cglib.proxy.Callback[] { callback74 };
        enhancer45.setCallbacks(callbackArray75);
        enhancer40.setCallbacks(callbackArray75);
        enhancer0.setCallbacks(callbackArray75);
        enhancer0.setAttemptLoad(false);
        boolean boolean81 = enhancer0.getUseCache();
        boolean boolean82 = enhancer0.getAttemptLoad();
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer85 = new org.mockito.cglib.proxy.Enhancer();
        enhancer85.setAttemptLoad(true);
        boolean boolean88 = enhancer85.getAttemptLoad();
        java.lang.ClassLoader classLoader89 = enhancer85.getClassLoader();
        enhancer85.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback92 = null;
        enhancer85.setCallback(callback92);
        java.lang.ClassLoader classLoader94 = enhancer85.getClassLoader();
        enhancer0.setClassLoader(classLoader94);
        java.lang.ClassLoader classLoader96 = enhancer0.getClassLoader();
        java.lang.Class<?> wildcardClass97 = enhancer0.getClass();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(classArray63);
        org.junit.Assert.assertNotNull(namingPolicy68);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(classLoader71);
        org.junit.Assert.assertNotNull(callbackArray75);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(classLoader89);
        org.junit.Assert.assertNotNull(classLoader94);
        org.junit.Assert.assertNotNull(classLoader96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test08453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08453");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        boolean boolean7 = enhancer0.getUseCache();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test08454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08454");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(false);
        java.lang.ClassLoader classLoader15 = enhancer0.getClassLoader();
        boolean boolean16 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer17.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer21.getNamingPolicy();
        java.lang.ClassLoader classLoader25 = enhancer21.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader27 = enhancer26.getClassLoader();
        enhancer21.setClassLoader(classLoader27);
        boolean boolean29 = enhancer21.getUseCache();
        boolean boolean30 = namingPolicy20.equals((java.lang.Object) enhancer21);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer21.setCallback(callback31);
        enhancer21.setUseFactory(true);
        boolean boolean35 = enhancer21.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter36 = null;
        enhancer21.setCallbackFilter(callbackFilter36);
        enhancer21.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader40 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader40);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setAttemptLoad(true);
        boolean boolean45 = enhancer42.getAttemptLoad();
        java.lang.ClassLoader classLoader46 = enhancer42.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy47 = enhancer42.getStrategy();
        boolean boolean48 = enhancer42.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter49 = null;
        enhancer42.setCallbackFilter(callbackFilter49);
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader52 = enhancer51.getClassLoader();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass67);
        java.lang.Class[] classArray69 = new java.lang.Class[] { wildcardClass54, wildcardClass56, wildcardClass59, wildcardClass62, wildcardClass65, wildcardClass67 };
        enhancer51.setInterfaces(classArray69);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy74 = enhancer71.getNamingPolicy();
        java.lang.ClassLoader classLoader75 = enhancer71.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader77 = enhancer76.getClassLoader();
        enhancer71.setClassLoader(classLoader77);
        enhancer51.setClassLoader(classLoader77);
        java.lang.ClassLoader classLoader80 = enhancer51.getClassLoader();
        enhancer42.setClassLoader(classLoader80);
        enhancer42.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy84 = enhancer42.getStrategy();
        java.lang.ClassLoader classLoader85 = enhancer42.getClassLoader();
        java.lang.Class<?> wildcardClass86 = classLoader85.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass86);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(generatorStrategy47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(namingPolicy74);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(classLoader77);
        org.junit.Assert.assertNotNull(classLoader80);
        org.junit.Assert.assertNotNull(generatorStrategy84);
        org.junit.Assert.assertNotNull(classLoader85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test08455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08455");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        boolean boolean8 = enhancer0.getUseCache();
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        java.lang.ClassLoader classLoader16 = enhancer12.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader18 = enhancer17.getClassLoader();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Class[] classArray35 = new java.lang.Class[] { wildcardClass20, wildcardClass22, wildcardClass25, wildcardClass28, wildcardClass31, wildcardClass33 };
        enhancer17.setInterfaces(classArray35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = enhancer37.getNamingPolicy();
        java.lang.ClassLoader classLoader41 = enhancer37.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader43 = enhancer42.getClassLoader();
        enhancer37.setClassLoader(classLoader43);
        enhancer17.setClassLoader(classLoader43);
        org.mockito.cglib.proxy.Callback callback46 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray47 = new org.mockito.cglib.proxy.Callback[] { callback46 };
        enhancer17.setCallbacks(callbackArray47);
        enhancer12.setCallbacks(callbackArray47);
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback52 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray53 = new org.mockito.cglib.proxy.Callback[] { callback52 };
        enhancer12.setCallbacks(callbackArray53);
        boolean boolean55 = enhancer12.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter56 = null;
        enhancer12.setCallbackFilter(callbackFilter56);
        boolean boolean58 = namingPolicy11.equals((java.lang.Object) enhancer12);
        boolean boolean59 = enhancer12.getAttemptLoad();
        enhancer12.setInterceptDuringConstruction(true);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(namingPolicy40);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(callbackArray47);
        org.junit.Assert.assertNotNull(callbackArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test08456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08456");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setAttemptLoad(true);
        java.lang.ClassLoader classLoader38 = null;
        enhancer35.setClassLoader(classLoader38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        boolean boolean43 = enhancer40.getAttemptLoad();
        java.lang.ClassLoader classLoader44 = enhancer40.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer40.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setAttemptLoad(true);
        boolean boolean49 = enhancer46.getAttemptLoad();
        java.lang.ClassLoader classLoader50 = enhancer46.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy51 = enhancer46.getStrategy();
        enhancer40.setStrategy(generatorStrategy51);
        enhancer35.setStrategy(generatorStrategy51);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setAttemptLoad(true);
        enhancer54.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer54.setInterceptDuringConstruction(true);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        enhancer54.setSuperclass((java.lang.Class) wildcardClass62);
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        boolean boolean66 = generatorStrategy51.equals((java.lang.Object) wildcardClass62);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass62);
        enhancer0.setAttemptLoad(false);
        org.mockito.asm.ClassVisitor classVisitor70 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(generatorStrategy45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(generatorStrategy51);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test08457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08457");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setSerialVersionUID((java.lang.Long) 100L);
        enhancer5.setUseCache(false);
        enhancer5.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        java.lang.ClassLoader classLoader16 = enhancer12.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader18 = enhancer17.getClassLoader();
        enhancer12.setClassLoader(classLoader18);
        enhancer5.setClassLoader(classLoader18);
        enhancer0.setClassLoader(classLoader18);
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(classLoader18);
    }

    @Test
    public void test08458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08458");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.Class class29 = null;
        enhancer0.setSuperclass(class29);
        java.lang.ClassLoader classLoader31 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy34 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader36 = enhancer35.getClassLoader();
        enhancer35.setUseCache(false);
        java.lang.ClassLoader classLoader39 = enhancer35.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = enhancer35.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader42 = enhancer41.getClassLoader();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Class[] classArray59 = new java.lang.Class[] { wildcardClass44, wildcardClass46, wildcardClass49, wildcardClass52, wildcardClass55, wildcardClass57 };
        enhancer41.setInterfaces(classArray59);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer61.getNamingPolicy();
        java.lang.ClassLoader classLoader65 = enhancer61.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader67 = enhancer66.getClassLoader();
        enhancer61.setClassLoader(classLoader67);
        enhancer41.setClassLoader(classLoader67);
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy73 = enhancer70.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        enhancer74.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer74.getNamingPolicy();
        java.lang.ClassLoader classLoader78 = enhancer74.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer79 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader80 = enhancer79.getClassLoader();
        enhancer74.setClassLoader(classLoader80);
        boolean boolean82 = enhancer74.getUseCache();
        boolean boolean83 = namingPolicy73.equals((java.lang.Object) enhancer74);
        enhancer41.setNamingPolicy(namingPolicy73);
        boolean boolean85 = namingPolicy40.equals((java.lang.Object) enhancer41);
        enhancer0.setNamingPolicy(namingPolicy40);
        enhancer0.setUseFactory(false);
        boolean boolean89 = enhancer0.getUseCache();
        enhancer0.setAttemptLoad(false);
        enhancer0.setInterceptDuringConstruction(false);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(generatorStrategy34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(namingPolicy40);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertNotNull(classLoader65);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertNotNull(namingPolicy73);
        org.junit.Assert.assertNotNull(namingPolicy77);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertNotNull(classLoader80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test08459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08459");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass10);
        enhancer0.setUseCache(true);
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setAttemptLoad(true);
        enhancer17.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer17.setInterceptDuringConstruction(true);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        enhancer17.setSuperclass((java.lang.Class) wildcardClass25);
        enhancer17.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback30 = null;
        enhancer17.setCallback(callback30);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader33 = enhancer32.getClassLoader();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Class[] classArray50 = new java.lang.Class[] { wildcardClass35, wildcardClass37, wildcardClass40, wildcardClass43, wildcardClass46, wildcardClass48 };
        enhancer32.setInterfaces(classArray50);
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer52.getNamingPolicy();
        java.lang.ClassLoader classLoader56 = enhancer52.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader58 = enhancer57.getClassLoader();
        enhancer52.setClassLoader(classLoader58);
        enhancer32.setClassLoader(classLoader58);
        enhancer17.setClassLoader(classLoader58);
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader63 = enhancer62.getClassLoader();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        boolean boolean74 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass73);
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        boolean boolean79 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass78);
        java.lang.Class[] classArray80 = new java.lang.Class[] { wildcardClass65, wildcardClass67, wildcardClass70, wildcardClass73, wildcardClass76, wildcardClass78 };
        enhancer62.setInterfaces(classArray80);
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        enhancer62.setSuperclass((java.lang.Class) wildcardClass83);
        enhancer17.setSuperclass((java.lang.Class) wildcardClass83);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass83);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter89 = null;
        enhancer0.setCallbackFilter(callbackFilter89);
        enhancer0.setUseCache(false);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test08460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08460");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray10 = new org.mockito.cglib.proxy.Callback[] { callback9 };
        enhancer0.setCallbacks(callbackArray10);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer0.getStrategy();
        java.lang.Class<?> wildcardClass13 = enhancer0.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setAttemptLoad(true);
        java.lang.ClassLoader classLoader18 = null;
        enhancer15.setClassLoader(classLoader18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        boolean boolean23 = enhancer20.getAttemptLoad();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = enhancer20.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setAttemptLoad(true);
        boolean boolean29 = enhancer26.getAttemptLoad();
        java.lang.ClassLoader classLoader30 = enhancer26.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy31 = enhancer26.getStrategy();
        enhancer20.setStrategy(generatorStrategy31);
        enhancer15.setStrategy(generatorStrategy31);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setAttemptLoad(true);
        boolean boolean37 = enhancer34.getAttemptLoad();
        java.lang.ClassLoader classLoader38 = enhancer34.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy39 = enhancer34.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        boolean boolean43 = enhancer40.getAttemptLoad();
        java.lang.ClassLoader classLoader44 = enhancer40.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer40.getStrategy();
        enhancer34.setStrategy(generatorStrategy45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setAttemptLoad(true);
        boolean boolean50 = enhancer47.getAttemptLoad();
        java.lang.ClassLoader classLoader51 = enhancer47.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer47.getStrategy();
        enhancer34.setStrategy(generatorStrategy52);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer34.getStrategy();
        boolean boolean55 = generatorStrategy31.equals((java.lang.Object) enhancer34);
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader57 = enhancer56.getClassLoader();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass72);
        java.lang.Class[] classArray74 = new java.lang.Class[] { wildcardClass59, wildcardClass61, wildcardClass64, wildcardClass67, wildcardClass70, wildcardClass72 };
        enhancer56.setInterfaces(classArray74);
        enhancer34.setInterfaces(classArray74);
        org.mockito.cglib.proxy.Callback callback77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass13, classArray74, callback77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(callbackArray10);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(generatorStrategy25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(generatorStrategy31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(generatorStrategy39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(generatorStrategy45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(classArray74);
    }

    @Test
    public void test08461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08461");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer4.getNamingPolicy();
        boolean boolean23 = enhancer4.getAttemptLoad();
        enhancer4.setSerialVersionUID((java.lang.Long) 100L);
        enhancer4.setUseFactory(false);
        enhancer4.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        boolean boolean33 = enhancer30.getAttemptLoad();
        java.lang.ClassLoader classLoader34 = enhancer30.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy35 = enhancer30.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        boolean boolean39 = enhancer36.getAttemptLoad();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer36.getStrategy();
        enhancer30.setStrategy(generatorStrategy41);
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setAttemptLoad(true);
        boolean boolean46 = enhancer43.getAttemptLoad();
        java.lang.ClassLoader classLoader47 = enhancer43.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer43.getStrategy();
        enhancer30.setStrategy(generatorStrategy48);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy50 = enhancer30.getStrategy();
        enhancer30.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer30.getNamingPolicy();
        enhancer4.setNamingPolicy(namingPolicy53);
        org.mockito.cglib.proxy.Callback callback55 = null;
        enhancer4.setCallback(callback55);
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = enhancer4.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader59 = enhancer58.getClassLoader();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        boolean boolean75 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass74);
        java.lang.Class[] classArray76 = new java.lang.Class[] { wildcardClass61, wildcardClass63, wildcardClass66, wildcardClass69, wildcardClass72, wildcardClass74 };
        enhancer58.setInterfaces(classArray76);
        org.mockito.cglib.proxy.Enhancer enhancer78 = new org.mockito.cglib.proxy.Enhancer();
        enhancer78.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = enhancer78.getNamingPolicy();
        java.lang.ClassLoader classLoader82 = enhancer78.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer83 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader84 = enhancer83.getClassLoader();
        enhancer78.setClassLoader(classLoader84);
        enhancer58.setClassLoader(classLoader84);
        java.lang.Class class87 = null;
        enhancer58.setSuperclass(class87);
        java.lang.ClassLoader classLoader89 = enhancer58.getClassLoader();
        enhancer58.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy92 = enhancer58.getStrategy();
        boolean boolean93 = enhancer58.getUseCache();
        boolean boolean94 = namingPolicy57.equals((java.lang.Object) boolean93);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(generatorStrategy35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertNotNull(generatorStrategy50);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertNotNull(namingPolicy57);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(namingPolicy81);
        org.junit.Assert.assertNotNull(classLoader82);
        org.junit.Assert.assertNotNull(classLoader84);
        org.junit.Assert.assertNotNull(classLoader89);
        org.junit.Assert.assertNotNull(generatorStrategy92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test08462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08462");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        boolean boolean6 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader7 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy8 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer9.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer13.getNamingPolicy();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader19 = enhancer18.getClassLoader();
        enhancer13.setClassLoader(classLoader19);
        boolean boolean21 = enhancer13.getUseCache();
        boolean boolean22 = namingPolicy12.equals((java.lang.Object) enhancer13);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setAttemptLoad(true);
        boolean boolean26 = enhancer23.getAttemptLoad();
        java.lang.ClassLoader classLoader27 = enhancer23.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy28 = enhancer23.getStrategy();
        enhancer13.setStrategy(generatorStrategy28);
        java.lang.ClassLoader classLoader30 = enhancer13.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer13.getNamingPolicy();
        boolean boolean32 = enhancer13.getAttemptLoad();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        enhancer13.setSuperclass((java.lang.Class) wildcardClass34);
        enhancer13.setInterceptDuringConstruction(true);
        boolean boolean39 = generatorStrategy8.equals((java.lang.Object) true);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader41 = enhancer40.getClassLoader();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Class[] classArray58 = new java.lang.Class[] { wildcardClass43, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass54, wildcardClass56 };
        enhancer40.setInterfaces(classArray58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer60.getNamingPolicy();
        enhancer40.setNamingPolicy(namingPolicy63);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader66 = enhancer65.getClassLoader();
        enhancer65.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = enhancer65.getNamingPolicy();
        enhancer40.setNamingPolicy(namingPolicy69);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean72 = enhancer71.getUseCache();
        java.lang.ClassLoader classLoader73 = enhancer71.getClassLoader();
        enhancer40.setClassLoader(classLoader73);
        enhancer40.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer77 = new org.mockito.cglib.proxy.Enhancer();
        enhancer77.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy80 = enhancer77.getNamingPolicy();
        java.lang.ClassLoader classLoader81 = enhancer77.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer82 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader83 = enhancer82.getClassLoader();
        enhancer77.setClassLoader(classLoader83);
        java.lang.ClassLoader classLoader85 = enhancer77.getClassLoader();
        enhancer77.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy88 = enhancer77.getStrategy();
        enhancer40.setStrategy(generatorStrategy88);
        boolean boolean90 = generatorStrategy8.equals((java.lang.Object) generatorStrategy88);
        java.lang.Class<?> wildcardClass91 = generatorStrategy88.getClass();
        boolean boolean92 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(generatorStrategy8);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(generatorStrategy28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(namingPolicy69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertNotNull(namingPolicy80);
        org.junit.Assert.assertNotNull(classLoader81);
        org.junit.Assert.assertNotNull(classLoader83);
        org.junit.Assert.assertNotNull(classLoader85);
        org.junit.Assert.assertNotNull(generatorStrategy88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test08463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08463");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.Callback callback29 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray30 = new org.mockito.cglib.proxy.Callback[] { callback29 };
        enhancer0.setCallbacks(callbackArray30);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer32.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer36.getNamingPolicy();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader42 = enhancer41.getClassLoader();
        enhancer36.setClassLoader(classLoader42);
        boolean boolean44 = enhancer36.getUseCache();
        boolean boolean45 = namingPolicy35.equals((java.lang.Object) enhancer36);
        enhancer0.setNamingPolicy(namingPolicy35);
        enhancer0.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy49 = enhancer0.getStrategy();
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.Class[] classArray52 = null;
        enhancer0.setInterfaces(classArray52);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(callbackArray30);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(generatorStrategy49);
    }

    @Test
    public void test08464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08464");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter30 = null;
        enhancer0.setCallbackFilter(callbackFilter30);
        enhancer0.setUseCache(true);
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader29);
    }

    @Test
    public void test08465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08465");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer9.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer13.getNamingPolicy();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader19 = enhancer18.getClassLoader();
        enhancer13.setClassLoader(classLoader19);
        boolean boolean21 = enhancer13.getUseCache();
        boolean boolean22 = namingPolicy12.equals((java.lang.Object) enhancer13);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setAttemptLoad(true);
        boolean boolean26 = enhancer23.getAttemptLoad();
        java.lang.ClassLoader classLoader27 = enhancer23.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy28 = enhancer23.getStrategy();
        enhancer13.setStrategy(generatorStrategy28);
        java.lang.ClassLoader classLoader30 = enhancer13.getClassLoader();
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer13.setCallback(callback31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        enhancer13.setClassLoader(classLoader37);
        enhancer0.setClassLoader(classLoader37);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter40 = null;
        enhancer0.setCallbackFilter(callbackFilter40);
        boolean boolean42 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter44 = null;
        enhancer0.setCallbackFilter(callbackFilter44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class46 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(generatorStrategy28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(namingPolicy43);
    }

    @Test
    public void test08466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08466");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer0.getStrategy();
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy66 = null;
        enhancer0.setNamingPolicy(namingPolicy66);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class68 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(generatorStrategy63);
    }

    @Test
    public void test08467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08467");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy33 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer0.getNamingPolicy();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(generatorStrategy33);
        org.junit.Assert.assertNotNull(namingPolicy34);
    }

    @Test
    public void test08468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08468");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer10.getNamingPolicy();
        java.lang.ClassLoader classLoader14 = enhancer10.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy15 = enhancer10.getStrategy();
        enhancer10.setAttemptLoad(false);
        java.lang.ClassLoader classLoader18 = enhancer10.getClassLoader();
        enhancer10.setSerialVersionUID((java.lang.Long) 0L);
        boolean boolean21 = enhancer10.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setAttemptLoad(true);
        boolean boolean25 = enhancer22.getAttemptLoad();
        java.lang.ClassLoader classLoader26 = enhancer22.getClassLoader();
        enhancer22.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer22.setCallback(callback29);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer31.getNamingPolicy();
        java.lang.ClassLoader classLoader35 = enhancer31.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader37 = enhancer36.getClassLoader();
        enhancer31.setClassLoader(classLoader37);
        enhancer31.setAttemptLoad(true);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class[] classArray43 = new java.lang.Class[] { wildcardClass42 };
        enhancer31.setInterfaces(classArray43);
        enhancer22.setInterfaces(classArray43);
        enhancer10.setInterfaces(classArray43);
        enhancer0.setInterfaces(classArray43);
        java.lang.Class class48 = null;
        enhancer0.setSuperclass(class48);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(namingPolicy13);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(generatorStrategy15);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(classArray43);
    }

    @Test
    public void test08469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08469");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter4 = null;
        enhancer0.setCallbackFilter(callbackFilter4);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer0.setCallbackFilter(callbackFilter6);
        boolean boolean8 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer0.setCallback(callback9);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader14 = enhancer13.getClassLoader();
        enhancer13.setUseCache(false);
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = enhancer13.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader20 = enhancer19.getClassLoader();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass22, wildcardClass24, wildcardClass27, wildcardClass30, wildcardClass33, wildcardClass35 };
        enhancer19.setInterfaces(classArray37);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer39.getNamingPolicy();
        java.lang.ClassLoader classLoader43 = enhancer39.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        enhancer39.setClassLoader(classLoader45);
        enhancer19.setClassLoader(classLoader45);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer48.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer52.getNamingPolicy();
        java.lang.ClassLoader classLoader56 = enhancer52.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader58 = enhancer57.getClassLoader();
        enhancer52.setClassLoader(classLoader58);
        boolean boolean60 = enhancer52.getUseCache();
        boolean boolean61 = namingPolicy51.equals((java.lang.Object) enhancer52);
        enhancer19.setNamingPolicy(namingPolicy51);
        boolean boolean63 = namingPolicy18.equals((java.lang.Object) enhancer19);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader65 = enhancer64.getClassLoader();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        boolean boolean76 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass75);
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        boolean boolean81 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass80);
        java.lang.Class[] classArray82 = new java.lang.Class[] { wildcardClass67, wildcardClass69, wildcardClass72, wildcardClass75, wildcardClass78, wildcardClass80 };
        enhancer64.setInterfaces(classArray82);
        org.mockito.cglib.proxy.Callback[] callbackArray84 = null;
        enhancer64.setCallbacks(callbackArray84);
        org.mockito.cglib.core.NamingPolicy namingPolicy86 = enhancer64.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy87 = enhancer64.getStrategy();
        boolean boolean88 = namingPolicy18.equals((java.lang.Object) generatorStrategy87);
        java.lang.Object obj89 = null;
        boolean boolean90 = generatorStrategy87.equals(obj89);
        enhancer0.setStrategy(generatorStrategy87);
        org.mockito.cglib.core.NamingPolicy namingPolicy92 = enhancer0.getNamingPolicy();
        boolean boolean93 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(namingPolicy18);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(classLoader65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(namingPolicy86);
        org.junit.Assert.assertNotNull(generatorStrategy87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(namingPolicy92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test08470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08470");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader9 = enhancer8.getClassLoader();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass11, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass24 };
        enhancer8.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer8.setClassLoader(classLoader34);
        java.lang.ClassLoader classLoader37 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader37);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer39.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy43 = enhancer39.getStrategy();
        enhancer0.setStrategy(generatorStrategy43);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy46 = enhancer0.getStrategy();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(generatorStrategy43);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertNotNull(generatorStrategy46);
    }

    @Test
    public void test08471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08471");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        enhancer4.setAttemptLoad(false);
        enhancer4.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader19 = enhancer18.getClassLoader();
        enhancer18.setUseCache(false);
        java.lang.ClassLoader classLoader22 = enhancer18.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer18.getNamingPolicy();
        enhancer4.setNamingPolicy(namingPolicy23);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = enhancer4.getStrategy();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(generatorStrategy25);
    }

    @Test
    public void test08472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08472");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass8, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass21 };
        enhancer5.setInterfaces(classArray23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        java.lang.ClassLoader classLoader29 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader31 = enhancer30.getClassLoader();
        enhancer25.setClassLoader(classLoader31);
        enhancer5.setClassLoader(classLoader31);
        org.mockito.cglib.proxy.Callback callback34 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray35 = new org.mockito.cglib.proxy.Callback[] { callback34 };
        enhancer5.setCallbacks(callbackArray35);
        enhancer0.setCallbacks(callbackArray35);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback40 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray41 = new org.mockito.cglib.proxy.Callback[] { callback40 };
        enhancer0.setCallbacks(callbackArray41);
        boolean boolean43 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Class[] classArray62 = new java.lang.Class[] { wildcardClass47, wildcardClass49, wildcardClass52, wildcardClass55, wildcardClass58, wildcardClass60 };
        enhancer44.setInterfaces(classArray62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        java.lang.ClassLoader classLoader68 = enhancer64.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader70 = enhancer69.getClassLoader();
        enhancer64.setClassLoader(classLoader70);
        enhancer44.setClassLoader(classLoader70);
        java.lang.ClassLoader classLoader73 = enhancer44.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader75 = enhancer74.getClassLoader();
        enhancer74.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy78 = enhancer74.getNamingPolicy();
        enhancer44.setNamingPolicy(namingPolicy78);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy80 = enhancer44.getStrategy();
        enhancer0.setStrategy(generatorStrategy80);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy82 = enhancer0.getStrategy();
        boolean boolean83 = enhancer0.getAttemptLoad();
        boolean boolean84 = enhancer0.getUseCache();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader87 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setUseFactory(false);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(callbackArray35);
        org.junit.Assert.assertNotNull(callbackArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(classLoader70);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(namingPolicy78);
        org.junit.Assert.assertNotNull(generatorStrategy80);
        org.junit.Assert.assertNotNull(generatorStrategy82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(classLoader87);
    }

    @Test
    public void test08473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08473");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray10 = new org.mockito.cglib.proxy.Callback[] { callback9 };
        enhancer0.setCallbacks(callbackArray10);
        boolean boolean12 = enhancer0.getUseCache();
        enhancer0.setUseCache(true);
        enhancer0.setUseCache(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(callbackArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test08474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08474");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        boolean boolean8 = enhancer0.getUseCache();
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer11.getNamingPolicy();
        java.lang.ClassLoader classLoader15 = enhancer11.getClassLoader();
        java.lang.ClassLoader classLoader16 = enhancer11.getClassLoader();
        enhancer0.setClassLoader(classLoader16);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer18.getNamingPolicy();
        java.lang.ClassLoader classLoader22 = enhancer18.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader24 = enhancer23.getClassLoader();
        enhancer18.setClassLoader(classLoader24);
        enhancer18.setAttemptLoad(true);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class[] classArray30 = new java.lang.Class[] { wildcardClass29 };
        enhancer18.setInterfaces(classArray30);
        enhancer0.setInterfaces(classArray30);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy34 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer0.getNamingPolicy();
        java.lang.Object obj38 = null;
        org.mockito.cglib.core.Predicate predicate39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = namingPolicy35.getClassName("hi!", "hi!", obj38, predicate39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(generatorStrategy34);
        org.junit.Assert.assertNotNull(namingPolicy35);
    }

    @Test
    public void test08475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08475");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer0.getNamingPolicy();
        enhancer0.setUseCache(true);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setAttemptLoad(true);
        java.lang.ClassLoader classLoader22 = null;
        enhancer19.setClassLoader(classLoader22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        boolean boolean27 = enhancer24.getAttemptLoad();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy29 = enhancer24.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setAttemptLoad(true);
        boolean boolean33 = enhancer30.getAttemptLoad();
        java.lang.ClassLoader classLoader34 = enhancer30.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy35 = enhancer30.getStrategy();
        enhancer24.setStrategy(generatorStrategy35);
        enhancer19.setStrategy(generatorStrategy35);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer19.setCallback(callback38);
        boolean boolean40 = enhancer19.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader42 = enhancer41.getClassLoader();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Class[] classArray59 = new java.lang.Class[] { wildcardClass44, wildcardClass46, wildcardClass49, wildcardClass52, wildcardClass55, wildcardClass57 };
        enhancer41.setInterfaces(classArray59);
        org.mockito.cglib.proxy.Callback[] callbackArray61 = null;
        enhancer41.setCallbacks(callbackArray61);
        enhancer41.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader66 = enhancer65.getClassLoader();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        boolean boolean74 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass73);
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass76);
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        boolean boolean82 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass81);
        java.lang.Class[] classArray83 = new java.lang.Class[] { wildcardClass68, wildcardClass70, wildcardClass73, wildcardClass76, wildcardClass79, wildcardClass81 };
        enhancer65.setInterfaces(classArray83);
        enhancer41.setInterfaces(classArray83);
        enhancer19.setInterfaces(classArray83);
        boolean boolean87 = enhancer19.getAttemptLoad();
        enhancer19.setSerialVersionUID((java.lang.Long) 1L);
        enhancer19.setSerialVersionUID((java.lang.Long) 100L);
        enhancer19.setInterceptDuringConstruction(false);
        java.lang.Class<?> wildcardClass94 = enhancer19.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass94);
        boolean boolean96 = enhancer0.getUseCache();
        org.junit.Assert.assertNotNull(namingPolicy13);
        org.junit.Assert.assertNotNull(namingPolicy18);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(generatorStrategy29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(generatorStrategy35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(classArray83);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test08476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08476");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setAttemptLoad(true);
        boolean boolean68 = enhancer65.getAttemptLoad();
        java.lang.ClassLoader classLoader69 = enhancer65.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy70 = enhancer65.getStrategy();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        enhancer65.setSuperclass((java.lang.Class) wildcardClass72);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass72);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy75 = enhancer0.getStrategy();
        java.lang.ClassLoader classLoader76 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader77 = enhancer0.getClassLoader();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(generatorStrategy70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(generatorStrategy75);
        org.junit.Assert.assertNotNull(classLoader76);
        org.junit.Assert.assertNotNull(classLoader77);
    }

    @Test
    public void test08477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08477");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setAttemptLoad(true);
        boolean boolean9 = enhancer6.getAttemptLoad();
        java.lang.ClassLoader classLoader10 = enhancer6.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer6.getStrategy();
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        boolean boolean16 = enhancer13.getAttemptLoad();
        java.lang.ClassLoader classLoader17 = enhancer13.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer13.getStrategy();
        enhancer0.setStrategy(generatorStrategy18);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy20 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        java.lang.Class[] classArray43 = new java.lang.Class[] { wildcardClass28, wildcardClass30, wildcardClass33, wildcardClass36, wildcardClass39, wildcardClass41 };
        enhancer25.setInterfaces(classArray43);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = enhancer45.getNamingPolicy();
        java.lang.ClassLoader classLoader49 = enhancer45.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader51 = enhancer50.getClassLoader();
        enhancer45.setClassLoader(classLoader51);
        enhancer25.setClassLoader(classLoader51);
        java.lang.ClassLoader classLoader54 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader56 = enhancer55.getClassLoader();
        enhancer55.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = enhancer55.getNamingPolicy();
        enhancer25.setNamingPolicy(namingPolicy59);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy61 = enhancer25.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        enhancer62.setAttemptLoad(true);
        boolean boolean65 = enhancer62.getAttemptLoad();
        java.lang.ClassLoader classLoader66 = enhancer62.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy67 = enhancer62.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        enhancer68.setAttemptLoad(true);
        boolean boolean71 = enhancer68.getAttemptLoad();
        java.lang.ClassLoader classLoader72 = enhancer68.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy73 = enhancer68.getStrategy();
        enhancer62.setStrategy(generatorStrategy73);
        java.lang.ClassLoader classLoader75 = enhancer62.getClassLoader();
        boolean boolean76 = generatorStrategy61.equals((java.lang.Object) classLoader75);
        enhancer0.setStrategy(generatorStrategy61);
        java.lang.Class<?> wildcardClass78 = enhancer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(generatorStrategy18);
        org.junit.Assert.assertNotNull(generatorStrategy20);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(namingPolicy48);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(namingPolicy59);
        org.junit.Assert.assertNotNull(generatorStrategy61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(generatorStrategy67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertNotNull(generatorStrategy73);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test08478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08478");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader14 = enhancer13.getClassLoader();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Class[] classArray31 = new java.lang.Class[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass29 };
        enhancer13.setInterfaces(classArray31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        enhancer13.setClassLoader(classLoader39);
        boolean boolean42 = enhancer13.getUseCache();
        boolean boolean43 = generatorStrategy12.equals((java.lang.Object) enhancer13);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Class[] classArray62 = new java.lang.Class[] { wildcardClass47, wildcardClass49, wildcardClass52, wildcardClass55, wildcardClass58, wildcardClass60 };
        enhancer44.setInterfaces(classArray62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        java.lang.ClassLoader classLoader68 = enhancer64.getClassLoader();
        enhancer44.setClassLoader(classLoader68);
        enhancer44.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer72 = new org.mockito.cglib.proxy.Enhancer();
        enhancer72.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy75 = enhancer72.getNamingPolicy();
        boolean boolean76 = enhancer72.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter77 = null;
        enhancer72.setCallbackFilter(callbackFilter77);
        org.mockito.cglib.proxy.Callback callback79 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray80 = new org.mockito.cglib.proxy.Callback[] { callback79 };
        enhancer72.setCallbacks(callbackArray80);
        enhancer44.setCallbacks(callbackArray80);
        enhancer13.setCallbacks(callbackArray80);
        boolean boolean84 = enhancer13.getUseCache();
        java.lang.ClassLoader classLoader85 = enhancer13.getClassLoader();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(namingPolicy75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(callbackArray80);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(classLoader85);
    }

    @Test
    public void test08479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08479");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer4.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer4.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter17 = null;
        enhancer4.setCallbackFilter(callbackFilter17);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer4.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        boolean boolean23 = enhancer20.getAttemptLoad();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = enhancer20.getStrategy();
        enhancer20.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader29 = enhancer28.getClassLoader();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        java.lang.Class[] classArray46 = new java.lang.Class[] { wildcardClass31, wildcardClass33, wildcardClass36, wildcardClass39, wildcardClass42, wildcardClass44 };
        enhancer28.setInterfaces(classArray46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer48.getNamingPolicy();
        java.lang.ClassLoader classLoader52 = enhancer48.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader54 = enhancer53.getClassLoader();
        enhancer48.setClassLoader(classLoader54);
        enhancer28.setClassLoader(classLoader54);
        java.lang.ClassLoader classLoader57 = enhancer28.getClassLoader();
        enhancer20.setClassLoader(classLoader57);
        enhancer20.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer61.getNamingPolicy();
        java.lang.ClassLoader classLoader65 = enhancer61.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader67 = enhancer66.getClassLoader();
        enhancer61.setClassLoader(classLoader67);
        java.lang.ClassLoader classLoader69 = enhancer61.getClassLoader();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy72 = enhancer61.getStrategy();
        enhancer20.setStrategy(generatorStrategy72);
        org.mockito.cglib.core.NamingPolicy namingPolicy74 = enhancer20.getNamingPolicy();
        boolean boolean75 = namingPolicy19.equals((java.lang.Object) enhancer20);
        enhancer20.setInterceptDuringConstruction(true);
        enhancer20.setAttemptLoad(false);
        boolean boolean80 = enhancer20.getUseCache();
        boolean boolean81 = enhancer20.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy82 = enhancer20.getNamingPolicy();
        org.mockito.asm.ClassVisitor classVisitor83 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer20.generateClass(classVisitor83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(generatorStrategy25);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertNotNull(classLoader65);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(generatorStrategy72);
        org.junit.Assert.assertNotNull(namingPolicy74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(namingPolicy82);
    }

    @Test
    public void test08480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08480");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer0.getNamingPolicy();
        enhancer0.setUseCache(false);
        boolean boolean16 = enhancer0.getUseCache();
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setAttemptLoad(true);
        boolean boolean22 = enhancer19.getAttemptLoad();
        java.lang.ClassLoader classLoader23 = enhancer19.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy24 = enhancer19.getStrategy();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        enhancer19.setSuperclass((java.lang.Class) wildcardClass26);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer19.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter29 = null;
        enhancer19.setCallbackFilter(callbackFilter29);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer19.setCallback(callback31);
        enhancer19.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer19.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy35);
        java.lang.ClassLoader classLoader37 = enhancer0.getClassLoader();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertNotNull(generatorStrategy24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertNotNull(classLoader37);
    }

    @Test
    public void test08481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08481");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer0.setCallbackFilter(callbackFilter6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader9 = enhancer8.getClassLoader();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass11, wildcardClass13, wildcardClass16, wildcardClass19, wildcardClass22, wildcardClass24 };
        enhancer8.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer28.getNamingPolicy();
        java.lang.ClassLoader classLoader32 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader34 = enhancer33.getClassLoader();
        enhancer28.setClassLoader(classLoader34);
        enhancer8.setClassLoader(classLoader34);
        java.lang.ClassLoader classLoader37 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader37);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setInterceptDuringConstruction(true);
        boolean boolean43 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter44 = null;
        enhancer0.setCallbackFilter(callbackFilter44);
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter48 = null;
        enhancer0.setCallbackFilter(callbackFilter48);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test08482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08482");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        enhancer0.setAttemptLoad(true);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[] { wildcardClass11 };
        enhancer0.setInterfaces(classArray12);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter14 = null;
        enhancer0.setCallbackFilter(callbackFilter14);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setAttemptLoad(true);
        boolean boolean19 = enhancer16.getAttemptLoad();
        java.lang.ClassLoader classLoader20 = enhancer16.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy21 = enhancer16.getStrategy();
        enhancer16.setAttemptLoad(false);
        enhancer16.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer16.getNamingPolicy();
        java.lang.ClassLoader classLoader27 = enhancer16.getClassLoader();
        enhancer0.setClassLoader(classLoader27);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        java.lang.Class<?> wildcardClass30 = classLoader29.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        java.lang.Class[] classArray32 = null;
        java.util.List list33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods((java.lang.Class) wildcardClass30, classArray32, list33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(generatorStrategy21);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test08483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08483");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setAttemptLoad(true);
        enhancer13.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer13.setInterceptDuringConstruction(true);
        enhancer13.setUseCache(true);
        boolean boolean22 = enhancer13.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader24 = enhancer23.getClassLoader();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Class[] classArray41 = new java.lang.Class[] { wildcardClass26, wildcardClass28, wildcardClass31, wildcardClass34, wildcardClass37, wildcardClass39 };
        enhancer23.setInterfaces(classArray41);
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer43.getNamingPolicy();
        java.lang.ClassLoader classLoader47 = enhancer43.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader49 = enhancer48.getClassLoader();
        enhancer43.setClassLoader(classLoader49);
        enhancer23.setClassLoader(classLoader49);
        java.lang.ClassLoader classLoader52 = enhancer23.getClassLoader();
        enhancer13.setClassLoader(classLoader52);
        enhancer0.setClassLoader(classLoader52);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer61.getNamingPolicy();
        java.lang.ClassLoader classLoader65 = enhancer61.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader67 = enhancer66.getClassLoader();
        enhancer61.setClassLoader(classLoader67);
        boolean boolean69 = enhancer61.getUseCache();
        boolean boolean70 = namingPolicy60.equals((java.lang.Object) enhancer61);
        org.mockito.cglib.proxy.Callback callback71 = null;
        enhancer61.setCallback(callback71);
        org.mockito.cglib.core.NamingPolicy namingPolicy73 = enhancer61.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy74 = enhancer61.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy74);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertNotNull(classLoader65);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(namingPolicy73);
        org.junit.Assert.assertNotNull(namingPolicy74);
    }

    @Test
    public void test08484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08484");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy67);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setAttemptLoad(false);
        boolean boolean73 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy74 = enhancer0.getNamingPolicy();
        boolean boolean75 = enhancer0.getUseCache();
        enhancer0.setAttemptLoad(false);
        org.mockito.asm.ClassVisitor classVisitor78 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(generatorStrategy63);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(namingPolicy74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test08485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08485");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setAttemptLoad(true);
        enhancer9.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer9.setInterceptDuringConstruction(true);
        enhancer9.setUseCache(true);
        boolean boolean18 = enhancer9.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader20 = enhancer19.getClassLoader();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass22, wildcardClass24, wildcardClass27, wildcardClass30, wildcardClass33, wildcardClass35 };
        enhancer19.setInterfaces(classArray37);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer39.getNamingPolicy();
        java.lang.ClassLoader classLoader43 = enhancer39.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader45 = enhancer44.getClassLoader();
        enhancer39.setClassLoader(classLoader45);
        enhancer19.setClassLoader(classLoader45);
        java.lang.ClassLoader classLoader48 = enhancer19.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader50 = enhancer49.getClassLoader();
        enhancer49.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer49.getNamingPolicy();
        enhancer19.setNamingPolicy(namingPolicy53);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy55 = enhancer19.getStrategy();
        enhancer9.setStrategy(generatorStrategy55);
        boolean boolean57 = enhancer9.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        enhancer58.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy61 = enhancer58.getNamingPolicy();
        java.lang.ClassLoader classLoader62 = enhancer58.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader64 = enhancer63.getClassLoader();
        enhancer58.setClassLoader(classLoader64);
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean67 = enhancer66.getUseCache();
        java.lang.ClassLoader classLoader68 = enhancer66.getClassLoader();
        enhancer58.setClassLoader(classLoader68);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy70 = enhancer58.getStrategy();
        enhancer9.setStrategy(generatorStrategy70);
        enhancer0.setStrategy(generatorStrategy70);
        java.lang.ClassLoader classLoader73 = enhancer0.getClassLoader();
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseCache(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertNotNull(generatorStrategy55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(namingPolicy61);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(generatorStrategy70);
        org.junit.Assert.assertNotNull(classLoader73);
    }

    @Test
    public void test08486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08486");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer0.setCallback(callback35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        enhancer62.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer62.getNamingPolicy();
        java.lang.ClassLoader classLoader66 = enhancer62.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader68 = enhancer67.getClassLoader();
        enhancer62.setClassLoader(classLoader68);
        java.lang.Class<?> wildcardClass70 = classLoader68.getClass();
        boolean boolean71 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass70);
        enhancer37.setSuperclass((java.lang.Class) wildcardClass70);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass70);
        org.mockito.cglib.proxy.Callback callback74 = null;
        enhancer0.setCallback(callback74);
        java.lang.ClassLoader classLoader76 = enhancer0.getClassLoader();
        java.lang.Class<?> wildcardClass77 = classLoader76.getClass();
        boolean boolean78 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass77);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(classLoader76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test08487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08487");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer20.getNamingPolicy();
        java.lang.ClassLoader classLoader24 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader26 = enhancer25.getClassLoader();
        enhancer20.setClassLoader(classLoader26);
        enhancer0.setClassLoader(classLoader26);
        java.lang.Class class29 = null;
        enhancer0.setSuperclass(class29);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader33 = enhancer32.getClassLoader();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Class[] classArray50 = new java.lang.Class[] { wildcardClass35, wildcardClass37, wildcardClass40, wildcardClass43, wildcardClass46, wildcardClass48 };
        enhancer32.setInterfaces(classArray50);
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer52.getNamingPolicy();
        java.lang.ClassLoader classLoader56 = enhancer52.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader58 = enhancer57.getClassLoader();
        enhancer52.setClassLoader(classLoader58);
        enhancer32.setClassLoader(classLoader58);
        java.lang.ClassLoader classLoader61 = enhancer32.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader63 = enhancer62.getClassLoader();
        enhancer62.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy66 = enhancer62.getNamingPolicy();
        enhancer32.setNamingPolicy(namingPolicy66);
        org.mockito.cglib.proxy.Callback callback68 = null;
        enhancer32.setCallback(callback68);
        java.lang.Class<?> wildcardClass70 = enhancer32.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass70);
        java.lang.ClassLoader classLoader72 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy73 = enhancer0.getStrategy();
        enhancer0.setUseCache(false);
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertNotNull(namingPolicy66);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertNotNull(generatorStrategy73);
    }

    @Test
    public void test08488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08488");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter7 = null;
        enhancer0.setCallbackFilter(callbackFilter7);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy9 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setAttemptLoad(true);
        boolean boolean13 = enhancer10.getAttemptLoad();
        java.lang.ClassLoader classLoader14 = enhancer10.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy15 = enhancer10.getStrategy();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        enhancer10.setSuperclass((java.lang.Class) wildcardClass17);
        org.mockito.cglib.proxy.Callback callback19 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray20 = new org.mockito.cglib.proxy.Callback[] { callback19 };
        enhancer10.setCallbacks(callbackArray20);
        enhancer10.setUseFactory(false);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray24 = generatorStrategy9.generate((org.mockito.cglib.core.ClassGenerator) enhancer10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(generatorStrategy9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(generatorStrategy15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(callbackArray20);
    }

    @Test
    public void test08489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08489");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        java.lang.ClassLoader classLoader22 = enhancer4.getClassLoader();
        enhancer4.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer25.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = enhancer29.getNamingPolicy();
        java.lang.ClassLoader classLoader33 = enhancer29.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader35 = enhancer34.getClassLoader();
        enhancer29.setClassLoader(classLoader35);
        boolean boolean37 = enhancer29.getUseCache();
        boolean boolean38 = namingPolicy28.equals((java.lang.Object) enhancer29);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setAttemptLoad(true);
        boolean boolean42 = enhancer39.getAttemptLoad();
        java.lang.ClassLoader classLoader43 = enhancer39.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer39.getStrategy();
        enhancer29.setStrategy(generatorStrategy44);
        java.lang.ClassLoader classLoader46 = enhancer29.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer29.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader49 = enhancer48.getClassLoader();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass64);
        java.lang.Class[] classArray66 = new java.lang.Class[] { wildcardClass51, wildcardClass53, wildcardClass56, wildcardClass59, wildcardClass62, wildcardClass64 };
        enhancer48.setInterfaces(classArray66);
        enhancer29.setInterfaces(classArray66);
        enhancer4.setInterfaces(classArray66);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter70 = null;
        enhancer4.setCallbackFilter(callbackFilter70);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(namingPolicy32);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(classArray66);
    }

    @Test
    public void test08490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08490");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader5 = enhancer4.getClassLoader();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass7, wildcardClass9, wildcardClass12, wildcardClass15, wildcardClass18, wildcardClass20 };
        enhancer4.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader30 = enhancer29.getClassLoader();
        enhancer24.setClassLoader(classLoader30);
        enhancer4.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer4.setCallbacks(callbackArray34);
        enhancer0.setCallbacks(callbackArray34);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader38 = enhancer37.getClassLoader();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass48, wildcardClass51, wildcardClass53 };
        enhancer37.setInterfaces(classArray55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer57.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy60);
        enhancer0.setNamingPolicy(namingPolicy60);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer64.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy67);
        org.mockito.cglib.proxy.Callback callback69 = null;
        enhancer0.setCallback(callback69);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setAttemptLoad(true);
        boolean boolean74 = enhancer71.getAttemptLoad();
        java.lang.ClassLoader classLoader75 = enhancer71.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer71.getStrategy();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        enhancer71.setSuperclass((java.lang.Class) wildcardClass78);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass78);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class class83 = null;
        enhancer0.setSuperclass(class83);
        boolean boolean85 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy86 = enhancer0.getNamingPolicy();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(generatorStrategy63);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertNotNull(generatorStrategy76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(namingPolicy86);
    }

    @Test
    public void test08491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08491");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer4.setCallback(callback22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer24.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer24.getClassLoader();
        enhancer4.setClassLoader(classLoader28);
        enhancer4.setAttemptLoad(false);
        enhancer4.setSerialVersionUID((java.lang.Long) 1L);
        enhancer4.setAttemptLoad(false);
        boolean boolean36 = enhancer4.getUseCache();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test08492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08492");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy9 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer0.setCallback(callback10);
        enhancer0.setUseCache(true);
        enhancer0.setInterceptDuringConstruction(false);
        org.junit.Assert.assertNotNull(generatorStrategy9);
    }

    @Test
    public void test08493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08493");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        enhancer0.setUseCache(false);
        boolean boolean22 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer23.getNamingPolicy();
        boolean boolean27 = enhancer23.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter28 = null;
        enhancer23.setCallbackFilter(callbackFilter28);
        org.mockito.cglib.proxy.Callback callback30 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray31 = new org.mockito.cglib.proxy.Callback[] { callback30 };
        enhancer23.setCallbacks(callbackArray31);
        enhancer0.setCallbacks(callbackArray31);
        java.lang.ClassLoader classLoader34 = enhancer0.getClassLoader();
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy37 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter38 = null;
        enhancer0.setCallbackFilter(callbackFilter38);
        java.lang.ClassLoader classLoader40 = enhancer0.getClassLoader();
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(callbackArray31);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertNotNull(generatorStrategy37);
        org.junit.Assert.assertNotNull(classLoader40);
    }

    @Test
    public void test08494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08494");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        java.lang.ClassLoader classLoader12 = enhancer0.getClassLoader();
        boolean boolean13 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer0.setCallback(callback14);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test08495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08495");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer12.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader17 = enhancer16.getClassLoader();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Class[] classArray34 = new java.lang.Class[] { wildcardClass19, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass30, wildcardClass32 };
        enhancer16.setInterfaces(classArray34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer36.getNamingPolicy();
        java.lang.ClassLoader classLoader40 = enhancer36.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader42 = enhancer41.getClassLoader();
        enhancer36.setClassLoader(classLoader42);
        enhancer16.setClassLoader(classLoader42);
        org.mockito.cglib.proxy.Callback callback45 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray46 = new org.mockito.cglib.proxy.Callback[] { callback45 };
        enhancer16.setCallbacks(callbackArray46);
        enhancer12.setCallbacks(callbackArray46);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader50 = enhancer49.getClassLoader();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.Class[] classArray67 = new java.lang.Class[] { wildcardClass52, wildcardClass54, wildcardClass57, wildcardClass60, wildcardClass63, wildcardClass65 };
        enhancer49.setInterfaces(classArray67);
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        enhancer69.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy72 = enhancer69.getNamingPolicy();
        enhancer49.setNamingPolicy(namingPolicy72);
        enhancer12.setNamingPolicy(namingPolicy72);
        enhancer0.setNamingPolicy(namingPolicy72);
        enhancer0.setAttemptLoad(false);
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy82 = enhancer0.getStrategy();
        java.lang.Class<?> wildcardClass83 = generatorStrategy82.getClass();
        org.mockito.cglib.proxy.Callback callback84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass83, callback84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(callbackArray46);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(classArray67);
        org.junit.Assert.assertNotNull(namingPolicy72);
        org.junit.Assert.assertNotNull(generatorStrategy82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test08496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08496");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader6 = enhancer5.getClassLoader();
        enhancer0.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean9 = enhancer8.getUseCache();
        java.lang.ClassLoader classLoader10 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader10);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader14 = enhancer13.getClassLoader();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        java.lang.Class[] classArray31 = new java.lang.Class[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass24, wildcardClass27, wildcardClass29 };
        enhancer13.setInterfaces(classArray31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer33.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader39 = enhancer38.getClassLoader();
        enhancer33.setClassLoader(classLoader39);
        enhancer13.setClassLoader(classLoader39);
        boolean boolean42 = enhancer13.getUseCache();
        boolean boolean43 = generatorStrategy12.equals((java.lang.Object) enhancer13);
        enhancer13.setUseCache(false);
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer13.setCallback(callback46);
        boolean boolean48 = enhancer13.getAttemptLoad();
        enhancer13.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = null;
        enhancer13.setNamingPolicy(namingPolicy51);
        boolean boolean53 = enhancer13.getUseCache();
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test08497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08497");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer0.setCallback(callback13);
        boolean boolean15 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test08498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08498");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader4 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader5 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy6 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        boolean boolean8 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        enhancer0.setAttemptLoad(false);
        boolean boolean12 = enhancer0.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy13 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer0.setCallback(callback14);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer16.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader21 = enhancer20.getClassLoader();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Class[] classArray38 = new java.lang.Class[] { wildcardClass23, wildcardClass25, wildcardClass28, wildcardClass31, wildcardClass34, wildcardClass36 };
        enhancer20.setInterfaces(classArray38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer40.getNamingPolicy();
        java.lang.ClassLoader classLoader44 = enhancer40.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader46 = enhancer45.getClassLoader();
        enhancer40.setClassLoader(classLoader46);
        enhancer20.setClassLoader(classLoader46);
        org.mockito.cglib.proxy.Callback callback49 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray50 = new org.mockito.cglib.proxy.Callback[] { callback49 };
        enhancer20.setCallbacks(callbackArray50);
        enhancer16.setCallbacks(callbackArray50);
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader54 = enhancer53.getClassLoader();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Class[] classArray71 = new java.lang.Class[] { wildcardClass56, wildcardClass58, wildcardClass61, wildcardClass64, wildcardClass67, wildcardClass69 };
        enhancer53.setInterfaces(classArray71);
        org.mockito.cglib.proxy.Enhancer enhancer73 = new org.mockito.cglib.proxy.Enhancer();
        enhancer73.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy76 = enhancer73.getNamingPolicy();
        enhancer53.setNamingPolicy(namingPolicy76);
        enhancer16.setNamingPolicy(namingPolicy76);
        enhancer16.setAttemptLoad(true);
        boolean boolean81 = enhancer16.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback82 = null;
        enhancer16.setCallback(callback82);
        org.mockito.cglib.proxy.Enhancer enhancer84 = new org.mockito.cglib.proxy.Enhancer();
        enhancer84.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy87 = enhancer84.getNamingPolicy();
        java.lang.ClassLoader classLoader88 = enhancer84.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer89 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader90 = enhancer89.getClassLoader();
        enhancer84.setClassLoader(classLoader90);
        java.lang.Class<?> wildcardClass92 = classLoader90.getClass();
        enhancer16.setSuperclass((java.lang.Class) wildcardClass92);
        java.lang.ClassLoader classLoader94 = enhancer16.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy95 = enhancer16.getStrategy();
        enhancer0.setStrategy(generatorStrategy95);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNotNull(generatorStrategy6);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(generatorStrategy13);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(callbackArray50);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(classArray71);
        org.junit.Assert.assertNotNull(namingPolicy76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(namingPolicy87);
        org.junit.Assert.assertNotNull(classLoader88);
        org.junit.Assert.assertNotNull(classLoader90);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(classLoader94);
        org.junit.Assert.assertNotNull(generatorStrategy95);
    }

    @Test
    public void test08499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08499");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer4.getNamingPolicy();
        java.lang.ClassLoader classLoader8 = enhancer4.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader10 = enhancer9.getClassLoader();
        enhancer4.setClassLoader(classLoader10);
        boolean boolean12 = enhancer4.getUseCache();
        boolean boolean13 = namingPolicy3.equals((java.lang.Object) enhancer4);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setAttemptLoad(true);
        boolean boolean17 = enhancer14.getAttemptLoad();
        java.lang.ClassLoader classLoader18 = enhancer14.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer14.getStrategy();
        enhancer4.setStrategy(generatorStrategy19);
        java.lang.ClassLoader classLoader21 = enhancer4.getClassLoader();
        boolean boolean22 = enhancer4.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter23 = null;
        enhancer4.setCallbackFilter(callbackFilter23);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = enhancer4.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setAttemptLoad(true);
        java.lang.ClassLoader classLoader29 = null;
        enhancer26.setClassLoader(classLoader29);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setAttemptLoad(true);
        boolean boolean34 = enhancer31.getAttemptLoad();
        java.lang.ClassLoader classLoader35 = enhancer31.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy36 = enhancer31.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setAttemptLoad(true);
        boolean boolean40 = enhancer37.getAttemptLoad();
        java.lang.ClassLoader classLoader41 = enhancer37.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer37.getStrategy();
        enhancer31.setStrategy(generatorStrategy42);
        enhancer26.setStrategy(generatorStrategy42);
        org.mockito.cglib.proxy.Callback callback45 = null;
        enhancer26.setCallback(callback45);
        boolean boolean47 = enhancer26.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer26.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        boolean boolean50 = enhancer49.getUseCache();
        java.lang.ClassLoader classLoader51 = enhancer49.getClassLoader();
        enhancer26.setClassLoader(classLoader51);
        enhancer26.setAttemptLoad(true);
        enhancer26.setSerialVersionUID((java.lang.Long) 0L);
        enhancer26.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy59 = enhancer26.getStrategy();
        enhancer4.setStrategy(generatorStrategy59);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader62 = enhancer61.getClassLoader();
        enhancer61.setAttemptLoad(true);
        boolean boolean65 = enhancer61.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter66 = null;
        enhancer61.setCallbackFilter(callbackFilter66);
        boolean boolean68 = enhancer61.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter69 = null;
        enhancer61.setCallbackFilter(callbackFilter69);
        java.lang.ClassLoader classLoader71 = enhancer61.getClassLoader();
        enhancer4.setClassLoader(classLoader71);
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(generatorStrategy25);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(classLoader35);
        org.junit.Assert.assertNotNull(generatorStrategy36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertNotNull(generatorStrategy59);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(classLoader71);
    }

    @Test
    public void test08500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08500");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        java.lang.ClassLoader classLoader1 = enhancer0.getClassLoader();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass3, wildcardClass5, wildcardClass8, wildcardClass11, wildcardClass14, wildcardClass16 };
        enhancer0.setInterfaces(classArray18);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer0.setCallback(callback22);
        java.lang.Class<?> wildcardClass24 = enhancer0.getClass();
        java.lang.Class[] classArray25 = null;
        org.mockito.cglib.proxy.Callback callback26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass24, classArray25, callback26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }
}

