import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest8 {

    public static boolean debug = false;

    @Test
    public void test04001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04001");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        java.lang.StringBuffer stringBuffer7 = null;
        java.lang.String str10 = strSubstitutor1.replace(stringBuffer7, (-1), 0);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        java.util.List<java.lang.String> strList23 = strTokenizer22.getTokenList();
        java.lang.String str24 = strSubstitutor1.replace((java.lang.Object) strTokenizer22);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup25 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor26 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup25);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup27 = strSubstitutor26.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor29 = strSubstitutor26.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer30 = null;
        boolean boolean31 = strSubstitutor26.replaceIn(stringBuffer30);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor33 = strSubstitutor26.setVariableSuffix('4');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup34 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str36 = strStrLookup34.lookup("{}");
        strSubstitutor26.setVariableResolver(strStrLookup34);
        strSubstitutor1.setVariableResolver(strStrLookup34);
        char char39 = strSubstitutor1.getEscapeChar();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = strSubstitutor1.setVariableSuffix("#4#a4#");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor43 = strSubstitutor41.setVariableSuffix('t');
        char char44 = strSubstitutor41.getEscapeChar();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str24, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNull(wildcardStrLookup27);
        org.junit.Assert.assertNotNull(strSubstitutor29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSubstitutor33);
        org.junit.Assert.assertNotNull(strStrLookup34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + char39 + "' != '" + '$' + "'", char39 == '$');
        org.junit.Assert.assertNotNull(strSubstitutor41);
        org.junit.Assert.assertNotNull(strSubstitutor43);
        org.junit.Assert.assertTrue("'" + char44 + "' != '" + '$' + "'", char44 == '$');
    }

    @Test
    public void test04002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04002");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        boolean boolean19 = reader17.markSupported();
        reader17.reset();
        int int21 = reader17.read();
        long long23 = reader17.skip((long) ' ');
        int int24 = reader17.read();
        boolean boolean25 = reader17.markSupported();
        reader17.mark(9);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 104 + "'", int21 == 104);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 9L + "'", long23 == 9L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test04003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04003");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        boolean boolean12 = strTokenizer11.isEmptyTokenAsNull();
        int int13 = strTokenizer11.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer11.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setQuoteChar('h');
        java.lang.String str21 = strTokenizer18.getContent();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#4#a4#" + "'", str21, "#4#a4#");
    }

    @Test
    public void test04004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04004");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties7.clear();
        properties7.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean14 = strBuilder12.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.append(true);
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher25, strMatcher27);
        boolean boolean29 = strTokenizer28.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder12.appendAll((java.util.Iterator<java.lang.String>) strTokenizer28);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer42.setTrimmerMatcher(strMatcher44);
        int int47 = strBuilder30.lastIndexOf(strMatcher44, (int) (byte) 10);
        boolean boolean48 = properties7.containsValue((java.lang.Object) strBuilder30);
        int int49 = properties7.size();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        int int51 = properties7.size();
        properties7.clear();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test04005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04005");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.setLength(0);
        boolean boolean28 = strBuilder26.startsWith("##4");
        java.lang.String str29 = strBuilder26.getNewLineText();
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        java.util.List<java.lang.String> strList43 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher54, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder45.appendln(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendSeparator('a', 10);
        java.util.Properties properties64 = new java.util.Properties();
        boolean boolean65 = strBuilder60.equals((java.lang.Object) properties64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.append((long) (short) 0);
        int int70 = strBuilder60.indexOf("#4#a4#", (int) (byte) -1);
        char[] charArray77 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher79, strMatcher81);
        boolean boolean83 = strTokenizer82.isEmptyTokenAsNull();
        int int84 = strTokenizer82.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer82.setTrimmerMatcher(strMatcher85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder60.replaceFirst(strMatcher85, "##4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer42.setTrimmerMatcher(strMatcher85);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder26.insert(0, (java.lang.Object) strMatcher85);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder26.reverse();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 3 + "'", int70 == 3);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test04006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04006");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (short) 1, true);
        java.lang.CharSequence charSequence25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append(charSequence25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.trim();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test04007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04007");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        char[] charArray8 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.append(true);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        boolean boolean27 = strTokenizer26.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        boolean boolean41 = strBuilder10.contains(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher37);
        boolean boolean43 = properties1.equals((java.lang.Object) strMatcher37);
        int int44 = properties1.size();
        java.util.Set<java.lang.String> strSet45 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean49 = strBuilder47.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.replaceFirst('#', '4');
        char[] charArray60 = strBuilder53.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ', '4');
        boolean boolean64 = properties1.equals((java.lang.Object) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray73 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher75, strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray73);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder66.appendln(charArray73);
        java.io.Reader reader82 = strBuilder66.asReader();
        reader82.reset();
        boolean boolean84 = reader82.markSupported();
        reader82.reset();
        int int86 = reader82.read();
        long long88 = reader82.skip((long) ' ');
        reader82.close();
        boolean boolean90 = reader82.ready();
        long long92 = reader82.skip((long) 16);
        reader82.mark((int) (byte) 100);
        properties1.load(reader82);
        int int96 = reader82.read();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(reader82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 104 + "'", int86 == 104);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 9L + "'", long88 == 9L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 0L + "'", long92 == 0L);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
    }

    @Test
    public void test04008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04008");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.insert(0, (long) '#');
        boolean boolean42 = properties1.equals((java.lang.Object) '#');
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties1.elements();
        java.lang.Object obj44 = properties1.clone();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        properties46.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties46.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet49 = properties46.entrySet();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer51.reset();
        java.lang.String str53 = strTokenizer52.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.appendln((double) '4');
        char[] charArray71 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher73, strMatcher75);
        boolean boolean77 = strTokenizer76.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList78 = strTokenizer76.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer76.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer80.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder57.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer82, "StrTokenizer[not tokenized yet]");
        java.lang.Object obj85 = properties46.putIfAbsent((java.lang.Object) strTokenizer52, (java.lang.Object) strTokenizer82);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.lang.Object obj87 = properties46.clone();
        java.util.Set<java.lang.Object> objSet88 = properties46.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties46.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet90 = properties46.entrySet();
        boolean boolean91 = properties46.isEmpty();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNotNull(objEntrySet49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "{StrTokenizer[hi!]=StrTokenizer[]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "{StrTokenizer[hi!]=StrTokenizer[]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "{StrTokenizer[hi!]=StrTokenizer[]}");
        org.junit.Assert.assertNotNull(objSet88);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNotNull(objEntrySet90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test04009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04009");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor1.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor1.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor9.setVariablePrefix("#4#a4#");
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        java.util.Enumeration<?> wildcardEnumeration15 = properties13.propertyNames();
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getQuoteMatcher();
        boolean boolean29 = properties13.containsValue((java.lang.Object) strMatcher28);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor30 = strSubstitutor9.setVariablePrefixMatcher(strMatcher28);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor32 = strSubstitutor30.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup33 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor34 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup33);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup35 = strSubstitutor34.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor37 = strSubstitutor34.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup38 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor39 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup38);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup40 = strSubstitutor39.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = strSubstitutor39.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup43 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str45 = strStrLookup43.lookup("{}");
        strSubstitutor39.setVariableResolver(strStrLookup43);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher56, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor62 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup43, strMatcher47, strMatcher60, '4');
        strSubstitutor37.setVariableResolver(strStrLookup43);
        strSubstitutor30.setVariableResolver(strStrLookup43);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor65 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup43);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor66 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup43);
        char[] charArray68 = new char[] { '0' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray68);
        java.lang.String str70 = strSubstitutor66.replace(charArray68);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertNotNull(wildcardEnumeration15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSubstitutor30);
        org.junit.Assert.assertNotNull(strSubstitutor32);
        org.junit.Assert.assertNull(wildcardStrLookup35);
        org.junit.Assert.assertNotNull(strSubstitutor37);
        org.junit.Assert.assertNull(wildcardStrLookup40);
        org.junit.Assert.assertNotNull(strSubstitutor42);
        org.junit.Assert.assertNotNull(strStrLookup43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[0]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "0" + "'", str70, "0");
    }

    @Test
    public void test04010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04010");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor6.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('#', (int) (short) 1);
        int int22 = strBuilder19.lastIndexOf('4', 10);
        char[] charArray29 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, "");
        java.lang.Object[] objArray32 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder19.appendAll(objArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean37 = strBuilder35.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator('#', (int) (short) 1);
        int int47 = strBuilder44.lastIndexOf('4', 10);
        char[] charArray54 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, "");
        java.lang.Object[] objArray57 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder44.appendAll(objArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder44.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer62 = strBuilder44.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder19.appendln(stringBuffer62);
        boolean boolean64 = strSubstitutor8.replaceIn(stringBuffer62);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strSubstitutor8.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrSubstitutor strSubstitutor67 = strSubstitutor8.setVariableSuffixMatcher(strMatcher66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Variable suffix matcher must not be null!");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(stringBuffer62);
        org.junit.Assert.assertEquals(stringBuffer62.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMatcher65);
    }

    @Test
    public void test04011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04011");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet3 = properties1.keySet();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties5.clear();
        properties5.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean13 = strBuilder11.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.append(true);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        boolean boolean28 = strTokenizer27.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append(false);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher40, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray38);
        int int47 = strBuilder31.indexOf(strMatcher45, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder31.appendSeparator("StrTokenizer[not");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder31.appendln("i!\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator("hi!1.0\nfalse\n", (int) (short) 0);
        java.lang.Object obj55 = properties1.get((java.lang.Object) "hi!1.0\nfalse\n");
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 7 + "'", int47 == 7);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test04012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04012");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("{}", (int) (short) -1);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        java.util.Enumeration<?> wildcardEnumeration29 = properties27.propertyNames();
        boolean boolean31 = properties27.containsKey((java.lang.Object) (-1));
        java.util.Collection<java.lang.Object> objCollection32 = properties27.values();
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher41, strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean48 = strBuilder46.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(false);
        int int53 = strBuilder52.length();
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher62, strMatcher64);
        java.util.List<java.lang.String> strList66 = strTokenizer65.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder52.appendAll((java.lang.Iterable<java.lang.String>) strList66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.appendSeparator("{}", (int) (short) -1);
        char[] charArray77 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher79, strMatcher81);
        boolean boolean83 = strTokenizer82.isEmptyTokenAsNull();
        int int84 = strTokenizer82.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer82.setTrimmerMatcher(strMatcher85);
        boolean boolean87 = properties27.replace((java.lang.Object) strMatcher41, (java.lang.Object) (short) -1, (java.lang.Object) strTokenizer86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder22.replaceAll(strMatcher41, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder22.appendSeparator('1');
        int int93 = strBuilder22.indexOf("0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder22.replaceFirst('i', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder96.appendSeparator(' ', '0');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 13 + "'", int53 == 13);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test04013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04013");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        boolean boolean12 = strTokenizer11.isEmptyTokenAsNull();
        int int13 = strTokenizer11.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer11.setTrimmerMatcher(strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer11.setQuoteChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setQuoteChar('4');
        boolean boolean20 = strTokenizer19.hasNext();
        java.lang.String[] strArray21 = strTokenizer19.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer19.reset("i");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterChar('i');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer23.set("java.io.IOException: java.io.IOException");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
    }

    @Test
    public void test04014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04014");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(stringBuffer25, (int) '#', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(false);
        int int32 = strBuilder30.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.setNewLineText("1.0\nf");
        int int37 = strBuilder30.lastIndexOf('t', 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test04015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04015");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        int int43 = properties1.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean47 = strBuilder45.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((float) 1L);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher58, strMatcher60);
        boolean boolean62 = strTokenizer61.isEmptyTokenAsNull();
        int int63 = strTokenizer61.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer61.setTrimmerMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder45.deleteAll(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst('a', ' ');
        char char71 = strBuilder69.charAt(3);
        int int74 = strBuilder69.indexOf("StrTokenizer[#4#a4#]", (int) (byte) 0);
        java.lang.Object obj75 = properties1.get((java.lang.Object) "StrTokenizer[#4#a4#]");
        java.lang.String str78 = properties1.getProperty("hi!1.0\nalse\n#4#a4#", "hi!\n\n#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + char71 + "' != '" + '1' + "'", char71 == '1');
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!\n\n#4a#4#\n0.1!i0.001h" + "'", str78, "hi!\n\n#4a#4#\n0.1!i0.001h");
    }

    @Test
    public void test04016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04016");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray28);
        int int37 = strBuilder21.indexOf(strMatcher35, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder21.appendSeparator("StrTokenizer[not");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.appendln("i!\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator("hi!1.0\nfalse\n", (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.deleteCharAt(63);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 63");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 7 + "'", int37 == 7);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test04017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04017");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.append((long) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((float) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.minimizeCapacity();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.insert(89, (long) 28);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 89");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test04018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04018");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.ensureCapacity((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean31 = strBuilder29.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator('#', (int) (short) 1);
        java.lang.StringBuffer stringBuffer39 = strBuilder35.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder27.appendln(stringBuffer39, 16, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(stringBuffer39);
        org.junit.Assert.assertEquals(stringBuffer39.toString(), "hi!1.0\nfalse\n#");
    }

    @Test
    public void test04019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04019");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException: ", '$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setDelimiterString("\n#########");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer2.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer2.reset("hi!true#4#a4#-1.0\ni");
        java.lang.String str8 = strTokenizer2.next();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!true#4#a4#-1.0\ni" + "'", str8, "hi!true#4#a4#-1.0\ni");
    }

    @Test
    public void test04020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04020");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray29 = strBuilder28.toCharArray();
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher38, strMatcher42);
        java.lang.Object obj44 = properties1.get((java.lang.Object) charArray29);
        java.util.Set<java.lang.Object> objSet45 = properties1.keySet();
        java.util.Set<java.lang.String> strSet46 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean50 = strBuilder48.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.appendSeparator('#', (int) (short) 1);
        boolean boolean58 = properties1.contains((java.lang.Object) (short) 1);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test04021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04021");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.append((long) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder16.insert(10, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendSeparator("", 98);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.appendln(true);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test04022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04022");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet3 = properties1.keySet();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties5.clear();
        properties5.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder14.appendln(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder12.appendln(charArray21);
        java.io.Writer writer31 = strBuilder12.asWriter();
        writer31.flush();
        writer31.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean37 = strBuilder35.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.appendln((float) 1L);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher48, strMatcher50);
        java.util.List<java.lang.String> strList52 = strTokenizer51.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder35.appendAll((java.lang.Iterable<java.lang.String>) strList52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.io.Writer writer57 = writer31.append((java.lang.CharSequence) strBuilder53);
        writer57.write("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean63 = strBuilder61.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.appendSeparator('#', (int) (short) 1);
        int int73 = strBuilder70.lastIndexOf('4', 10);
        char[] charArray80 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, "");
        java.lang.Object[] objArray83 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder70.appendAll(objArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder70.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer88 = strBuilder70.toStringBuffer();
        java.lang.Object obj89 = properties5.replace((java.lang.Object) "", (java.lang.Object) strBuilder70);
        java.lang.String str90 = properties5.toString();
        properties5.clear();
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(writer31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(writer57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(stringBuffer88);
        org.junit.Assert.assertEquals(stringBuffer88.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "{}" + "'", str90, "{}");
    }

    @Test
    public void test04023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04023");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!#4", 'a');
        boolean boolean3 = strTokenizer2.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer2.getQuoteMatcher();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strMatcher4);
    }

    @Test
    public void test04024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04024");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.ensureCapacity((int) '4');
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln(stringBuffer22, (int) (byte) 0, 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.replaceFirst('#', 'i');
        java.util.stream.IntStream intStream29 = strBuilder28.codePoints();
        int int31 = strBuilder28.lastIndexOf('\n');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(intStream29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 13 + "'", int31 == 13);
    }

    @Test
    public void test04025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04025");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean4 = strBuilder2.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.appendln((float) 1L);
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        java.util.List<java.lang.String> strList19 = strTokenizer18.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll((java.lang.Iterable<java.lang.String>) strList19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray24 = strBuilder23.toCharArray();
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33, strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher49, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder40.appendln(charArray47);
        int int57 = strMatcher37.isMatch(charArray47, (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("hi!1.0\n", strMatcher37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = strTokenizer58.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test04026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04026");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("0.0i!1.0\n#4#a4#");
        char[] charArray9 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher11, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer2.reset(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("#4a#4#\n0.1!i0.001h#", strMatcher18);
        java.lang.String str20 = strTokenizer19.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setQuoteChar('h');
        boolean boolean23 = strTokenizer22.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str20, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test04027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04027");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        int int3 = strTokenizer2.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setDelimiterString("0                                                 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("h100.0i!1.0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setDelimiterChar('0');
        java.lang.String str10 = strTokenizer7.previousToken();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test04028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04028");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((double) '4');
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        boolean boolean21 = strTokenizer20.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList22 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer20.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer29 = strBuilder1.asWriter();
        writer29.write((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        java.io.Writer writer58 = writer29.append((java.lang.CharSequence) strBuilder51, 0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.append('#');
        java.io.Writer writer67 = writer29.append((java.lang.CharSequence) strBuilder61);
        // The following exception was thrown during execution in test generation
        try {
            writer67.write("StrTokenizer[null]", 5, 36);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(writer58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(writer67);
    }

    @Test
    public void test04029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04029");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        java.io.Writer writer21 = strBuilder2.asWriter();
        writer21.flush();
        writer21.write((int) (byte) -1);
        writer21.close();
        writer21.close();
        writer21.close();
        java.io.Writer writer29 = writer21.append('i');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean33 = strBuilder31.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendln((float) 1L);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher44, strMatcher46);
        java.util.List<java.lang.String> strList48 = strTokenizer47.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder31.appendAll((java.lang.Iterable<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray53 = strBuilder52.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.appendSeparator('h', (int) (byte) 0);
        java.io.Writer writer58 = writer29.append((java.lang.CharSequence) strBuilder57);
        java.lang.String str59 = strBuilder57.toString();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(writer58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "#4a#4#\n0.1!i0.001h" + "'", str59, "#4a#4#\n0.1!i0.001h");
    }

    @Test
    public void test04030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04030");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.String str23 = strBuilder22.getNullText();
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        int int36 = strBuilder22.lastIndexOf(strMatcher32);
        int int38 = strBuilder22.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder22.setCharAt(9, '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteAll("\000");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.delete(49, 80);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 7 + "'", int36 == 7);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 16 + "'", int38 == 16);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test04031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04031");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.ensureCapacity((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendln(false);
        char char25 = strBuilder23.charAt(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.replaceAll('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendSeparator("hi!true#4#a4#0\n", 63);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean36 = strBuilder34.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.insert(13, "hi!1.0\nfalse\n4");
        int int45 = strBuilder43.indexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.append((int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder31.insert(50, (java.lang.Object) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 50");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + char25 + "' != '" + 'i' + "'", char25 == 'i');
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 26 + "'", int45 == 26);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test04032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04032");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties1.entrySet();
        java.lang.Object obj44 = properties1.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.trim();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceAll(strMatcher51, "1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer55.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer55.getQuoteMatcher();
        java.lang.String str60 = strTokenizer55.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer55.setIgnoredChar('4');
        java.lang.Object obj63 = properties1.getOrDefault((java.lang.Object) strMatcher51, (java.lang.Object) strTokenizer55);
        java.util.Properties properties64 = new java.util.Properties(properties1);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        properties66.clear();
        java.util.Set<java.lang.Object> objSet68 = properties66.keySet();
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        properties70.clear();
        properties70.clear();
        properties70.clear();
        properties66.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        java.lang.Object obj77 = properties70.setProperty("StrTokenizer[not", "0                                                 ");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder("hi!java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: \n");
        java.lang.Object obj82 = properties1.remove((java.lang.Object) strBuilder81);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder81.append("StrTokenizer[not tokenized yet]0\n", 60, 174);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str60, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(obj82);
    }

    @Test
    public void test04033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04033");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterString("");
        boolean boolean5 = strTokenizer1.hasNext();
        boolean boolean6 = strTokenizer1.hasNext();
        java.lang.String str7 = strTokenizer1.next();
        boolean boolean8 = strTokenizer1.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test04034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04034");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        properties23.clear();
        properties23.clear();
        properties23.clear();
        boolean boolean27 = strBuilder19.equals((java.lang.Object) properties23);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties23.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties23.entrySet();
        properties23.clear();
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        int int44 = strTokenizer42.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setDelimiterString("hi!");
        int int47 = strTokenizer46.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer49.reset();
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher60, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray58);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray58);
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher74, strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher65, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer50.setTrimmerMatcher(strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer46.setQuoteMatcher(strMatcher78);
        java.lang.Object obj82 = properties23.remove((java.lang.Object) strTokenizer81);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup83 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor84 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup83);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup85 = strSubstitutor84.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor87 = strSubstitutor84.setVariablePrefix('a');
        strSubstitutor87.setEscapeChar('$');
        boolean boolean90 = properties23.contains((java.lang.Object) strSubstitutor87);
        java.io.InputStream inputStream91 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.loadFromXML(inputStream91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(wildcardStrLookup85);
        org.junit.Assert.assertNotNull(strSubstitutor87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test04035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04035");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor6.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendln((float) 1L);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        java.util.List<java.lang.String> strList27 = strTokenizer26.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendAll((java.lang.Iterable<java.lang.String>) strList27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.ensureCapacity((int) '4');
        java.lang.StringBuffer stringBuffer31 = strBuilder30.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) 2);
        java.lang.String str37 = strSubstitutor6.replace(strBuilder36);
        int int39 = strBuilder36.indexOf(' ');
        boolean boolean41 = strBuilder36.endsWith("h");
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(stringBuffer31);
        org.junit.Assert.assertEquals(stringBuffer31.toString(), "hi!1.0\n#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\n01#4a#4#\n0.1!ih2" + "'", str37, "\n01#4a#4#\n0.1!ih2");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test04036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04036");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        int int14 = strBuilder13.length();
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        java.util.List<java.lang.String> strList27 = strTokenizer26.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.appendAll((java.lang.Iterable<java.lang.String>) strList27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean32 = strBuilder30.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(true);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        boolean boolean47 = strTokenizer46.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder28.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean53 = strBuilder51.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln(false);
        boolean boolean59 = strBuilder57.contains(' ');
        java.lang.Object obj60 = properties1.put((java.lang.Object) strBuilder28, (java.lang.Object) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendNull();
        java.lang.Object obj62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendFixedWidthPadLeft(obj62, (int) (short) 100, 'a');
        java.lang.String str67 = strBuilder65.leftString(13);
        java.lang.String str68 = strBuilder65.toString();
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 13 + "'", int14 == 13);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!1.0\nfalse\n" + "'", str67, "hi!1.0\nfalse\n");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!1.0\nfalse\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" + "'", str68, "hi!1.0\nfalse\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
    }

    @Test
    public void test04037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04037");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder24.appendln((double) 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder24.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteAll("hi!\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.insert(0, 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.deleteFirst("hi!\n3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean57 = strBuilder55.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln(false);
        int int62 = strBuilder61.length();
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher71, strMatcher73);
        java.util.List<java.lang.String> strList75 = strTokenizer74.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder61.appendAll((java.lang.Iterable<java.lang.String>) strList75);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.ensureCapacity((-1));
        int int84 = strBuilder81.indexOf('i', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder46.append(strBuilder81);
        java.lang.String str88 = strBuilder81.midString((int) ' ', 35);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 13 + "'", int62 == 13);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
    }

    @Test
    public void test04038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04038");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        int int26 = strBuilder22.indexOf('#');
        java.lang.StringBuffer stringBuffer27 = strBuilder22.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceAll(' ', '#');
        boolean boolean35 = strBuilder30.contains("hi!1.0\nfalse\n4");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.appendSeparator('#', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder22.appendFixedWidthPadLeft((java.lang.Object) strBuilder30, (int) (byte) 10, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.insert(0, "010.0");
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        properties46.clear();
        properties46.clear();
        properties46.clear();
        java.util.Set<java.lang.String> strSet50 = properties46.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean54 = strBuilder52.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln(false);
        java.lang.Object obj59 = properties46.remove((java.lang.Object) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendSeparator("h!true#4#a4#false");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean66 = strBuilder64.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln(false);
        int int71 = strBuilder70.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendSeparator("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendSeparator('i');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder62.append((java.lang.CharSequence) strBuilder76);
        java.lang.StringBuffer stringBuffer80 = strBuilder62.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder44.append(stringBuffer80, (int) (byte) -1, 126);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(stringBuffer27);
        org.junit.Assert.assertEquals(stringBuffer27.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 13 + "'", int71 == 13);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "\neslaf\n0.1!ihh!true#4#a4#falsehi");
    }

    @Test
    public void test04039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04039");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        java.lang.Object obj14 = properties1.remove((java.lang.Object) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln((double) '#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.append("okenizer[not=0                ", 0, 50);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test04040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04040");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        int int19 = strTokenizer17.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer17.setTrimmerMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.deleteAll(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.append("\n01#4a#4#\n0.1!ih2", 8, 98);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test04041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04041");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder6.replaceAll(strMatcher74, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.append((long) 16);
        int int81 = strBuilder78.indexOf("hi!\n#4#a4#\n", 0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test04042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04042");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        boolean boolean12 = strTokenizer11.isEmptyTokenAsNull();
        int int13 = strTokenizer11.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer11.setTrimmerMatcher(strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer11.setQuoteChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean21 = strBuilder19.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append(true);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        boolean boolean36 = strTokenizer35.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder19.appendAll((java.util.Iterator<java.lang.String>) strTokenizer35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        java.util.Enumeration<?> wildcardEnumeration41 = properties39.propertyNames();
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher50, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getQuoteMatcher();
        boolean boolean55 = properties39.containsValue((java.lang.Object) strMatcher54);
        int int57 = strBuilder19.indexOf(strMatcher54, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer17.setIgnoredMatcher(strMatcher54);
        java.lang.String[] strArray59 = strTokenizer58.getTokenArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = strTokenizer58.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(wildcardEnumeration41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strArray59);
    }

    @Test
    public void test04043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04043");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        char char5 = strSubstitutor1.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.setNullText("hi!\na");
        java.lang.String str22 = strSubstitutor1.replace(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.delete(1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((int) (short) 0);
        boolean boolean29 = strBuilder25.startsWith("hi!1.0i!\n#4#a4#\ntrue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.insert(8, true);
        java.lang.String str35 = strBuilder32.midString(9, (int) (short) 1);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + '$' + "'", char5 == '$');
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str22, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "r" + "'", str35, "r");
    }

    @Test
    public void test04044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04044");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        boolean boolean12 = strTokenizer11.isEmptyTokenAsNull();
        int int13 = strTokenizer11.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer11.setTrimmerMatcher(strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer11.setQuoteChar('a');
        int int18 = strTokenizer11.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer11.reset();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strTokenizer19);
    }

    @Test
    public void test04045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04045");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray31);
        char[] charArray42 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean46 = strBuilder44.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append(true);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        boolean boolean61 = strTokenizer60.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder44.appendAll((java.util.Iterator<java.lang.String>) strTokenizer60);
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher71, strMatcher73);
        boolean boolean75 = strBuilder44.contains(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher71);
        char[] charArray83 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, strMatcher85, strMatcher87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher71, strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder24.append(charArray31);
        char[] charArray92 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder24.append((long) (short) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strBuilder94.asTokenizer();
        boolean boolean97 = strBuilder94.startsWith("{#=StrTokenizer[not tokenized yet]}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "h100.0i!1.0\n#4#a4#32.0#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "h100.0i!1.0\n#4#a4#32.0#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #, 3, 2, ., 0, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test04046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04046");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        int int36 = strBuilder19.lastIndexOf(strMatcher33, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.append((long) '#');
        int int40 = strBuilder38.lastIndexOf("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean44 = strBuilder42.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendln((float) 1L);
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher55, strMatcher57);
        java.util.List<java.lang.String> strList59 = strTokenizer58.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder42.appendAll((java.lang.Iterable<java.lang.String>) strList59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendSeparator('4', 0);
        char[] charArray75 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher77, strMatcher79);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer80.setTrimmerMatcher(strMatcher82);
        java.lang.String str84 = strTokenizer80.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder68.appendAll((java.util.Iterator<java.lang.String>) strTokenizer80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer80.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer87.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder38.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer87, "hi!1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder91.appendSeparator('a', 't');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7 + "'", int40 == 7);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str84, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test04047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04047");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties0.entrySet();
        java.util.Enumeration<?> wildcardEnumeration4 = properties0.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.io.InputStream inputStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNotNull(wildcardEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
    }

    @Test
    public void test04048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04048");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.replaceFirst('#', '4');
        char[] charArray14 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ', '4');
        int int18 = strTokenizer17.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test04049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04049");
        char[] charArray6 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        boolean boolean10 = strTokenizer9.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test04050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04050");
        java.io.IOException iOException1 = new java.io.IOException("hi!1.0i!\n#4#a4#\ntrue\n35");
    }

    @Test
    public void test04051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04051");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("h43truei!true#4#a4#false$1\n##################################################################################################36", '$');
    }

    @Test
    public void test04052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04052");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append("ue#4#a4#StrTokenizer[not tokenized yet]{}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test04053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04053");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.replaceAll('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder54.append("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.append("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.setNullText("StrTokenizer[#4#a4#]");
        boolean boolean72 = strBuilder70.endsWith("\neslaf\n0.1!ih35.0\nhi!#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendFixedWidthPadLeft(28, 97, '4');
        java.lang.String str79 = strBuilder76.midString(10, 0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
    }

    @Test
    public void test04054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04054");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(69);
    }

    @Test
    public void test04055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04055");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.replaceFirst('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.append("StrTokenizer[#4#a4#]", (int) (byte) 0, 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.appendPadding(1, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNewLine();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        properties27.clear();
        properties27.clear();
        java.util.Set<java.lang.String> strSet31 = properties27.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendAll((java.lang.Iterable<java.lang.String>) strSet31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteAll("0                                                 ");
        int int36 = strBuilder35.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendln("hi!1.0\nfalse\n#4#a4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("", "");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getQuoteMatcher();
        int int44 = strBuilder38.lastIndexOf(strMatcher42, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder22.replaceFirst(strMatcher42, "1");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.setCharAt(278, ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 278");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 5 + "'", int36 == 5);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test04056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04056");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        char[] charArray8 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.append(true);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        boolean boolean27 = strTokenizer26.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        boolean boolean41 = strBuilder10.contains(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher37);
        boolean boolean43 = properties1.equals((java.lang.Object) strMatcher37);
        int int44 = properties1.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean48 = strBuilder46.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln((float) 1L);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher59, strMatcher61);
        java.util.List<java.lang.String> strList63 = strTokenizer62.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder46.appendAll((java.lang.Iterable<java.lang.String>) strList63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.appendln(stringBuffer68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.appendNewLine();
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        properties74.clear();
        properties74.clear();
        properties74.clear();
        java.util.Set<java.lang.String> strSet78 = properties74.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder71.appendAll((java.lang.Iterable<java.lang.String>) strSet78);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder69.appendAll((java.lang.Iterable<java.lang.String>) strSet78);
        boolean boolean81 = properties1.contains((java.lang.Object) strBuilder80);
        int int82 = properties1.size();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test04057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04057");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.ensureCapacity((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.reverse();
        boolean boolean30 = strBuilder27.endsWith("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.insert(2, (double) 104);
        int int38 = strBuilder32.indexOf(".0", 126);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test04058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04058");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        int int19 = strTokenizer17.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer17.setTrimmerMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.deleteAll(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNewLine();
        java.io.Writer writer29 = strBuilder27.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder34.appendln(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder32.appendln(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder32.replace(strMatcher51, "hi!", (int) (short) 10, (int) 'a', (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder32.append(true);
        java.io.Writer writer59 = writer29.append((java.lang.CharSequence) strBuilder58);
        java.io.Writer writer61 = writer29.append('.');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(writer59);
        org.junit.Assert.assertNotNull(writer61);
    }

    @Test
    public void test04059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04059");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        properties23.clear();
        properties23.clear();
        properties23.clear();
        boolean boolean27 = strBuilder19.equals((java.lang.Object) properties23);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties23.entrySet();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup29 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor30 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup29);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup31 = strSubstitutor30.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor33 = strSubstitutor30.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup34 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor35 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup34);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup36 = strSubstitutor35.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor38 = strSubstitutor35.setVariablePrefix("hi!");
        char char39 = strSubstitutor35.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean43 = strBuilder41.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.setNullText("hi!\na");
        java.lang.String str56 = strSubstitutor35.replace(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNewLine();
        java.util.stream.IntStream intStream60 = strBuilder59.chars();
        boolean boolean61 = strBuilder55.equals((java.lang.Object) strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder55.setCharAt(0, '1');
        boolean boolean67 = strSubstitutor33.replaceIn(strBuilder64, 7, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.deleteAll('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean73 = strBuilder71.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder71.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.appendSeparator('#', (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.append((long) 10);
        java.lang.String str83 = strBuilder82.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi!\n");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup87 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor88 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup87);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup89 = strSubstitutor88.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor91 = strSubstitutor88.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor94 = strSubstitutor91.setVariableSuffixMatcher(strMatcher93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer("hi!#4#a4#\na100", strMatcher86, strMatcher93);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder82.replaceFirst(strMatcher93, "#4a#4#\n0.1!i0.001h$$$$$hi!\n#hi!100\naaaaaaaaaaa");
        java.lang.Object obj98 = properties23.put((java.lang.Object) '0', (java.lang.Object) strBuilder97);
        java.util.Set<java.lang.Object> objSet99 = properties23.keySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(wildcardStrLookup31);
        org.junit.Assert.assertNotNull(strSubstitutor33);
        org.junit.Assert.assertNull(wildcardStrLookup36);
        org.junit.Assert.assertNotNull(strSubstitutor38);
        org.junit.Assert.assertTrue("'" + char39 + "' != '" + '$' + "'", char39 == '$');
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str56, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(intStream60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNull(wildcardStrLookup89);
        org.junit.Assert.assertNotNull(strSubstitutor91);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertNotNull(strSubstitutor94);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNull(obj98);
        org.junit.Assert.assertNotNull(objSet99);
    }

    @Test
    public void test04060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04060");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.append((long) 92);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        properties8.clear();
        java.util.Enumeration<?> wildcardEnumeration10 = properties8.propertyNames();
        boolean boolean12 = properties8.containsKey((java.lang.Object) (-1));
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher21, strMatcher23);
        java.util.List<java.lang.String> strList25 = strTokenizer24.getTokenList();
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher34, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray32);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray32);
        java.lang.Object obj40 = properties8.getOrDefault((java.lang.Object) strList25, (java.lang.Object) charArray32);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.lang.Object obj43 = properties8.remove((java.lang.Object) properties42);
        boolean boolean44 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties8.entrySet();
        java.lang.String str46 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) 92, properties8);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "92" + "'", str46, "92");
    }

    @Test
    public void test04061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04061");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceAll(' ', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean13 = strBuilder11.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendln((float) 1L);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        java.util.List<java.lang.String> strList28 = strTokenizer27.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.appendAll((java.lang.Iterable<java.lang.String>) strList28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray33 = strBuilder32.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("0.0i!1.0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher36);
        java.lang.String str38 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder9.deleteAll(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("java.io.IOException: hi!1.0i!\n#4#a4#\ntrue\n", "hi!#4#a4#\na100                                                 ");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test04062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04062");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        java.util.Collection<java.lang.Object> objCollection6 = properties1.values();
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean22 = strBuilder20.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(false);
        int int27 = strBuilder26.length();
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        java.util.List<java.lang.String> strList40 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder26.appendAll((java.lang.Iterable<java.lang.String>) strList40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator("{}", (int) (short) -1);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strTokenizer56.isEmptyTokenAsNull();
        int int58 = strTokenizer56.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer56.setTrimmerMatcher(strMatcher59);
        boolean boolean61 = properties1.replace((java.lang.Object) strMatcher15, (java.lang.Object) (short) -1, (java.lang.Object) strTokenizer60);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties1.elements();
        java.util.Enumeration<?> wildcardEnumeration63 = properties1.propertyNames();
        java.util.Enumeration<?> wildcardEnumeration64 = properties1.propertyNames();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 13 + "'", int27 == 13);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(wildcardEnumeration63);
        org.junit.Assert.assertNotNull(wildcardEnumeration64);
    }

    @Test
    public void test04063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04063");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray28);
        int int37 = strBuilder21.indexOf(strMatcher35, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder21.append((float) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder21.insert(12, (float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendSeparator('$', '#');
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher54, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, '0', '$');
        boolean boolean62 = strTokenizer61.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder45.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer61, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer61.reset();
        boolean boolean66 = strTokenizer61.isIgnoreEmptyTokens();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 7 + "'", int37 == 7);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test04064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04064");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.lang.Throwable throwable6 = null;
        java.io.IOException iOException7 = new java.io.IOException("", throwable6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        boolean boolean9 = properties1.containsValue((java.lang.Object) iOException7);
        java.lang.String str10 = properties1.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.elements();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertNotNull(objEnumeration11);
    }

    @Test
    public void test04065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04065");
        java.io.IOException iOException1 = new java.io.IOException("{#={}}");
    }

    @Test
    public void test04066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04066");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        java.lang.String str61 = properties20.getProperty("#4a#4#\n0.1!i0.001h");
        java.util.Properties properties62 = new java.util.Properties(properties20);
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher72, strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        char[] charArray84 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, strMatcher86, strMatcher88);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = strTokenizer89.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher77, strMatcher90);
        boolean boolean92 = properties62.equals((java.lang.Object) "#4#a4#");
        int int93 = properties62.size();
        java.util.Set<java.lang.Object> objSet94 = properties62.keySet();
        java.io.InputStream inputStream95 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties62.loadFromXML(inputStream95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(objSet94);
    }

    @Test
    public void test04067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04067");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        char[] charArray20 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "");
        java.lang.Object[] objArray23 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendAll(objArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder10.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean30 = strBuilder28.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendSeparator('#', (int) (short) 1);
        int int40 = strBuilder37.lastIndexOf('4', 10);
        char[] charArray47 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, "");
        java.lang.Object[] objArray50 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.appendAll(objArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean55 = strBuilder53.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendSeparator('#', (int) (short) 1);
        int int65 = strBuilder62.lastIndexOf('4', 10);
        char[] charArray72 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, "");
        java.lang.Object[] objArray75 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder62.appendAll(objArray75);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder62.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer80 = strBuilder62.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder37.appendln(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder37.appendFixedWidthPadLeft((int) (short) -1, (int) '4', '1');
        boolean boolean86 = strBuilder26.equals(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder26.insert(0, (long) 133);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder26.appendSeparator('i');
        // The following exception was thrown during execution in test generation
        try {
            char char93 = strBuilder91.charAt(50);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 50");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test04068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04068");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        boolean boolean19 = reader17.markSupported();
        reader17.reset();
        boolean boolean21 = reader17.markSupported();
        int int22 = reader17.read();
        reader17.close();
        reader17.reset();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 104 + "'", int22 == 104);
    }

    @Test
    public void test04069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04069");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNewLine();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties5.clear();
        properties5.clear();
        java.util.Set<java.lang.String> strSet9 = properties5.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.appendAll((java.lang.Iterable<java.lang.String>) strSet9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean15 = strBuilder13.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendln((float) 1L);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        java.util.List<java.lang.String> strList30 = strTokenizer29.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendAll((java.lang.Iterable<java.lang.String>) strList30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray35 = strBuilder34.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray35);
        int int38 = strBuilder10.lastIndexOf(strMatcher36, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("7", strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test04070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04070");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendln((float) 1L);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        java.util.List<java.lang.String> strList23 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.lang.Iterable<java.lang.String>) strList23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray28 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.reverse();
        int int31 = strBuilder27.indexOf('#');
        java.lang.StringBuffer stringBuffer32 = strBuilder27.toStringBuffer();
        boolean boolean33 = strSubstitutor1.replaceIn(stringBuffer32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strSubstitutor1.getVariableSuffixMatcher();
        boolean boolean35 = strSubstitutor1.isEnableSubstitutionInVariables();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(stringBuffer32);
        org.junit.Assert.assertEquals(stringBuffer32.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test04071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04071");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        java.io.Writer writer21 = strBuilder2.asWriter();
        writer21.flush();
        writer21.write((int) (byte) -1);
        writer21.flush();
        writer21.write(11);
        writer21.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
    }

    @Test
    public void test04072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04072");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        int int36 = strBuilder19.lastIndexOf(strMatcher33, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.append((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder19.ensureCapacity((int) (short) -1);
        char[] charArray41 = strBuilder19.toCharArray();
        java.util.Iterator<java.lang.String> strItor42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder19.appendWithSeparators(strItor42, "#");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((float) 97);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strBuilder44.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setEmptyTokenAsNull(false);
        java.lang.String str51 = strTokenizer47.nextToken();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "hi!true#4#a4#35");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "hi!true#4#a4#35");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[h, i, !, t, r, u, e, #, 4, #, a, 4, #, 3, 5]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!true#4#a4#3597.0" + "'", str51, "hi!true#4#a4#3597.0");
    }

    @Test
    public void test04073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04073");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert((int) (byte) 0, (long) (short) 100);
        java.io.Reader reader8 = strBuilder1.asReader();
        int int9 = strBuilder1.size();
        int int11 = strBuilder1.indexOf("1!i0.001h5226.0##4");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 36 + "'", int9 == 36);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test04074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04074");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor1.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor1.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor9.setVariablePrefix("#4#a4#");
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        java.util.Enumeration<?> wildcardEnumeration15 = properties13.propertyNames();
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getQuoteMatcher();
        boolean boolean29 = properties13.containsValue((java.lang.Object) strMatcher28);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor30 = strSubstitutor9.setVariablePrefixMatcher(strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strSubstitutor30.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean35 = strBuilder33.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendln((float) 1L);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher46, strMatcher48);
        java.util.List<java.lang.String> strList50 = strTokenizer49.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder33.appendAll((java.lang.Iterable<java.lang.String>) strList50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln(stringBuffer55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.appendFixedWidthPadRight(16, 11, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceFirst("i!true", "hi!1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder56.insert(18, true);
        java.util.stream.IntStream intStream67 = strBuilder66.codePoints();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strBuilder66.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.insert(0, "i");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str74 = strSubstitutor30.replace(strBuilder71, 64, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertNotNull(wildcardEnumeration15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSubstitutor30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(intStream67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test04075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04075");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        char[] charArray20 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "");
        java.lang.Object[] objArray23 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendAll(objArray23);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder10.replaceFirst(strMatcher38, "StrTokenizer[not tokenized yet]");
        java.lang.StringBuffer stringBuffer41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.append(stringBuffer41, (int) (short) 1, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.appendFixedWidthPadRight(35, (-1), 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.deleteFirst("i!100");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.insert(20, (double) 98);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 20");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test04076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04076");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        boolean boolean24 = strBuilder22.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.trim();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        properties27.clear();
        properties27.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean34 = strBuilder32.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.append(true);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder32.appendAll((java.util.Iterator<java.lang.String>) strTokenizer48);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher59, strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer62.setTrimmerMatcher(strMatcher64);
        int int67 = strBuilder50.lastIndexOf(strMatcher64, (int) (byte) 10);
        boolean boolean68 = properties27.containsValue((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder50.appendln((double) 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder22.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder50.deleteAll("\n");
        boolean boolean75 = strBuilder50.endsWith("hi!#4#a4#\n11112.0\ntrue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder50.deleteFirst("$");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst(' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.insert(32, (double) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test04077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04077");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceAll(' ', '#');
        char[] charArray13 = strBuilder9.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.insert((int) (byte) 0, charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, '1', 't');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, '#', '0');
        java.lang.String str21 = strTokenizer20.getContent();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!\n" + "'", str21, "hi!\n");
    }

    @Test
    public void test04078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04078");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer(charArray0);
        int int2 = strTokenizer1.size();
        java.lang.String str3 = strTokenizer1.previousToken();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test04079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04079");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        int int19 = strTokenizer17.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer17.setTrimmerMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.deleteAll(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(13);
        char[] charArray29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.insert(1, charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean34 = strBuilder32.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendln((float) 1L);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        java.util.List<java.lang.String> strList49 = strTokenizer48.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder32.appendAll((java.lang.Iterable<java.lang.String>) strList49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln(stringBuffer54);
        int int57 = strBuilder53.indexOf("java.io.IOException: hi!1.0\nfalse\n#4#a4#13\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder27.appendln(strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder27.setCharAt(1, 'h');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test04080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04080");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray28);
        int int37 = strBuilder21.indexOf(strMatcher35, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder21.append((float) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder21.insert(12, (float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) 32);
        int int47 = strBuilder43.indexOf('.');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 7 + "'", int37 == 7);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 14 + "'", int47 == 14);
    }

    @Test
    public void test04081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04081");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        char[] charArray20 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "");
        java.lang.Object[] objArray23 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendAll(objArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder10.delete((int) (byte) 0, 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder10.ensureCapacity((int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        boolean boolean32 = strTokenizer31.isIgnoreEmptyTokens();
        java.util.List<java.lang.String> strList33 = strTokenizer31.getTokenList();
        int int34 = strTokenizer31.size();
        java.lang.String str35 = strTokenizer31.getContent();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) str35, 40, '4');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test04082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04082");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("\neslaf\n0.1!ih35.0\nhi!1.0\nfalse\n\n", strMatcher1);
    }

    @Test
    public void test04083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04083");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray23);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("0.0i!1.0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 't');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, "hi!1.0\nfalse\n##4a#4#\n0.1!i0.001h#4a#4#\n0.1!i0.001h\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer31.getDelimiterMatcher();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
    }

    @Test
    public void test04084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04084");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties1.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean47 = strBuilder45.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((float) 1L);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher58, strMatcher60);
        java.util.List<java.lang.String> strList62 = strTokenizer61.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder45.appendAll((java.lang.Iterable<java.lang.String>) strList62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendSeparator('4', 0);
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher80, strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer83.setTrimmerMatcher(strMatcher85);
        java.lang.String str87 = strTokenizer83.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder71.appendAll((java.util.Iterator<java.lang.String>) strTokenizer83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer83.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer90.getQuoteMatcher();
        java.util.Properties properties92 = new java.util.Properties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet93 = properties92.entrySet();
        java.lang.Object obj94 = properties1.replace((java.lang.Object) strTokenizer90, (java.lang.Object) objEntrySet93);
        int int95 = properties1.size();
        java.lang.String str96 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet97 = properties1.entrySet();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str87, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(objEntrySet93);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "{}" + "'", str96, "{}");
        org.junit.Assert.assertNotNull(objEntrySet97);
    }

    @Test
    public void test04085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04085");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        boolean boolean16 = strTokenizer15.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setQuoteChar('#');
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        java.lang.Object obj35 = properties1.put((java.lang.Object) '#', (java.lang.Object) strTokenizer31);
        java.util.Properties properties36 = new java.util.Properties(properties1);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        java.util.Enumeration<?> wildcardEnumeration40 = properties38.propertyNames();
        boolean boolean42 = properties38.containsKey((java.lang.Object) (-1));
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        java.lang.String str44 = properties38.toString();
        boolean boolean45 = properties1.containsValue((java.lang.Object) properties38);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup46 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.Object obj47 = properties38.remove((java.lang.Object) strStrLookup46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher58, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder49.appendln(charArray56);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray56);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher66, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.setIgnoredMatcher(strMatcher69);
        java.lang.String str71 = strTokenizer68.previousToken();
        java.lang.Object obj72 = properties38.get((java.lang.Object) strTokenizer68);
        java.io.PrintWriter printWriter73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties38.list(printWriter73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{}" + "'", str44, "{}");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strStrLookup46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj72);
    }

    @Test
    public void test04086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04086");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        boolean boolean16 = strTokenizer15.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setQuoteChar('#');
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        java.lang.Object obj35 = properties1.put((java.lang.Object) '#', (java.lang.Object) strTokenizer31);
        java.util.Set<java.lang.Object> objSet36 = properties1.keySet();
        boolean boolean37 = properties1.isEmpty();
        int int38 = properties1.size();
        boolean boolean39 = properties1.isEmpty();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test04087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04087");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray29 = strBuilder28.toCharArray();
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher38, strMatcher42);
        java.lang.Object obj44 = properties1.get((java.lang.Object) charArray29);
        java.util.Properties properties45 = new java.util.Properties(properties1);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        properties47.clear();
        properties47.clear();
        int int50 = properties47.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher64, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder55.appendln(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder53.appendln(charArray62);
        java.io.Writer writer72 = strBuilder53.asWriter();
        writer72.flush();
        writer72.write((int) (byte) -1);
        properties47.store(writer72, "hi!1.0\nfalse\n#");
        properties1.store(writer72, "StrTokenizer[not tokenized yet]");
        java.util.Set<java.lang.String> strSet80 = properties1.stringPropertyNames();
        java.util.Properties properties81 = new java.util.Properties(properties1);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!#4#a4#\na\n");
        java.lang.Object obj84 = properties1.remove((java.lang.Object) "hi!#4#a4#\na\n");
        java.util.Set<java.lang.Object> objSet85 = properties1.keySet();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(writer72);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(objSet85);
    }

    @Test
    public void test04088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04088");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        int int36 = strBuilder19.lastIndexOf(strMatcher33, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.append((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(35);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup44 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor45 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup44);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup46 = strSubstitutor45.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor48 = strSubstitutor45.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strSubstitutor48.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder38.replace(strMatcher49, "$", 13, 97, (int) (byte) 100);
        int int57 = strBuilder38.indexOf('$', 124);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder38.appendln("010.0", 8, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNull(wildcardStrLookup46);
        org.junit.Assert.assertNotNull(strSubstitutor48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test04089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04089");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor1.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor1.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup10 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = strSubstitutor1.setVariableSuffix("#4a#4#\n0.1!i0.001h$$$$$hi!\n#hi!100\naaaaaaaaaaa");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean16 = strBuilder14.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendln((float) 1L);
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        boolean boolean31 = strTokenizer30.isEmptyTokenAsNull();
        int int32 = strTokenizer30.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer30.setTrimmerMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.deleteAll(strMatcher33);
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.setLength(1);
        boolean boolean39 = strSubstitutor12.replaceIn(strBuilder38);
        boolean boolean40 = strSubstitutor12.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strSubstitutor12.getVariablePrefixMatcher();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNull(wildcardStrLookup10);
        org.junit.Assert.assertNotNull(strSubstitutor12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMatcher41);
    }

    @Test
    public void test04090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04090");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setIgnoreEmptyTokens(true);
        java.lang.String str37 = strTokenizer36.next();
        boolean boolean38 = strTokenizer36.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test04091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04091");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        int int11 = strBuilder7.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln((float) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.append(33);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln((double) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln((double) 83);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test04092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04092");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean15 = strBuilder13.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendln((float) 1L);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        int int31 = strTokenizer29.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer29.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder13.deleteAll(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder11.appendln(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendln("{StrTokenizer[not=0                                                 }", 0, 17);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher55, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder46.appendln(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher63, strMatcher64);
        int int67 = strBuilder44.indexOf(strMatcher63, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder44.appendSeparator('h', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder44.appendln(70);
        boolean boolean74 = strBuilder72.endsWith("!#4#a4#\na100\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test04093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04093");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        boolean boolean19 = reader17.markSupported();
        reader17.close();
        int int21 = reader17.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder26.appendln(charArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder24.appendln(charArray33);
        int int43 = reader17.read(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        int int45 = strTokenizer44.size();
        java.lang.String str46 = strTokenizer44.toString();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 104 + "'", int21 == 104);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "i!#4#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "i!#4#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[i, !, #, 4, #, a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 6 + "'", int43 == 6);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[i!#4#a]" + "'", str46, "StrTokenizer[i!#4#a]");
    }

    @Test
    public void test04094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04094");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.setCharAt((int) (byte) 0, '#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.appendln("i.1hhi!1.\nfalse\n#StrT10okenizer[#4#a4#]100aaaaaaaa#4a#4#\n0.1!i0.001h\n", 79, 278);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
    }

    @Test
    public void test04095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04095");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        char[] charArray20 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "");
        java.lang.Object[] objArray23 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendAll(objArray23);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder10.replaceFirst(strMatcher38, "StrTokenizer[not tokenized yet]");
        java.lang.StringBuffer stringBuffer41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.append(stringBuffer41, (int) (short) 1, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.appendFixedWidthPadRight(35, (-1), 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.appendln((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.deleteFirst("#\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder44.appendln(strBuilder61, 14, 124);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test04096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04096");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        java.lang.String str25 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNewLine();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        properties30.clear();
        properties30.clear();
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.appendAll((java.lang.Iterable<java.lang.String>) strSet34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder22.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendSeparator('#');
        java.lang.String str41 = strBuilder40.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.insert(26, (double) 2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#4a#4#\n0.1!i0.001h" + "'", str25, "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test04097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04097");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder6.replaceAll(strMatcher74, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.insert(4, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.setCharAt(1, '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder82.insert(115, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 115");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test04098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04098");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) 'i');
        int int4 = strBuilder1.indexOf('i', 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.ensureCapacity(43);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator("hi!1.0\n#4#a4#", 0);
        char[] charArray13 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean17 = strBuilder15.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.append(true);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        boolean boolean32 = strTokenizer31.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder15.appendAll((java.util.Iterator<java.lang.String>) strTokenizer31);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        boolean boolean46 = strBuilder15.contains(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean52 = strBuilder50.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln(false);
        int int57 = strBuilder56.length();
        int int60 = strBuilder56.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.replaceAll('4', ' ');
        java.util.stream.IntStream intStream66 = strBuilder56.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder56.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!1.013.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder56.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer69, "hi!1.0\nfalse\n##4a#4#\n0.1!i0.001h#4a#4#\n0.1!i0.001h\n");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup72 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor73 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup72);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup74 = strSubstitutor73.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor76 = strSubstitutor73.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup77 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str79 = strStrLookup77.lookup("{}");
        strSubstitutor73.setVariableResolver(strStrLookup77);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray88 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray88, strMatcher90, strMatcher92);
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer93.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor96 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup77, strMatcher81, strMatcher94, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = strTokenizer69.setQuoteMatcher(strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher81);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder6.deleteFirst(strMatcher81);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 13 + "'", int57 == 13);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(intStream66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNull(wildcardStrLookup74);
        org.junit.Assert.assertNotNull(strSubstitutor76);
        org.junit.Assert.assertNotNull(strStrLookup77);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strTokenizer97);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test04099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04099");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray29 = strBuilder28.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean34 = strBuilder32.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendln((float) 1L);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        java.util.List<java.lang.String> strList49 = strTokenizer48.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder32.appendAll((java.lang.Iterable<java.lang.String>) strList49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray54 = strBuilder53.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder30.append(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.insert(5, (long) (byte) 1);
        boolean boolean60 = properties1.containsValue((java.lang.Object) 5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", "StrTokenizer[not tokenized yet]");
        boolean boolean65 = properties1.remove((java.lang.Object) "#4#a4#", (java.lang.Object) "hi!\n");
        java.util.Properties properties66 = new java.util.Properties(properties1);
        properties66.clear();
        java.lang.Object obj68 = properties66.clone();
        boolean boolean69 = properties66.isEmpty();
        java.lang.String str70 = properties66.toString();
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "{}");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{}" + "'", str70, "{}");
    }

    @Test
    public void test04100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04100");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean25 = strBuilder23.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendln((float) 1L);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        java.util.List<java.lang.String> strList40 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder23.appendAll((java.lang.Iterable<java.lang.String>) strList40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.String str45 = strBuilder44.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean49 = strBuilder47.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendSeparator('#', (int) (short) 1);
        int int59 = strBuilder56.lastIndexOf('4', 10);
        char[] charArray66 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, "");
        java.lang.Object[] objArray69 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder56.appendAll(objArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder56.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer74 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder44.append(stringBuffer74);
        boolean boolean76 = properties20.equals((java.lang.Object) strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.append((long) 8);
        java.lang.String str81 = strBuilder78.midString((int) (byte) 1, 33);
        char[] charArray82 = strBuilder78.toCharArray();
        java.lang.String str83 = strBuilder78.getNullText();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence86 = strBuilder78.subSequence(0, 62);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 62");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(stringBuffer74);
        org.junit.Assert.assertEquals(stringBuffer74.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "100.0i!1.0\n#4#a4#hi!1.0\nfalse\n#48" + "'", str81, "100.0i!1.0\n#4#a4#hi!1.0\nfalse\n#48");
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "h100.0i!1.0\n#4#a4#hi!1.0\nfalse\n#48");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "h100.0i!1.0\n#4#a4#hi!1.0\nfalse\n#48");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #, h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, #, 4, 8]");
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test04101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04101");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        int int26 = strBuilder22.indexOf('#');
        java.lang.StringBuffer stringBuffer27 = strBuilder22.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceAll(' ', '#');
        boolean boolean35 = strBuilder30.contains("hi!1.0\nfalse\n4");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.appendSeparator('#', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder22.appendFixedWidthPadLeft((java.lang.Object) strBuilder30, (int) (byte) 10, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendln((java.lang.Object) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendPadding(11, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder22.append((java.lang.CharSequence) strBuilder46);
        int int51 = strBuilder46.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(16, "hi!1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln(39);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strBuilder65.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        int int68 = strBuilder54.indexOf(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(stringBuffer27);
        org.junit.Assert.assertEquals(stringBuffer27.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 18 + "'", int51 == 18);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test04102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04102");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties5.entrySet();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Collection<java.lang.Object> objCollection8 = properties5.values();
        java.io.OutputStream outputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.save(outputStream9, "1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(objCollection8);
    }

    @Test
    public void test04103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04103");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("0\n", "Str10oke");
        boolean boolean3 = strTokenizer2.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("java.io.IOException: true");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setIgnoredMatcher(strMatcher5);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test04104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04104");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        java.lang.String str3 = strTokenizer2.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer2.setIgnoredChar('i');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.set("StrTokenizer[StrTokenzer[not tokenzed yet]]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
    }

    @Test
    public void test04105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04105");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties1.entrySet();
        properties1.clear();
        java.lang.String str46 = properties1.getProperty("java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean51 = strBuilder49.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.appendln((float) 1L);
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher62, strMatcher64);
        java.util.List<java.lang.String> strList66 = strTokenizer65.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder49.appendAll((java.lang.Iterable<java.lang.String>) strList66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray71 = strBuilder70.toCharArray();
        boolean boolean72 = properties1.remove((java.lang.Object) 15, (java.lang.Object) strBuilder70);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendln("########-1", 14, 26);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test04106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04106");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties1.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean47 = strBuilder45.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((float) 1L);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher58, strMatcher60);
        java.util.List<java.lang.String> strList62 = strTokenizer61.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder45.appendAll((java.lang.Iterable<java.lang.String>) strList62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendSeparator('4', 0);
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher80, strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer83.setTrimmerMatcher(strMatcher85);
        java.lang.String str87 = strTokenizer83.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder71.appendAll((java.util.Iterator<java.lang.String>) strTokenizer83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer83.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer90.getQuoteMatcher();
        java.util.Properties properties92 = new java.util.Properties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet93 = properties92.entrySet();
        java.lang.Object obj94 = properties1.replace((java.lang.Object) strTokenizer90, (java.lang.Object) objEntrySet93);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet95 = properties1.entrySet();
        java.io.OutputStream outputStream96 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream96, "hi!1.0\nfalse\n#4#a4", "#4#a4#\na100\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str87, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(objEntrySet93);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(objEntrySet95);
    }

    @Test
    public void test04107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04107");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        int int19 = strTokenizer17.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer17.setTrimmerMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.deleteAll(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNewLine();
        java.io.Writer writer29 = strBuilder27.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendln((java.lang.Object) (short) 100);
        java.lang.String str35 = strBuilder34.getNullText();
        java.lang.String str38 = strBuilder34.midString((int) (byte) 1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendln(false);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup41 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup41);
        strSubstitutor42.setEnableSubstitutionInVariables(false);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor46 = strSubstitutor42.setVariableSuffix("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.appendln((java.lang.Object) "");
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer50 = writer29.append((java.lang.CharSequence) "", (int) (short) 0, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 12");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "i!100" + "'", str38, "i!100");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strSubstitutor46);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test04108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04108");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        boolean boolean19 = reader17.markSupported();
        reader17.reset();
        boolean boolean21 = reader17.ready();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        properties23.clear();
        java.lang.String str25 = properties23.toString();
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher34, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher47, strMatcher49);
        char[] charArray57 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, "");
        boolean boolean60 = properties23.replace((java.lang.Object) strMatcher38, (java.lang.Object) charArray45, (java.lang.Object) charArray57);
        int int61 = reader17.read(charArray45);
        reader17.reset();
        boolean boolean63 = reader17.ready();
        reader17.mark((int) '$');
        long long67 = reader17.skip((long) 7);
        boolean boolean68 = reader17.markSupported();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "hi!#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "hi!#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[h, i, !, #, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 6 + "'", int61 == 6);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 7L + "'", long67 == 7L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test04109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04109");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((double) '4');
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        boolean boolean21 = strTokenizer20.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList22 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer20.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer29 = strBuilder1.asWriter();
        writer29.write((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        java.io.Writer writer58 = writer29.append((java.lang.CharSequence) strBuilder51, 0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.append('#');
        java.io.Writer writer67 = writer29.append((java.lang.CharSequence) strBuilder61);
        java.io.Writer writer69 = writer29.append('a');
        writer69.write("i!1.0\nfalse\n#4\nStrTokenizer[");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(writer58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(writer67);
        org.junit.Assert.assertNotNull(writer69);
    }

    @Test
    public void test04110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04110");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        java.lang.String str1 = strTokenizer0.previousToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean5 = strBuilder3.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(false);
        int int10 = strBuilder9.length();
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        java.util.List<java.lang.String> strList23 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder9.appendAll((java.lang.Iterable<java.lang.String>) strList23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.ensureCapacity((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean35 = strBuilder33.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln(false);
        int int40 = strBuilder39.length();
        int int43 = strBuilder39.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.replaceAll('4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("", "");
        java.lang.String str52 = strTokenizer51.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer51.getQuoteMatcher();
        int int55 = strBuilder48.lastIndexOf(strMatcher53, 0);
        boolean boolean56 = strBuilder29.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer0.setQuoteMatcher(strMatcher53);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer57.set("hi!true#4#a4#16.0\n97\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 13 + "'", int10 == 13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 13 + "'", int40 == 13);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strTokenizer57);
    }

    @Test
    public void test04111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04111");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.replaceFirst('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.append("StrTokenizer[#4#a4#]", (int) (byte) 0, 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.appendPadding(1, '$');
        java.lang.String str22 = strBuilder13.leftString((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.appendln((double) '4');
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher40, strMatcher42);
        boolean boolean44 = strTokenizer43.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList45 = strTokenizer43.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer43.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder24.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer49, "StrTokenizer[not tokenized yet]");
        int int54 = strBuilder24.lastIndexOf("##4", (int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder13.append(strBuilder24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = strBuilder13.substring(70);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test04112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04112");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("h", "0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.replaceFirst('0', 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendNull();
        java.lang.String str20 = strBuilder12.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder12.ensureCapacity(0);
        java.lang.String str24 = strBuilder12.substring(3);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: \nh" + "'", str24, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: \nh");
    }

    @Test
    public void test04113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04113");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean4 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher16, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendln(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        java.lang.Object obj24 = properties1.get((java.lang.Object) charArray14);
        java.util.Properties properties25 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties1.keys();
        java.io.OutputStream outputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream27, "hi!1.0\n#{StrTokenizer[not=0                                                 }");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration26);
    }

    @Test
    public void test04114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04114");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray6);
        char[] charArray17 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean21 = strBuilder19.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append(true);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        boolean boolean36 = strTokenizer35.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder19.appendAll((java.util.Iterator<java.lang.String>) strTokenizer35);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher46, strMatcher48);
        boolean boolean50 = strBuilder19.contains(strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher46);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher60, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher46, strMatcher64);
        java.lang.String str66 = strTokenizer65.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer65.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str66, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher67);
    }

    @Test
    public void test04115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04115");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) '#');
    }

    @Test
    public void test04116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04116");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String[] strArray2 = strTokenizer1.getTokenArray();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.set("0.1esl$f#4$#4#eurt!ih");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test04117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04117");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(9);
    }

    @Test
    public void test04118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04118");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("", throwable2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray7 = iOException5.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: ", (java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray9 = iOException5.getSuppressed();
        java.lang.String str10 = iOException5.toString();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: " + "'", str10, "java.io.IOException: java.io.IOException: java.io.IOException: ");
    }

    @Test
    public void test04119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04119");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        int int11 = strBuilder7.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replaceAll('4', ' ');
        java.util.stream.IntStream intStream17 = strBuilder7.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.replaceFirst('1', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendln((double) '4');
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        boolean boolean42 = strTokenizer41.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList43 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer41.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder22.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer47, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer50 = strBuilder22.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean54 = strBuilder52.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.replaceFirst('#', '4');
        char[] charArray65 = strBuilder58.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        writer50.write(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder20.appendln(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("#-1");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer77.setQuoteChar('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer79, "0.0\njava.io.IOException: java.io.IOEx");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder75.appendFixedWidthPadLeft((int) (short) -1, 35, 'i');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(writer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test04120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04120");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.String str23 = strBuilder22.getNullText();
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        int int36 = strBuilder22.lastIndexOf(strMatcher32);
        int int38 = strBuilder22.lastIndexOf('4');
        java.lang.Throwable throwable40 = null;
        java.io.IOException iOException41 = new java.io.IOException("", throwable40);
        java.io.IOException iOException42 = new java.io.IOException((java.lang.Throwable) iOException41);
        java.lang.Throwable[] throwableArray43 = iOException42.getSuppressed();
        java.lang.Throwable[] throwableArray44 = iOException42.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder22.appendln((java.lang.Object) throwableArray44);
        int int46 = strBuilder45.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 7 + "'", int36 == 7);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 16 + "'", int38 == 16);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 50 + "'", int46 == 50);
    }

    @Test
    public void test04121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04121");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.replaceAll('#', '#');
        java.lang.String str64 = strBuilder62.substring(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.deleteCharAt(6);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.setNullText("41a14");
        int int69 = strBuilder66.capacity();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "0                                                 " + "'", str64, "0                                                 ");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 126 + "'", int69 == 126);
    }

    @Test
    public void test04122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04122");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray31);
        char[] charArray42 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean46 = strBuilder44.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append(true);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        boolean boolean61 = strTokenizer60.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder44.appendAll((java.util.Iterator<java.lang.String>) strTokenizer60);
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher71, strMatcher73);
        boolean boolean75 = strBuilder44.contains(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher71);
        char[] charArray83 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, strMatcher85, strMatcher87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher71, strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder24.append(charArray31);
        char[] charArray92 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray92);
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer93.setQuoteMatcher(strMatcher94);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "h100.0i!1.0\n#4#a4#32.0#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "h100.0i!1.0\n#4#a4#32.0#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #, 3, 2, ., 0, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer95);
    }

    @Test
    public void test04123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04123");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendFixedWidthPadRight(16, 11, 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.insert(258, (float) 3);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 258");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test04124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04124");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        java.io.Writer writer21 = strBuilder2.asWriter();
        writer21.flush();
        writer21.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean27 = strBuilder25.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendln((float) 1L);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        java.util.List<java.lang.String> strList42 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder25.appendAll((java.lang.Iterable<java.lang.String>) strList42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.io.Writer writer47 = writer21.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceAll("0                                                 ", "0.0i!1.0\n#4#a4#\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str53 = strBuilder48.substring((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(writer47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test04125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04125");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray31);
        char[] charArray42 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean46 = strBuilder44.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append(true);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        boolean boolean61 = strTokenizer60.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder44.appendAll((java.util.Iterator<java.lang.String>) strTokenizer60);
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher71, strMatcher73);
        boolean boolean75 = strBuilder44.contains(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher71);
        char[] charArray83 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, strMatcher85, strMatcher87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher71, strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder24.append(charArray31);
        char[] charArray92 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray92);
        java.lang.String str94 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) charArray92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray92, 'h');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer(charArray92);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer97.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "h100.0i!1.0\n#4#a4#32.0#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "h100.0i!1.0\n#4#a4#32.0#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #, 3, 2, ., 0, #, 4, #, a, 4, #]");
    }

    @Test
    public void test04126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04126");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi\nalse\n");
    }

    @Test
    public void test04127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04127");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.trim();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup25 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str27 = strStrLookup25.lookup("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln((java.lang.Object) "{}");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strBuilder24.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer29.setIgnoredChar('0');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setQuoteChar('i');
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strStrLookup25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
    }

    @Test
    public void test04128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04128");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        int int15 = strBuilder10.indexOf("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.appendSeparator("#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean21 = strBuilder19.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendln((float) 1L);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        java.util.List<java.lang.String> strList36 = strTokenizer35.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder19.appendAll((java.lang.Iterable<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray41 = strBuilder40.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.reverse();
        int int44 = strBuilder40.indexOf('#');
        java.lang.StringBuffer stringBuffer45 = strBuilder40.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder10.appendln(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder10.appendSeparator(' ', '1');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup50 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor51 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup50);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup52 = strSubstitutor51.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor54 = strSubstitutor51.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean59 = strBuilder57.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendln((float) 1L);
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher70, strMatcher72);
        boolean boolean74 = strTokenizer73.isEmptyTokenAsNull();
        int int75 = strTokenizer73.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer73.setTrimmerMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder57.deleteAll(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("hi!\na", strMatcher76);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor80 = strSubstitutor54.setVariableSuffixMatcher(strMatcher76);
        int int82 = strBuilder49.indexOf(strMatcher76, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder49.setNullText("##4a#4#\n0.1!i0.01001h");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(stringBuffer45);
        org.junit.Assert.assertEquals(stringBuffer45.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(wildcardStrLookup52);
        org.junit.Assert.assertNotNull(strSubstitutor54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strSubstitutor80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 6 + "'", int82 == 6);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test04129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04129");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append("java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup13 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup13);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup15 = strSubstitutor14.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor17 = strSubstitutor14.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor14.setVariableSuffix('#');
        java.lang.StringBuffer stringBuffer20 = null;
        java.lang.String str23 = strSubstitutor14.replace(stringBuffer20, (-1), 0);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        java.util.List<java.lang.String> strList36 = strTokenizer35.getTokenList();
        java.lang.String str37 = strSubstitutor14.replace((java.lang.Object) strTokenizer35);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strSubstitutor14.getVariablePrefixMatcher();
        boolean boolean39 = strBuilder10.contains(strMatcher38);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = strBuilder10.substring(83);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(wildcardStrLookup15);
        org.junit.Assert.assertNotNull(strSubstitutor17);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str37, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test04130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04130");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        int int15 = strBuilder10.indexOf("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.appendSeparator("#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.deleteAll('$');
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.append(stringBuffer20, (int) 'h', 80);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder10.setNullText("hi!true#4#a4#false-1.0");
        boolean boolean26 = strBuilder25.isEmpty();
        java.util.stream.IntStream intStream27 = strBuilder25.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendln((java.lang.Object) (short) 100);
        int int34 = strBuilder29.lastIndexOf('$');
        java.lang.String str35 = strBuilder29.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder25.append(strBuilder29, 6, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!100\n" + "'", str35, "hi!100\n");
    }

    @Test
    public void test04131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04131");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("i!1.0\nfalse\n#4\nStrTokenizer[");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test04132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04132");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.setCharAt((int) (byte) 0, '#');
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray15);
        char[] charArray26 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean30 = strBuilder28.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.append(true);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher41, strMatcher43);
        boolean boolean45 = strTokenizer44.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher55, strMatcher57);
        boolean boolean59 = strBuilder28.contains(strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher55);
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher69, strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher55, strMatcher73);
        char[] charArray81 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, strMatcher83, strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher85);
        int int88 = strBuilder7.indexOf(strMatcher55);
        java.io.Writer writer89 = strBuilder7.asWriter();
        java.io.Writer writer91 = writer89.append('t');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 8 + "'", int88 == 8);
        org.junit.Assert.assertNotNull(writer89);
        org.junit.Assert.assertNotNull(writer91);
    }

    @Test
    public void test04133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04133");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup5 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str7 = strStrLookup5.lookup("{}");
        strSubstitutor1.setVariableResolver(strStrLookup5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup5, "StrTokenizer[#4#a4#]", "java.io.IOException: java.io.IOException: java.io.IOException: ", '1');
        java.lang.String str14 = strSubstitutor12.replace("i!1.0\n#4#a4#");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = strSubstitutor12.replace("a", 27, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strStrLookup5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "i!1.0\n#4#a4#" + "'", str14, "i!1.0\n#4#a4#");
    }

    @Test
    public void test04134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04134");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        reader17.mark((int) (short) -1);
        boolean boolean21 = reader17.ready();
        reader17.close();
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher31, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        int int36 = reader17.read(charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceAll(' ', '#');
        char[] charArray50 = strBuilder46.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.insert((int) (byte) 0, charArray50);
        int int52 = reader17.read(charArray50);
        boolean boolean53 = reader17.ready();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "hi!#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "hi!#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, i, !, #, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 6 + "'", int36 == 6);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4, #, \n]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test04135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04135");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        int int9 = strBuilder7.lastIndexOf(strMatcher8);
        int int12 = strBuilder7.indexOf("#4a#4#\n0.1!i0.001h", 0);
        java.lang.String str14 = strBuilder7.leftString((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder7.replaceFirst('#', 'i');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.insert(14, (double) 8);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 14");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test04136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04136");
        char[] charArray3 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean7 = strBuilder5.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(true);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher18, strMatcher20);
        boolean boolean22 = strTokenizer21.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder5.appendAll((java.util.Iterator<java.lang.String>) strTokenizer21);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        boolean boolean36 = strBuilder5.contains(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setDelimiterString("java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setDelimiterString("hi!1.0\nfalse\n4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer39.setIgnoredChar('h');
        java.lang.String str46 = strTokenizer39.getContent();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "##4" + "'", str46, "##4");
    }

    @Test
    public void test04137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04137");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.setLength(0);
        boolean boolean28 = strBuilder26.startsWith("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean32 = strBuilder30.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(true);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        boolean boolean47 = strTokenizer46.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer60.setTrimmerMatcher(strMatcher62);
        int int65 = strBuilder48.lastIndexOf(strMatcher62, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder26.deleteFirst(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!true#4#a4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder26.append((java.lang.Object) "hi!true#4#a4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder26.appendFixedWidthPadLeft(24, 83, 't');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test04138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04138");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.replaceAll("", "hi!");
        java.lang.String str28 = strBuilder19.getNullText();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup29 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor30 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup29);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup31 = strSubstitutor30.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor33 = strSubstitutor30.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup34 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str36 = strStrLookup34.lookup("{}");
        strSubstitutor30.setVariableResolver(strStrLookup34);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher47, strMatcher49);
        boolean boolean51 = strTokenizer50.isEmptyTokenAsNull();
        int int52 = strTokenizer50.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer50.setTrimmerMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor56 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup34, strMatcher38, strMatcher53, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder19.deleteFirst(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.trim();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException: ", '$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("\n#########");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder57.appendFixedWidthPadLeft((java.lang.Object) strTokenizer61, (int) '$', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder57.replaceFirst('b', 'a');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(wildcardStrLookup31);
        org.junit.Assert.assertNotNull(strSubstitutor33);
        org.junit.Assert.assertNotNull(strStrLookup34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test04139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04139");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        boolean boolean32 = strBuilder1.contains(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder1.appendln((int) (short) 0);
        int int37 = strBuilder1.indexOf("h!true#4#a4#false", (int) '$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strBuilder1.asTokenizer();
        char char40 = strBuilder1.charAt((int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!1.013.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer42, "100.01.0\n#4#a4#");
        boolean boolean45 = strTokenizer42.hasPrevious();
        boolean boolean46 = strTokenizer42.hasNext();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + 'i' + "'", char40 == 'i');
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test04140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04140");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean15 = strBuilder13.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendln((float) 1L);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        int int31 = strTokenizer29.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer29.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder13.deleteAll(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder11.appendln(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendln("{StrTokenizer[not=0                                                 }", 0, 17);
        int int46 = strBuilder40.indexOf("#a4#false\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.appendNewLine();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        properties51.clear();
        properties51.clear();
        properties51.clear();
        java.util.Set<java.lang.String> strSet55 = properties51.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.appendAll((java.lang.Iterable<java.lang.String>) strSet55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.appendWithSeparators((java.lang.Iterable<java.lang.String>) strSet55, "0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup59 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor60 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup59);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup61 = strSubstitutor60.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor63 = strSubstitutor60.setVariablePrefix("hi!");
        char char64 = strSubstitutor63.getEscapeChar();
        java.lang.StringBuffer stringBuffer65 = null;
        java.lang.String str68 = strSubstitutor63.replace(stringBuffer65, 4, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder70.appendNewLine();
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        properties73.clear();
        properties73.clear();
        properties73.clear();
        java.util.Set<java.lang.String> strSet77 = properties73.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder70.appendAll((java.lang.Iterable<java.lang.String>) strSet77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder70.append('a');
        boolean boolean82 = strBuilder70.contains("");
        boolean boolean83 = strSubstitutor63.replaceIn(strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        int int88 = strBuilder85.lastIndexOf("hi!\na1", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder85.appendln("##4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!1.0\nfalse\n4");
        java.util.List<java.lang.String> strList93 = strTokenizer92.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder85.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer92, "hi!\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder70.appendln(strBuilder85);
        boolean boolean97 = strBuilder40.equalsIgnoreCase(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNull(wildcardStrLookup61);
        org.junit.Assert.assertNotNull(strSubstitutor63);
        org.junit.Assert.assertTrue("'" + char64 + "' != '" + '$' + "'", char64 == '$');
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test04141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04141");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append('#');
        boolean boolean9 = strBuilder2.contains("hi!\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean13 = strBuilder11.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendln((float) 1L);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        boolean boolean28 = strTokenizer27.isEmptyTokenAsNull();
        int int29 = strTokenizer27.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer27.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder11.deleteAll(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer37.reset();
        java.lang.String str39 = strTokenizer38.previousToken();
        java.lang.String[] strArray40 = strTokenizer38.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder32.appendAll((java.lang.Object[]) strArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder2.appendln(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendSeparator("0.0i!1.0\n#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append('#');
        int int54 = strBuilder52.lastIndexOf("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.append(3);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder44.append(strBuilder52, 35, 16);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test04142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04142");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        strSubstitutor1.setEnableSubstitutionInVariables(false);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor5 = strSubstitutor1.setVariableSuffix("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strSubstitutor5.getVariableSuffixMatcher();
        char char7 = strSubstitutor5.getEscapeChar();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strSubstitutor5.getVariablePrefixMatcher();
        strSubstitutor5.setEscapeChar('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean14 = strBuilder12.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator('#', (int) (short) 1);
        int int24 = strBuilder21.lastIndexOf('4', 10);
        char[] charArray25 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.insert((int) (short) 10, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean32 = strBuilder30.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(false);
        int int37 = strBuilder36.length();
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher46, strMatcher48);
        java.util.List<java.lang.String> strList50 = strTokenizer49.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendAll((java.lang.Iterable<java.lang.String>) strList50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.appendAll((java.lang.Iterable<java.lang.String>) strList50);
        int int53 = strBuilder28.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = strSubstitutor5.replace(strBuilder28, 10, 20);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSubstitutor5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + char7 + "' != '" + '$' + "'", char7 == '$');
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, #]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 13 + "'", int37 == 13);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 24 + "'", int53 == 24);
    }

    @Test
    public void test04143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04143");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor7 = strSubstitutor4.setVariableSuffixMatcher(strMatcher6);
        java.lang.String str8 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strSubstitutor4);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln(false);
        int int17 = strBuilder16.length();
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        java.util.List<java.lang.String> strList30 = strTokenizer29.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder16.appendAll((java.lang.Iterable<java.lang.String>) strList30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.ensureCapacity((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean42 = strBuilder40.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln(false);
        int int47 = strBuilder46.length();
        int int50 = strBuilder46.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.replaceAll('4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("", "");
        java.lang.String str59 = strTokenizer58.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer58.getQuoteMatcher();
        int int62 = strBuilder55.lastIndexOf(strMatcher60, 0);
        boolean boolean63 = strBuilder36.contains(strMatcher60);
        boolean boolean64 = strSubstitutor4.replaceIn(strBuilder36);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        properties66.clear();
        properties66.clear();
        properties66.clear();
        java.util.Set<java.lang.String> strSet70 = properties66.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean74 = strBuilder72.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln(false);
        java.lang.Object obj79 = properties66.remove((java.lang.Object) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.deleteAll("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.setNullText("hi!1.0\nfalse\n#4#a4#13\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.setNullText("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder86.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.appendSeparator('4');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str92 = strSubstitutor4.replace(strBuilder87, 98, 126);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strSubstitutor7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 13 + "'", int17 == 13);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 13 + "'", int47 == 13);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test04144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04144");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(stringBuffer25, (int) '#', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("a");
        java.lang.String str33 = strBuilder32.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "h100.0i!1.0\n#4#4#\n\nfalse\n" + "'", str33, "h100.0i!1.0\n#4#4#\n\nfalse\n");
    }

    @Test
    public void test04145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04145");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        int int15 = strBuilder10.indexOf("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.appendSeparator("#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean21 = strBuilder19.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendln((float) 1L);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        java.util.List<java.lang.String> strList36 = strTokenizer35.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder19.appendAll((java.lang.Iterable<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray41 = strBuilder40.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.reverse();
        int int44 = strBuilder40.indexOf('#');
        java.lang.StringBuffer stringBuffer45 = strBuilder40.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder10.appendln(stringBuffer45);
        java.lang.String str48 = strBuilder46.substring(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean52 = strBuilder50.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((float) 1L);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher63, strMatcher65);
        java.util.List<java.lang.String> strList67 = strTokenizer66.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder50.appendAll((java.lang.Iterable<java.lang.String>) strList67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.ensureCapacity((int) '4');
        java.lang.StringBuffer stringBuffer71 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder46.appendln(stringBuffer71);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.insert(110, (long) '\n');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 110");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(stringBuffer45);
        org.junit.Assert.assertEquals(stringBuffer45.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!1.0\nfalse\n##4a#4#\n0.1!i0.001h#4a#4#\n0.1!i0.001h\n" + "'", str48, "hi!1.0\nfalse\n##4a#4#\n0.1!i0.001h#4a#4#\n0.1!i0.001h\n");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(stringBuffer71);
        org.junit.Assert.assertEquals(stringBuffer71.toString(), "hi!1.0\n#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test04146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04146");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!true", 'h');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset("StrTokenizer[not tokenized yet]");
        java.lang.String str7 = strTokenizer6.previousToken();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test04147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04147");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("\neslaf\n0.1!ih35.0\nhi!#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean5 = strBuilder3.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln((float) 1L);
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher16, strMatcher18);
        java.util.List<java.lang.String> strList20 = strTokenizer19.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.appendAll((java.lang.Iterable<java.lang.String>) strList20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendSeparator('4', 0);
        java.io.Reader reader30 = strBuilder26.asReader();
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        int int44 = strTokenizer42.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean50 = strBuilder48.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.appendSeparator('#', (int) (short) 1);
        int int60 = strBuilder57.lastIndexOf('4', 10);
        char[] charArray61 = strBuilder57.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer46.reset(charArray61);
        int int65 = reader30.read(charArray61, 7, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, "i!\n#4#a4#\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '$');
        int int73 = strMatcher1.isMatch(charArray61, 13, 14, 21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray61);
        int int77 = strTokenizer76.nextIndex();
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, #]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test04148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04148");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("h!true#4#a4#false");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean5 = strBuilder3.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('#', (int) (short) 1);
        int int15 = strBuilder12.lastIndexOf('4', 10);
        char[] charArray22 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, "");
        java.lang.Object[] objArray25 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder12.appendAll(objArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder12.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer30 = strBuilder12.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.append(stringBuffer30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder1.append('h');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getDelimiterMatcher();
        int int37 = strBuilder1.indexOf(strMatcher36);
        int int40 = strBuilder1.lastIndexOf('t', 37);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(stringBuffer30);
        org.junit.Assert.assertEquals(stringBuffer30.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 23 + "'", int37 == 23);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
    }

    @Test
    public void test04149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04149");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterChar('i');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer14.setIgnoreEmptyTokens(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer18.set("hi!1.0\nfalse\n##4a#4#\n0.1!i0.001h");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
    }

    @Test
    public void test04150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04150");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        boolean boolean32 = strBuilder1.contains(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder1.appendln((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteCharAt(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendSeparator("hi!1.0\nfalse\n#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean42 = strBuilder40.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        int int48 = strBuilder46.lastIndexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.deleteAll(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        int int53 = strBuilder46.indexOf(strMatcher51, (int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.append((double) 10.0f);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        boolean boolean58 = strTokenizer57.isIgnoreEmptyTokens();
        java.lang.String str59 = strTokenizer57.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer57.getIgnoredMatcher();
        boolean boolean61 = strBuilder55.contains(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder36.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder36.append((long) 3);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup66 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor67 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup66);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup68 = strSubstitutor67.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor70 = strSubstitutor67.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer71 = null;
        boolean boolean72 = strSubstitutor67.replaceIn(stringBuffer71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strSubstitutor67.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strSubstitutor67.getVariablePrefixMatcher();
        boolean boolean75 = strBuilder65.contains(strMatcher74);
        boolean boolean77 = strBuilder65.contains("0.0\njava.io.IOException: java.io.IOEx");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: " + "'", str59, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNull(wildcardStrLookup68);
        org.junit.Assert.assertNotNull(strSubstitutor70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test04151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04151");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties1.entrySet();
        properties1.clear();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        properties46.clear();
        java.util.Enumeration<?> wildcardEnumeration48 = properties46.propertyNames();
        boolean boolean50 = properties46.containsKey((java.lang.Object) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean54 = strBuilder52.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln((float) 1L);
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher65, strMatcher67);
        java.util.List<java.lang.String> strList69 = strTokenizer68.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder52.appendAll((java.lang.Iterable<java.lang.String>) strList69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray74 = strBuilder73.toCharArray();
        char[] charArray81 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, strMatcher83, strMatcher85);
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, strMatcher83, strMatcher87);
        java.lang.Object obj89 = properties46.get((java.lang.Object) charArray74);
        java.util.Properties properties90 = new java.util.Properties(properties46);
        boolean boolean91 = properties1.equals((java.lang.Object) properties46);
        boolean boolean92 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet93 = properties46.keySet();
        boolean boolean95 = properties46.containsValue((java.lang.Object) "StrTokenizer[StrTokenizer[#4#a4#]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNotNull(wildcardEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(objSet93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test04152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04152");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet1 = properties0.entrySet();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup3 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup3);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup5 = strSubstitutor4.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor7 = strSubstitutor4.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup8 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str10 = strStrLookup8.lookup("{}");
        strSubstitutor4.setVariableResolver(strStrLookup8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = null;
        boolean boolean13 = strSubstitutor4.replaceIn(strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strBuilder15.asTokenizer();
        java.lang.Object obj22 = properties0.replace((java.lang.Object) strSubstitutor4, (java.lang.Object) strTokenizer21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.appendln((double) '4');
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher40, strMatcher42);
        boolean boolean44 = strTokenizer43.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList45 = strTokenizer43.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer43.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder24.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer49, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer52 = strBuilder24.asWriter();
        writer52.write((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher65, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray63);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder56.appendln(charArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        java.io.Writer writer81 = writer52.append((java.lang.CharSequence) strBuilder74, 0, (int) '#');
        java.lang.String str82 = strBuilder74.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder74.appendln((double) 104);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder74.append((float) '4');
        java.lang.Object obj87 = properties0.get((java.lang.Object) '4');
        java.util.Collection<java.lang.Object> objCollection88 = properties0.values();
        org.junit.Assert.assertNotNull(objEntrySet1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNull(wildcardStrLookup5);
        org.junit.Assert.assertNotNull(strSubstitutor7);
        org.junit.Assert.assertNotNull(strStrLookup8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(writer52);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!#4#a4#\na100                                                 " + "'", str82, "hi!#4#a4#\na100                                                 ");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(objCollection88);
    }

    @Test
    public void test04153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04153");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((double) '4');
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        boolean boolean21 = strTokenizer20.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList22 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer20.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer26.reset("aaaaaaa52");
        java.lang.String[] strArray31 = strTokenizer30.getTokenArray();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strArray31);
    }

    @Test
    public void test04154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04154");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        int int6 = properties5.size();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties5.elements();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher21, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder12.appendln(charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendln(charArray19);
        java.io.Writer writer29 = strBuilder10.asWriter();
        writer29.flush();
        writer29.write((int) (byte) -1);
        writer29.flush();
        writer29.write("hi!1.0\nfalse\n#");
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        properties37.clear();
        java.util.Enumeration<?> wildcardEnumeration39 = properties37.propertyNames();
        boolean boolean41 = properties37.containsKey((java.lang.Object) (-1));
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher50, strMatcher52);
        java.util.List<java.lang.String> strList54 = strTokenizer53.getTokenList();
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher63, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray61);
        java.lang.Object obj69 = properties37.getOrDefault((java.lang.Object) strList54, (java.lang.Object) charArray61);
        writer29.write(charArray61);
        java.io.Writer writer72 = writer29.append('a');
        java.lang.Object obj73 = properties5.get((java.lang.Object) writer72);
        java.util.Set<java.lang.String> strSet74 = properties5.stringPropertyNames();
        java.io.InputStream inputStream75 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.load(inputStream75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(writer72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(strSet74);
    }

    @Test
    public void test04155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04155");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(".0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean5 = strBuilder3.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.setNewLineText("");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup10 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup10);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup12 = strSubstitutor11.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor11.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor11.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor18 = strSubstitutor16.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean22 = strBuilder20.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendSeparator('#', (int) (short) 1);
        int int32 = strBuilder29.lastIndexOf('4', 10);
        char[] charArray39 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, "");
        java.lang.Object[] objArray42 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder29.appendAll(objArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean47 = strBuilder45.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('#', (int) (short) 1);
        int int57 = strBuilder54.lastIndexOf('4', 10);
        char[] charArray64 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, "");
        java.lang.Object[] objArray67 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder54.appendAll(objArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder54.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer72 = strBuilder54.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder29.appendln(stringBuffer72);
        boolean boolean74 = strSubstitutor18.replaceIn(stringBuffer72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder3.appendln(stringBuffer72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder1.appendln(stringBuffer72);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean80 = strBuilder78.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.appendSeparator('#', (int) (short) 1);
        int int90 = strBuilder87.lastIndexOf('4', 10);
        char[] charArray91 = strBuilder87.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder76.append(charArray91, 15, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(wildcardStrLookup12);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertNotNull(strSubstitutor18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(stringBuffer72);
        org.junit.Assert.assertEquals(stringBuffer72.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, #]");
    }

    @Test
    public void test04156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04156");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.lang.String str5 = properties1.toString();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        properties7.clear();
        properties7.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean14 = strBuilder12.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.append(true);
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher25, strMatcher27);
        boolean boolean29 = strTokenizer28.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder12.appendAll((java.util.Iterator<java.lang.String>) strTokenizer28);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer42.setTrimmerMatcher(strMatcher44);
        int int47 = strBuilder30.lastIndexOf(strMatcher44, (int) (byte) 10);
        boolean boolean48 = properties7.containsValue((java.lang.Object) strBuilder30);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet49 = properties7.entrySet();
        properties7.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.lang.Object obj54 = properties7.setProperty("#4#a4#\na100\n", "java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objEntrySet49);
        org.junit.Assert.assertNull(obj54);
    }

    @Test
    public void test04157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04157");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.setLength((int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "hi!1.0\n#4#a4# ");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test04158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04158");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher16, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendln(charArray14);
        java.io.Reader reader23 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.appendFixedWidthPadLeft(1, 3, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean33 = strBuilder31.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendSeparator('#', (int) (short) 1);
        int int43 = strBuilder40.lastIndexOf('4', 10);
        char[] charArray50 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, "");
        java.lang.Object[] objArray53 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.appendAll(objArray53);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher63, strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder40.replaceFirst(strMatcher68, "StrTokenizer[not tokenized yet]");
        char[] charArray77 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher79, strMatcher81);
        java.util.List<java.lang.String> strList83 = strTokenizer82.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder70.appendAll((java.lang.Iterable<java.lang.String>) strList83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.appendln((float) 17);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder84.appendln((long) 62);
        boolean boolean89 = strBuilder28.equalsIgnoreCase(strBuilder84);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence92 = strBuilder84.subSequence(82, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -82");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test04159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04159");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet3 = properties1.keySet();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties5.clear();
        properties5.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        java.util.Enumeration<?> wildcardEnumeration13 = properties11.propertyNames();
        boolean boolean15 = properties11.containsKey((java.lang.Object) (-1));
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        java.util.List<java.lang.String> strList28 = strTokenizer27.getTokenList();
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray35);
        java.lang.Object obj43 = properties11.getOrDefault((java.lang.Object) strList28, (java.lang.Object) charArray35);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup44 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor45 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup44);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup46 = strSubstitutor45.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor48 = strSubstitutor45.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = strSubstitutor45.setVariableSuffix('#');
        java.lang.StringBuffer stringBuffer51 = null;
        java.lang.String str54 = strSubstitutor45.replace(stringBuffer51, (-1), 0);
        java.lang.String str56 = strSubstitutor45.replace("StrTokenizer[not tokenized yet]");
        java.lang.Object obj57 = properties1.getOrDefault((java.lang.Object) charArray35, (java.lang.Object) strSubstitutor45);
        java.util.Set<java.lang.String> strSet58 = properties1.stringPropertyNames();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        properties60.clear();
        properties60.clear();
        java.lang.Object obj63 = properties1.remove((java.lang.Object) properties60);
        int int64 = properties60.size();
        java.util.Properties properties65 = new java.util.Properties(properties60);
        java.util.Properties properties66 = new java.util.Properties(properties60);
        java.io.OutputStream outputStream67 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties66.storeToXML(outputStream67, "hi!#4#a4#\na\n", "hi!#4#a4#\na100                                                 hi!\nahi!{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(wildcardStrLookup46);
        org.junit.Assert.assertNotNull(strSubstitutor48);
        org.junit.Assert.assertNotNull(strSubstitutor50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str56, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test04160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04160");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        java.lang.Object obj14 = properties1.remove((java.lang.Object) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean23 = strBuilder21.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.append(true);
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher34, strMatcher36);
        boolean boolean38 = strTokenizer37.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder21.appendAll((java.util.Iterator<java.lang.String>) strTokenizer37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append(false);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher50, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray48);
        int int57 = strBuilder41.indexOf(strMatcher55, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder41.append((float) (short) -1);
        java.lang.StringBuffer stringBuffer60 = strBuilder59.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder19.append(stringBuffer60);
        int int64 = strBuilder19.lastIndexOf('1', 17);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder19.deleteFirst("");
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 7 + "'", int57 == 7);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(stringBuffer60);
        org.junit.Assert.assertEquals(stringBuffer60.toString(), "hi!true#4#a4#false-1.0");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 9 + "'", int64 == 9);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test04161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04161");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(52);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj5 = properties4.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.setLength(0);
        boolean boolean34 = strBuilder32.startsWith("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean38 = strBuilder36.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.append(true);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher49, strMatcher51);
        boolean boolean53 = strTokenizer52.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder36.appendAll((java.util.Iterator<java.lang.String>) strTokenizer52);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher63, strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer66.setTrimmerMatcher(strMatcher68);
        int int71 = strBuilder54.lastIndexOf(strMatcher68, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder32.deleteFirst(strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean76 = strBuilder74.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder74.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder74.appendSeparator('#', (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.replaceFirst("hi!1.013.0", "{}");
        boolean boolean87 = properties4.remove((java.lang.Object) strMatcher68, (java.lang.Object) strBuilder86);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder86.replace(1, (int) ' ', "0\n#4#a4#\n");
        boolean boolean92 = strBuilder3.equalsIgnoreCase(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test04162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04162");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer15.add("14a#4#\n.1!i.1hhi!1.\nfalse\n#");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, #]");
        org.junit.Assert.assertNotNull(strTokenizer15);
    }

    @Test
    public void test04163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04163");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("{}", (int) (short) -1);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        java.util.Enumeration<?> wildcardEnumeration29 = properties27.propertyNames();
        boolean boolean31 = properties27.containsKey((java.lang.Object) (-1));
        java.util.Collection<java.lang.Object> objCollection32 = properties27.values();
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher41, strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean48 = strBuilder46.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(false);
        int int53 = strBuilder52.length();
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher62, strMatcher64);
        java.util.List<java.lang.String> strList66 = strTokenizer65.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder52.appendAll((java.lang.Iterable<java.lang.String>) strList66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.appendSeparator("{}", (int) (short) -1);
        char[] charArray77 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher79, strMatcher81);
        boolean boolean83 = strTokenizer82.isEmptyTokenAsNull();
        int int84 = strTokenizer82.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer82.setTrimmerMatcher(strMatcher85);
        boolean boolean87 = properties27.replace((java.lang.Object) strMatcher41, (java.lang.Object) (short) -1, (java.lang.Object) strTokenizer86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder22.replaceAll(strMatcher41, "hi!");
        java.io.Reader reader90 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder22.insert((int) (short) 10, (double) 10.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder22.appendPadding((int) '0', '1');
        org.apache.commons.lang3.text.StrMatcher strMatcher98 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int99 = strBuilder96.lastIndexOf(strMatcher98);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 13 + "'", int53 == 13);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(reader90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strMatcher98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + (-1) + "'", int99 == (-1));
    }

    @Test
    public void test04164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04164");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        boolean boolean16 = strTokenizer15.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setQuoteChar('#');
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        java.lang.Object obj35 = properties1.put((java.lang.Object) '#', (java.lang.Object) strTokenizer31);
        java.lang.String str37 = properties1.getProperty("h100.0i!1.0\n#4#a4#");
        boolean boolean38 = properties1.isEmpty();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test04165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04165");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet3 = properties1.keySet();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties5.clear();
        properties5.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        java.util.Enumeration<?> wildcardEnumeration13 = properties11.propertyNames();
        boolean boolean15 = properties11.containsKey((java.lang.Object) (-1));
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        java.util.List<java.lang.String> strList28 = strTokenizer27.getTokenList();
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray35);
        java.lang.Object obj43 = properties11.getOrDefault((java.lang.Object) strList28, (java.lang.Object) charArray35);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup44 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor45 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup44);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup46 = strSubstitutor45.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor48 = strSubstitutor45.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = strSubstitutor45.setVariableSuffix('#');
        java.lang.StringBuffer stringBuffer51 = null;
        java.lang.String str54 = strSubstitutor45.replace(stringBuffer51, (-1), 0);
        java.lang.String str56 = strSubstitutor45.replace("StrTokenizer[not tokenized yet]");
        java.lang.Object obj57 = properties1.getOrDefault((java.lang.Object) charArray35, (java.lang.Object) strSubstitutor45);
        java.util.Set<java.lang.String> strSet58 = properties1.stringPropertyNames();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        properties60.clear();
        properties60.clear();
        java.lang.Object obj63 = properties1.remove((java.lang.Object) properties60);
        int int64 = properties60.size();
        java.util.Properties properties65 = new java.util.Properties(properties60);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean69 = strBuilder67.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append(true);
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher80, strMatcher82);
        boolean boolean84 = strTokenizer83.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder67.appendAll((java.util.Iterator<java.lang.String>) strTokenizer83);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder85.insert((int) (short) 1, true);
        boolean boolean92 = strBuilder90.contains("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder90.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder90.appendln("hi!\na1");
        boolean boolean97 = properties65.containsValue((java.lang.Object) "hi!\na1");
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(wildcardStrLookup46);
        org.junit.Assert.assertNotNull(strSubstitutor48);
        org.junit.Assert.assertNotNull(strSubstitutor50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str56, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test04166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04166");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("#4a#4#\n0.1!i0.001h");
        int int2 = strBuilder1.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strBuilder1.asTokenizer();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 18 + "'", int2 == 18);
        org.junit.Assert.assertNotNull(strTokenizer3);
    }

    @Test
    public void test04167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04167");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.appendNewLine();
        char[] charArray11 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean15 = strBuilder13.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.append(true);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer29);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher40, strMatcher42);
        boolean boolean44 = strBuilder13.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher40);
        char[] charArray49 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean53 = strBuilder51.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.append(true);
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher64, strMatcher66);
        boolean boolean68 = strTokenizer67.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder51.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        char[] charArray76 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher78, strMatcher80);
        boolean boolean82 = strBuilder51.contains(strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher78);
        boolean boolean85 = properties1.remove((java.lang.Object) strBuilder7, (java.lang.Object) strTokenizer84);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties1.elements();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objEnumeration86);
    }

    @Test
    public void test04168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04168");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.mark(32);
        java.nio.CharBuffer charBuffer20 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int21 = reader17.read(charBuffer20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
    }

    @Test
    public void test04169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04169");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder24.appendln((double) 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder24.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteAll("hi!\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.insert(0, 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
    }

    @Test
    public void test04170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04170");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray31);
        char[] charArray42 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean46 = strBuilder44.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append(true);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        boolean boolean61 = strTokenizer60.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder44.appendAll((java.util.Iterator<java.lang.String>) strTokenizer60);
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher71, strMatcher73);
        boolean boolean75 = strBuilder44.contains(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher71);
        char[] charArray83 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, strMatcher85, strMatcher87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher71, strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder24.append(charArray31);
        char[] charArray92 = strBuilder24.toCharArray();
        java.lang.StringBuffer stringBuffer93 = strBuilder24.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder24.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder95.append((long) 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder97.deleteAll("hi!1.0\nfalse\n#4\n");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "h100.0i!1.0\n#4#a4#32.0#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "h100.0i!1.0\n#4#a4#32.0#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #, 3, 2, ., 0, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(stringBuffer93);
        org.junit.Assert.assertEquals(stringBuffer93.toString(), "h100.0i!1.0\n#4#a4#32.0#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test04171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04171");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix('a');
        strSubstitutor1.setEnableSubstitutionInVariables(true);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor1.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor8.setVariablePrefix("hi!#4#a4#\na032.0");
        strSubstitutor10.setEnableSubstitutionInVariables(false);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup13 = strSubstitutor10.getVariableResolver();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNull(wildcardStrLookup13);
    }

    @Test
    public void test04172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04172");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        java.lang.Object obj14 = properties1.remove((java.lang.Object) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setNullText("hi!1.0\nfalse\n#4#a4#13\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.setNullText("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.setNullText("hi!#4#a4#\na100");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.appendSeparator('1', '0');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder19.appendln("eslaf\n0.1!ihfalsehi!1.0\nfalse\n#4#a4", 98, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test04173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04173");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setDelimiterString("#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
    }

    @Test
    public void test04174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04174");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties0.entrySet();
        java.util.Enumeration<?> wildcardEnumeration4 = properties0.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.lang.Object> objSet6 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean10 = strBuilder8.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln((float) 1L);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher21, strMatcher23);
        java.util.List<java.lang.String> strList25 = strTokenizer24.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder8.appendAll((java.lang.Iterable<java.lang.String>) strList25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray30 = strBuilder29.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '1', ' ');
        boolean boolean34 = properties0.equals((java.lang.Object) charArray30);
        java.io.OutputStream outputStream35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream35, "92");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNotNull(wildcardEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objSet6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test04175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04175");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi", '.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoredChar(' ');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer4.add("\neslaf\n0.1!ih35.0\nhi!1.0\nfalse\n\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test04176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04176");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('4', 0);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setTrimmerMatcher(strMatcher41);
        java.lang.String str43 = strTokenizer39.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer39.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder48.appendln(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher65, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer46.reset(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer68.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getDelimiterMatcher();
        java.util.List<java.lang.String> strList73 = strTokenizer71.getTokenList();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strList73);
    }

    @Test
    public void test04177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04177");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((double) '4');
        int int9 = strBuilder1.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 19 + "'", int9 == 19);
    }

    @Test
    public void test04178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04178");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!\n", 'h');
        java.lang.String str3 = strTokenizer2.next();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "i!\n" + "'", str3, "i!\n");
    }

    @Test
    public void test04179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04179");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean16 = strBuilder14.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendln((float) 1L);
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        java.util.List<java.lang.String> strList31 = strTokenizer30.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder14.appendAll((java.lang.Iterable<java.lang.String>) strList31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray36 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.reverse();
        int int39 = strBuilder35.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean43 = strBuilder41.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.append(true);
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher54, strMatcher56);
        boolean boolean58 = strTokenizer57.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder41.appendAll((java.util.Iterator<java.lang.String>) strTokenizer57);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        properties61.clear();
        java.util.Enumeration<?> wildcardEnumeration63 = properties61.propertyNames();
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher72, strMatcher74);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getQuoteMatcher();
        boolean boolean77 = properties61.containsValue((java.lang.Object) strMatcher76);
        int int79 = strBuilder41.indexOf(strMatcher76, (int) (byte) 1);
        boolean boolean80 = strBuilder35.contains(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(wildcardEnumeration63);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strMatcher82);
    }

    @Test
    public void test04180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04180");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        int int36 = strBuilder19.lastIndexOf(strMatcher33, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.append((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder19.ensureCapacity((int) (short) -1);
        char[] charArray41 = strBuilder19.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterChar('h');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "hi!true#4#a4#35");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "hi!true#4#a4#35");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[h, i, !, t, r, u, e, #, 4, #, a, 4, #, 3, 5]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
    }

    @Test
    public void test04181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04181");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        int int26 = strBuilder22.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean30 = strBuilder28.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.append(true);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher41, strMatcher43);
        boolean boolean45 = strTokenizer44.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        properties48.clear();
        java.util.Enumeration<?> wildcardEnumeration50 = properties48.propertyNames();
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher59, strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getQuoteMatcher();
        boolean boolean64 = properties48.containsValue((java.lang.Object) strMatcher63);
        int int66 = strBuilder28.indexOf(strMatcher63, (int) (byte) 1);
        boolean boolean67 = strBuilder22.contains(strMatcher63);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup68 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor69 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup68);
        strSubstitutor69.setEnableSubstitutionInVariables(false);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor73 = strSubstitutor69.setVariableSuffix("");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strSubstitutor73.getVariableSuffixMatcher();
        int int75 = strBuilder22.indexOf(strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder22.appendSeparator('a', 63);
        boolean boolean80 = strBuilder22.contains("044444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder22.appendln((int) 'h');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(wildcardEnumeration50);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strSubstitutor73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test04182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04182");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("h!true#4#a4#false");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strBuilder1.asTokenizer();
        char[] charArray9 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher11, strMatcher13);
        boolean boolean15 = strTokenizer14.isEmptyTokenAsNull();
        int int16 = strTokenizer14.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer14.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setQuoteMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append((java.lang.Object) strTokenizer21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceAll('t', '\n');
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test04183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04183");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        boolean boolean19 = reader17.markSupported();
        reader17.close();
        boolean boolean21 = reader17.markSupported();
        java.nio.CharBuffer charBuffer22 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int23 = reader17.read(charBuffer22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test04184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04184");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.lang.String str3 = properties1.toString();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getQuoteMatcher();
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher25, strMatcher27);
        char[] charArray35 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, "");
        boolean boolean38 = properties1.replace((java.lang.Object) strMatcher16, (java.lang.Object) charArray23, (java.lang.Object) charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.appendln((double) '4');
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        boolean boolean61 = strTokenizer60.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList62 = strTokenizer60.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer60.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder41.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer66, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer69 = strBuilder41.asWriter();
        writer69.write((int) ' ');
        boolean boolean72 = properties1.remove((java.lang.Object) "hi!1.0\nfalse\n#", (java.lang.Object) writer69);
        writer69.close();
        writer69.flush();
        writer69.flush();
        java.io.Writer writer77 = writer69.append('#');
        writer77.flush();
        java.io.Writer writer80 = writer77.append('h');
        writer77.flush();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(writer69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(writer77);
        org.junit.Assert.assertNotNull(writer80);
    }

    @Test
    public void test04185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04185");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!\n");
        java.util.List<java.lang.String> strList3 = strTokenizer2.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer2.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher4);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer5.add("hi!#4#a4#\n1111");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strMatcher4);
    }

    @Test
    public void test04186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04186");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor1.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor1.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor13 = strSubstitutor11.setVariableSuffix(' ');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup14 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor15 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup14);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup16 = strSubstitutor15.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor18 = strSubstitutor15.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer19 = null;
        boolean boolean20 = strSubstitutor15.replaceIn(stringBuffer19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strSubstitutor15.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor23 = strSubstitutor15.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor25 = strSubstitutor23.setVariablePrefix("0                                                 ");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup26 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray34);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher50, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher41, strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor59 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup26, strMatcher54, strMatcher57, '$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor60 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup26);
        strSubstitutor25.setVariableResolver(strStrLookup26);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean65 = strBuilder63.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.appendln((float) 1L);
        char[] charArray74 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, strMatcher76, strMatcher78);
        java.util.List<java.lang.String> strList80 = strTokenizer79.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder63.appendAll((java.lang.Iterable<java.lang.String>) strList80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray85 = strBuilder84.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray85);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("0.0i!1.0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, strMatcher88);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("0.0i!1.0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor93 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup26, strMatcher88, strMatcher91, 't');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor94 = strSubstitutor11.setVariablePrefixMatcher(strMatcher88);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertNotNull(strSubstitutor13);
        org.junit.Assert.assertNull(wildcardStrLookup16);
        org.junit.Assert.assertNotNull(strSubstitutor18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strSubstitutor23);
        org.junit.Assert.assertNotNull(strSubstitutor25);
        org.junit.Assert.assertNotNull(strStrLookup26);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strSubstitutor94);
    }

    @Test
    public void test04187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04187");
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        properties2.clear();
        java.util.Enumeration<?> wildcardEnumeration4 = properties2.propertyNames();
        boolean boolean6 = properties2.containsKey((java.lang.Object) (-1));
        java.util.Collection<java.lang.Object> objCollection7 = properties2.values();
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher16, strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean23 = strBuilder21.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln(false);
        int int28 = strBuilder27.length();
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        java.util.List<java.lang.String> strList41 = strTokenizer40.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder27.appendAll((java.lang.Iterable<java.lang.String>) strList41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendSeparator("{}", (int) (short) -1);
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher54, strMatcher56);
        boolean boolean58 = strTokenizer57.isEmptyTokenAsNull();
        int int59 = strTokenizer57.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer57.setTrimmerMatcher(strMatcher60);
        boolean boolean62 = properties2.replace((java.lang.Object) strMatcher16, (java.lang.Object) (short) -1, (java.lang.Object) strTokenizer61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("##a#", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.setDelimiterChar('1');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer65.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 13 + "'", int28 == 13);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strTokenizer65);
    }

    @Test
    public void test04188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04188");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.ensureCapacity((int) '4');
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln(stringBuffer22, (int) (byte) 0, 3);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray33);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher49, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher40, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder19.appendAll((java.util.Iterator<java.lang.String>) strTokenizer54);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        properties59.clear();
        java.util.Enumeration<?> wildcardEnumeration61 = properties59.propertyNames();
        boolean boolean62 = properties59.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties59.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher74, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray72);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder65.appendln(charArray72);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray72);
        java.lang.Object obj82 = properties59.get((java.lang.Object) charArray72);
        java.util.Properties properties83 = new java.util.Properties(properties59);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder19.insert(0, (java.lang.Object) properties83);
        java.lang.StringBuffer stringBuffer85 = strBuilder84.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.appendln((float) 43);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder84.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder89.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder91.deleteAll("hi!100\n");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(wildcardEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(stringBuffer85);
        org.junit.Assert.assertEquals(stringBuffer85.toString(), "{}hi!1.0\n#4#a4#\n");
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test04189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04189");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        boolean boolean19 = reader17.markSupported();
        reader17.reset();
        int int21 = reader17.read();
        long long23 = reader17.skip((long) ' ');
        reader17.close();
        boolean boolean25 = reader17.ready();
        reader17.close();
        reader17.close();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 104 + "'", int21 == 104);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 9L + "'", long23 == 9L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test04190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04190");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.replaceFirst('#', '4');
        char[] charArray14 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean22 = strBuilder20.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((float) 1L);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        java.util.List<java.lang.String> strList37 = strTokenizer36.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder20.appendAll((java.lang.Iterable<java.lang.String>) strList37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray42 = strBuilder41.toCharArray();
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher51, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher51, strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder58.appendln(charArray65);
        int int75 = strMatcher55.isMatch(charArray65, (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!1.0\n", strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer17.setDelimiterMatcher(strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getDelimiterMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer77.add("hi!true#4#a4#-1.0\n\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher78);
    }

    @Test
    public void test04191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04191");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        int int36 = strBuilder19.lastIndexOf(strMatcher33, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.append((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder19.ensureCapacity((int) (short) -1);
        char[] charArray41 = strBuilder19.toCharArray();
        int int44 = strBuilder19.lastIndexOf("", 21);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder19.replaceAll('h', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceAll(' ', '#');
        char[] charArray56 = strBuilder52.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray56);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder19.getChars(52, (int) 'h', charArray56, 98);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 104");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "hi!true#4#a4#35");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "hi!true#4#a4#35");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[h, i, !, t, r, u, e, #, 4, #, a, 4, #, 3, 5]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 14 + "'", int44 == 14);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer57);
    }

    @Test
    public void test04192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04192");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor1.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor1.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor9.setVariablePrefix("#4#a4#");
        java.lang.String str13 = strSubstitutor9.replace("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean17 = strBuilder15.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.append(true);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        boolean boolean32 = strTokenizer31.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder15.appendAll((java.util.Iterator<java.lang.String>) strTokenizer31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup42 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor43 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup42);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup44 = strSubstitutor43.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor46 = strSubstitutor43.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean50 = strBuilder48.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.appendln((float) 1L);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher61, strMatcher63);
        java.util.List<java.lang.String> strList65 = strTokenizer64.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder48.appendAll((java.lang.Iterable<java.lang.String>) strList65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray70 = strBuilder69.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.reverse();
        int int73 = strBuilder69.indexOf('#');
        java.lang.StringBuffer stringBuffer74 = strBuilder69.toStringBuffer();
        boolean boolean75 = strSubstitutor43.replaceIn(stringBuffer74);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder33.appendln(stringBuffer74);
        java.lang.String str79 = strSubstitutor9.replace(stringBuffer74, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strSubstitutor9.getVariablePrefixMatcher();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(wildcardStrLookup44);
        org.junit.Assert.assertNotNull(strSubstitutor46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(stringBuffer74);
        org.junit.Assert.assertEquals(stringBuffer74.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(strMatcher80);
    }

    @Test
    public void test04193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04193");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean4 = properties1.isEmpty();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties5.entrySet();
        java.lang.Object obj7 = properties5.clone();
        boolean boolean8 = properties1.containsValue(obj7);
        java.lang.Object obj9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = properties1.contains(obj9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test04194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04194");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.setCharAt(11, '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 11");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
    }

    @Test
    public void test04195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04195");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        java.lang.String str61 = properties20.getProperty("#4a#4#\n0.1!i0.001h");
        java.lang.String str62 = properties20.toString();
        java.lang.String str64 = properties20.getProperty("hi!#4");
        java.lang.Object obj67 = properties20.setProperty("1", "Str10oke");
        java.io.InputStream inputStream68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.load(inputStream68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{}" + "'", str62, "{}");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(obj67);
    }

    @Test
    public void test04196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04196");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        strSubstitutor1.setEnableSubstitutionInVariables(false);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor5 = strSubstitutor1.setVariableSuffix("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strSubstitutor5.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean10 = strBuilder8.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(false);
        int int15 = strBuilder14.length();
        int int18 = strBuilder14.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.insert(7, '#');
        boolean boolean23 = strSubstitutor5.replaceIn(strBuilder14);
        java.lang.String str24 = strBuilder14.toString();
        int int25 = strBuilder14.size();
        org.junit.Assert.assertNotNull(strSubstitutor5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 13 + "'", int15 == 13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!1.0\n#false\n\n" + "'", str24, "hi!1.0\n#false\n\n");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 15 + "'", int25 == 15);
    }

    @Test
    public void test04197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04197");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        java.lang.StringBuffer stringBuffer7 = null;
        java.lang.String str10 = strSubstitutor1.replace(stringBuffer7, (-1), 0);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        java.util.List<java.lang.String> strList23 = strTokenizer22.getTokenList();
        java.lang.String str24 = strSubstitutor1.replace((java.lang.Object) strTokenizer22);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup25 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor26 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup25);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup27 = strSubstitutor26.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor29 = strSubstitutor26.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer30 = null;
        boolean boolean31 = strSubstitutor26.replaceIn(stringBuffer30);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor33 = strSubstitutor26.setVariableSuffix('4');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup34 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str36 = strStrLookup34.lookup("{}");
        strSubstitutor26.setVariableResolver(strStrLookup34);
        strSubstitutor1.setVariableResolver(strStrLookup34);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor40 = strSubstitutor1.setVariableSuffix("#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        char char41 = strSubstitutor1.getEscapeChar();
        java.lang.String str43 = strSubstitutor1.replace("OException: java.io.IOE");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("h100.0i!1.0\n#4#a4#\n", 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setIgnoredChar('t');
        java.lang.String str49 = strSubstitutor1.replace((java.lang.Object) 't');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strSubstitutor1.getVariablePrefixMatcher();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str24, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNull(wildcardStrLookup27);
        org.junit.Assert.assertNotNull(strSubstitutor29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSubstitutor33);
        org.junit.Assert.assertNotNull(strStrLookup34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strSubstitutor40);
        org.junit.Assert.assertTrue("'" + char41 + "' != '" + '$' + "'", char41 == '$');
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "OException: java.io.IOE" + "'", str43, "OException: java.io.IOE");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "t" + "'", str49, "t");
        org.junit.Assert.assertNotNull(strMatcher50);
    }

    @Test
    public void test04198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04198");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        int int36 = strBuilder19.lastIndexOf(strMatcher33, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.append((long) '#');
        int int40 = strBuilder38.lastIndexOf("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean44 = strBuilder42.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendln((float) 1L);
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher55, strMatcher57);
        java.util.List<java.lang.String> strList59 = strTokenizer58.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder42.appendAll((java.lang.Iterable<java.lang.String>) strList59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendSeparator('4', 0);
        char[] charArray75 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher77, strMatcher79);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer80.setTrimmerMatcher(strMatcher82);
        java.lang.String str84 = strTokenizer80.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder68.appendAll((java.util.Iterator<java.lang.String>) strTokenizer80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer80.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer87.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder38.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer87, "hi!1.0\nfalse\n#");
        boolean boolean92 = strBuilder38.contains("StrTokenizer[#4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder38.deleteFirst('b');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7 + "'", int40 == 7);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str84, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test04199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04199");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.trim();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer12.reset();
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher28, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer13.setTrimmerMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setTrimmerMatcher(strMatcher44);
        int int47 = strBuilder1.indexOf(strMatcher44, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder1.setCharAt(98, '$');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 98");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test04200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04200");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, "hi!\n100aaaaaaa52.0\n", "hi!1.0\nfalse\n#", 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup8 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup8);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup10 = strSubstitutor9.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = strSubstitutor9.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup13 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str15 = strStrLookup13.lookup("{}");
        strSubstitutor9.setVariableResolver(strStrLookup13);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor32 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup13, strMatcher17, strMatcher30, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer6.setDelimiterMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.appendNewLine();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        properties39.clear();
        properties39.clear();
        java.util.Set<java.lang.String> strSet43 = properties39.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.appendAll((java.lang.Iterable<java.lang.String>) strSet43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.setNullText("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean51 = strBuilder49.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.append(true);
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher62, strMatcher64);
        boolean boolean66 = strTokenizer65.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder49.appendAll((java.util.Iterator<java.lang.String>) strTokenizer65);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        properties69.clear();
        java.util.Enumeration<?> wildcardEnumeration71 = properties69.propertyNames();
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher80, strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getQuoteMatcher();
        boolean boolean85 = properties69.containsValue((java.lang.Object) strMatcher84);
        int int87 = strBuilder49.indexOf(strMatcher84, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder47.deleteFirst(strMatcher84);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor90 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, strMatcher34, strMatcher84, 'a');
        char char91 = strSubstitutor90.getEscapeChar();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor93 = strSubstitutor90.setVariablePrefix("java.io.IOException: hi!1.0\nfalse\n#4#a4#13\n");
        org.junit.Assert.assertNotNull(strStrLookup0);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNull(wildcardStrLookup10);
        org.junit.Assert.assertNotNull(strSubstitutor12);
        org.junit.Assert.assertNotNull(strStrLookup13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(wildcardEnumeration71);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + char91 + "' != '" + 'a' + "'", char91 == 'a');
        org.junit.Assert.assertNotNull(strSubstitutor93);
    }

    @Test
    public void test04201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04201");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.appendNewLine();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties10.clear();
        properties10.clear();
        java.util.Set<java.lang.String> strSet14 = properties10.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strSet14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.insert(1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.insert((int) ' ', (java.lang.Object) true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder4.appendFixedWidthPadLeft((int) '#', (int) 't', 'a');
        char[] charArray24 = strBuilder23.toCharArray();
        java.lang.String str26 = strBuilder23.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        java.lang.Throwable throwable30 = null;
        java.io.IOException iOException31 = new java.io.IOException("", throwable30);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException31);
        java.lang.Throwable[] throwableArray33 = iOException32.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher44, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder35.appendln(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendSeparator('a', 10);
        java.util.Properties properties54 = new java.util.Properties();
        boolean boolean55 = strBuilder50.equals((java.lang.Object) properties54);
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher64, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray77 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher79, strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder70.appendln(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder88.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean93 = properties54.remove((java.lang.Object) charArray62, (java.lang.Object) strBuilder88);
        int int94 = properties54.size();
        java.lang.String str95 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) throwableArray33, properties54);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder28.appendAll((java.lang.Object[]) throwableArray33);
        java.lang.StringBuffer stringBuffer97 = strBuilder28.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder23.appendln(stringBuffer97);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer99 = strBuilder23.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "StrTokenizer[not tokenized yet]0true\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "StrTokenizer[not tokenized yet]0true\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[S, t, r, T, o, k, e, n, i, z, e, r, [, n, o, t,  , t, o, k, e, n, i, z, e, d,  , y, e, t, ], 0, t, r, u, e, \n, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, 3, 5]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35" + "'", str26, "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(stringBuffer97);
        org.junit.Assert.assertEquals(stringBuffer97.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder98);
        org.junit.Assert.assertNotNull(strTokenizer99);
    }

    @Test
    public void test04202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04202");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean15 = strBuilder13.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', (int) (short) 1);
        int int25 = strBuilder22.lastIndexOf('4', 10);
        char[] charArray32 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, "");
        java.lang.Object[] objArray35 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder22.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder22.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer40 = strBuilder22.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder9.appendln(stringBuffer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean45 = strBuilder43.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.appendln("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder41.appendFixedWidthPadRight((java.lang.Object) "StrTokenizer[#4#a4#]", 13, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.minimizeCapacity();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = strBuilder54.substring(69);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(stringBuffer40);
        org.junit.Assert.assertEquals(stringBuffer40.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test04203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04203");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("h!true#4#a4#false");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean5 = strBuilder3.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('#', (int) (short) 1);
        int int15 = strBuilder12.lastIndexOf('4', 10);
        char[] charArray22 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, "");
        java.lang.Object[] objArray25 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder12.appendAll(objArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder12.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer30 = strBuilder12.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.append(stringBuffer30);
        int int34 = strBuilder1.indexOf("", 30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder1.deleteAll('i');
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        int int50 = strTokenizer48.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer48.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder36.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer52, "Obj");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln("\neslaf\n0.1!ih35.0\n");
        java.lang.String str57 = strBuilder56.getNullText();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(stringBuffer30);
        org.junit.Assert.assertEquals(stringBuffer30.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test04204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04204");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendFixedWidthPadLeft(26, 82, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((long) 133);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.replace(53, 16, "\n#########");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test04205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04205");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        int int19 = strTokenizer17.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer17.setTrimmerMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.deleteAll(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer27.reset();
        java.lang.String str29 = strTokenizer28.previousToken();
        java.lang.String[] strArray30 = strTokenizer28.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder22.appendAll((java.lang.Object[]) strArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendSeparator('a', (int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append((float) '4');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test04206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04206");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        int int4 = properties1.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher18, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder9.appendln(charArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendln(charArray16);
        java.io.Writer writer26 = strBuilder7.asWriter();
        writer26.flush();
        writer26.write((int) (byte) -1);
        properties1.store(writer26, "hi!1.0\nfalse\n#");
        java.io.Writer writer33 = writer26.append('4');
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        properties35.clear();
        java.util.Set<java.lang.Object> objSet37 = properties35.keySet();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        properties39.clear();
        properties39.clear();
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        properties45.clear();
        java.util.Enumeration<?> wildcardEnumeration47 = properties45.propertyNames();
        boolean boolean49 = properties45.containsKey((java.lang.Object) (-1));
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher58, strMatcher60);
        java.util.List<java.lang.String> strList62 = strTokenizer61.getTokenList();
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher71, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray69);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray69);
        java.lang.Object obj77 = properties45.getOrDefault((java.lang.Object) strList62, (java.lang.Object) charArray69);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup78 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor79 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup78);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup80 = strSubstitutor79.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor82 = strSubstitutor79.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor84 = strSubstitutor79.setVariableSuffix('#');
        java.lang.StringBuffer stringBuffer85 = null;
        java.lang.String str88 = strSubstitutor79.replace(stringBuffer85, (-1), 0);
        java.lang.String str90 = strSubstitutor79.replace("StrTokenizer[not tokenized yet]");
        java.lang.Object obj91 = properties35.getOrDefault((java.lang.Object) charArray69, (java.lang.Object) strSubstitutor79);
        writer26.write(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, "Str10oke");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, 'b', 'i');
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(writer26);
        org.junit.Assert.assertNotNull(writer33);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(wildcardEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNull(wildcardStrLookup80);
        org.junit.Assert.assertNotNull(strSubstitutor82);
        org.junit.Assert.assertNotNull(strSubstitutor84);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str90, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj91);
    }

    @Test
    public void test04207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04207");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        java.util.Set<java.lang.Object> objSet6 = properties1.keySet();
        java.lang.String str7 = properties1.toString();
        java.util.Collection<java.lang.Object> objCollection8 = properties1.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties1.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean13 = strBuilder11.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.replaceFirst('#', '4');
        char[] charArray24 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ', '4');
        boolean boolean28 = strTokenizer27.isEmptyTokenAsNull();
        boolean boolean29 = properties1.containsKey((java.lang.Object) strTokenizer27);
        properties1.clear();
        java.lang.Object obj33 = properties1.setProperty("hi!1.0\nfalse\n#4#a4", "0\n");
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj33);
    }

    @Test
    public void test04208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04208");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((double) '4');
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        boolean boolean21 = strTokenizer20.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList22 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer20.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer29 = strBuilder1.asWriter();
        writer29.write((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        java.io.Writer writer58 = writer29.append((java.lang.CharSequence) strBuilder51, 0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.append('#');
        java.io.Writer writer67 = writer29.append((java.lang.CharSequence) strBuilder61);
        writer29.close();
        writer29.write(12);
        writer29.write("hi!1.0\nalse\nhi!1.013.0");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(writer58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(writer67);
    }

    @Test
    public void test04209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04209");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix('a');
        strSubstitutor1.setEnableSubstitutionInVariables(true);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor1.setVariablePrefix('1');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor1.setVariableSuffix("hi!1.013.0");
        java.lang.String str11 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strSubstitutor10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher22, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.appendln(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendSeparator('a', 10);
        java.util.Properties properties32 = new java.util.Properties();
        boolean boolean33 = strBuilder28.equals((java.lang.Object) properties32);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder48.appendln(charArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean71 = properties32.remove((java.lang.Object) charArray40, (java.lang.Object) strBuilder66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, "hi!1.0\nfalse\n4");
        java.lang.String str74 = strSubstitutor10.replace(charArray40);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup75 = strSubstitutor10.getVariableResolver();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup76 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor77 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup76);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup78 = strSubstitutor77.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor80 = strSubstitutor77.setVariablePrefix('a');
        strSubstitutor77.setEnableSubstitutionInVariables(true);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor84 = strSubstitutor77.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strSubstitutor77.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor86 = strSubstitutor10.setVariableSuffixMatcher(strMatcher85);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "#4#a4#" + "'", str74, "#4#a4#");
        org.junit.Assert.assertNull(wildcardStrLookup75);
        org.junit.Assert.assertNull(wildcardStrLookup78);
        org.junit.Assert.assertNotNull(strSubstitutor80);
        org.junit.Assert.assertNotNull(strSubstitutor84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strSubstitutor86);
    }

    @Test
    public void test04210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04210");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        java.lang.Object obj14 = properties1.remove((java.lang.Object) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendSeparator("h!true#4#a4#false");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln((float) 30);
        boolean boolean21 = strBuilder15.contains('a');
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test04211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04211");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet3 = properties1.keySet();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties5.clear();
        properties5.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj12 = properties5.setProperty("StrTokenizer[not", "0                                                 ");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties5.entrySet();
        java.util.Enumeration<?> wildcardEnumeration14 = properties5.propertyNames();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", "StrTokenizer[not tokenized yet]");
        java.lang.String str18 = strTokenizer17.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterChar('h');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup21 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor22 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strSubstitutor22.getVariablePrefixMatcher();
        java.lang.String str25 = strSubstitutor22.replace("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strSubstitutor22.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor28 = strSubstitutor22.setVariableSuffix("hi!#4#a4#\n1111");
        java.lang.Object obj29 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = properties5.replace((java.lang.Object) strTokenizer20, (java.lang.Object) strSubstitutor28, obj29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str25, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strSubstitutor28);
    }

    @Test
    public void test04212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04212");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strSubstitutor1.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariableSuffix(' ');
        strSubstitutor1.setEscapeChar('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor1.setVariableSuffix('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('#', (int) (short) 1);
        int int22 = strBuilder19.lastIndexOf('4', 10);
        int int24 = strBuilder19.indexOf("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.appendSeparator("#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.deleteAll('$');
        java.lang.StringBuffer stringBuffer29 = strBuilder28.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = strSubstitutor8.replace(stringBuffer29, (int) '#', 126);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(stringBuffer29);
        org.junit.Assert.assertEquals(stringBuffer29.toString(), "hi!1.0\nfalse\n##4a#4#\n0.1!i0.001h");
    }

    @Test
    public void test04213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04213");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strSubstitutor4.getVariableSuffixMatcher();
        boolean boolean6 = strSubstitutor4.isEnableSubstitutionInVariables();
        char char7 = strSubstitutor4.getEscapeChar();
        boolean boolean8 = strSubstitutor4.isEnableSubstitutionInVariables();
        java.lang.String str9 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) boolean8);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + char7 + "' != '" + '$' + "'", char7 == '$');
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "false" + "'", str9, "false");
    }

    @Test
    public void test04214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04214");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!1.0i!\n#4#a4#\ntrue\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test04215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04215");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln((double) '4');
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        boolean boolean34 = strTokenizer33.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList35 = strTokenizer33.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer33.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer39, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer42 = strBuilder14.asWriter();
        java.lang.String str44 = strBuilder14.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder11.insert((int) (short) 1, (java.lang.Object) str44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder11.replaceFirst('t', 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator("0\n#4#a4#\n", (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.replaceAll('h', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.setNullText(".i!1.\n#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(writer42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!\n100aaaaaaa52.0\n" + "'", str44, "hi!\n100aaaaaaa52.0\n");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test04216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04216");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        java.lang.String str26 = strBuilder24.rightString(16);
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(stringBuffer27);
        java.util.stream.IntStream intStream29 = strBuilder28.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln('h');
        java.lang.String str33 = strBuilder28.rightString(16);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0i!1.0\n#4#a4#\n" + "'", str26, "0.0i!1.0\n#4#a4#\n");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(intStream29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "i!1.0\n#4#a4#\n\nh\n" + "'", str33, "i!1.0\n#4#a4#\n\nh\n");
    }

    @Test
    public void test04217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04217");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        properties2.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties2.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties2.entrySet();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.lang.Throwable throwable13 = null;
        java.io.IOException iOException14 = new java.io.IOException("", throwable13);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.lang.Throwable[] throwableArray16 = iOException15.getSuppressed();
        java.io.IOException iOException17 = new java.io.IOException("StrTokenizer[#4#a4#]", (java.lang.Throwable) iOException15);
        java.lang.Throwable[] throwableArray18 = iOException17.getSuppressed();
        iOException9.addSuppressed((java.lang.Throwable) iOException17);
        boolean boolean20 = properties2.equals((java.lang.Object) iOException9);
        java.lang.String str22 = properties2.getProperty("100.01.0\n#4#a4#");
        java.lang.String str23 = properties2.toString();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup24 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor25 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup24);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup26 = strSubstitutor25.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor28 = strSubstitutor25.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor30 = strSubstitutor25.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean34 = strBuilder32.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.append(true);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder32.appendAll((java.util.Iterator<java.lang.String>) strTokenizer48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteCharAt((int) (byte) 1);
        java.lang.String str55 = strSubstitutor30.replace(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher66, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray64);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder57.appendln(charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder75.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder54.append(strBuilder75, 33, 7);
        java.lang.Object obj83 = properties2.get((java.lang.Object) strBuilder82);
        java.util.Set<java.lang.Object> objSet84 = properties2.keySet();
        boolean boolean85 = properties0.equals((java.lang.Object) objSet84);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertNull(wildcardStrLookup26);
        org.junit.Assert.assertNotNull(strSubstitutor28);
        org.junit.Assert.assertNotNull(strSubstitutor30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "h!true#4#a4#false" + "'", str55, "h!true#4#a4#false");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objSet84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test04218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04218");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!1.0\n#4#a4# ");
    }

    @Test
    public void test04219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04219");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('4', 0);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setTrimmerMatcher(strMatcher41);
        java.lang.String str43 = strTokenizer39.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder27.replaceFirst("{}", "java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst('a');
        java.lang.String str50 = strBuilder49.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.reverse();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test04220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04220");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        java.io.Writer writer21 = strBuilder2.asWriter();
        writer21.flush();
        writer21.write((int) (byte) -1);
        writer21.flush();
        writer21.write("hi!1.0\nfalse\n#");
        char[] charArray28 = null;
        writer21.write(charArray28);
        java.io.Writer writer31 = writer21.append('b');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertNotNull(writer31);
    }

    @Test
    public void test04221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04221");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        strSubstitutor1.setEnableSubstitutionInVariables(false);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor5 = strSubstitutor1.setVariableSuffix("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strSubstitutor5.getVariableSuffixMatcher();
        char char7 = strSubstitutor5.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        properties12.clear();
        properties12.clear();
        properties12.clear();
        java.util.Set<java.lang.String> strSet16 = properties12.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.appendAll((java.lang.Iterable<java.lang.String>) strSet16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean22 = strBuilder20.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((float) 1L);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        java.util.List<java.lang.String> strList37 = strTokenizer36.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder20.appendAll((java.lang.Iterable<java.lang.String>) strList37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray42 = strBuilder41.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray42);
        int int45 = strBuilder17.lastIndexOf(strMatcher43, (int) (byte) 0);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor46 = strSubstitutor5.setVariablePrefixMatcher(strMatcher43);
        strSubstitutor46.setEscapeChar('t');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup49 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup49);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup51 = strSubstitutor50.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor53 = strSubstitutor50.setVariablePrefix("hi!");
        char char54 = strSubstitutor50.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean58 = strBuilder56.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder62.setNullText("hi!\na");
        java.lang.String str71 = strSubstitutor50.replace(strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.delete(1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.insert(4, "hi!#4#a4#\na100");
        java.util.stream.IntStream intStream78 = strBuilder74.chars();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str81 = strSubstitutor46.replace(strBuilder74, 69, 60);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSubstitutor5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + char7 + "' != '" + '$' + "'", char7 == '$');
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strSubstitutor46);
        org.junit.Assert.assertNull(wildcardStrLookup51);
        org.junit.Assert.assertNotNull(strSubstitutor53);
        org.junit.Assert.assertTrue("'" + char54 + "' != '" + '$' + "'", char54 == '$');
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str71, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(intStream78);
    }

    @Test
    public void test04222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04222");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("0.0i!1.0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.append(17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendAll((java.lang.Object[]) strArray6);
        int int9 = strBuilder1.lastIndexOf("hi!");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test04223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04223");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("hi!\na");
        java.io.Reader reader13 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean17 = strBuilder15.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendln(strBuilder21, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.insert(2, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.replace((int) '$', 18, "i!1.0\nfalse\n#");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test04224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04224");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!\na");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        java.lang.Throwable[] throwableArray7 = iOException5.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendAll((java.lang.Object[]) throwableArray7);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup9 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup9);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup11 = strSubstitutor10.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor13 = strSubstitutor10.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer14 = null;
        boolean boolean15 = strSubstitutor10.replaceIn(stringBuffer14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strSubstitutor10.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean20 = strBuilder18.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('#', (int) (short) 1);
        int int30 = strBuilder27.lastIndexOf('4', 10);
        char[] charArray37 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, "");
        java.lang.Object[] objArray40 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder27.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean45 = strBuilder43.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendSeparator('#', (int) (short) 1);
        int int55 = strBuilder52.lastIndexOf('4', 10);
        char[] charArray62 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, "");
        java.lang.Object[] objArray65 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder52.appendAll(objArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder52.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer70 = strBuilder52.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder27.appendln(stringBuffer70);
        boolean boolean72 = strSubstitutor10.replaceIn(stringBuffer70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder8.append(stringBuffer70);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(wildcardStrLookup11);
        org.junit.Assert.assertNotNull(strSubstitutor13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(stringBuffer70);
        org.junit.Assert.assertEquals(stringBuffer70.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test04225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04225");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder1.appendFixedWidthPadLeft(1, 3, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteAll("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.append((long) 1);
        int int27 = strBuilder25.lastIndexOf('#');
        java.lang.String str29 = strBuilder25.rightString(80);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.insert(89, "StrToken");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 89");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!#4#a4#\n1111" + "'", str29, "hi!#4#a4#\n1111");
    }

    @Test
    public void test04226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04226");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.lang.Throwable throwable6 = null;
        java.io.IOException iOException7 = new java.io.IOException("", throwable6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        boolean boolean9 = properties1.containsValue((java.lang.Object) iOException7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer11.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean19 = strBuilder17.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean30 = strBuilder28.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendSeparator('#', (int) (short) 1);
        int int40 = strBuilder37.lastIndexOf('4', 10);
        char[] charArray47 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, "");
        java.lang.Object[] objArray50 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.appendAll(objArray50);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor58 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup52, strMatcher54, strMatcher56, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder51.replaceFirst(strMatcher56, "hi!\n100aaaaaaa52.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst(strMatcher61);
        boolean boolean63 = strBuilder23.equals(strBuilder60);
        boolean boolean65 = strBuilder60.contains("#4a#4#\n0.1!i0.001h$$$$$hi!\n#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceAll(' ', '#');
        char[] charArray72 = strBuilder68.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.clear();
        boolean boolean74 = properties1.replace((java.lang.Object) false, (java.lang.Object) "#4a#4#\n0.1!i0.001h$$$$$hi!\n#\n", (java.lang.Object) strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln(true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test04227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04227");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        int int10 = strBuilder1.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean14 = strBuilder12.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((float) 1L);
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher25, strMatcher27);
        boolean boolean29 = strTokenizer28.isEmptyTokenAsNull();
        int int30 = strTokenizer28.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer28.setTrimmerMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder12.deleteAll(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder1.replaceAll(strMatcher31, "0.0i!1.0\n#4#a4#\n");
        int int37 = strBuilder1.indexOf('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean42 = strBuilder40.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln(false);
        int int47 = strBuilder46.length();
        int int50 = strBuilder46.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.replaceAll('4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("", "");
        java.lang.String str59 = strTokenizer58.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer58.getQuoteMatcher();
        int int62 = strBuilder55.lastIndexOf(strMatcher60, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder38.replaceFirst(strMatcher60, "hi!1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder38.deleteAll("h100.0i!1.0\n#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.insert(0, 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.reverse();
        java.lang.String str72 = strBuilder70.rightString(70);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 13 + "'", int47 == 13);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\n\n#4a#4#\n0.1!i0.0!ihh" + "'", str72, "\n\n#4a#4#\n0.1!i0.0!ihh");
    }

    @Test
    public void test04228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04228");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        boolean boolean24 = strBuilder22.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.trim();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        properties27.clear();
        properties27.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean34 = strBuilder32.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.append(true);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder32.appendAll((java.util.Iterator<java.lang.String>) strTokenizer48);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher59, strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer62.setTrimmerMatcher(strMatcher64);
        int int67 = strBuilder50.lastIndexOf(strMatcher64, (int) (byte) 10);
        boolean boolean68 = properties27.containsValue((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder50.appendln((double) 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder22.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder22.appendSeparator('4');
        java.lang.String str74 = strBuilder73.getNullText();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test04229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04229");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("i.1hhi!1.\nfalse\n#StrT10okenizer[#4#a4#]100aaaaaaaa#4a#4#\n0.1!i0.001h\n", ' ', '4');
    }

    @Test
    public void test04230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04230");
        java.io.IOException iOException1 = new java.io.IOException("hi");
    }

    @Test
    public void test04231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04231");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!1.0\nfalse\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
    }

    @Test
    public void test04232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04232");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup8 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup8);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup10 = strSubstitutor9.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = strSubstitutor9.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor9.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor14.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean20 = strBuilder18.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('#', (int) (short) 1);
        int int30 = strBuilder27.lastIndexOf('4', 10);
        char[] charArray37 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, "");
        java.lang.Object[] objArray40 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder27.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean45 = strBuilder43.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendSeparator('#', (int) (short) 1);
        int int55 = strBuilder52.lastIndexOf('4', 10);
        char[] charArray62 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, "");
        java.lang.Object[] objArray65 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder52.appendAll(objArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder52.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer70 = strBuilder52.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder27.appendln(stringBuffer70);
        boolean boolean72 = strSubstitutor16.replaceIn(stringBuffer70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder1.appendln(stringBuffer70);
        boolean boolean75 = strBuilder1.endsWith("hi!true#4#a4#4");
        boolean boolean77 = strBuilder1.endsWith("hi!1.0\nfalse\n#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder1.append((float) 20L);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.insert(153, 19);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 153");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(wildcardStrLookup10);
        org.junit.Assert.assertNotNull(strSubstitutor12);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(stringBuffer70);
        org.junit.Assert.assertEquals(stringBuffer70.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test04233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04233");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher15, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor33 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, strMatcher28, strMatcher31, '$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor34 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor38 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, "StrTokenizer[not tokenized yet]", "java.io.IOException: h100.0i!1.0\n#4#a4#19\n", 't');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor39 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.junit.Assert.assertNotNull(strStrLookup0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher31);
    }

    @Test
    public void test04234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04234");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!1.0\nfalse\n#4#a4");
    }

    @Test
    public void test04235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04235");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.ensureCapacity(13);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[not");
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray28);
        int int39 = strMatcher21.isMatch(charArray28, (int) '0', 90, (int) '#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder18.insert(109, charArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 109");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test04236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04236");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.lang.String str5 = properties1.toString();
        java.lang.Object obj8 = properties1.setProperty("StrTokenizer[not tokenized yet]", "h!true#4#a4#false");
        java.lang.String str11 = properties1.getProperty("0\n#4#", "r");
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "r" + "'", str11, "r");
    }

    @Test
    public void test04237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04237");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder6.deleteCharAt(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder6.setNewLineText("StrTokenizer[not tokenized yet]10");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder6.insert(32, (float) 3L);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test04238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04238");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        int int8 = strBuilder1.lastIndexOf('#', (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendNull();
        int int10 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((long) (byte) 1);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        java.util.Enumeration<?> wildcardEnumeration16 = properties14.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties14.entrySet();
        java.util.Properties properties18 = new java.util.Properties(properties14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder23.appendln(charArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder21.appendln(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder21.replace(strMatcher40, "hi!", (int) (short) 10, (int) 'a', (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendFixedWidthPadLeft((int) (short) -1, (int) (byte) 100, '#');
        java.io.Writer writer50 = strBuilder49.asWriter();
        java.lang.Object obj51 = properties18.get((java.lang.Object) writer50);
        java.lang.String str52 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strBuilder9, properties18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties18.entrySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 35 + "'", int10 == 35);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(wildcardEnumeration16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(writer50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!1.0\n1" + "'", str52, "hi!1.0\n1");
        org.junit.Assert.assertNotNull(objEntrySet53);
    }

    @Test
    public void test04239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04239");
        java.io.IOException iOException2 = new java.io.IOException("#\n");
        java.io.IOException iOException3 = new java.io.IOException("0\n#4#", (java.lang.Throwable) iOException2);
        java.lang.Throwable throwable5 = null;
        java.io.IOException iOException6 = new java.io.IOException("", throwable5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException8.getSuppressed();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties11.clear();
        properties11.clear();
        java.lang.Throwable throwable16 = null;
        java.io.IOException iOException17 = new java.io.IOException("", throwable16);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        boolean boolean19 = properties11.containsValue((java.lang.Object) iOException17);
        iOException8.addSuppressed((java.lang.Throwable) iOException17);
        iOException3.addSuppressed((java.lang.Throwable) iOException17);
        java.lang.String str22 = iOException17.toString();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "java.io.IOException: " + "'", str22, "java.io.IOException: ");
    }

    @Test
    public void test04240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04240");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        boolean boolean12 = strTokenizer11.isEmptyTokenAsNull();
        int int13 = strTokenizer11.previousIndex();
        java.util.List<java.lang.String> strList14 = strTokenizer11.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer11.getDelimiterMatcher();
        boolean boolean16 = strTokenizer11.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer11.setIgnoredChar('1');
        java.util.List<java.lang.String> strList19 = strTokenizer11.getTokenList();
        boolean boolean20 = strTokenizer11.hasNext();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test04241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04241");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean24 = strBuilder22.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendln((float) 1L);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        java.util.List<java.lang.String> strList39 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray44 = strBuilder43.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer20.reset(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, '$', 'a');
        boolean boolean50 = strTokenizer49.hasNext();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj52 = properties51.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher63, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder54.appendln(charArray61);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray61);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher71, strMatcher72);
        java.lang.Object obj74 = properties51.remove((java.lang.Object) strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer49.setQuoteMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.reset("java.io.IOException: ");
        java.util.List<java.lang.String> strList78 = strTokenizer77.getTokenList();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "{}");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strList78);
    }

    @Test
    public void test04242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04242");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor2 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = strSubstitutor2.replace("hi!1.0\nfalse\n#4#a4#13\n", 39, (int) 'h');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strStrLookup0);
    }

    @Test
    public void test04243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04243");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties0.entrySet();
        properties0.clear();
        java.io.PrintStream printStream5 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEntrySet3);
    }

    @Test
    public void test04244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04244");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        int int36 = strBuilder19.lastIndexOf(strMatcher33, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.append((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteAll('4');
        java.lang.String str45 = strBuilder42.midString((int) (short) 0, 13);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!true##a#35" + "'", str45, "hi!true##a#35");
    }

    @Test
    public void test04245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04245");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup5 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str7 = strStrLookup5.lookup("{}");
        strSubstitutor1.setVariableResolver(strStrLookup5);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln(false);
        int int17 = strBuilder16.length();
        int int20 = strBuilder16.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean24 = strBuilder22.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendln((float) 1L);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        java.util.List<java.lang.String> strList39 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray44 = strBuilder43.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.insert(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder16.appendln(strBuilder50, 10, 0);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup54 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor55 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup54);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup56 = strSubstitutor55.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor58 = strSubstitutor55.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup59 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str61 = strStrLookup59.lookup("{}");
        strSubstitutor55.setVariableResolver(strStrLookup59);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher72, strMatcher74);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor78 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup59, strMatcher63, strMatcher76, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder50.deleteAll(strMatcher63);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor80 = strSubstitutor1.setVariableSuffixMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup81 = strSubstitutor80.getVariableResolver();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strStrLookup5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 13 + "'", int17 == 13);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(wildcardStrLookup56);
        org.junit.Assert.assertNotNull(strSubstitutor58);
        org.junit.Assert.assertNotNull(strStrLookup59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strSubstitutor80);
        org.junit.Assert.assertNotNull(wildcardStrLookup81);
    }

    @Test
    public void test04246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04246");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        java.util.Set<java.lang.Object> objSet37 = properties1.keySet();
        java.util.Properties properties38 = new java.util.Properties(properties1);
        java.util.Enumeration<?> wildcardEnumeration39 = properties38.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties38.elements();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNotNull(objEnumeration40);
    }

    @Test
    public void test04247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04247");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        java.lang.String str61 = properties20.getProperty("#4a#4#\n0.1!i0.001h");
        java.util.Properties properties62 = new java.util.Properties(properties20);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties20.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties20.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties20.keys();
        java.util.Properties properties66 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties20.keys();
        java.util.Set<java.lang.Object> objSet68 = properties20.keySet();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objSet68);
    }

    @Test
    public void test04248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04248");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.replaceAll('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder54.append("hi!\na");
        java.lang.String str65 = strBuilder54.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder54.deleteCharAt((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder54.delete((int) (short) 0, (int) ' ');
        boolean boolean72 = strBuilder70.endsWith("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.append("#4a#4#\n0.1!i0.001h$$$$$hi!\n#hi!100\naaaaaaaaaaa", 5, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder70.appendln("#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder70.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder70.append((long) 17);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceAll('4', 'a');
        int int87 = strBuilder81.lastIndexOf('$', 39);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test04249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04249");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        boolean boolean16 = strTokenizer15.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setQuoteChar('#');
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        java.lang.Object obj35 = properties1.put((java.lang.Object) '#', (java.lang.Object) strTokenizer31);
        boolean boolean36 = properties1.isEmpty();
        java.lang.Object obj37 = properties1.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi!#4");
        java.lang.Object obj40 = properties1.get((java.lang.Object) strMatcher39);
        boolean boolean42 = properties1.containsKey((java.lang.Object) 35);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        properties44.clear();
        java.util.Enumeration<?> wildcardEnumeration46 = properties44.propertyNames();
        boolean boolean48 = properties44.containsKey((java.lang.Object) (-1));
        java.util.Set<java.lang.Object> objSet49 = properties44.keySet();
        java.lang.String str50 = properties44.toString();
        java.util.Collection<java.lang.Object> objCollection51 = properties44.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties44.entrySet();
        boolean boolean53 = properties1.equals((java.lang.Object) properties44);
        properties44.clear();
        properties44.clear();
        java.util.Enumeration<?> wildcardEnumeration56 = properties44.propertyNames();
        java.io.OutputStream outputStream57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties44.store(outputStream57, "\n100aaaaaaa");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "{#=StrTokenizer[not tokenized yet]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{#=StrTokenizer[not tokenized yet]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{#=StrTokenizer[not tokenized yet]}");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{}" + "'", str50, "{}");
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration56);
    }

    @Test
    public void test04250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04250");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator('#', (int) (short) 1);
        int int19 = strBuilder16.lastIndexOf('4', 10);
        char[] charArray26 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, "");
        java.lang.Object[] objArray29 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder16.appendAll(objArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder16.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer34 = strBuilder16.toStringBuffer();
        java.lang.String str35 = strBuilder16.getNewLineText();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup36 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor37 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup36);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup38 = strSubstitutor37.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor40 = strSubstitutor37.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer41 = null;
        boolean boolean42 = strSubstitutor37.replaceIn(stringBuffer41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strSubstitutor37.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strSubstitutor37.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder16.appendFixedWidthPadLeft((java.lang.Object) strSubstitutor37, (-1), 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder1.append((java.lang.CharSequence) strBuilder16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder16.insert(104, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 104");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(stringBuffer34);
        org.junit.Assert.assertEquals(stringBuffer34.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(wildcardStrLookup38);
        org.junit.Assert.assertNotNull(strSubstitutor40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test04251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04251");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("0.0i!1.0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.append(17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.append('i');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean13 = strBuilder11.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.append(true);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        boolean boolean28 = strTokenizer27.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.deleteFirst("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendSeparator('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln('1');
        char[] charArray43 = strBuilder40.toCharArray(0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder1.appendln(charArray43);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "htruei!true#4#a4#false$1\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "htruei!true#4#a4#false$1\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[h, t, r, u, e, i, !, t, r, u, e, #, 4, #, a, 4, #, f, a, l, s, e, $, 1, \n]");
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test04252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04252");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!\n", '$', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setEmptyTokenAsNull(false);
        boolean boolean6 = strTokenizer5.hasNext();
        java.lang.String str7 = strTokenizer5.next();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!\n" + "'", str7, "hi!\n");
    }

    @Test
    public void test04253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04253");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.appendln((java.lang.Object) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln("");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.delete((int) ' ', 83);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
    }

    @Test
    public void test04254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04254");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean10 = strBuilder8.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.append(true);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher21, strMatcher23);
        boolean boolean25 = strTokenizer24.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder8.appendAll((java.util.Iterator<java.lang.String>) strTokenizer24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt((int) (byte) 1);
        java.lang.String str31 = strSubstitutor6.replace(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean56 = strSubstitutor6.replaceIn(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln("java.io.IOException: StrTokenizer[#4#a4#]", 0, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.replaceAll("", "100.0i!1.0\n#4#a4#hi!1.0\nfalse\n#48");
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher72, strMatcher74);
        java.util.List<java.lang.String> strList76 = strTokenizer75.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder55.appendAll((java.lang.Iterable<java.lang.String>) strList76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder55.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder55.deleteFirst('$');
        java.util.stream.IntStream intStream81 = strBuilder80.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.deleteFirst('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder83.trim();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "h!true#4#a4#false" + "'", str31, "h!true#4#a4#false");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(intStream81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test04255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04255");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer21, "0.0i!1.0\n#4#a4#\n");
        java.lang.String str26 = strBuilder16.midString((int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder28.appendln(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.trim();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup52 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str54 = strStrLookup52.lookup("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendln((java.lang.Object) "{}");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strBuilder51.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder16.appendAll((java.util.Iterator<java.lang.String>) strTokenizer58);
        java.io.Reader reader60 = strBuilder59.asReader();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strBuilder59.asTokenizer();
        java.lang.String str62 = strTokenizer61.next();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strStrLookup52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!#4#a4#" + "'", str62, "hi!#4#a4#");
    }

    @Test
    public void test04256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04256");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean4 = strBuilder2.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator('#', (int) (short) 1);
        int int14 = strBuilder11.lastIndexOf('4', 10);
        char[] charArray21 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "");
        java.lang.Object[] objArray24 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder11.appendAll(objArray24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean29 = strBuilder27.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendSeparator('#', (int) (short) 1);
        int int39 = strBuilder36.lastIndexOf('4', 10);
        char[] charArray46 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, "");
        java.lang.Object[] objArray49 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder36.appendAll(objArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder36.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer54 = strBuilder36.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder11.appendln(stringBuffer54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder11.append((float) 6);
        boolean boolean59 = strBuilder57.contains("#a4#false\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("0\n#4#a4#\n");
        int int62 = strBuilder57.indexOf(strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("r", strMatcher61);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(stringBuffer54);
        org.junit.Assert.assertEquals(stringBuffer54.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 5 + "'", int62 == 5);
    }

    @Test
    public void test04257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04257");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        char char5 = strSubstitutor4.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        boolean boolean11 = strBuilder7.contains(strMatcher10);
        boolean boolean13 = strBuilder7.startsWith("StrTokenizer[not tokenized yet]");
        boolean boolean16 = strSubstitutor4.replaceIn(strBuilder7, (int) (short) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean20 = strBuilder18.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.append(true);
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher31, strMatcher33);
        boolean boolean35 = strTokenizer34.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append(false);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher47, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray45);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray45);
        int int54 = strBuilder38.indexOf(strMatcher52, (int) (short) 0);
        int int56 = strBuilder7.lastIndexOf(strMatcher52, 13);
        java.lang.String str59 = strBuilder7.midString(22, 34);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + '$' + "'", char5 == '$');
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test04258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04258");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        java.io.Writer writer21 = strBuilder2.asWriter();
        writer21.flush();
        writer21.flush();
        writer21.write("#4a#4#\n0.1!i0.001h");
        java.io.Writer writer27 = writer21.append('i');
        java.io.Writer writer29 = writer21.append('4');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertNotNull(writer27);
        org.junit.Assert.assertNotNull(writer29);
    }

    @Test
    public void test04259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04259");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.setCharAt((int) (byte) 0, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", '$', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset("##4");
        java.lang.String str14 = strTokenizer11.nextToken();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup15 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup15, "hi!\n100aaaaaaa52.0\n", "hi!1.0\nfalse\n#", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strSubstitutor19.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer11.setQuoteMatcher(strMatcher20);
        boolean boolean22 = strTokenizer11.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder4.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer11, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer11.reset("h100.0i!1.0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup27 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor28 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup27);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup29 = strSubstitutor28.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor31 = strSubstitutor28.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer32 = null;
        boolean boolean33 = strSubstitutor28.replaceIn(stringBuffer32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strSubstitutor28.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = strSubstitutor28.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor38 = strSubstitutor36.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher52, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder43.appendln(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder41.appendln(charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder41.replace(strMatcher60, "hi!", (int) (short) 10, (int) 'a', (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.appendFixedWidthPadLeft((int) (short) -1, (int) (byte) 100, '#');
        java.lang.String str72 = strSubstitutor38.replace(strBuilder69, 10, (int) (short) 10);
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        properties74.clear();
        java.util.Enumeration<?> wildcardEnumeration76 = properties74.propertyNames();
        char[] charArray83 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, strMatcher85, strMatcher87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getQuoteMatcher();
        boolean boolean90 = properties74.containsValue((java.lang.Object) strMatcher89);
        int int92 = strBuilder69.indexOf(strMatcher89, 60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer26.setTrimmerMatcher(strMatcher89);
        boolean boolean94 = strTokenizer26.hasNext();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "##4" + "'", str14, "##4");
        org.junit.Assert.assertNotNull(strStrLookup15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNull(wildcardStrLookup29);
        org.junit.Assert.assertNotNull(strSubstitutor31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strSubstitutor36);
        org.junit.Assert.assertNotNull(strSubstitutor38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\n#########" + "'", str72, "\n#########");
        org.junit.Assert.assertNotNull(wildcardEnumeration76);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test04260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04260");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        char char5 = strSubstitutor1.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.setNullText("hi!\na");
        java.lang.String str22 = strSubstitutor1.replace(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNewLine();
        java.util.stream.IntStream intStream26 = strBuilder25.chars();
        boolean boolean27 = strBuilder21.equals((java.lang.Object) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.reverse();
        // The following exception was thrown during execution in test generation
        try {
            char char30 = strBuilder28.charAt(36);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 36");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + '$' + "'", char5 == '$');
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str22, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test04261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04261");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix('a');
        strSubstitutor4.setEnableSubstitutionInVariables(false);
        char char7 = strSubstitutor4.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append('#');
        int int17 = strBuilder15.lastIndexOf("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.append(3);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup20 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup20);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup22 = strSubstitutor21.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor24 = strSubstitutor21.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup25 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str27 = strStrLookup25.lookup("{}");
        strSubstitutor21.setVariableResolver(strStrLookup25);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor44 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup25, strMatcher29, strMatcher42, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher55, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder46.appendln(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer66, "0.0i!1.0\n#4#a4#\n");
        java.lang.StringBuffer stringBuffer69 = strBuilder61.toStringBuffer();
        java.lang.String str72 = strSubstitutor44.replace(stringBuffer69, 0, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder19.appendln(stringBuffer69);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = strSubstitutor4.replace(stringBuffer69, (int) '#', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + char7 + "' != '" + '$' + "'", char7 == '$');
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(wildcardStrLookup22);
        org.junit.Assert.assertNotNull(strSubstitutor24);
        org.junit.Assert.assertNotNull(strStrLookup25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(stringBuffer69);
        org.junit.Assert.assertEquals(stringBuffer69.toString(), "hi!#4#a4#\na");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!#4" + "'", str72, "hi!#4");
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test04262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04262");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("#-1");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("Str10oke", strMatcher2);
        org.junit.Assert.assertNotNull(strMatcher2);
    }

    @Test
    public void test04263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04263");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor1.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor1.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup10 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup11 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup11);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup13 = strSubstitutor12.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor15 = strSubstitutor12.setVariablePrefix("hi!");
        char char16 = strSubstitutor12.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean20 = strBuilder18.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.setNullText("hi!\na");
        java.lang.String str33 = strSubstitutor12.replace(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.delete(1, (int) (byte) 1);
        java.lang.String str37 = strSubstitutor1.replace(strBuilder32);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strSubstitutor1.getVariablePrefixMatcher();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNull(wildcardStrLookup10);
        org.junit.Assert.assertNull(wildcardStrLookup13);
        org.junit.Assert.assertNotNull(strSubstitutor15);
        org.junit.Assert.assertTrue("'" + char16 + "' != '" + '$' + "'", char16 == '$');
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str33, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str37, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strMatcher38);
    }

    @Test
    public void test04264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04264");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.appendNewLine();
        char[] charArray11 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean15 = strBuilder13.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.append(true);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer29);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher40, strMatcher42);
        boolean boolean44 = strBuilder13.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher40);
        char[] charArray49 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean53 = strBuilder51.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.append(true);
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher64, strMatcher66);
        boolean boolean68 = strTokenizer67.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder51.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        char[] charArray76 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher78, strMatcher80);
        boolean boolean82 = strBuilder51.contains(strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher78);
        boolean boolean85 = properties1.remove((java.lang.Object) strBuilder7, (java.lang.Object) strTokenizer84);
        java.util.Enumeration<?> wildcardEnumeration86 = properties1.propertyNames();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration86);
    }

    @Test
    public void test04265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04265");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean5 = strBuilder3.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.append(true);
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher16, strMatcher18);
        boolean boolean20 = strTokenizer19.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.appendAll((java.util.Iterator<java.lang.String>) strTokenizer19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        properties23.clear();
        java.util.Enumeration<?> wildcardEnumeration25 = properties23.propertyNames();
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher34, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        boolean boolean39 = properties23.containsValue((java.lang.Object) strMatcher38);
        int int41 = strBuilder3.indexOf(strMatcher38, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!1.013.0", strMatcher1, strMatcher38);
        java.lang.String[] strArray43 = strTokenizer42.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer42.setQuoteMatcher(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strTokenizer45);
    }

    @Test
    public void test04266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04266");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("0.0i!1.0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.append(17);
        boolean boolean5 = strBuilder3.startsWith("{StrTokenizer[not=0                                                 }");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher18, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder9.appendln(charArray16);
        java.io.Reader reader25 = strBuilder9.asReader();
        reader25.reset();
        reader25.mark((int) (short) -1);
        boolean boolean29 = reader25.ready();
        reader25.close();
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        int int44 = reader25.read(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder6.insert(278, charArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 278");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "hi!#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "hi!#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[h, i, !, #, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 6 + "'", int44 == 6);
        org.junit.Assert.assertNotNull(strTokenizer45);
    }

    @Test
    public void test04267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04267");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        boolean boolean4 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties1.elements();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher16, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendln(charArray14);
        java.io.Reader reader23 = strBuilder7.asReader();
        reader23.reset();
        properties1.load(reader23);
        java.lang.Object obj26 = properties1.clone();
        properties1.clear();
        java.util.Set<java.lang.Object> objSet28 = properties1.keySet();
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        boolean boolean41 = strTokenizer40.isEmptyTokenAsNull();
        int int42 = strTokenizer40.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer40.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean48 = strBuilder46.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator('#', (int) (short) 1);
        int int58 = strBuilder55.lastIndexOf('4', 10);
        char[] charArray59 = strBuilder55.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer44.reset(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray59);
        boolean boolean63 = properties1.containsValue((java.lang.Object) charArray59);
        java.io.PrintWriter printWriter64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printWriter64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{hi!#4#a4#=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{hi!#4#a4#=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{hi!#4#a4#=}");
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, #]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test04268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04268");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        int int14 = strBuilder11.indexOf(' ', (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln("\n#########");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendSeparator('$', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("hi!1.0\n#false\n\n", "hi!\na ");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test04269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04269");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strSubstitutor1.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariableSuffix(' ');
        strSubstitutor1.setEscapeChar('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor1.setVariableSuffix('a');
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup9 = strSubstitutor1.getVariableResolver();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNull(wildcardStrLookup9);
    }

    @Test
    public void test04270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04270");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        char char5 = strSubstitutor1.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.setNullText("hi!\na");
        java.lang.String str22 = strSubstitutor1.replace(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNewLine();
        java.util.stream.IntStream intStream26 = strBuilder25.chars();
        boolean boolean27 = strBuilder21.equals((java.lang.Object) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean31 = strBuilder29.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.replaceFirst('#', '4');
        char[] charArray42 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder25.append(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        java.lang.String str49 = strTokenizer48.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer48.setQuoteChar('0');
        boolean boolean53 = strTokenizer52.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer52.add("{}");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + '$' + "'", char5 == '$');
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str22, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!1.0\nfalse\n4" + "'", str49, "hi!1.0\nfalse\n4");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test04271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04271");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.append((long) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendFixedWidthPadRight((int) '4', 13, '4');
        java.lang.String str28 = strBuilder27.getNewLineText();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test04272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04272");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('4', 0);
        java.io.Reader reader28 = strBuilder24.asReader();
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        boolean boolean41 = strTokenizer40.isEmptyTokenAsNull();
        int int42 = strTokenizer40.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer40.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean48 = strBuilder46.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator('#', (int) (short) 1);
        int int58 = strBuilder55.lastIndexOf('4', 10);
        char[] charArray59 = strBuilder55.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer44.reset(charArray59);
        int int63 = reader28.read(charArray59, 7, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, "i!\n#4#a4#\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, 'a', '4');
        boolean boolean69 = strTokenizer68.hasNext();
        boolean boolean70 = strTokenizer68.hasNext();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup71 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor72 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup71);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup73 = strSubstitutor72.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor75 = strSubstitutor72.setVariablePrefix("hi!");
        char char76 = strSubstitutor75.getEscapeChar();
        char[] charArray77 = null;
        java.lang.String str80 = strSubstitutor75.replace(charArray77, 1, 16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor82 = strSubstitutor75.setVariableSuffix('t');
        char[] charArray89 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray89, strMatcher91, strMatcher93);
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strTokenizer94.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher96 = strTokenizer94.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor97 = strSubstitutor82.setVariablePrefixMatcher(strMatcher96);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = strTokenizer68.setDelimiterMatcher(strMatcher96);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, #]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(wildcardStrLookup73);
        org.junit.Assert.assertNotNull(strSubstitutor75);
        org.junit.Assert.assertTrue("'" + char76 + "' != '" + '$' + "'", char76 == '$');
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(strSubstitutor82);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertNotNull(strMatcher96);
        org.junit.Assert.assertNotNull(strSubstitutor97);
        org.junit.Assert.assertNotNull(strTokenizer98);
    }

    @Test
    public void test04273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04273");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        boolean boolean19 = reader17.markSupported();
        boolean boolean20 = reader17.markSupported();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean24 = strBuilder22.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendln((float) 1L);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        java.util.List<java.lang.String> strList39 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray44 = strBuilder43.toCharArray();
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher53, strMatcher57);
        int int61 = reader17.read(charArray44, 8, (int) (short) 1);
        long long63 = reader17.skip((long) '$');
        boolean boolean64 = reader17.ready();
        int int65 = reader17.read();
        long long67 = reader17.skip((long) 10);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "h100.0i!h.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "h100.0i!h.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[h, 1, 0, 0, ., 0, i, !, h, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 9L + "'", long63 == 9L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
    }

    @Test
    public void test04274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04274");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.appendln((java.lang.Object) (short) 100);
        java.lang.String str5 = strBuilder4.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendln((int) 'a');
        java.lang.String str9 = strBuilder4.rightString(37);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!100\n97\n" + "'", str9, "hi!100\n97\n");
    }

    @Test
    public void test04275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04275");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        java.lang.Object obj14 = properties1.remove((java.lang.Object) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher25, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder16.appendln(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendSeparator('a', 10);
        java.util.Properties properties35 = new java.util.Properties();
        boolean boolean36 = strBuilder31.equals((java.lang.Object) properties35);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher60, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray58);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder51.appendln(charArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean74 = properties35.remove((java.lang.Object) charArray43, (java.lang.Object) strBuilder69);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties35.keys();
        boolean boolean76 = properties35.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.lang.String str78 = properties1.toString();
        java.util.Set<java.lang.Object> objSet79 = properties1.keySet();
        int int80 = properties1.size();
        properties1.clear();
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "{}" + "'", str78, "{}");
        org.junit.Assert.assertNotNull(objSet79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test04276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04276");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        boolean boolean12 = strTokenizer11.isEmptyTokenAsNull();
        int int13 = strTokenizer11.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer11.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer11.setDelimiterString("\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = strTokenizer18.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
    }

    @Test
    public void test04277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04277");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix('a');
        strSubstitutor1.setEnableSubstitutionInVariables(true);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor1.setVariablePrefix('1');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor1.setVariableSuffix("hi!1.013.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendln((double) '4');
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        boolean boolean32 = strTokenizer31.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList33 = strTokenizer31.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer31.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder12.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer37, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer40 = strBuilder12.asWriter();
        writer40.write((int) ' ');
        writer40.write("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean48 = strBuilder46.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(false);
        int int53 = strBuilder52.length();
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher62, strMatcher64);
        java.util.List<java.lang.String> strList66 = strTokenizer65.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder52.appendAll((java.lang.Iterable<java.lang.String>) strList66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.appendSeparator("{}", (int) (short) -1);
        int int73 = strBuilder67.lastIndexOf(' ', 7);
        java.io.Writer writer74 = writer40.append((java.lang.CharSequence) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder67.appendln(13);
        java.lang.String str77 = strSubstitutor10.replace(strBuilder76);
        strSubstitutor10.setEnableSubstitutionInVariables(false);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(writer40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 13 + "'", int53 == 13);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(writer74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!1.0\nfalse\n#4#a4#13\n" + "'", str77, "hi!1.0\nfalse\n#4#a4#13\n");
    }

    @Test
    public void test04278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04278");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        java.lang.String str61 = properties20.getProperty("#4a#4#\n0.1!i0.001h");
        java.util.Properties properties62 = new java.util.Properties(properties20);
        properties62.clear();
        java.util.Collection<java.lang.Object> objCollection64 = properties62.values();
        java.io.PrintStream printStream65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties62.list(printStream65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(objCollection64);
    }

    @Test
    public void test04279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04279");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", "hi!1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean6 = strBuilder4.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.appendln((float) 1L);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder4.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray26 = strBuilder25.toCharArray();
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher35, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer2.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setIgnoreEmptyTokens(true);
        java.lang.String[] strArray44 = strTokenizer43.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer43.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer43.setDelimiterChar('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean52 = strBuilder50.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.replaceFirst('#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer64.reset();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup66 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor67 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup66);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup68 = strSubstitutor67.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor70 = strSubstitutor67.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup71 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str73 = strStrLookup71.lookup("{}");
        strSubstitutor67.setVariableResolver(strStrLookup71);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray82 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, strMatcher84, strMatcher86);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer87.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor90 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup71, strMatcher75, strMatcher88, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer64.setDelimiterMatcher(strMatcher88);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder56.deleteAll(strMatcher88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer48.setQuoteMatcher(strMatcher88);
        java.lang.String[] strArray94 = strTokenizer48.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer48.setIgnoredChar('i');
        java.lang.String str97 = strTokenizer96.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNull(wildcardStrLookup68);
        org.junit.Assert.assertNotNull(strSubstitutor70);
        org.junit.Assert.assertNotNull(strStrLookup71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "StrTokenizer[StrTokenzer[not tokenzed yet]]" + "'", str97, "StrTokenizer[StrTokenzer[not tokenzed yet]]");
    }

    @Test
    public void test04280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04280");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((double) '4');
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        boolean boolean21 = strTokenizer20.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList22 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer20.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer29 = strBuilder1.asWriter();
        writer29.write((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        java.io.Writer writer58 = writer29.append((java.lang.CharSequence) strBuilder51, 0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.append('#');
        java.io.Writer writer67 = writer29.append((java.lang.CharSequence) strBuilder61);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder61.append("e\nhi!1.0\nfalse\n4\n", 13, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(writer58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(writer67);
    }

    @Test
    public void test04281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04281");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("", throwable2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray5 = iOException4.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException("StrTokenizer[#4#a4#]", (java.lang.Throwable) iOException4);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.String str8 = iOException7.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: " + "'", str8, "java.io.IOException: java.io.IOException: java.io.IOException: ");
    }

    @Test
    public void test04282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04282");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        int int36 = strBuilder19.lastIndexOf(strMatcher33, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.append((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder19.ensureCapacity((int) (short) -1);
        char[] charArray41 = strBuilder19.toCharArray();
        java.util.Iterator<java.lang.String> strItor42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder19.appendWithSeparators(strItor42, "#");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((float) 97);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strBuilder44.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setEmptyTokenAsNull(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer47.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "hi!true#4#a4#35");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "hi!true#4#a4#35");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[h, i, !, t, r, u, e, #, 4, #, a, 4, #, 3, 5]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
    }

    @Test
    public void test04283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04283");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenzer[not tokenzed yet]");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test04284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04284");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties1.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties1.elements();
        int int9 = properties1.size();
        java.lang.String str10 = properties1.toString();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
    }

    @Test
    public void test04285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04285");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder6.replaceAll(strMatcher74, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.insert(4, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.replaceFirst("", "1.0\nf");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder82.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.appendln((float) 46);
        java.lang.Class<?> wildcardClass89 = strBuilder86.getClass();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test04286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04286");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!\na");
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test04287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04287");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet3 = properties1.keySet();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties5.clear();
        properties5.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        java.util.Enumeration<?> wildcardEnumeration13 = properties11.propertyNames();
        boolean boolean15 = properties11.containsKey((java.lang.Object) (-1));
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        java.util.List<java.lang.String> strList28 = strTokenizer27.getTokenList();
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray35);
        java.lang.Object obj43 = properties11.getOrDefault((java.lang.Object) strList28, (java.lang.Object) charArray35);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup44 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor45 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup44);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup46 = strSubstitutor45.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor48 = strSubstitutor45.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = strSubstitutor45.setVariableSuffix('#');
        java.lang.StringBuffer stringBuffer51 = null;
        java.lang.String str54 = strSubstitutor45.replace(stringBuffer51, (-1), 0);
        java.lang.String str56 = strSubstitutor45.replace("StrTokenizer[not tokenized yet]");
        java.lang.Object obj57 = properties1.getOrDefault((java.lang.Object) charArray35, (java.lang.Object) strSubstitutor45);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor59 = strSubstitutor45.setVariableSuffix(' ');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor61 = strSubstitutor59.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup62 = strSubstitutor61.getVariableResolver();
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(wildcardStrLookup46);
        org.junit.Assert.assertNotNull(strSubstitutor48);
        org.junit.Assert.assertNotNull(strSubstitutor50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str56, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(strSubstitutor59);
        org.junit.Assert.assertNotNull(strSubstitutor61);
        org.junit.Assert.assertNull(wildcardStrLookup62);
    }

    @Test
    public void test04288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04288");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj1 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean5 = strBuilder3.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(false);
        int int10 = strBuilder9.length();
        int int13 = strBuilder9.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.deleteCharAt(7);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        properties17.clear();
        java.lang.String str19 = properties17.toString();
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher41, strMatcher43);
        char[] charArray51 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, "");
        boolean boolean54 = properties17.replace((java.lang.Object) strMatcher32, (java.lang.Object) charArray39, (java.lang.Object) charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.appendln((double) '4');
        char[] charArray71 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher73, strMatcher75);
        boolean boolean77 = strTokenizer76.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList78 = strTokenizer76.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer76.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer80.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder57.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer82, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer85 = strBuilder57.asWriter();
        writer85.write((int) ' ');
        boolean boolean88 = properties17.remove((java.lang.Object) "hi!1.0\nfalse\n#", (java.lang.Object) writer85);
        boolean boolean89 = properties0.remove((java.lang.Object) strBuilder15, (java.lang.Object) boolean88);
        java.io.Writer writer90 = strBuilder15.asWriter();
        boolean boolean92 = strBuilder15.endsWith("a");
        boolean boolean94 = strBuilder15.contains('t');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder15.insert(70, 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 70");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertEquals(obj1.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj1), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj1), "{}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 13 + "'", int10 == 13);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{}" + "'", str19, "{}");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(writer85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(writer90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test04289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04289");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        int int15 = strBuilder10.indexOf("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.appendSeparator("#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append(35);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.replaceAll("StrToken", "T10okenizer[#4#a4#]100aaaaaaaa#4a#4#\n0.1!i0.001h\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.setNullText("hi!#4#a4##");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test04290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04290");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        java.util.Collection<java.lang.Object> objCollection6 = properties1.values();
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean22 = strBuilder20.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(false);
        int int27 = strBuilder26.length();
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        java.util.List<java.lang.String> strList40 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder26.appendAll((java.lang.Iterable<java.lang.String>) strList40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator("{}", (int) (short) -1);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strTokenizer56.isEmptyTokenAsNull();
        int int58 = strTokenizer56.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer56.setTrimmerMatcher(strMatcher59);
        boolean boolean61 = properties1.replace((java.lang.Object) strMatcher15, (java.lang.Object) (short) -1, (java.lang.Object) strTokenizer60);
        java.util.Properties properties62 = new java.util.Properties(properties1);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean66 = strBuilder64.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.append(true);
        char[] charArray75 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher77, strMatcher79);
        boolean boolean81 = strTokenizer80.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder64.appendAll((java.util.Iterator<java.lang.String>) strTokenizer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder82.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder82.replaceAll("", "hi!");
        boolean boolean92 = strBuilder90.startsWith("h!true#4#a4#false");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder90.deleteCharAt(16);
        char[] charArray95 = strBuilder94.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder94.replaceFirst("hi!true#4#a4#-1.0\ni", "hi!#4#a4#\nhi!1.0\nfalse\n#java.io.IOException: java.io.IOException: java.io.IOException: \n");
        boolean boolean99 = properties1.equals((java.lang.Object) strBuilder94);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 13 + "'", int27 == 13);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray95), "htruei!true#4#a4false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray95), "htruei!true#4#a4false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray95), "[h, t, r, u, e, i, !, t, r, u, e, #, 4, #, a, 4, f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test04291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04291");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        properties20.clear();
        java.lang.String str22 = properties20.toString();
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher31, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getQuoteMatcher();
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher44, strMatcher46);
        char[] charArray54 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, "");
        boolean boolean57 = properties20.replace((java.lang.Object) strMatcher35, (java.lang.Object) charArray42, (java.lang.Object) charArray54);
        int int58 = reader17.read(charArray42);
        long long60 = reader17.skip((long) (byte) 1);
        reader17.reset();
        boolean boolean62 = reader17.ready();
        boolean boolean63 = reader17.markSupported();
        boolean boolean64 = reader17.markSupported();
        int int65 = reader17.read();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "hi!#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "hi!#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[h, i, !, #, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 6 + "'", int58 == 6);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 104 + "'", int65 == 104);
    }

    @Test
    public void test04292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04292");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test04293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04293");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        int int36 = strBuilder19.lastIndexOf(strMatcher33, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.append((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder19.ensureCapacity((int) (short) -1);
        char[] charArray41 = strBuilder19.toCharArray();
        java.util.Iterator<java.lang.String> strItor42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder19.appendWithSeparators(strItor42, "#");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder19.appendFixedWidthPadRight(13, 34, 'i');
        java.io.Writer writer49 = strBuilder19.asWriter();
        // The following exception was thrown during execution in test generation
        try {
            writer49.write("hi!1.0\n#4#a4#", (int) (byte) -1, 39);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "hi!true#4#a4#35");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "hi!true#4#a4#35");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[h, i, !, t, r, u, e, #, 4, #, a, 4, #, 3, 5]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(writer49);
    }

    @Test
    public void test04294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04294");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties7.entrySet();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer12.reset();
        java.lang.String str14 = strTokenizer13.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.appendln((double) '4');
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher34, strMatcher36);
        boolean boolean38 = strTokenizer37.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList39 = strTokenizer37.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer37.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder18.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer43, "StrTokenizer[not tokenized yet]");
        java.lang.Object obj46 = properties7.putIfAbsent((java.lang.Object) strTokenizer13, (java.lang.Object) strTokenizer43);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Set<java.lang.Object> objSet48 = properties7.keySet();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", "#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.setDelimiterString("java.io.IOException: java.io.IOException: ");
        boolean boolean54 = properties7.containsValue((java.lang.Object) strTokenizer53);
        java.io.InputStream inputStream55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.loadFromXML(inputStream55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test04295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04295");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        boolean boolean12 = strTokenizer11.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList13 = strTokenizer11.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer11.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer17.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer17.setIgnoredChar('i');
        boolean boolean22 = strTokenizer17.hasPrevious();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test04296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04296");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        int int9 = strBuilder7.lastIndexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.deleteAll(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln(21);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.ensureCapacity(69);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test04297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04297");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("0.0\njava.io.IOException: java.io.IOEx");
    }

    @Test
    public void test04298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04298");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (short) 1, true);
        boolean boolean26 = strBuilder24.contains("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.append("#4#a4#");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendln("{StrTokenizer[hi!]=StrTokenizer[]}", (int) (byte) 100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test04299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04299");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray29 = strBuilder28.toCharArray();
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher38, strMatcher42);
        java.lang.Object obj44 = properties1.get((java.lang.Object) charArray29);
        java.util.Set<java.lang.Object> objSet45 = properties1.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.appendNewLine();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        properties50.clear();
        properties50.clear();
        properties50.clear();
        java.util.Set<java.lang.String> strSet54 = properties50.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.appendAll((java.lang.Iterable<java.lang.String>) strSet54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteAll("0                                                 ");
        int int59 = strBuilder58.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendln("hi!1.0\nfalse\n#4#a4");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.setNullText("0.0i!1.0\n#4#a4#\n");
        java.lang.Object obj64 = properties1.remove((java.lang.Object) "0.0i!1.0\n#4#a4#\n");
        java.lang.Object obj65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = properties1.get(obj65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 5 + "'", int59 == 5);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNull(obj64);
    }

    @Test
    public void test04300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04300");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        int int11 = strBuilder7.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln((float) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendPadding((int) 't', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.delete(0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test04301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04301");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        char char5 = strSubstitutor4.getEscapeChar();
        char[] charArray6 = null;
        java.lang.String str9 = strSubstitutor4.replace(charArray6, 1, 16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor4.setVariableSuffix('t');
        boolean boolean12 = strSubstitutor4.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup14 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor20 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup14, strMatcher16, strMatcher18, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!\n100aaaaaaa52.0\n", strMatcher18, strMatcher21);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor23 = strSubstitutor4.setVariablePrefixMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("h!true#4#a4#false");
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        java.util.Enumeration<?> wildcardEnumeration29 = properties27.propertyNames();
        boolean boolean31 = properties27.containsKey((java.lang.Object) (-1));
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher40, strMatcher42);
        java.util.List<java.lang.String> strList44 = strTokenizer43.getTokenList();
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray51);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray51);
        java.lang.Object obj59 = properties27.getOrDefault((java.lang.Object) strList44, (java.lang.Object) charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray51);
        int int62 = strMatcher25.isMatch(charArray51, 33);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = strMatcher18.isMatch(charArray51, 11, (int) '4', 23);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + '$' + "'", char5 == '$');
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strSubstitutor23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test04302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04302");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        java.io.Writer writer21 = strBuilder2.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder2.replace(1, 14, "h100.0i!1.0\n#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.insert(3, 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.appendSeparator('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.appendln((double) '4');
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher51, strMatcher53);
        boolean boolean55 = strTokenizer54.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList56 = strTokenizer54.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer54.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder35.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer60, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer63 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean67 = strBuilder65.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder71.replaceFirst('#', '4');
        char[] charArray78 = strBuilder71.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray78);
        writer63.write(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray78);
        boolean boolean86 = strTokenizer85.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder25.appendAll((java.util.Iterator<java.lang.String>) strTokenizer85);
        java.lang.String str89 = strBuilder25.leftString(62);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(writer63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hh1000.0i!1.0\n#4#a4#false\n\nahi!1.0\nfalse\n4" + "'", str89, "hh1000.0i!1.0\n#4#a4#false\n\nahi!1.0\nfalse\n4");
    }

    @Test
    public void test04303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04303");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet3 = properties1.keySet();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties5.clear();
        properties5.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties1.values();
        int int11 = properties1.size();
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.save(outputStream12, "hi!1.0\ni#a4#\n\n#4\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test04304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04304");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.setNullText("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder75.appendFixedWidthPadRight(13, 30, 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.deleteAll("{}");
        java.lang.String str84 = strBuilder79.midString(46, 46);
        int int85 = strBuilder79.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 41 + "'", int85 == 41);
    }

    @Test
    public void test04305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04305");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setQuoteChar('4');
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
    }

    @Test
    public void test04306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04306");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder2.replace(strMatcher21, "hi!", (int) (short) 10, (int) 'a', (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendFixedWidthPadLeft((int) (short) -1, (int) (byte) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendFixedWidthPadLeft(3, 126, 't');
        boolean boolean36 = strBuilder34.contains("6\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.appendln((double) '4');
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher58, strMatcher60);
        boolean boolean62 = strTokenizer61.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList63 = strTokenizer61.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer61.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder42.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer67, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer70 = strBuilder42.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean74 = strBuilder72.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder78.replaceFirst('#', '4');
        char[] charArray85 = strBuilder78.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray85);
        writer70.write(charArray85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer40.reset(charArray85);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder34.insert(17, charArray85, 109, 37);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid offset: 109");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(writer70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strTokenizer91);
    }

    @Test
    public void test04307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04307");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher16, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendln(charArray14);
        java.io.Reader reader23 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.appendFixedWidthPadLeft(1, 3, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.clear();
        int int31 = strBuilder29.lastIndexOf("hi!#4#a4#\na100");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test04308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04308");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        char char5 = strSubstitutor4.getEscapeChar();
        java.lang.StringBuffer stringBuffer6 = null;
        java.lang.String str9 = strSubstitutor4.replace(stringBuffer6, 4, (int) (short) 1);
        java.lang.String str11 = strSubstitutor4.replace("hi!");
        java.lang.String str13 = strSubstitutor4.replace("1.0\nf");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strSubstitutor4.getVariableSuffixMatcher();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + '$' + "'", char5 == '$');
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1.0\nf" + "'", str13, "1.0\nf");
        org.junit.Assert.assertNotNull(strMatcher14);
    }

    @Test
    public void test04309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04309");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.setNullText("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder75.appendFixedWidthPadRight(13, 30, 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.appendln((double) 17);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean85 = strBuilder83.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder83.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder89.appendSeparator('#', (int) (short) 1);
        java.lang.StringBuffer stringBuffer93 = strBuilder89.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder81.appendln(stringBuffer93);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder94.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray98 = strBuilder95.toCharArray((int) 't', 97);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(stringBuffer93);
        org.junit.Assert.assertEquals(stringBuffer93.toString(), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test04310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04310");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendFixedWidthPadRight(16, 11, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.delete((int) (short) 0, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((double) 0L);
        java.lang.String str35 = strBuilder31.rightString((int) '$');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "0.0\n" + "'", str35, "0.0\n");
    }

    @Test
    public void test04311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04311");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert(0, '#');
        boolean boolean29 = strBuilder27.contains("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append("hi!\n#4#a4#\n");
        char[] charArray32 = null;
        char[] charArray33 = strBuilder27.getChars(charArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.appendln((long) 98);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendSeparator("hi!java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.replace(26, 29, "hi!1.0\nfalse\n#4#a4#\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append(false);
        boolean boolean45 = strBuilder43.contains('0');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "##4a#4#\n0.1!i0.001hhi!\n#4#a4#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "##4a#4#\n0.1!i0.001hhi!\n#4#a4#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, #, 4, a, #, 4, #, \n, 0, ., 1, !, i, 0, ., 0, 0, 1, h, h, i, !, \n, #, 4, #, a, 4, #, \n]");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test04312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04312");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean10 = strBuilder8.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.append(true);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher21, strMatcher23);
        boolean boolean25 = strTokenizer24.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder8.appendAll((java.util.Iterator<java.lang.String>) strTokenizer24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt((int) (byte) 1);
        java.lang.String str31 = strSubstitutor6.replace(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder30.append(strBuilder51, 33, 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder51.setNewLineText("h100.0i!");
        int int61 = strBuilder60.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.trim();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "h!true#4#a4#false" + "'", str31, "h!true#4#a4#false");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 63 + "'", int61 == 63);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test04313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04313");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties1.entrySet();
        properties1.clear();
        java.lang.String str46 = properties1.getProperty("java.io.IOException: java.io.IOException: java.io.IOException: ");
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        properties48.clear();
        java.util.Set<java.lang.Object> objSet50 = properties48.keySet();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        properties52.clear();
        properties52.clear();
        properties52.clear();
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.lang.Object obj57 = properties1.remove((java.lang.Object) properties52);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceAll(' ', '#');
        char[] charArray71 = strBuilder67.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder60.insert((int) (byte) 0, charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder60.replaceFirst("#4#a4#", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean79 = strBuilder77.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder83.replaceFirst('#', '4');
        char[] charArray90 = strBuilder83.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder92.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder93.replaceAll(' ', '#');
        boolean boolean97 = properties1.replace((java.lang.Object) strBuilder75, (java.lang.Object) strBuilder83, (java.lang.Object) '#');
        java.io.Writer writer98 = strBuilder75.asWriter();
        writer98.close();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(writer98);
    }

    @Test
    public void test04314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04314");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        java.util.Collection<java.lang.Object> objCollection6 = properties1.values();
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher16, strMatcher18);
        boolean boolean20 = strTokenizer19.isEmptyTokenAsNull();
        int int21 = strTokenizer19.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer19.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setQuoteMatcher(strMatcher25);
        java.lang.String[] strArray27 = strTokenizer26.getTokenArray();
        java.lang.Object obj28 = properties1.remove((java.lang.Object) strTokenizer26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder31.appendln(charArray40);
        java.io.Writer writer50 = strBuilder31.asWriter();
        writer50.flush();
        writer50.write((int) (byte) -1);
        writer50.flush();
        boolean boolean55 = properties1.containsValue((java.lang.Object) writer50);
        java.io.OutputStream outputStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream56, "00.0i!1.0\n#4#a4#true\n16aaaaaaaaa", "r");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(writer50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test04315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04315");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "");
        boolean boolean3 = strTokenizer2.hasPrevious();
        java.lang.String[] strArray4 = strTokenizer2.getTokenArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strArray4);
    }

    @Test
    public void test04316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04316");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str2 = strStrLookup0.lookup("{}");
        java.lang.String str4 = strStrLookup0.lookup("hi!1.0\nfalse\n4");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.appendNewLine();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        properties9.clear();
        properties9.clear();
        java.util.Set<java.lang.String> strSet13 = properties9.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.appendAll((java.lang.Iterable<java.lang.String>) strSet13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder6.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean23 = strBuilder21.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendln((float) 1L);
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher34, strMatcher36);
        boolean boolean38 = strTokenizer37.isEmptyTokenAsNull();
        int int39 = strTokenizer37.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer37.setTrimmerMatcher(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder21.deleteAll(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!\na", strMatcher40);
        int int45 = strBuilder16.lastIndexOf(strMatcher40, (int) (byte) 10);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup47 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor48 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup47);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup49 = strSubstitutor48.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor51 = strSubstitutor48.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer52 = null;
        boolean boolean53 = strSubstitutor48.replaceIn(stringBuffer52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strSubstitutor48.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!1.0\nfalse\n#", strMatcher54);
        char[] charArray56 = null;
        int int60 = strMatcher54.isMatch(charArray56, 30, 17, 0);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor62 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, strMatcher40, strMatcher54, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.insert((int) (byte) 0, (long) (short) 100);
        boolean boolean71 = strSubstitutor62.replaceIn(strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray80 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, strMatcher82, strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray80);
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder73.appendln(charArray80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray80);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer90.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor92 = strSubstitutor62.setVariableSuffixMatcher(strMatcher91);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor94 = strSubstitutor62.setVariablePrefix('a');
        org.junit.Assert.assertNotNull(strStrLookup0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 5 + "'", int45 == 5);
        org.junit.Assert.assertNull(wildcardStrLookup49);
        org.junit.Assert.assertNotNull(strSubstitutor51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strSubstitutor92);
        org.junit.Assert.assertNotNull(strSubstitutor94);
    }

    @Test
    public void test04317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04317");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        int int8 = strBuilder6.lastIndexOf(strMatcher7);
        java.lang.String str11 = strBuilder6.midString(0, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher25, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder16.appendln(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder14.appendln(charArray23);
        java.io.Writer writer33 = strBuilder14.asWriter();
        java.lang.String str35 = strBuilder14.rightString(10);
        int int38 = strBuilder14.indexOf('a', (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder6.append(strBuilder14, 11, (int) 't');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!\n" + "'", str11, "hi!\n");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(writer33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "i!\n#4#a4#\n" + "'", str35, "i!\n#4#a4#\n");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test04318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04318");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!1.0\n#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean5 = strBuilder3.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.setNewLineText("");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup10 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup10);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup12 = strSubstitutor11.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor11.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor11.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor18 = strSubstitutor16.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean22 = strBuilder20.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendSeparator('#', (int) (short) 1);
        int int32 = strBuilder29.lastIndexOf('4', 10);
        char[] charArray39 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, "");
        java.lang.Object[] objArray42 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder29.appendAll(objArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean47 = strBuilder45.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('#', (int) (short) 1);
        int int57 = strBuilder54.lastIndexOf('4', 10);
        char[] charArray64 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, "");
        java.lang.Object[] objArray67 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder54.appendAll(objArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder54.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer72 = strBuilder54.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder29.appendln(stringBuffer72);
        boolean boolean74 = strSubstitutor18.replaceIn(stringBuffer72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder3.appendln(stringBuffer72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder1.appendln(stringBuffer72);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder1.insert(40, 'b');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 40");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(wildcardStrLookup12);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertNotNull(strSubstitutor18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(stringBuffer72);
        org.junit.Assert.assertEquals(stringBuffer72.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test04319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04319");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor6.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('#', (int) (short) 1);
        int int22 = strBuilder19.lastIndexOf('4', 10);
        char[] charArray29 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, "");
        java.lang.Object[] objArray32 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder19.appendAll(objArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean37 = strBuilder35.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator('#', (int) (short) 1);
        int int47 = strBuilder44.lastIndexOf('4', 10);
        char[] charArray54 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, "");
        java.lang.Object[] objArray57 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder44.appendAll(objArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder44.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer62 = strBuilder44.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder19.appendln(stringBuffer62);
        boolean boolean64 = strSubstitutor8.replaceIn(stringBuffer62);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strSubstitutor8.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup66 = strSubstitutor8.getVariableResolver();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(stringBuffer62);
        org.junit.Assert.assertEquals(stringBuffer62.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNull(wildcardStrLookup66);
    }

    @Test
    public void test04320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04320");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet1 = properties0.entrySet();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup3 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup3);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup5 = strSubstitutor4.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor7 = strSubstitutor4.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup8 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str10 = strStrLookup8.lookup("{}");
        strSubstitutor4.setVariableResolver(strStrLookup8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = null;
        boolean boolean13 = strSubstitutor4.replaceIn(strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strBuilder15.asTokenizer();
        java.lang.Object obj22 = properties0.replace((java.lang.Object) strSubstitutor4, (java.lang.Object) strTokenizer21);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup23 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor24 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup23);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup25 = strSubstitutor24.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor27 = strSubstitutor24.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor29 = strSubstitutor24.setVariableSuffix('#');
        java.lang.StringBuffer stringBuffer30 = null;
        java.lang.String str33 = strSubstitutor24.replace(stringBuffer30, (-1), 0);
        java.lang.String str35 = strSubstitutor24.replace("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.appendNewLine();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        properties40.clear();
        properties40.clear();
        java.util.Set<java.lang.String> strSet44 = properties40.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder37.appendAll((java.lang.Iterable<java.lang.String>) strSet44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.setNullText("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean52 = strBuilder50.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.append(true);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher63, strMatcher65);
        boolean boolean67 = strTokenizer66.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder50.appendAll((java.util.Iterator<java.lang.String>) strTokenizer66);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        properties70.clear();
        java.util.Enumeration<?> wildcardEnumeration72 = properties70.propertyNames();
        char[] charArray79 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, strMatcher81, strMatcher83);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer84.getQuoteMatcher();
        boolean boolean86 = properties70.containsValue((java.lang.Object) strMatcher85);
        int int88 = strBuilder50.indexOf(strMatcher85, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder48.deleteFirst(strMatcher85);
        java.lang.String str90 = strSubstitutor24.replace((java.lang.Object) strMatcher85);
        boolean boolean91 = properties0.containsValue((java.lang.Object) str90);
        java.lang.Object obj94 = properties0.setProperty("14a#4#\n.1!i.1hhi!1.\nfalse\n#", "hi!1.0\nfalse\n#4");
        java.lang.String str97 = properties0.getProperty("10h", "StrTokenizer[0.0i!1.0\n#4#a4#]");
        org.junit.Assert.assertNotNull(objEntrySet1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNull(wildcardStrLookup5);
        org.junit.Assert.assertNotNull(strSubstitutor7);
        org.junit.Assert.assertNotNull(strStrLookup8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(wildcardStrLookup25);
        org.junit.Assert.assertNotNull(strSubstitutor27);
        org.junit.Assert.assertNotNull(strSubstitutor29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str35, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(wildcardEnumeration72);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "StrTokenizer[0.0i!1.0\n#4#a4#]" + "'", str97, "StrTokenizer[0.0i!1.0\n#4#a4#]");
    }

    @Test
    public void test04321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04321");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append('#');
        int int9 = strBuilder7.lastIndexOf("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append('t');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strBuilder7.asTokenizer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.append("1!i0.001h5226.0##4", 14, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strTokenizer12);
    }

    @Test
    public void test04322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04322");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor6.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder10.appendln(charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer30, "0.0i!1.0\n#4#a4#\n");
        java.lang.StringBuffer stringBuffer33 = strBuilder25.toStringBuffer();
        boolean boolean34 = strSubstitutor8.replaceIn(stringBuffer33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher48, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder39.appendln(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder37.appendln(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder37.replace(strMatcher56, "hi!", (int) (short) 10, (int) 'a', (int) (short) 10);
        java.lang.String str64 = strBuilder37.substring(0, 21);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder37.ensureCapacity(5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strBuilder37.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer67.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor69 = strSubstitutor8.setVariablePrefixMatcher(strMatcher68);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(stringBuffer33);
        org.junit.Assert.assertEquals(stringBuffer33.toString(), "hi!#4#a4#\na");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!\n#4#a4#\n" + "'", str64, "hi!\n#4#a4#\n");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strSubstitutor69);
    }

    @Test
    public void test04323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04323");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet3 = properties1.keySet();
        boolean boolean4 = properties1.isEmpty();
        java.lang.Object obj7 = properties1.setProperty("{}", "hi!\nfalse");
        java.util.Set<java.lang.Object> objSet8 = properties1.keySet();
        java.lang.Object obj9 = properties1.clone();
        boolean boolean10 = properties1.isEmpty();
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{{}=hi!\nfalse}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{{}=hi!\nfalse}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{{}=hi!\nfalse}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test04324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04324");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray29 = strBuilder28.toCharArray();
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher38, strMatcher42);
        java.lang.Object obj44 = properties1.get((java.lang.Object) charArray29);
        java.util.Properties properties45 = new java.util.Properties(properties1);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        properties47.clear();
        properties47.clear();
        int int50 = properties47.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher64, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder55.appendln(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder53.appendln(charArray62);
        java.io.Writer writer72 = strBuilder53.asWriter();
        writer72.flush();
        writer72.write((int) (byte) -1);
        properties47.store(writer72, "hi!1.0\nfalse\n#");
        properties1.store(writer72, "StrTokenizer[not tokenized yet]");
        writer72.flush();
        java.io.Writer writer82 = writer72.append('h');
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(writer72);
        org.junit.Assert.assertNotNull(writer82);
    }

    @Test
    public void test04325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04325");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("#4a#4#\n0.1!i0.001h$$$$$hi!\n#hi!100\naaaaaaaaaaa");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean6 = strBuilder4.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.appendln((float) 1L);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder4.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((double) ' ');
        char[] charArray30 = strBuilder25.toCharArray(0, 8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = strMatcher2.isMatch(charArray30, 29, 25, 69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "h100.0i!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "h100.0i!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[h, 1, 0, 0, ., 0, i, !]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
    }

    @Test
    public void test04326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04326");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        java.lang.StringBuffer stringBuffer7 = null;
        java.lang.String str10 = strSubstitutor1.replace(stringBuffer7, (-1), 0);
        java.lang.String str12 = strSubstitutor1.replace("StrTokenizer[not tokenized yet]");
        strSubstitutor1.setEscapeChar('a');
        java.lang.String str16 = strSubstitutor1.replace("java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.appendln((double) '4');
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher34, strMatcher36);
        boolean boolean38 = strTokenizer37.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList39 = strTokenizer37.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer37.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder18.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer43, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer46 = strBuilder18.asWriter();
        writer46.write((int) ' ');
        writer46.write("");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean54 = strBuilder52.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln(false);
        int int59 = strBuilder58.length();
        char[] charArray66 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher68, strMatcher70);
        java.util.List<java.lang.String> strList72 = strTokenizer71.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder58.appendAll((java.lang.Iterable<java.lang.String>) strList72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.appendSeparator("{}", (int) (short) -1);
        int int79 = strBuilder73.lastIndexOf(' ', 7);
        java.io.Writer writer80 = writer46.append((java.lang.CharSequence) strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder73.appendln(13);
        java.lang.String str83 = strSubstitutor1.replace(strBuilder73);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str86 = strBuilder73.substring(30, 24);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: " + "'", str16, "java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(writer46);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 13 + "'", int59 == 13);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(writer80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!1.0\nfalse\n#4#a4#13\n" + "'", str83, "hi!1.0\nfalse\n#4#a4#13\n");
    }

    @Test
    public void test04327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04327");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder6.replaceAll(strMatcher74, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.insert(4, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.replaceFirst("", "1.0\nf");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder82.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder82.insert(12, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder82.appendSeparator('$', 60);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder82.appendln("hi!\nfalse", 29, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test04328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04328");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        int int19 = strTokenizer17.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer17.setTrimmerMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.deleteAll(strMatcher20);
        java.io.Reader reader23 = strBuilder22.asReader();
        long long25 = reader23.skip(1L);
        boolean boolean26 = reader23.markSupported();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.appendNewLine();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        properties37.clear();
        properties37.clear();
        properties37.clear();
        java.util.Set<java.lang.String> strSet41 = properties37.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.appendAll((java.lang.Iterable<java.lang.String>) strSet41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.insert(1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder31.insert((int) ' ', (java.lang.Object) true);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder31.appendFixedWidthPadLeft((int) '#', (int) 't', 'a');
        char[] charArray51 = strBuilder50.toCharArray();
        int int54 = reader23.read(charArray51, 3, 3);
        boolean boolean55 = reader23.ready();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "Stri!1enizer[not tokenized yet]0true\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "Stri!1enizer[not tokenized yet]0true\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[S, t, r, i, !, 1, e, n, i, z, e, r, [, n, o, t,  , t, o, k, e, n, i, z, e, d,  , y, e, t, ], 0, t, r, u, e, \n, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, 3, 5]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test04329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04329");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strBuilder1.asTokenizer();
        char char9 = strBuilder1.charAt((int) (byte) 0);
        java.lang.Class<?> wildcardClass10 = strBuilder1.getClass();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + char9 + "' != '" + 'h' + "'", char9 == 'h');
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test04330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04330");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray28);
        int int37 = strBuilder21.indexOf(strMatcher35, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder21.append((float) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder21.insert(12, (float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean47 = strBuilder45.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((float) 1L);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher58, strMatcher60);
        java.util.List<java.lang.String> strList62 = strTokenizer61.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder45.appendAll((java.lang.Iterable<java.lang.String>) strList62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray67 = strBuilder66.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray67);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("0.0i!1.0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, 't');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, "hi!1.0\nfalse\n##4a#4#\n0.1!i0.001h#4a#4#\n0.1!i0.001h\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder42.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer75, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.insert(39, (long) 64);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 7 + "'", int37 == 7);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test04331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04331");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray31);
        char[] charArray42 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean46 = strBuilder44.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append(true);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        boolean boolean61 = strTokenizer60.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder44.appendAll((java.util.Iterator<java.lang.String>) strTokenizer60);
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher71, strMatcher73);
        boolean boolean75 = strBuilder44.contains(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher71);
        char[] charArray83 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, strMatcher85, strMatcher87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher71, strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder24.append(charArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder24.appendSeparator('1', 12);
        int int97 = strBuilder94.lastIndexOf('t', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder94.ensureCapacity(92);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test04332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04332");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder11.appendln(charArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.insert(12, "hi!1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendln((java.lang.Object) "hi!1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln('i');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.minimizeCapacity();
        boolean boolean41 = strBuilder38.contains('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.setCharAt(1, '$');
        boolean boolean45 = strBuilder32.equalsIgnoreCase(strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder32.appendFixedWidthPadLeft((int) (byte) 1, 14, '#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test04333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04333");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!true#4#a4#3511111111");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test04334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04334");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hh100.0a!1.0\n#4#a4#", 't', '.');
    }

    @Test
    public void test04335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04335");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("h100.0i!1.0\n#4#a4#\n");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.add("hi\nalse\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test04336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04336");
        java.lang.Throwable throwable1 = null;
        java.io.IOException iOException2 = new java.io.IOException("", throwable1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException3.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder6.appendln(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator('a', 10);
        java.util.Properties properties25 = new java.util.Properties();
        boolean boolean26 = strBuilder21.equals((java.lang.Object) properties25);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher50, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder41.appendln(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean64 = properties25.remove((java.lang.Object) charArray33, (java.lang.Object) strBuilder59);
        int int65 = properties25.size();
        java.lang.String str66 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) throwableArray4, properties25);
        properties25.clear();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test04337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04337");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        properties12.clear();
        java.util.Enumeration<?> wildcardEnumeration14 = properties12.propertyNames();
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getQuoteMatcher();
        boolean boolean28 = properties12.containsValue((java.lang.Object) strMatcher27);
        int int29 = strBuilder7.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder7.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln(0.0f);
        int int35 = strBuilder32.lastIndexOf("14a#4#\n.1!i.1hhi!1.\nfalse\n#", 110);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test04338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04338");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        int int11 = strBuilder7.lastIndexOf('4', (-1));
        java.lang.String str12 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.deleteAll('t');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendln("h100.0i!1.0\n#4#a4#32.0#4#a4#0", (int) (byte) 1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test04339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04339");
        java.io.IOException iOException1 = new java.io.IOException("!#4#a4#\na100\n");
    }

    @Test
    public void test04340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04340");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("#-1");
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        char[] charArray29 = new char[] { '4', '1', 'a', '1', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.appendNewLine();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties34.clear();
        properties34.clear();
        java.util.Set<java.lang.String> strSet38 = properties34.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.appendAll((java.lang.Iterable<java.lang.String>) strSet38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder31.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean48 = strBuilder46.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln((float) 1L);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher59, strMatcher61);
        boolean boolean63 = strTokenizer62.isEmptyTokenAsNull();
        int int64 = strTokenizer62.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer62.setTrimmerMatcher(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder46.deleteAll(strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!\na", strMatcher65);
        int int70 = strBuilder41.lastIndexOf(strMatcher65, (int) (byte) 10);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup71 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor72 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup71);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup73 = strSubstitutor72.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor75 = strSubstitutor72.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strSubstitutor75.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher65, strMatcher76);
        int int79 = strMatcher23.isMatch(charArray29, (int) '1');
        int int81 = strMatcher22.isMatch(charArray29, 3);
        int int83 = strMatcher8.isMatch(charArray29, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer6.reset(charArray29);
        java.lang.Object obj85 = strTokenizer6.clone();
        boolean boolean86 = strTokenizer6.isEmptyTokenAsNull();
        int int87 = strTokenizer6.size();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "41a14");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "41a14");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, 1, a, 1, 4]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 5 + "'", int70 == 5);
        org.junit.Assert.assertNull(wildcardStrLookup73);
        org.junit.Assert.assertNotNull(strSubstitutor75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
    }

    @Test
    public void test04341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04341");
        java.lang.Throwable throwable1 = null;
        java.io.IOException iOException2 = new java.io.IOException("", throwable1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException("0                                                 ");
        java.io.IOException iOException8 = new java.io.IOException("hi!1.0\nfalse\n#4#a4", (java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException("hi!1.0i!\n#4#a4#\ntrue\n", (java.lang.Throwable) iOException7);
        iOException2.addSuppressed((java.lang.Throwable) iOException7);
        java.lang.String str11 = iOException7.toString();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "java.io.IOException: 0                                                 " + "'", str11, "java.io.IOException: 0                                                 ");
    }

    @Test
    public void test04342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04342");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        int int11 = strBuilder7.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln((float) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendPadding((int) 't', '0');
        java.lang.String str17 = strBuilder16.getNullText();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test04343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04343");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.ensureCapacity((int) '4');
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln(stringBuffer22, (int) (byte) 0, 3);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray33);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher49, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher40, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder19.appendAll((java.util.Iterator<java.lang.String>) strTokenizer54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer54.setEmptyTokenAsNull(true);
        java.lang.String str59 = strTokenizer58.previousToken();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test04344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04344");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray31);
        char[] charArray42 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean46 = strBuilder44.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append(true);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        boolean boolean61 = strTokenizer60.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder44.appendAll((java.util.Iterator<java.lang.String>) strTokenizer60);
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher71, strMatcher73);
        boolean boolean75 = strBuilder44.contains(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher71);
        char[] charArray83 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, strMatcher85, strMatcher87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher71, strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder24.append(charArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder24.replaceAll('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder24.insert(17, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder97.appendSeparator('\n');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test04345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04345");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup5 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str7 = strStrLookup5.lookup("{}");
        strSubstitutor1.setVariableResolver(strStrLookup5);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher18, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor24 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup5, strMatcher9, strMatcher22, '4');
        java.lang.String str25 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) '4');
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strStrLookup5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4" + "'", str25, "4");
    }

    @Test
    public void test04346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04346");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        boolean boolean37 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties1.entrySet();
        java.util.Collection<java.lang.Object> objCollection39 = properties1.values();
        int int40 = properties1.size();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        properties42.clear();
        properties42.clear();
        properties42.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean49 = strBuilder47.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.append(true);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher60, strMatcher62);
        boolean boolean64 = strTokenizer63.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher74, strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer77.setTrimmerMatcher(strMatcher79);
        int int82 = strBuilder65.lastIndexOf(strMatcher79, (int) (byte) 10);
        boolean boolean83 = properties42.containsValue((java.lang.Object) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder65.appendln((double) 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder65.appendln((long) 'a');
        boolean boolean88 = properties1.equals((java.lang.Object) strBuilder87);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder89.setNewLineText("#4a#4#\n0.1!i0.001hhi!\n\n1.0#aaaaaaaaaa");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder89.appendSeparator("hi!\n#", "hi!1.0");
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test04347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04347");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.lang.String str5 = properties1.toString();
        java.lang.Object obj6 = properties1.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("#4#a4#");
        java.util.List<java.lang.String> strList11 = strTokenizer8.getTokenList();
        java.lang.Object obj12 = properties1.remove((java.lang.Object) strList11);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        java.util.Enumeration<?> wildcardEnumeration16 = properties14.propertyNames();
        boolean boolean18 = properties14.containsKey((java.lang.Object) (-1));
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        java.util.List<java.lang.String> strList31 = strTokenizer30.getTokenList();
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher40, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray38);
        java.lang.Object obj46 = properties14.getOrDefault((java.lang.Object) strList31, (java.lang.Object) charArray38);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj49 = properties14.remove((java.lang.Object) properties48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.insert(0, (long) '#');
        boolean boolean55 = properties14.equals((java.lang.Object) '#');
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties14.keys();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.appendNewLine();
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        properties62.clear();
        properties62.clear();
        properties62.clear();
        java.util.Set<java.lang.String> strSet66 = properties62.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.appendAll((java.lang.Iterable<java.lang.String>) strSet66);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteAll("0                                                 ");
        boolean boolean71 = properties14.containsValue((java.lang.Object) strBuilder68);
        java.lang.Object obj74 = properties14.setProperty("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35", "{}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet75 = properties14.entrySet();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(wildcardEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objEntrySet75);
    }

    @Test
    public void test04348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04348");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        java.lang.String str61 = properties20.getProperty("#4a#4#\n0.1!i0.001h");
        java.util.Properties properties62 = new java.util.Properties(properties20);
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher72, strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        char[] charArray84 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, strMatcher86, strMatcher88);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = strTokenizer89.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher77, strMatcher90);
        boolean boolean92 = properties62.equals((java.lang.Object) "#4#a4#");
        int int93 = properties62.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet94 = properties62.entrySet();
        java.util.Properties properties95 = new java.util.Properties(properties62);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet96 = properties62.entrySet();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(objEntrySet94);
        org.junit.Assert.assertNotNull(objEntrySet96);
    }

    @Test
    public void test04349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04349");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        boolean boolean12 = strTokenizer11.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList13 = strTokenizer11.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer11.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset("");
        boolean boolean18 = strTokenizer15.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer15.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test04350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04350");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        char char5 = strSubstitutor4.getEscapeChar();
        char[] charArray6 = null;
        java.lang.String str9 = strSubstitutor4.replace(charArray6, 1, 16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor4.setVariableSuffix('t');
        boolean boolean12 = strSubstitutor4.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup14 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor20 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup14, strMatcher16, strMatcher18, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!\n100aaaaaaa52.0\n", strMatcher18, strMatcher21);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor23 = strSubstitutor4.setVariablePrefixMatcher(strMatcher18);
        strSubstitutor4.setEnableSubstitutionInVariables(true);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + '$' + "'", char5 == '$');
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strSubstitutor23);
    }

    @Test
    public void test04351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04351");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("i!100");
        java.lang.String str2 = strTokenizer1.toString();
        java.util.List<java.lang.String> strList3 = strTokenizer1.getTokenList();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str2, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList3);
    }

    @Test
    public void test04352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04352");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder8.appendln(charArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator('a', 10);
        java.util.Properties properties27 = new java.util.Properties();
        boolean boolean28 = strBuilder23.equals((java.lang.Object) properties27);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher52, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder43.appendln(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean66 = properties27.remove((java.lang.Object) charArray35, (java.lang.Object) strBuilder61);
        int int67 = properties27.size();
        java.lang.String str68 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) throwableArray6, properties27);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder1.appendAll((java.lang.Object[]) throwableArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        int int72 = strBuilder1.indexOf(strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder1.append((long) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("", '1', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer78.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder74.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer80, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.insert((int) (short) 1, (long) 97);
        java.io.Reader reader86 = strBuilder85.asReader();
        java.lang.String str88 = strBuilder85.leftString(89);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(reader86);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "S97trTokenizer[not tokenized yet]10" + "'", str88, "S97trTokenizer[not tokenized yet]10");
    }

    @Test
    public void test04353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04353");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        int int36 = strBuilder19.lastIndexOf(strMatcher33, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.append((long) '#');
        java.util.stream.IntStream intStream39 = strBuilder19.chars();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder19.insert(89, (double) 27);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 89");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(intStream39);
    }

    @Test
    public void test04354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04354");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.lang.String str5 = properties1.toString();
        java.lang.Object obj6 = properties1.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("#4#a4#");
        java.util.List<java.lang.String> strList11 = strTokenizer8.getTokenList();
        java.lang.Object obj12 = properties1.remove((java.lang.Object) strList11);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        properties14.clear();
        properties14.clear();
        java.util.Set<java.lang.String> strSet18 = properties14.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean22 = strBuilder20.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(false);
        java.lang.Object obj27 = properties14.remove((java.lang.Object) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln((double) '#');
        java.util.stream.IntStream intStream31 = strBuilder30.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean35 = strBuilder33.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendSeparator('#', (int) (short) 1);
        int int45 = strBuilder42.lastIndexOf('4', 10);
        int int47 = strBuilder42.indexOf("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.appendSeparator("#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.deleteAll('$');
        java.io.Reader reader52 = strBuilder42.asReader();
        reader52.close();
        java.lang.Object obj54 = properties1.replace((java.lang.Object) intStream31, (java.lang.Object) reader52);
        boolean boolean55 = reader52.ready();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test04355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04355");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hh1000.0i!1.", ' ', 'a');
    }

    @Test
    public void test04356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04356");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup5 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str7 = strStrLookup5.lookup("{}");
        strSubstitutor1.setVariableResolver(strStrLookup5);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.append(true);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        boolean boolean27 = strTokenizer26.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.insert((int) (short) 1, true);
        boolean boolean34 = strSubstitutor1.replaceIn(strBuilder28);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = strSubstitutor1.setVariableSuffix('0');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor38 = strSubstitutor36.setVariableSuffix('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean42 = strBuilder40.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendln((float) 1L);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        java.util.List<java.lang.String> strList57 = strTokenizer56.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.appendAll((java.lang.Iterable<java.lang.String>) strList57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendSeparator('4', 0);
        char[] charArray73 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher75, strMatcher77);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer78.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer78.setTrimmerMatcher(strMatcher80);
        java.lang.String str82 = strTokenizer78.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder66.appendAll((java.util.Iterator<java.lang.String>) strTokenizer78);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder66.replaceFirst("{}", "java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder86.appendSeparator('h', (int) 'i');
        java.lang.String str92 = strSubstitutor36.replace(strBuilder86);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor94 = strSubstitutor36.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor96 = strSubstitutor94.setVariableSuffix(' ');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor98 = strSubstitutor96.setVariablePrefix("{#=StrTokenizer[not tokenized yet]}");
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strStrLookup5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSubstitutor36);
        org.junit.Assert.assertNotNull(strSubstitutor38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str82, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "h100.0i!1.0\n#4#4#32.0#4#a4#h" + "'", str92, "h100.0i!1.0\n#4#4#32.0#4#a4#h");
        org.junit.Assert.assertNotNull(strSubstitutor94);
        org.junit.Assert.assertNotNull(strSubstitutor96);
        org.junit.Assert.assertNotNull(strSubstitutor98);
    }

    @Test
    public void test04357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04357");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("");
        java.lang.Object obj15 = strTokenizer12.clone();
        int int16 = strTokenizer12.previousIndex();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test04358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04358");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher15, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor33 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, strMatcher28, strMatcher31, '$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor35 = strSubstitutor33.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean39 = strBuilder37.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append(true);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher50, strMatcher52);
        boolean boolean54 = strTokenizer53.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder37.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher64, strMatcher66);
        boolean boolean68 = strBuilder37.contains(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder37.appendln((int) (short) 0);
        int int73 = strBuilder37.indexOf("h!true#4#a4#false", (int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder37.replaceFirst('4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder37.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder37.appendPadding((int) '$', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder37.appendln(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str86 = strSubstitutor35.replace(strBuilder83, 52, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strStrLookup0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strSubstitutor35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test04359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04359");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.ensureCapacity((int) '4');
        java.lang.StringBuffer stringBuffer22 = strBuilder21.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.replaceFirst("hi!1.0\nfalse\n#4", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendSeparator("hi!true");
        java.lang.String str28 = strBuilder25.getNullText();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(stringBuffer22);
        org.junit.Assert.assertEquals(stringBuffer22.toString(), "hi!1.0\n#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test04360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04360");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder6.replaceAll(strMatcher74, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder6.appendSeparator('i', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.appendln(30);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendSeparator("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder81.appendSeparator("hi!true4a40\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.append((double) 3L);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test04361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04361");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        int int43 = properties1.size();
        java.util.Enumeration<?> wildcardEnumeration44 = properties1.propertyNames();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration44);
    }

    @Test
    public void test04362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04362");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        char char3 = strSubstitutor1.getEscapeChar();
        strSubstitutor1.setEnableSubstitutionInVariables(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strSubstitutor1.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor1.getVariablePrefixMatcher();
        java.lang.String str9 = strSubstitutor1.replace("Obj");
        strSubstitutor1.setEscapeChar('#');
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertTrue("'" + char3 + "' != '" + '$' + "'", char3 == '$');
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Obj" + "'", str9, "Obj");
    }

    @Test
    public void test04363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04363");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder8.appendln(charArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator('a', 10);
        java.util.Properties properties27 = new java.util.Properties();
        boolean boolean28 = strBuilder23.equals((java.lang.Object) properties27);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher52, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder43.appendln(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean66 = properties27.remove((java.lang.Object) charArray35, (java.lang.Object) strBuilder61);
        int int67 = properties27.size();
        java.lang.String str68 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) throwableArray6, properties27);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder1.appendAll((java.lang.Object[]) throwableArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        int int72 = strBuilder1.indexOf(strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder1.append((long) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder1.append((java.lang.Object) 174);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test04364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04364");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup5 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher29, strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher20, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor38 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup5, strMatcher33, strMatcher36, '$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor39 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup5);
        strSubstitutor1.setVariableResolver(strStrLookup5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor44 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup5, " yet]{}", "h100.0i!1.0\n#4#a4#\n", '$');
        char[] charArray45 = null;
        java.lang.String str48 = strSubstitutor44.replace(charArray45, 9, (int) 'h');
        strSubstitutor44.setEnableSubstitutionInVariables(true);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor52 = strSubstitutor44.setVariableSuffix('a');
        boolean boolean53 = strSubstitutor44.isEnableSubstitutionInVariables();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strStrLookup5);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strSubstitutor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test04365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04365");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        int int11 = strBuilder7.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.insert(11, (long) 18);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.append(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test04366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04366");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.replaceAll('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder54.append("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.append("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.setNullText("StrTokenizer[#4#a4#]");
        boolean boolean72 = strBuilder70.endsWith("\neslaf\n0.1!ih35.0\nhi!#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendFixedWidthPadLeft(28, 97, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.appendSeparator('0', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.append((double) 't');
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test04367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04367");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.append((float) 26);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteFirst("trT10okenizer[#4#a4#]100aaaaaaaa#4a#4#\n0.1!i0.001h\n.0\nfalse\n#4");
        int int79 = strBuilder75.indexOf('i');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test04368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04368");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!true4a40\n", 'h', '4');
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties5.clear();
        int int8 = properties5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher22, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.appendln(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.appendln(charArray20);
        java.io.Writer writer30 = strBuilder11.asWriter();
        writer30.flush();
        writer30.write((int) (byte) -1);
        properties5.store(writer30, "hi!1.0\nfalse\n#");
        java.util.Properties properties36 = new java.util.Properties(properties5);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher47, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray45);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder38.appendln(charArray45);
        java.io.Reader reader54 = strBuilder38.asReader();
        reader54.reset();
        reader54.mark((int) (short) -1);
        boolean boolean58 = reader54.ready();
        reader54.close();
        char[] charArray66 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher68, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        int int73 = reader54.read(charArray66);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder75.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder82.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.replaceAll(' ', '#');
        char[] charArray87 = strBuilder83.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder76.insert((int) (byte) 0, charArray87);
        int int89 = reader54.read(charArray87);
        boolean boolean90 = properties36.containsKey((java.lang.Object) charArray87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer3.reset(charArray87);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer91.getTrimmerMatcher();
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(writer30);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "hi!#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "hi!#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[h, i, !, #, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 6 + "'", int73 == 6);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "a4#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "a4#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[a, 4, #, \n]");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 4 + "'", int89 == 4);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strMatcher92);
    }

    @Test
    public void test04369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04369");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        java.io.Writer writer21 = strBuilder2.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder2.replace(1, 14, "h100.0i!1.0\n#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean29 = strBuilder27.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln(false);
        int int34 = strBuilder33.length();
        int int37 = strBuilder33.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder33.replaceAll('4', ' ');
        java.util.stream.IntStream intStream43 = strBuilder33.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder33.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!1.013.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer46, "hi!1.0\nfalse\n##4a#4#\n0.1!i0.001h#4a#4#\n0.1!i0.001h\n");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup49 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup49);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup51 = strSubstitutor50.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor53 = strSubstitutor50.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup54 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str56 = strStrLookup54.lookup("{}");
        strSubstitutor50.setVariableResolver(strStrLookup54);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor73 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup54, strMatcher58, strMatcher71, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer46.setQuoteMatcher(strMatcher58);
        boolean boolean75 = strBuilder2.contains(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 13 + "'", int34 == 13);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(intStream43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(wildcardStrLookup51);
        org.junit.Assert.assertNotNull(strSubstitutor53);
        org.junit.Assert.assertNotNull(strStrLookup54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test04370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04370");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!1.0\nfalse\n4");
        java.lang.String str2 = strTokenizer1.previousToken();
        int int3 = strTokenizer1.size();
        boolean boolean4 = strTokenizer1.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test04371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04371");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.deleteFirst("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendSeparator('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendFixedWidthPadLeft((int) '$', (int) (byte) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceAll(".0\nfalse\n#17", "1]#4a#4#[rezineko01rtS");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test04372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04372");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        java.io.Writer writer21 = strBuilder2.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder2.replace(1, 14, "h100.0i!1.0\n#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.insert(3, 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.appendSeparator('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.appendln((double) '4');
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher51, strMatcher53);
        boolean boolean55 = strTokenizer54.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList56 = strTokenizer54.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer54.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder35.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer60, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer63 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean67 = strBuilder65.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder71.replaceFirst('#', '4');
        char[] charArray78 = strBuilder71.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray78);
        writer63.write(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray78);
        boolean boolean86 = strTokenizer85.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder25.appendAll((java.util.Iterator<java.lang.String>) strTokenizer85);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder25.setLength(7);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(writer63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test04373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04373");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ", '#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setEmptyTokenAsNull(false);
        boolean boolean6 = strTokenizer5.hasPrevious();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test04374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04374");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        int int9 = strBuilder7.lastIndexOf(strMatcher8);
        int int11 = strBuilder7.indexOf("h!true#4#a4#false");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi!\n");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup15 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup15);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup17 = strSubstitutor16.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor16.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor22 = strSubstitutor19.setVariableSuffixMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!#4#a4#\na100", strMatcher14, strMatcher21);
        boolean boolean24 = strBuilder7.equals((java.lang.Object) strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln(false);
        int int33 = strBuilder32.length();
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        java.util.List<java.lang.String> strList46 = strTokenizer45.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder32.appendAll((java.lang.Iterable<java.lang.String>) strList46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.ensureCapacity((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("1.0\nfalse\n#");
        int int55 = strBuilder54.length();
        char[] charArray56 = strBuilder54.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            int int60 = strMatcher14.isMatch(charArray56, 83, 0, 126);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNull(wildcardStrLookup17);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strSubstitutor22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 13 + "'", int33 == 13);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 8 + "'", int55 == 8);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "hi!4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "hi!4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[h, i, !, 4, #, a, 4, #]");
    }

    @Test
    public void test04375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04375");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray9 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher11, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder2.appendln(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean22 = strBuilder20.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(true);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        boolean boolean37 = strTokenizer36.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder20.appendAll((java.util.Iterator<java.lang.String>) strTokenizer36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        int int40 = strBuilder20.lastIndexOf(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher18, strMatcher39);
        char[] charArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int46 = strMatcher18.isMatch(charArray42, 7, 124, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test04376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04376");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer21, "0.0i!1.0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean27 = strBuilder25.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendln((float) 1L);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        java.util.List<java.lang.String> strList42 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder25.appendAll((java.lang.Iterable<java.lang.String>) strList42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('4', 0);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher60, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer63.setTrimmerMatcher(strMatcher65);
        java.lang.String str67 = strTokenizer63.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder51.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer63.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder16.appendln((java.lang.Object) strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.setNewLineText("Obj");
        java.lang.Object obj75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.appendFixedWidthPadRight(obj75, (int) '1', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder74.appendSeparator(".0\n#4#a4#\n");
        java.lang.Class<?> wildcardClass81 = strBuilder80.getClass();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str67, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test04377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04377");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties5.entrySet();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties5.entrySet();
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(objEntrySet8);
    }

    @Test
    public void test04378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04378");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendln((java.lang.Object) (short) 100);
        java.lang.String str12 = strBuilder11.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNewLine();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        properties17.clear();
        properties17.clear();
        properties17.clear();
        java.util.Set<java.lang.String> strSet21 = properties17.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.appendAll((java.lang.Iterable<java.lang.String>) strSet21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll("0                                                 ");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) "0                                                 ", (int) 'a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteAll("##a#");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean34 = strBuilder32.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendln((float) 1L);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        java.util.List<java.lang.String> strList49 = strTokenizer48.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder32.appendAll((java.lang.Iterable<java.lang.String>) strList49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln(stringBuffer54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.appendFixedWidthPadRight(16, 11, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceFirst("i!true", "hi!1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder55.insert(18, true);
        java.util.stream.IntStream intStream66 = strBuilder65.codePoints();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strBuilder65.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.append((float) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher80, strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray78);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray78);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder71.appendln(charArray78);
        java.io.Reader reader87 = strBuilder71.asReader();
        reader87.reset();
        boolean boolean89 = reader87.markSupported();
        reader87.close();
        reader87.close();
        reader87.reset();
        long long94 = reader87.skip((long) 52);
        boolean boolean95 = properties5.replace((java.lang.Object) strBuilder28, (java.lang.Object) strBuilder65, (java.lang.Object) 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder65.appendln((double) 36);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(intStream66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(reader87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 10L + "'", long94 == 10L);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test04379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04379");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor1.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor1.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor9.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor13 = strSubstitutor9.setVariableSuffix("{}");
        strSubstitutor13.setEnableSubstitutionInVariables(true);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor17 = strSubstitutor13.setVariableSuffix("a4#false\norg.apache.");
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup18 = strSubstitutor17.getVariableResolver();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertNotNull(strSubstitutor13);
        org.junit.Assert.assertNotNull(strSubstitutor17);
        org.junit.Assert.assertNull(wildcardStrLookup18);
    }

    @Test
    public void test04380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04380");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(stringBuffer25, (int) '#', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(false);
        int int32 = strBuilder30.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.setNewLineText("1.0\nf");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup35 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup35);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup37 = strSubstitutor36.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor39 = strSubstitutor36.setVariablePrefix("hi!");
        char char40 = strSubstitutor36.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean44 = strBuilder42.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.setNullText("hi!\na");
        java.lang.String str57 = strSubstitutor36.replace(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.appendNewLine();
        java.util.stream.IntStream intStream61 = strBuilder60.chars();
        boolean boolean62 = strBuilder56.equals((java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean66 = strBuilder64.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.replaceFirst('#', '4');
        char[] charArray77 = strBuilder70.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder60.append(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder30.appendln(charArray77);
        java.io.Reader reader84 = strBuilder30.asReader();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder30.append("hi!\n\n#4a#4#\n0.1!i0.001h", 25, 126);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(wildcardStrLookup37);
        org.junit.Assert.assertNotNull(strSubstitutor39);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + '$' + "'", char40 == '$');
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str57, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(intStream61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(reader84);
    }

    @Test
    public void test04381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04381");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet3 = properties1.keySet();
        boolean boolean4 = properties1.isEmpty();
        boolean boolean5 = properties1.isEmpty();
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test04382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04382");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        java.io.Writer writer21 = strBuilder2.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder2.replace(1, 14, "h100.0i!1.0\n#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln(false);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup28 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor29 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup28);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup30 = strSubstitutor29.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor32 = strSubstitutor29.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup33 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str35 = strStrLookup33.lookup("{}");
        strSubstitutor29.setVariableResolver(strStrLookup33);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher46, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor52 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup33, strMatcher37, strMatcher50, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher63, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder54.appendln(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer74, "0.0i!1.0\n#4#a4#\n");
        java.lang.StringBuffer stringBuffer77 = strBuilder69.toStringBuffer();
        java.lang.String str80 = strSubstitutor52.replace(stringBuffer77, 0, 5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor82 = strSubstitutor52.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strSubstitutor82, (int) 'h', '4');
        java.lang.String str88 = strBuilder25.substring(16, (int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder25.append((-1L));
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(wildcardStrLookup30);
        org.junit.Assert.assertNotNull(strSubstitutor32);
        org.junit.Assert.assertNotNull(strStrLookup33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(stringBuffer77);
        org.junit.Assert.assertEquals(stringBuffer77.toString(), "hi!#4#a4#\na");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!#4" + "'", str80, "hi!#4");
        org.junit.Assert.assertNotNull(strSubstitutor82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "a4#false\norg.apache." + "'", str88, "a4#false\norg.apache.");
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test04383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04383");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceAll(' ', '#');
        char[] charArray6 = strBuilder2.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.replaceFirst("hi!\n", "0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendSeparator("i!100");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendln(35);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteAll("#4a#4#\n0.1!i0.001h$$$$$hi!\n#hi!100\naaaaaaaaaaa");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup16 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor17 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strSubstitutor17.getVariablePrefixMatcher();
        java.lang.String str20 = strSubstitutor17.replace("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strSubstitutor17.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder15.replace(strMatcher21, "", 15, 15, 81);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = strBuilder15.substring(98, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str20, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test04384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04384");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean6 = strBuilder4.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.append(true);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        boolean boolean21 = strTokenizer20.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder4.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append(false);
        java.lang.Object obj25 = new java.lang.Object();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean29 = strBuilder27.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append(true);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher40, strMatcher42);
        boolean boolean44 = strTokenizer43.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        properties47.clear();
        java.util.Enumeration<?> wildcardEnumeration49 = properties47.propertyNames();
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher58, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getQuoteMatcher();
        boolean boolean63 = properties47.containsValue((java.lang.Object) strMatcher62);
        int int65 = strBuilder27.indexOf(strMatcher62, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        properties68.clear();
        java.util.Set<java.lang.Object> objSet70 = properties68.keySet();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        properties72.clear();
        properties72.clear();
        properties72.clear();
        properties68.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        java.lang.Object[] objArray77 = new java.lang.Object[] { obj25, strBuilder27, strTokenizer66, properties72 };
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder24.appendWithSeparators(objArray77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder1.appendAll(objArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder1.insert(7, (double) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder1.appendln('a');
        java.io.Reader reader86 = strBuilder1.asReader();
        boolean boolean87 = reader86.ready();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(reader86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test04385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04385");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        reader17.mark((int) (short) -1);
        boolean boolean21 = reader17.ready();
        reader17.close();
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher31, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        int int36 = reader17.read(charArray29);
        boolean boolean37 = reader17.markSupported();
        reader17.close();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "hi!#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "hi!#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, i, !, #, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 6 + "'", int36 == 6);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test04386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04386");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, "hi!\n100aaaaaaa52.0\n", "hi!1.0\nfalse\n#", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strSubstitutor4.getVariableSuffixMatcher();
        char[] charArray9 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean13 = strBuilder11.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.append(true);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        boolean boolean28 = strTokenizer27.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        boolean boolean42 = strBuilder11.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher38);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor44 = strSubstitutor4.setVariableSuffixMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor46 = strSubstitutor44.setVariableSuffix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor48 = strSubstitutor44.setVariablePrefix('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder56.appendNewLine();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        properties59.clear();
        properties59.clear();
        properties59.clear();
        java.util.Set<java.lang.String> strSet63 = properties59.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.appendAll((java.lang.Iterable<java.lang.String>) strSet63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.insert(1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder53.insert((int) ' ', (java.lang.Object) true);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder53.appendFixedWidthPadLeft((int) '#', (int) 't', 'a');
        char[] charArray73 = strBuilder72.toCharArray();
        java.lang.String str75 = strBuilder72.rightString((int) (short) 100);
        int int78 = strBuilder72.lastIndexOf("\n#########", (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder82.minimizeCapacity();
        java.lang.StringBuffer stringBuffer84 = strBuilder83.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder72.append(stringBuffer84);
        boolean boolean88 = strSubstitutor44.replaceIn(stringBuffer84, 0, (int) '\n');
        org.junit.Assert.assertNotNull(strStrLookup0);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strSubstitutor44);
        org.junit.Assert.assertNotNull(strSubstitutor46);
        org.junit.Assert.assertNotNull(strSubstitutor48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "StrTokenizer[not tokenized yet]0true\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "StrTokenizer[not tokenized yet]0true\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[S, t, r, T, o, k, e, n, i, z, e, r, [, n, o, t,  , t, o, k, e, n, i, z, e, d,  , y, e, t, ], 0, t, r, u, e, \n, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, 3, 5]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35" + "'", str75, "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(stringBuffer84);
        org.junit.Assert.assertEquals(stringBuffer84.toString(), "StrTokenizer[not tokenized yet]0\n");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test04387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04387");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("0\n#4#a4#\n", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setDelimiterChar('a');
        java.lang.String[] strArray5 = strTokenizer2.getTokenArray();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test04388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04388");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.appendSeparator("#-1", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceAll(' ', '#');
        boolean boolean35 = strBuilder30.contains("hi!1.0\nfalse\n4");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.appendSeparator('#', '$');
        char[] charArray39 = strBuilder30.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'i');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder27.append(charArray39, 41, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "hi!\n#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "hi!\n#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[h, i, !, \n, #]");
    }

    @Test
    public void test04389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04389");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.replaceAll('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder54.append("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.append("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.setNullText("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendSeparator('a', 4);
        boolean boolean75 = strBuilder70.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder70.append((long) 46);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test04390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04390");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer11.setTrimmerMatcher(strMatcher13);
        java.lang.String str15 = strTokenizer11.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer11.reset();
        java.lang.String str17 = strTokenizer11.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer11.setQuoteChar('a');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer19);
    }

    @Test
    public void test04391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04391");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.appendln((double) '4');
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher40, strMatcher42);
        boolean boolean44 = strTokenizer43.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList45 = strTokenizer43.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer43.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder24.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer49, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer52 = strBuilder24.asWriter();
        writer52.write((int) ' ');
        writer52.write("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean60 = strBuilder58.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln(false);
        int int65 = strBuilder64.length();
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher74, strMatcher76);
        java.util.List<java.lang.String> strList78 = strTokenizer77.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder64.appendAll((java.lang.Iterable<java.lang.String>) strList78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendSeparator("{}", (int) (short) -1);
        int int85 = strBuilder79.lastIndexOf(' ', 7);
        java.io.Writer writer86 = writer52.append((java.lang.CharSequence) strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder22.appendFixedWidthPadRight((java.lang.Object) strBuilder79, 12, 'i');
        java.lang.String str92 = strBuilder79.midString(97, 1);
        int int94 = strBuilder79.lastIndexOf('h');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(writer52);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 13 + "'", int65 == 13);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(writer86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
    }

    @Test
    public void test04392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04392");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        java.lang.Object obj14 = properties1.remove((java.lang.Object) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setNullText("hi!1.0\nfalse\n#4#a4#13\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendSeparator(' ');
        int int22 = strBuilder21.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator("100.01.0\n#4#a4#10");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.insert((int) 'h', (long) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 104");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 14 + "'", int22 == 14);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test04393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04393");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer2.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer2.reset();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test04394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04394");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        int int9 = strBuilder7.lastIndexOf(strMatcher8);
        int int12 = strBuilder7.indexOf("#4a#4#\n0.1!i0.001h", 0);
        java.lang.String str13 = strBuilder7.toString();
        java.util.stream.IntStream intStream14 = strBuilder7.codePoints();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!1.0\nfalse\n" + "'", str13, "hi!1.0\nfalse\n");
        org.junit.Assert.assertNotNull(intStream14);
    }

    @Test
    public void test04395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04395");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.String str23 = strBuilder22.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean27 = strBuilder25.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendSeparator('#', (int) (short) 1);
        int int37 = strBuilder34.lastIndexOf('4', 10);
        char[] charArray44 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, "");
        java.lang.Object[] objArray47 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder34.appendAll(objArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder34.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer52 = strBuilder34.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder22.append(stringBuffer52);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder22.setNewLineText("hi!\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln("\neslaf\n0.1 ttttttttttttt");
        boolean boolean59 = strBuilder57.contains("0\neslaf\n0.1!ih");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(stringBuffer52);
        org.junit.Assert.assertEquals(stringBuffer52.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test04396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04396");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor1.setVariableSuffix('4');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup9 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str11 = strStrLookup9.lookup("{}");
        strSubstitutor1.setVariableResolver(strStrLookup9);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor13 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup9);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean17 = strBuilder15.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln(false);
        int int22 = strBuilder21.length();
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher31, strMatcher33);
        java.util.List<java.lang.String> strList35 = strTokenizer34.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder21.appendAll((java.lang.Iterable<java.lang.String>) strList35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.ensureCapacity((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.reverse();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = strSubstitutor13.replace(strBuilder42, (-1), 80);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNotNull(strStrLookup9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 13 + "'", int22 == 13);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test04397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04397");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor1.setVariableSuffix('4');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor8.setVariablePrefix("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder14.appendln(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.trim();
        boolean boolean38 = strBuilder12.equalsIgnoreCase(strBuilder32);
        char[] charArray39 = null;
        char[] charArray40 = strBuilder32.getChars(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, '4');
        java.lang.String str43 = strSubstitutor8.replace(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, "#\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "hi!#4#a4#\na100");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "hi!#4#a4#\na100");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[h, i, !, #, 4, #, a, 4, #, \n, a, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!#4#a4#\na100" + "'", str43, "hi!#4#a4#\na100");
    }

    @Test
    public void test04398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04398");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        boolean boolean16 = strTokenizer15.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setQuoteChar('#');
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        java.lang.Object obj35 = properties1.put((java.lang.Object) '#', (java.lang.Object) strTokenizer31);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean39 = strBuilder37.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append(true);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher50, strMatcher52);
        boolean boolean54 = strTokenizer53.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder37.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        properties57.clear();
        java.util.Enumeration<?> wildcardEnumeration59 = properties57.propertyNames();
        char[] charArray66 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher68, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getQuoteMatcher();
        boolean boolean73 = properties57.containsValue((java.lang.Object) strMatcher72);
        int int75 = strBuilder37.indexOf(strMatcher72, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder37.appendln((float) (short) -1);
        java.util.Properties properties78 = null;
        java.util.Properties properties79 = new java.util.Properties(properties78);
        properties79.clear();
        java.util.Set<java.lang.Object> objSet81 = properties79.keySet();
        java.util.Properties properties82 = null;
        java.util.Properties properties83 = new java.util.Properties(properties82);
        properties83.clear();
        properties83.clear();
        properties83.clear();
        properties79.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties83);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet88 = properties79.entrySet();
        java.lang.Object obj89 = properties1.getOrDefault((java.lang.Object) strBuilder37, (java.lang.Object) properties79);
        int int90 = strBuilder37.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder37.appendSeparator('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder92.deleteFirst("41a14");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder92.deleteAll("java.io.IOException: h100.0i!1.0\n#4#a4#19\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder96.deleteFirst("14a#4#\n.1!i.1hhi!1.\nfalse\n#");
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(wildcardEnumeration59);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(objSet81);
        org.junit.Assert.assertNotNull(objEntrySet88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "{}");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 35 + "'", int90 == 35);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test04399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04399");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("h!true#4#a4#false");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean5 = strBuilder3.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('#', (int) (short) 1);
        int int15 = strBuilder12.lastIndexOf('4', 10);
        char[] charArray22 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, "");
        java.lang.Object[] objArray25 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder12.appendAll(objArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder12.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer30 = strBuilder12.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.append(stringBuffer30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder1.append(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.reverse();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.insert(126, '\n');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 126");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(stringBuffer30);
        org.junit.Assert.assertEquals(stringBuffer30.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test04400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04400");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendSeparator('#');
        java.lang.String str28 = strBuilder21.midString(40, (int) (short) 10);
        java.lang.String str29 = strBuilder21.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "h!true#4#a4#false#" + "'", str29, "h!true#4#a4#false#");
    }

    @Test
    public void test04401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04401");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        boolean boolean4 = strTokenizer3.isIgnoreEmptyTokens();
        java.lang.String str5 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer3.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("i!", strMatcher1, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("i");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: " + "'", str5, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer10);
    }

    @Test
    public void test04402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04402");
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        properties2.clear();
        properties2.clear();
        properties2.clear();
        java.util.Properties properties6 = new java.util.Properties(properties2);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.appendln((double) '4');
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        boolean boolean28 = strTokenizer27.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList29 = strTokenizer27.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer27.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder8.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer36 = strBuilder8.asWriter();
        writer36.write((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher49, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder40.appendln(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        java.io.Writer writer65 = writer36.append((java.lang.CharSequence) strBuilder58, 0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.append('#');
        java.io.Writer writer74 = writer36.append((java.lang.CharSequence) strBuilder68);
        boolean boolean75 = properties2.containsKey((java.lang.Object) strBuilder68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]");
        java.lang.String str78 = strTokenizer77.next();
        boolean boolean79 = properties2.equals((java.lang.Object) str78);
        java.lang.String str80 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) 21, properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties2.elements();
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(writer65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(writer74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "StrTokenizer[not" + "'", str78, "StrTokenizer[not");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "21" + "'", str80, "21");
        org.junit.Assert.assertNotNull(objEnumeration81);
    }

    @Test
    public void test04403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04403");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        char[] charArray20 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "");
        java.lang.Object[] objArray23 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendAll(objArray23);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder10.replaceFirst(strMatcher38, "StrTokenizer[not tokenized yet]");
        java.lang.StringBuffer stringBuffer41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.append(stringBuffer41, (int) (short) 1, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append((double) 14);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceFirst("\n", "h100.0i!1.0\n#4#a4#\n");
        java.lang.Class<?> wildcardClass52 = strBuilder51.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test04404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04404");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        int int14 = strBuilder13.length();
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        java.util.List<java.lang.String> strList27 = strTokenizer26.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.appendAll((java.lang.Iterable<java.lang.String>) strList27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean32 = strBuilder30.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(true);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        boolean boolean47 = strTokenizer46.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder28.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean53 = strBuilder51.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln(false);
        boolean boolean59 = strBuilder57.contains(' ');
        java.lang.Object obj60 = properties1.put((java.lang.Object) strBuilder28, (java.lang.Object) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendNull();
        boolean boolean63 = strBuilder57.contains("StrTokenizer[not");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup64 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor65 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup64);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup66 = strSubstitutor65.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor68 = strSubstitutor65.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer69 = null;
        boolean boolean70 = strSubstitutor65.replaceIn(stringBuffer69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strSubstitutor65.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor73 = strSubstitutor65.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor75 = strSubstitutor65.setVariableSuffix('#');
        java.lang.String str77 = strSubstitutor75.replace("#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        strSubstitutor75.setEnableSubstitutionInVariables(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strSubstitutor75.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder57.replaceFirst(strMatcher80, "StrTokenzer[not tokenzed yet]");
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 13 + "'", int14 == 13);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardStrLookup66);
        org.junit.Assert.assertNotNull(strSubstitutor68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strSubstitutor73);
        org.junit.Assert.assertNotNull(strSubstitutor75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str77, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test04405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04405");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor1.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor1.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor9.setVariablePrefix("#4#a4#");
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        java.util.Enumeration<?> wildcardEnumeration15 = properties13.propertyNames();
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getQuoteMatcher();
        boolean boolean29 = properties13.containsValue((java.lang.Object) strMatcher28);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor30 = strSubstitutor9.setVariablePrefixMatcher(strMatcher28);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor32 = strSubstitutor30.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.appendln((double) '4');
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher50, strMatcher52);
        boolean boolean54 = strTokenizer53.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList55 = strTokenizer53.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer53.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder34.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer59, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer62 = strBuilder34.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean66 = strBuilder64.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.replaceFirst('#', '4');
        char[] charArray77 = strBuilder70.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        writer62.write(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray77);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str86 = strSubstitutor32.replace(charArray77, 110, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertNotNull(wildcardEnumeration15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSubstitutor30);
        org.junit.Assert.assertNotNull(strSubstitutor32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(writer62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strTokenizer83);
    }

    @Test
    public void test04406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04406");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        int int14 = strBuilder11.indexOf(' ', (int) (byte) 1);
        int int17 = strBuilder11.lastIndexOf('a', 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean22 = strBuilder20.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(false);
        int int27 = strBuilder26.length();
        int int30 = strBuilder26.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean36 = strBuilder34.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((float) 1L);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher47, strMatcher49);
        java.util.List<java.lang.String> strList51 = strTokenizer50.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder34.appendAll((java.lang.Iterable<java.lang.String>) strList51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray56 = strBuilder55.toCharArray();
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher65, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher65, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', 'a');
        char[] charArray74 = strBuilder32.getChars(charArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder11.insert(0, charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '4');
        java.lang.String str78 = strTokenizer77.next();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 13 + "'", int27 == 13);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "hi!1.0\nalse\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "hi!1.0\nalse\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[h, i, !, 1, ., 0, \n, a, l, s, e, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "hi!1.0\nalse\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "hi!1.0\nalse\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[h, i, !, 1, ., 0, \n, a, l, s, e, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!1.0\nalse\n#" + "'", str78, "hi!1.0\nalse\n#");
    }

    @Test
    public void test04407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04407");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        java.lang.String str25 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNewLine();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        properties30.clear();
        properties30.clear();
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.appendAll((java.lang.Iterable<java.lang.String>) strSet34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder22.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.replaceAll("hi!\n100aaaaaaa52.0\n", "#4a#4#\n0.1!i0.001h$$$$$hi!\n#hi!100\naaaaaaaaaaa");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.append((long) 11);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.deleteAll(strMatcher47);
        boolean boolean50 = strBuilder48.startsWith("hi!true#4#a4#16.0\n97\n");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#4a#4#\n0.1!i0.001h" + "'", str25, "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test04408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04408");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        java.lang.String str61 = properties20.getProperty("#4a#4#\n0.1!i0.001h");
        java.util.Properties properties62 = new java.util.Properties(properties20);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties20.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties20.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties20.keys();
        java.lang.Object obj68 = properties20.setProperty("hi!\n\n#4a#4#\n0.1!i0.001h", "h100.0i!");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNull(obj68);
    }

    @Test
    public void test04409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04409");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer21, "0.0i!1.0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean27 = strBuilder25.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendln((float) 1L);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        java.util.List<java.lang.String> strList42 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder25.appendAll((java.lang.Iterable<java.lang.String>) strList42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('4', 0);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher60, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer63.setTrimmerMatcher(strMatcher65);
        java.lang.String str67 = strTokenizer63.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder51.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer63.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder16.appendln((java.lang.Object) strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.setNewLineText("Obj");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.insert(33, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder74.insert(15, (float) 'h');
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str67, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test04410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04410");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.replace(10, 12, "#");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.insert(39, 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 39");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test04411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04411");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        boolean boolean24 = strBuilder22.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendln((long) 19);
        java.lang.String str27 = strBuilder26.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendFixedWidthPadLeft(26, 174, 'b');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test04412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04412");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        java.lang.String str1 = strTokenizer0.previousToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean5 = strBuilder3.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(false);
        int int10 = strBuilder9.length();
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        java.util.List<java.lang.String> strList23 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder9.appendAll((java.lang.Iterable<java.lang.String>) strList23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.ensureCapacity((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean35 = strBuilder33.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln(false);
        int int40 = strBuilder39.length();
        int int43 = strBuilder39.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.replaceAll('4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("", "");
        java.lang.String str52 = strTokenizer51.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer51.getQuoteMatcher();
        int int55 = strBuilder48.lastIndexOf(strMatcher53, 0);
        boolean boolean56 = strBuilder29.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer0.setQuoteMatcher(strMatcher53);
        boolean boolean58 = strTokenizer0.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 13 + "'", int10 == 13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 13 + "'", int40 == 13);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test04413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04413");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        int int11 = strBuilder7.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replaceAll('4', ' ');
        java.util.stream.IntStream intStream17 = strBuilder7.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.replaceFirst('1', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder7.appendFixedWidthPadRight(82, (int) (byte) 1, 't');
        char[] charArray28 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean32 = strBuilder30.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(true);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        boolean boolean47 = strTokenizer46.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        boolean boolean61 = strBuilder30.contains(strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer62.setIgnoredMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder24.replaceFirst(strMatcher64, "hi!true4a40\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder24.insert(115, (long) 90);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 115");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test04414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04414");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        int int3 = strTokenizer2.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setDelimiterString("0                                                 ");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getQuoteMatcher();
        boolean boolean7 = strTokenizer5.hasNext();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test04415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04415");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder1.appendFixedWidthPadLeft(1, 3, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceAll("hi!1.0\nfalse\n#4#a4#", "0                                                 ");
        // The following exception was thrown during execution in test generation
        try {
            char char26 = strBuilder21.charAt(80);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 80");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test04416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04416");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('4', 0);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setTrimmerMatcher(strMatcher41);
        java.lang.String str43 = strTokenizer39.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer39.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder48.appendln(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher65, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer46.reset(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer71.setIgnoredMatcher(strMatcher73);
        int int75 = strTokenizer71.nextIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test04417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04417");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!\n10aaaaaaaaaaaaaaa10$", 'a', 'b');
    }

    @Test
    public void test04418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04418");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((double) '4');
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        boolean boolean21 = strTokenizer20.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList22 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer20.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "StrTokenizer[not tokenized yet]");
        boolean boolean29 = strTokenizer26.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = strTokenizer26.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test04419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04419");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray28);
        int int37 = strBuilder21.indexOf(strMatcher35, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder21.append((float) (short) -1);
        java.lang.String str41 = strBuilder39.substring(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.appendFixedWidthPadRight(0, (int) '\n', 'h');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 7 + "'", int37 == 7);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!true#4#a4#false-1.0" + "'", str41, "hi!true#4#a4#false-1.0");
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test04420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04420");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup22 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray30);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher46, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher37, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor55 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup22, strMatcher50, strMatcher53, '$');
        int int57 = strBuilder21.lastIndexOf(strMatcher53, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder21.replaceAll('a', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder21.append((float) (short) 1);
        int int63 = strBuilder62.capacity();
        int int66 = strBuilder62.lastIndexOf("100.01.0\n#4#a4#", 20);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.appendSeparator("{=StrTokenizer[not tokenized yet]}", 133);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strStrLookup22);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 35 + "'", int63 == 35);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test04421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04421");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        int int15 = strBuilder10.indexOf("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.appendSeparator("#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.deleteAll('$');
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.append(stringBuffer20, (int) 'h', 80);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher34, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray32);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder25.appendln(charArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendSeparator('a', 10);
        java.util.Properties properties44 = new java.util.Properties();
        boolean boolean45 = strBuilder40.equals((java.lang.Object) properties44);
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher54, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher69, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder60.appendln(charArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean83 = properties44.remove((java.lang.Object) charArray52, (java.lang.Object) strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder78.replaceAll('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder78.append("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.appendSeparator('i');
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder92.append((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder92.deleteAll("hi!1.0\nfalse\n#4#a4");
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder10.appendln(strBuilder96);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test04422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04422");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.deleteFirst("");
        boolean boolean8 = strBuilder7.isEmpty();
        java.lang.String str9 = strBuilder7.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.setLength((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean15 = strBuilder13.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.append(true);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder11.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((long) 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean40 = strBuilder38.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.append(true);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher51, strMatcher53);
        boolean boolean55 = strTokenizer54.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder38.appendAll((java.util.Iterator<java.lang.String>) strTokenizer54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.reverse();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder36.append((java.lang.CharSequence) strBuilder56, 278, 16);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!1.0\n" + "'", str9, "hi!1.0\n");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test04423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04423");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        int int11 = strBuilder7.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replaceAll('4', ' ');
        java.util.stream.IntStream intStream17 = strBuilder7.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.replaceFirst('1', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendln((double) '4');
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        boolean boolean42 = strTokenizer41.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList43 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer41.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder22.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer47, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer50 = strBuilder22.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean54 = strBuilder52.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.replaceFirst('#', '4');
        char[] charArray65 = strBuilder58.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        writer50.write(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder20.appendln(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln('#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.appendln("hi!\na33.0\n\n", (int) ' ', 6);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(writer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test04424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04424");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) 10.0f);
        char[] charArray82 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, strMatcher84, strMatcher86);
        java.util.List<java.lang.String> strList88 = strTokenizer87.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer87.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder73.appendFixedWidthPadLeft((java.lang.Object) strTokenizer90, (int) (short) 0, '$');
        java.lang.Object obj94 = strTokenizer90.clone();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer90.add("\nfalse\n#\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test04425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04425");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        int int9 = strBuilder7.lastIndexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.deleteAll(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.setNewLineText("$");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test04426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04426");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("100.01.0\n#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("", "");
        java.lang.String str6 = strTokenizer5.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getQuoteMatcher();
        java.lang.String[] strArray8 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer5.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!1.0\nfalse\n#4#a4#", strMatcher2, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.reset("Str10okenizer[#4#a4#]");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer12.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer12);
    }

    @Test
    public void test04427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04427");
        char[] charArray1 = new char[] { '0' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[0]");
        org.junit.Assert.assertNotNull(strTokenizer2);
    }

    @Test
    public void test04428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04428");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.replaceAll('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder54.append("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendSeparator('i');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.append((float) 1L);
        boolean boolean71 = strBuilder68.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.appendNull();
        boolean boolean73 = strBuilder72.isEmpty();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test04429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04429");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.ensureCapacity((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("1.0\nfalse\n#");
        int int30 = strBuilder29.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.setCharAt(7, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.clear();
        java.util.stream.IntStream intStream35 = strBuilder29.codePoints();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
    }

    @Test
    public void test04430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04430");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, "hi!\n100aaaaaaa52.0\n", "hi!1.0\nfalse\n#", 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup8 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup8);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup10 = strSubstitutor9.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = strSubstitutor9.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup13 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str15 = strStrLookup13.lookup("{}");
        strSubstitutor9.setVariableResolver(strStrLookup13);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor32 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup13, strMatcher17, strMatcher30, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer6.setDelimiterMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.appendNewLine();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        properties39.clear();
        properties39.clear();
        java.util.Set<java.lang.String> strSet43 = properties39.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.appendAll((java.lang.Iterable<java.lang.String>) strSet43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.setNullText("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean51 = strBuilder49.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.append(true);
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher62, strMatcher64);
        boolean boolean66 = strTokenizer65.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder49.appendAll((java.util.Iterator<java.lang.String>) strTokenizer65);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        properties69.clear();
        java.util.Enumeration<?> wildcardEnumeration71 = properties69.propertyNames();
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher80, strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getQuoteMatcher();
        boolean boolean85 = properties69.containsValue((java.lang.Object) strMatcher84);
        int int87 = strBuilder49.indexOf(strMatcher84, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder47.deleteFirst(strMatcher84);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor90 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, strMatcher34, strMatcher84, 'a');
        java.lang.String str92 = strStrLookup0.lookup("#4a#4#\n0.1!i0.001h$$$$$hi!\n#\n");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor93 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor94 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor96 = strSubstitutor94.setVariablePrefix("#4#a4#100");
        java.lang.String str98 = strSubstitutor94.replace("{#=StrTokenizer[not tokenized yet]}");
        org.junit.Assert.assertNotNull(strStrLookup0);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNull(wildcardStrLookup10);
        org.junit.Assert.assertNotNull(strSubstitutor12);
        org.junit.Assert.assertNotNull(strStrLookup13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(wildcardEnumeration71);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNotNull(strSubstitutor96);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "{#=StrTokenizer[not tokenized yet]}" + "'", str98, "{#=StrTokenizer[not tokenized yet]}");
    }

    @Test
    public void test04431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04431");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.appendln((double) '4');
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList44 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder23.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "StrTokenizer[not tokenized yet]");
        boolean boolean51 = strBuilder16.equals((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.deleteFirst("1.0\nf");
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append((float) 46);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteAll('0');
        java.io.Writer writer59 = strBuilder56.asWriter();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup61 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor67 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup61, strMatcher63, strMatcher65, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!\n100aaaaaaa52.0\n", strMatcher65, strMatcher68);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder56.replaceAll(strMatcher68, "java.io.IOException: 0                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(writer59);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher68);
    }

    @Test
    public void test04432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04432");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer1.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer1.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer7.reset();
        java.lang.Class<?> wildcardClass9 = strTokenizer8.getClass();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test04433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04433");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendFixedWidthPadRight(16, 11, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.delete((int) (short) 0, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((double) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendSeparator("111", 40);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean40 = strBuilder38.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.appendln((float) 1L);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher51, strMatcher53);
        boolean boolean55 = strTokenizer54.isEmptyTokenAsNull();
        int int56 = strTokenizer54.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer54.setTrimmerMatcher(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder38.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.append((float) 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.replaceAll('$', ' ');
        char[] charArray65 = strBuilder64.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder31.append(charArray65);
        java.lang.String str67 = strBuilder31.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "hi!1.013.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "hi!1.013.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[h, i, !, 1, ., 0, 1, 3, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "0.0\n111hi!1.013.0" + "'", str67, "0.0\n111hi!1.013.0");
    }

    @Test
    public void test04434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04434");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.lang.String str5 = properties1.toString();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        java.util.Enumeration<?> wildcardEnumeration9 = properties7.propertyNames();
        boolean boolean11 = properties7.containsKey((java.lang.Object) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean15 = strBuilder13.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendln((float) 1L);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        java.util.List<java.lang.String> strList30 = strTokenizer29.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendAll((java.lang.Iterable<java.lang.String>) strList30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray35 = strBuilder34.toCharArray();
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher44, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher44, strMatcher48);
        java.lang.Object obj50 = properties7.get((java.lang.Object) charArray35);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties7.keys();
        java.util.Properties properties52 = new java.util.Properties(properties7);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher63, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder54.appendln(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder72.append('a');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup80 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor81 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup80);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup82 = strSubstitutor81.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor84 = strSubstitutor81.setVariablePrefix('a');
        strSubstitutor81.setEnableSubstitutionInVariables(true);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor88 = strSubstitutor81.setVariablePrefix('1');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor90 = strSubstitutor81.setVariableSuffix("hi!1.013.0");
        java.lang.Object obj91 = properties52.put((java.lang.Object) 'a', (java.lang.Object) strSubstitutor90);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        boolean boolean93 = properties1.isEmpty();
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNull(wildcardStrLookup82);
        org.junit.Assert.assertNotNull(strSubstitutor84);
        org.junit.Assert.assertNotNull(strSubstitutor88);
        org.junit.Assert.assertNotNull(strSubstitutor90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test04435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04435");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        properties23.clear();
        properties23.clear();
        properties23.clear();
        boolean boolean27 = strBuilder19.equals((java.lang.Object) properties23);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties23.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties23.entrySet();
        properties23.clear();
        java.util.Collection<java.lang.Object> objCollection31 = properties23.values();
        java.util.Collection<java.lang.Object> objCollection32 = properties23.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(objCollection32);
    }

    @Test
    public void test04436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04436");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor1.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor1.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor9.setVariablePrefix("#4#a4#");
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        java.util.Enumeration<?> wildcardEnumeration15 = properties13.propertyNames();
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getQuoteMatcher();
        boolean boolean29 = properties13.containsValue((java.lang.Object) strMatcher28);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor30 = strSubstitutor9.setVariablePrefixMatcher(strMatcher28);
        java.lang.String str34 = strSubstitutor9.replace("hi!1.0\n#{StrTokenizer[not=0                                                 }", 13, 30);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = strSubstitutor9.replace("a4#false\norg.apache.", 222, 43);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertNotNull(wildcardEnumeration15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSubstitutor30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "okenizer[not=0                " + "'", str34, "okenizer[not=0                ");
    }

    @Test
    public void test04437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04437");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        boolean boolean37 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties1.entrySet();
        java.util.Collection<java.lang.Object> objCollection39 = properties1.values();
        java.lang.Object obj40 = properties1.clone();
        java.util.Properties properties41 = new java.util.Properties(properties1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer43.reset();
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher54, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray52);
        char[] charArray66 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher68, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher59, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer44.setTrimmerMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.setTrimmerMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer74.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer79.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer74.setIgnoredMatcher(strMatcher81);
        boolean boolean83 = strTokenizer74.hasPrevious();
        java.lang.Object obj84 = properties1.remove((java.lang.Object) strTokenizer74);
        java.lang.String str86 = properties1.getProperty("0.0i!1.0\n#4#a4#\n17");
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test04438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04438");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        int int26 = strBuilder22.indexOf('#');
        java.lang.StringBuffer stringBuffer27 = strBuilder22.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceAll(' ', '#');
        boolean boolean35 = strBuilder30.contains("hi!1.0\nfalse\n4");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.appendSeparator('#', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder22.appendFixedWidthPadLeft((java.lang.Object) strBuilder30, (int) (byte) 10, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.insert(0, "010.0");
        boolean boolean46 = strBuilder41.endsWith("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(stringBuffer27);
        org.junit.Assert.assertEquals(stringBuffer27.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test04439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04439");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendNull();
        char[] charArray17 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean21 = strBuilder19.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append(true);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        boolean boolean36 = strTokenizer35.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder19.appendAll((java.util.Iterator<java.lang.String>) strTokenizer35);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher46, strMatcher48);
        boolean boolean50 = strBuilder19.contains(strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher46);
        char[] charArray55 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean59 = strBuilder57.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.append(true);
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher70, strMatcher72);
        boolean boolean74 = strTokenizer73.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder57.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        char[] charArray82 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, strMatcher84, strMatcher86);
        boolean boolean88 = strBuilder57.contains(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher84);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder7.append(charArray17, 22, (int) '$');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 36");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test04440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04440");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        int int26 = strBuilder22.indexOf('#');
        java.lang.StringBuffer stringBuffer27 = strBuilder22.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean31 = strBuilder29.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln(false);
        int int36 = strBuilder35.length();
        int int39 = strBuilder35.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean45 = strBuilder43.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln((float) 1L);
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher56, strMatcher58);
        java.util.List<java.lang.String> strList60 = strTokenizer59.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder43.appendAll((java.lang.Iterable<java.lang.String>) strList60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray65 = strBuilder64.toCharArray();
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher74, strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher74, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a', 'a');
        char[] charArray83 = strBuilder41.getChars(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder22.appendln(charArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.append((double) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.appendSeparator('0', 62);
        java.lang.String str90 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) '0');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(stringBuffer27);
        org.junit.Assert.assertEquals(stringBuffer27.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 13 + "'", int36 == 13);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "hi!1.0\nalse\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "hi!1.0\nalse\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[h, i, !, 1, ., 0, \n, a, l, s, e, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "hi!1.0\nalse\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "hi!1.0\nalse\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[h, i, !, 1, ., 0, \n, a, l, s, e, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "0" + "'", str90, "0");
    }

    @Test
    public void test04441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04441");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.setCharAt((int) (byte) 0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.insert(3, "StrTokeniz");
        int int13 = strBuilder7.indexOf('$', 174);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test04442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04442");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.String str23 = strBuilder22.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean27 = strBuilder25.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendSeparator('#', (int) (short) 1);
        int int37 = strBuilder34.lastIndexOf('4', 10);
        char[] charArray44 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, "");
        java.lang.Object[] objArray47 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder34.appendAll(objArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder34.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer52 = strBuilder34.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder22.append(stringBuffer52);
        int int54 = strBuilder22.length();
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray57 = strBuilder22.toCharArray(21, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(stringBuffer52);
        org.junit.Assert.assertEquals(stringBuffer52.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 33 + "'", int54 == 33);
    }

    @Test
    public void test04443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04443");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.insert(0, (long) '#');
        boolean boolean42 = properties1.equals((java.lang.Object) '#');
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties1.elements();
        java.lang.Object obj44 = properties1.clone();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        properties46.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties46.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet49 = properties46.entrySet();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer51.reset();
        java.lang.String str53 = strTokenizer52.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.appendln((double) '4');
        char[] charArray71 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher73, strMatcher75);
        boolean boolean77 = strTokenizer76.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList78 = strTokenizer76.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer76.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer80.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder57.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer82, "StrTokenizer[not tokenized yet]");
        java.lang.Object obj85 = properties46.putIfAbsent((java.lang.Object) strTokenizer52, (java.lang.Object) strTokenizer82);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.lang.Object obj87 = properties46.clone();
        java.util.Set<java.lang.Object> objSet88 = properties46.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties46.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet90 = properties46.entrySet();
        properties46.clear();
        java.io.PrintStream printStream92 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties46.list(printStream92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNotNull(objEntrySet49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "{StrTokenizer[hi!]=StrTokenizer[]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "{StrTokenizer[hi!]=StrTokenizer[]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "{StrTokenizer[hi!]=StrTokenizer[]}");
        org.junit.Assert.assertNotNull(objSet88);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNotNull(objEntrySet90);
    }

    @Test
    public void test04444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04444");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        java.lang.String str61 = properties20.getProperty("#4a#4#\n0.1!i0.001h");
        java.util.Properties properties62 = new java.util.Properties(properties20);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties20.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties20.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean68 = strBuilder66.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.appendln(false);
        int int73 = strBuilder72.length();
        int int76 = strBuilder72.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.appendNewLine();
        boolean boolean78 = properties20.equals((java.lang.Object) strBuilder72);
        properties20.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties20.elements();
        java.util.Set<java.lang.String> strSet81 = properties20.stringPropertyNames();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 13 + "'", int73 == 13);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNotNull(strSet81);
    }

    @Test
    public void test04445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04445");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        java.util.Set<java.lang.Object> objSet6 = properties1.keySet();
        java.lang.String str7 = properties1.toString();
        java.util.Collection<java.lang.Object> objCollection8 = properties1.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean13 = strBuilder11.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendln((float) 1L);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        java.util.List<java.lang.String> strList28 = strTokenizer27.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.appendAll((java.lang.Iterable<java.lang.String>) strList28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendSeparator('4', 0);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher46, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer49.setTrimmerMatcher(strMatcher51);
        java.lang.String str53 = strTokenizer49.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder37.appendAll((java.util.Iterator<java.lang.String>) strTokenizer49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer49.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getQuoteMatcher();
        java.lang.Object obj58 = properties1.putIfAbsent((java.lang.Object) 0L, (java.lang.Object) strTokenizer56);
        java.util.Properties properties59 = new java.util.Properties(properties1);
        java.io.OutputStream outputStream60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties59.store(outputStream60, "#");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str53, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test04446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04446");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        int int19 = strTokenizer17.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer17.setTrimmerMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.deleteAll(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', ' ');
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        properties27.clear();
        properties27.clear();
        char[] charArray34 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean38 = strBuilder36.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.append(true);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher49, strMatcher51);
        boolean boolean53 = strTokenizer52.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder36.appendAll((java.util.Iterator<java.lang.String>) strTokenizer52);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher63, strMatcher65);
        boolean boolean67 = strBuilder36.contains(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher63);
        boolean boolean69 = properties27.equals((java.lang.Object) strMatcher63);
        int int70 = properties27.size();
        java.util.Set<java.lang.String> strSet71 = properties27.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder22.appendWithSeparators((java.lang.Iterable<java.lang.String>) strSet71, "hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.append('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.ensureCapacity(69);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray80 = strBuilder77.toCharArray(109, (int) 'i');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test04447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04447");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str2 = strStrLookup0.lookup("{}");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup3 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup3);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup5 = strSubstitutor4.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor7 = strSubstitutor4.setVariablePrefix("hi!");
        char char8 = strSubstitutor7.getEscapeChar();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strSubstitutor7.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean14 = strBuilder12.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.append(true);
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher25, strMatcher27);
        boolean boolean29 = strTokenizer28.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder12.appendAll((java.util.Iterator<java.lang.String>) strTokenizer28);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer42.setTrimmerMatcher(strMatcher44);
        int int47 = strBuilder30.lastIndexOf(strMatcher44, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!1.0\nfalse\n4", strMatcher44);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, strMatcher9, strMatcher44, '4');
        java.lang.String str52 = strStrLookup0.lookup("100");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor56 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, "hi!1.0\n", "", ' ');
        org.junit.Assert.assertNotNull(strStrLookup0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(wildcardStrLookup5);
        org.junit.Assert.assertNotNull(strSubstitutor7);
        org.junit.Assert.assertTrue("'" + char8 + "' != '" + '$' + "'", char8 == '$');
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test04448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04448");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        int int4 = properties1.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher18, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder9.appendln(charArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendln(charArray16);
        java.io.Writer writer26 = strBuilder7.asWriter();
        writer26.flush();
        writer26.write((int) (byte) -1);
        properties1.store(writer26, "hi!1.0\nfalse\n#");
        java.util.Properties properties32 = new java.util.Properties(properties1);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean36 = strBuilder34.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        int int41 = strBuilder40.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendSeparator("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendSeparator('i');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup52 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor53 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup52);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup54 = strSubstitutor53.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor56 = strSubstitutor53.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor58 = strSubstitutor53.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor60 = strSubstitutor58.setVariableSuffix("{}");
        boolean boolean61 = strSubstitutor58.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup62 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor63 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup62);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup64 = strSubstitutor63.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor66 = strSubstitutor63.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup67 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor68 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup67);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup69 = strSubstitutor68.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor71 = strSubstitutor68.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup72 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str74 = strStrLookup72.lookup("{}");
        strSubstitutor68.setVariableResolver(strStrLookup72);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray83 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, strMatcher85, strMatcher87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor91 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup72, strMatcher76, strMatcher89, '4');
        strSubstitutor66.setVariableResolver(strStrLookup72);
        strSubstitutor58.setVariableResolver(strStrLookup72);
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strSubstitutor58.getVariablePrefixMatcher();
        boolean boolean95 = strSubstitutor58.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor97 = strSubstitutor58.setVariablePrefix("hi!#4#a4#\na100");
        boolean boolean98 = properties1.remove((java.lang.Object) "java.io.IOException: java.io.IOException: java.io.IOException: ", (java.lang.Object) strSubstitutor58);
        java.util.Enumeration<?> wildcardEnumeration99 = properties1.propertyNames();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(writer26);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 13 + "'", int41 == 13);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(wildcardStrLookup54);
        org.junit.Assert.assertNotNull(strSubstitutor56);
        org.junit.Assert.assertNotNull(strSubstitutor58);
        org.junit.Assert.assertNotNull(strSubstitutor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(wildcardStrLookup64);
        org.junit.Assert.assertNotNull(strSubstitutor66);
        org.junit.Assert.assertNull(wildcardStrLookup69);
        org.junit.Assert.assertNotNull(strSubstitutor71);
        org.junit.Assert.assertNotNull(strStrLookup72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(strSubstitutor97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration99);
    }

    @Test
    public void test04449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04449");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        boolean boolean12 = strTokenizer11.isEmptyTokenAsNull();
        int int13 = strTokenizer11.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer11.setDelimiterString("hi!");
        java.lang.String str16 = strTokenizer11.toString();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer11.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test04450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04450");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("!#4#a4#\na100\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test04451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04451");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        java.lang.String str61 = properties20.getProperty("#4a#4#\n0.1!i0.001h");
        java.util.Properties properties62 = new java.util.Properties(properties20);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties20.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties20.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties20.keys();
        java.util.Properties properties66 = new java.util.Properties(properties20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer68.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer68.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setEmptyTokenAsNull(true);
        boolean boolean74 = properties66.equals((java.lang.Object) strTokenizer73);
        java.lang.Object obj75 = properties66.clone();
        java.io.InputStream inputStream76 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties66.loadFromXML(inputStream76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "{}");
    }

    @Test
    public void test04452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04452");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray29 = strBuilder28.toCharArray();
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher38, strMatcher42);
        java.lang.Object obj44 = properties1.get((java.lang.Object) charArray29);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties1.keys();
        java.util.Set<java.lang.Object> objSet46 = properties1.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendln((java.lang.Object) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendPadding(11, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean58 = strBuilder56.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.appendln((float) 1L);
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher69, strMatcher71);
        java.util.List<java.lang.String> strList73 = strTokenizer72.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder56.appendAll((java.lang.Iterable<java.lang.String>) strList73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.String str78 = strBuilder77.getNullText();
        char[] charArray85 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, strMatcher87, strMatcher89);
        int int91 = strBuilder77.lastIndexOf(strMatcher87);
        int int92 = strBuilder54.indexOf(strMatcher87);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder54.append((long) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder54.appendPadding((int) (byte) 0, 'i');
        boolean boolean98 = properties1.containsKey((java.lang.Object) strBuilder97);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 7 + "'", int91 == 7);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test04453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04453");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.lang.String str3 = properties1.toString();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getQuoteMatcher();
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher25, strMatcher27);
        char[] charArray35 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, "");
        boolean boolean38 = properties1.replace((java.lang.Object) strMatcher16, (java.lang.Object) charArray23, (java.lang.Object) charArray35);
        int int39 = properties1.size();
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher48, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer51.setTrimmerMatcher(strMatcher53);
        java.lang.String str55 = strTokenizer51.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher69, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder60.appendln(charArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder58.appendln(charArray67);
        java.io.Writer writer77 = strBuilder58.asWriter();
        writer77.flush();
        writer77.write((int) (byte) -1);
        writer77.flush();
        writer77.write("hi!1.0\nfalse\n#");
        java.lang.Object obj84 = properties1.getOrDefault((java.lang.Object) str55, (java.lang.Object) writer77);
        java.io.PrintStream printStream85 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printStream85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str55, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(writer77);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test04454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04454");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: ");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.lang.String str5 = iOException3.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: " + "'", str5, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
    }

    @Test
    public void test04455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04455");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder19.insert(1, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.insert((int) (byte) 0, (long) (short) 100);
        java.io.Reader reader39 = strBuilder32.asReader();
        int int40 = reader39.read();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup41 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup41);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup43 = strSubstitutor42.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor45 = strSubstitutor42.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer46 = null;
        boolean boolean47 = strSubstitutor42.replaceIn(stringBuffer46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strSubstitutor42.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = strSubstitutor42.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor52 = strSubstitutor42.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean56 = strBuilder54.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.replaceFirst('#', '4');
        char[] charArray67 = strBuilder60.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, ' ', '4');
        java.lang.String str71 = strSubstitutor42.replace(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        int int75 = reader39.read(charArray67, 4, 4);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder30.appendln(charArray67, 44, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 49 + "'", int40 == 49);
        org.junit.Assert.assertNull(wildcardStrLookup43);
        org.junit.Assert.assertNotNull(strSubstitutor45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strSubstitutor50);
        org.junit.Assert.assertNotNull(strSubstitutor52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "hi!10035alse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "hi!10035alse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[h, i, !, 1, 0, 0, 3, 5, a, l, s, e, \n, 4]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!1.0\nfalse\n4" + "'", str71, "hi!1.0\nfalse\n4");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 4 + "'", int75 == 4);
    }

    @Test
    public void test04456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04456");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.lang.String str3 = properties1.toString();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getQuoteMatcher();
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher25, strMatcher27);
        char[] charArray35 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, "");
        boolean boolean38 = properties1.replace((java.lang.Object) strMatcher16, (java.lang.Object) charArray23, (java.lang.Object) charArray35);
        int int39 = properties1.size();
        java.lang.String str40 = properties1.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
    }

    @Test
    public void test04457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04457");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        char[] charArray8 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.append(true);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        boolean boolean27 = strTokenizer26.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        boolean boolean41 = strBuilder10.contains(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher37);
        boolean boolean43 = properties1.equals((java.lang.Object) strMatcher37);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties1.elements();
        java.lang.String str46 = properties1.getProperty("1.0\nf");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties1.entrySet();
        java.io.OutputStream outputStream48 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream48, "i");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(objEntrySet47);
    }

    @Test
    public void test04458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04458");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) 7);
        int int26 = strBuilder25.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 18 + "'", int26 == 18);
    }

    @Test
    public void test04459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04459");
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        properties2.clear();
        java.util.Enumeration<?> wildcardEnumeration4 = properties2.propertyNames();
        boolean boolean6 = properties2.containsKey((java.lang.Object) (-1));
        java.util.Collection<java.lang.Object> objCollection7 = properties2.values();
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher16, strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean23 = strBuilder21.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln(false);
        int int28 = strBuilder27.length();
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        java.util.List<java.lang.String> strList41 = strTokenizer40.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder27.appendAll((java.lang.Iterable<java.lang.String>) strList41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendSeparator("{}", (int) (short) -1);
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher54, strMatcher56);
        boolean boolean58 = strTokenizer57.isEmptyTokenAsNull();
        int int59 = strTokenizer57.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer57.setTrimmerMatcher(strMatcher60);
        boolean boolean62 = properties2.replace((java.lang.Object) strMatcher16, (java.lang.Object) (short) -1, (java.lang.Object) strTokenizer61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("##a#", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.setDelimiterChar('1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer63.setIgnoreEmptyTokens(true);
        boolean boolean68 = strTokenizer63.isEmptyTokenAsNull();
        boolean boolean69 = strTokenizer63.hasNext();
        org.junit.Assert.assertNotNull(wildcardEnumeration4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 13 + "'", int28 == 13);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test04460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04460");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean15 = strBuilder13.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', (int) (short) 1);
        int int25 = strBuilder22.lastIndexOf('4', 10);
        char[] charArray32 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, "");
        java.lang.Object[] objArray35 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder22.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder22.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer40 = strBuilder22.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder9.appendln(stringBuffer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean45 = strBuilder43.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.appendln("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder41.appendFixedWidthPadRight((java.lang.Object) "StrTokenizer[#4#a4#]", 13, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.setLength(126);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.insert(0, "hi!1.0\nfalse\n#4");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.append("", (int) (short) 1, 20);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(stringBuffer40);
        org.junit.Assert.assertEquals(stringBuffer40.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test04461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04461");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        properties21.clear();
        java.util.Enumeration<?> wildcardEnumeration23 = properties21.propertyNames();
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getQuoteMatcher();
        boolean boolean37 = properties21.containsValue((java.lang.Object) strMatcher36);
        int int39 = strBuilder1.indexOf(strMatcher36, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder1.appendln((float) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder1.insert(5, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder1.trim();
        int int47 = strBuilder1.indexOf('#');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 9 + "'", int47 == 9);
    }

    @Test
    public void test04462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04462");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!0.0i!1. \n#4#a4#\n", '1');
    }

    @Test
    public void test04463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04463");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        boolean boolean16 = strTokenizer15.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setQuoteChar('#');
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        java.lang.Object obj35 = properties1.put((java.lang.Object) '#', (java.lang.Object) strTokenizer31);
        boolean boolean36 = properties1.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean40 = strBuilder38.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.appendln((float) 1L);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher51, strMatcher53);
        java.util.List<java.lang.String> strList55 = strTokenizer54.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder38.appendAll((java.lang.Iterable<java.lang.String>) strList55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray60 = strBuilder59.toCharArray();
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher69, strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher69, strMatcher73);
        boolean boolean75 = properties1.containsKey((java.lang.Object) strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("", '$', ' ');
        boolean boolean80 = properties1.equals((java.lang.Object) ' ');
        properties1.clear();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test04464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04464");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        char[] charArray8 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.append(true);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        boolean boolean27 = strTokenizer26.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        boolean boolean41 = strBuilder10.contains(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher37);
        boolean boolean43 = properties1.equals((java.lang.Object) strMatcher37);
        int int44 = properties1.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean48 = strBuilder46.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.append(true);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher59, strMatcher61);
        boolean boolean63 = strTokenizer62.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder46.appendAll((java.util.Iterator<java.lang.String>) strTokenizer62);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        properties66.clear();
        java.util.Enumeration<?> wildcardEnumeration68 = properties66.propertyNames();
        char[] charArray75 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher77, strMatcher79);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getQuoteMatcher();
        boolean boolean82 = properties66.containsValue((java.lang.Object) strMatcher81);
        int int84 = strBuilder46.indexOf(strMatcher81, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder46.appendln((float) (short) -1);
        boolean boolean87 = properties1.equals((java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet88 = properties1.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet89 = properties1.keySet();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(wildcardEnumeration68);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strSet88);
        org.junit.Assert.assertNotNull(objSet89);
    }

    @Test
    public void test04465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04465");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        java.lang.Object obj39 = properties1.setProperty("h100.0i!1.0\n#4#a4#\n", "#4#a4#");
        java.util.Properties properties40 = new java.util.Properties(properties1);
        int int41 = properties40.size();
        java.io.OutputStream outputStream42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties40.store(outputStream42, "hi!#4#a4#\na");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test04466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04466");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties0.entrySet();
        properties0.clear();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        java.util.Enumeration<?> wildcardEnumeration8 = properties6.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties6.entrySet();
        java.util.Properties properties10 = new java.util.Properties(properties6);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.lang.Object obj12 = properties6.clone();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNotNull(wildcardEnumeration8);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
    }

    @Test
    public void test04467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04467");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.trim();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup25 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str27 = strStrLookup25.lookup("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln((java.lang.Object) "{}");
        int int31 = strBuilder24.indexOf("StrTokenizer[not", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean35 = strBuilder33.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder24.appendln(strBuilder33);
        boolean boolean38 = strBuilder24.startsWith("\neslaf\n0.1!ih35.0\nhi!#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder24.replaceAll("e\nhi!1.0\nfalse\n4\n", "hi!1.0\nfalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder24.appendSeparator("#a4#false\n", "hi!true##a4#false-1.010.01hi!1.0\nalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean48 = strBuilder46.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.deleteFirst("");
        boolean boolean53 = strBuilder52.isEmpty();
        java.lang.String str54 = strBuilder52.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendSeparator(" yet]{}", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.appendSeparator('t', 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder52.deleteAll("i!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder24.appendFixedWidthPadLeft((java.lang.Object) strBuilder62, 89, 'b');
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strStrLookup25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!1.0\n" + "'", str54, "hi!1.0\n");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test04468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04468");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendln("StrTokenizer[#4#a4#]");
        java.io.Reader reader10 = strBuilder1.asReader();
        reader10.close();
        reader10.mark(35);
        long long15 = reader10.skip((long) 70);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean19 = strBuilder17.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.append(true);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        boolean boolean34 = strTokenizer33.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.replaceAll("", "hi!");
        boolean boolean45 = strBuilder43.startsWith("h!true#4#a4#false");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.deleteCharAt(16);
        char[] charArray48 = strBuilder47.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        int int50 = reader10.read(charArray48);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 28L + "'", long15 == 28L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "htruei!true#4#a4false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "htruei!true#4#a4false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[h, t, r, u, e, i, !, t, r, u, e, #, 4, #, a, 4, f, a, l, s, e]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test04469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04469");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray31);
        char[] charArray42 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean46 = strBuilder44.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append(true);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        boolean boolean61 = strTokenizer60.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder44.appendAll((java.util.Iterator<java.lang.String>) strTokenizer60);
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher71, strMatcher73);
        boolean boolean75 = strBuilder44.contains(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher71);
        char[] charArray83 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, strMatcher85, strMatcher87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher71, strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder24.append(charArray31);
        char[] charArray92 = strBuilder24.toCharArray();
        java.lang.StringBuffer stringBuffer93 = strBuilder24.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder24.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder95.append((long) 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder97.appendln(98);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "h100.0i!1.0\n#4#a4#32.0#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "h100.0i!1.0\n#4#a4#32.0#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #, 3, 2, ., 0, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(stringBuffer93);
        org.junit.Assert.assertEquals(stringBuffer93.toString(), "h100.0i!1.0\n#4#a4#32.0#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test04470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04470");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('a', 10);
        java.util.Properties properties23 = new java.util.Properties();
        boolean boolean24 = strBuilder19.equals((java.lang.Object) properties23);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher48, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder39.appendln(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean62 = properties23.remove((java.lang.Object) charArray31, (java.lang.Object) strBuilder57);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties23.keys();
        boolean boolean64 = properties23.isEmpty();
        java.lang.Object obj67 = properties23.setProperty("hi!\na", "#4#a4#");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties23.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder0.append((java.lang.Object) properties23);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.setLength(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.append(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test04471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04471");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.lang.Object obj8 = properties1.setProperty("h!true#4#a4#false", "StrTokenizer[#4#a4#]");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties1.entrySet();
        java.io.PrintStream printStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEntrySet9);
    }

    @Test
    public void test04472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04472");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties1.entrySet();
        properties1.clear();
        java.lang.String str46 = properties1.getProperty("java.io.IOException: java.io.IOException: java.io.IOException: ");
        java.lang.Object obj49 = properties1.setProperty("i!true", "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer51.reset();
        java.lang.String str53 = strTokenizer52.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer52.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("a4#false\norg.apache.");
        java.lang.Object obj59 = properties1.getOrDefault((java.lang.Object) strTokenizer52, (java.lang.Object) strMatcher58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties1.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties1.keys();
        boolean boolean62 = properties1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test04473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04473");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        boolean boolean16 = strTokenizer15.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setQuoteChar('#');
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        java.lang.Object obj35 = properties1.put((java.lang.Object) '#', (java.lang.Object) strTokenizer31);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean39 = strBuilder37.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append(true);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher50, strMatcher52);
        boolean boolean54 = strTokenizer53.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder37.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        properties57.clear();
        java.util.Enumeration<?> wildcardEnumeration59 = properties57.propertyNames();
        char[] charArray66 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher68, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getQuoteMatcher();
        boolean boolean73 = properties57.containsValue((java.lang.Object) strMatcher72);
        int int75 = strBuilder37.indexOf(strMatcher72, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder37.appendln((float) (short) -1);
        java.util.Properties properties78 = null;
        java.util.Properties properties79 = new java.util.Properties(properties78);
        properties79.clear();
        java.util.Set<java.lang.Object> objSet81 = properties79.keySet();
        java.util.Properties properties82 = null;
        java.util.Properties properties83 = new java.util.Properties(properties82);
        properties83.clear();
        properties83.clear();
        properties83.clear();
        properties79.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties83);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet88 = properties79.entrySet();
        java.lang.Object obj89 = properties1.getOrDefault((java.lang.Object) strBuilder37, (java.lang.Object) properties79);
        java.lang.Object obj92 = properties79.setProperty("hi!\na", "##a#");
        java.util.Enumeration<java.lang.Object> objEnumeration93 = properties79.keys();
        java.util.Set<java.lang.String> strSet94 = properties79.stringPropertyNames();
        java.io.PrintWriter printWriter95 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties79.list(printWriter95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(wildcardEnumeration59);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(objSet81);
        org.junit.Assert.assertNotNull(objEntrySet88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "{hi!\na=##a#}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "{hi!\na=##a#}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "{hi!\na=##a#}");
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNotNull(objEnumeration93);
        org.junit.Assert.assertNotNull(strSet94);
    }

    @Test
    public void test04474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04474");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(109);
    }

    @Test
    public void test04475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04475");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) 10.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.appendln(false);
        java.lang.String str78 = strBuilder73.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder73.append(' ');
        boolean boolean81 = strBuilder73.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test04476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04476");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        strSubstitutor1.setEnableSubstitutionInVariables(false);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor5 = strSubstitutor1.setVariableSuffix("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strSubstitutor5.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup7 = strSubstitutor5.getVariableResolver();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strSubstitutor5.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor5.setVariableSuffix('i');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = strSubstitutor10.setVariablePrefix("{hi!1.0\nfalse\n#4#a4#=hi!true#4#a4#4}");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup13 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup13);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup15 = strSubstitutor14.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor17 = strSubstitutor14.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer18 = null;
        boolean boolean19 = strSubstitutor14.replaceIn(stringBuffer18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strSubstitutor14.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor22 = strSubstitutor14.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup23 = strSubstitutor14.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor25 = strSubstitutor14.setVariableSuffix("#4a#4#\n0.1!i0.001h$$$$$hi!\n#hi!100\naaaaaaaaaaa");
        char[] charArray26 = null;
        java.lang.String str29 = strSubstitutor14.replace(charArray26, 97, 104);
        java.lang.String str31 = strSubstitutor14.replace("a");
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        properties33.clear();
        properties33.clear();
        properties33.clear();
        java.util.Set<java.lang.String> strSet37 = properties33.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean41 = strBuilder39.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln(false);
        java.lang.Object obj46 = properties33.remove((java.lang.Object) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.insert(0, 0L);
        java.lang.String str53 = strSubstitutor14.replace(strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean57 = strBuilder55.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendSeparator('#', (int) (short) 1);
        int int67 = strBuilder64.lastIndexOf('4', 10);
        char[] charArray74 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, "");
        java.lang.Object[] objArray77 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder64.appendAll(objArray77);
        char[] charArray85 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, strMatcher87, strMatcher89);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer90.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer90.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder64.replaceFirst(strMatcher92, "StrTokenizer[not tokenized yet]");
        java.lang.StringBuffer stringBuffer95 = strBuilder94.toStringBuffer();
        java.lang.String str96 = strSubstitutor14.replace(stringBuffer95);
        boolean boolean97 = strSubstitutor12.replaceIn(stringBuffer95);
        org.junit.Assert.assertNotNull(strSubstitutor5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNull(wildcardStrLookup7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNotNull(strSubstitutor12);
        org.junit.Assert.assertNull(wildcardStrLookup15);
        org.junit.Assert.assertNotNull(strSubstitutor17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strSubstitutor22);
        org.junit.Assert.assertNull(wildcardStrLookup23);
        org.junit.Assert.assertNotNull(strSubstitutor25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "a" + "'", str31, "a");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "0\neslaf\n0.1!ih" + "'", str53, "0\neslaf\n0.1!ih");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(stringBuffer95);
        org.junit.Assert.assertEquals(stringBuffer95.toString(), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "hi!1.0\nfalse\n#" + "'", str96, "hi!1.0\nfalse\n#");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test04477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04477");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.appendln((double) '4');
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList44 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder23.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "StrTokenizer[not tokenized yet]");
        boolean boolean51 = strBuilder16.equals((java.lang.Object) strBuilder50);
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder16.append(stringBuffer52, 98, (int) '#');
        boolean boolean57 = strBuilder55.startsWith("h100.0i!1.0\n#4#a4#19\n");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test04478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04478");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean10 = strBuilder8.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.append(true);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher21, strMatcher23);
        boolean boolean25 = strTokenizer24.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder8.appendAll((java.util.Iterator<java.lang.String>) strTokenizer24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt((int) (byte) 1);
        java.lang.String str31 = strSubstitutor6.replace(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean56 = strSubstitutor6.replaceIn(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln("java.io.IOException: StrTokenizer[#4#a4#]", 0, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.replaceAll("", "100.0i!1.0\n#4#a4#hi!1.0\nfalse\n#48");
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher72, strMatcher74);
        java.util.List<java.lang.String> strList76 = strTokenizer75.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder55.appendAll((java.lang.Iterable<java.lang.String>) strList76);
        char[] charArray84 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, strMatcher86, strMatcher88);
        boolean boolean90 = strTokenizer89.isEmptyTokenAsNull();
        int int91 = strTokenizer89.previousIndex();
        java.util.List<java.lang.String> strList92 = strTokenizer89.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder55.appendAll((java.lang.Iterable<java.lang.String>) strList92);
        java.lang.Iterable<java.lang.String> strIterable94 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder93.appendWithSeparators(strIterable94, "hi!#4#a4#\na100                                                 hi!\nahi!i1.0");
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "h!true#4#a4#false" + "'", str31, "h!true#4#a4#false");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test04479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04479");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        int int11 = strBuilder7.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replaceAll('4', ' ');
        java.util.stream.IntStream intStream17 = strBuilder7.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.replaceFirst('1', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendln((double) '4');
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        boolean boolean42 = strTokenizer41.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList43 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer41.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder22.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer47, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer50 = strBuilder22.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean54 = strBuilder52.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.replaceFirst('#', '4');
        char[] charArray65 = strBuilder58.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        writer50.write(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder20.appendln(charArray65);
        java.lang.String str74 = strBuilder73.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.replace(0, 11, "hi!\na ");
        char[] charArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.insert(46, charArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 46");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(writer50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test04480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04480");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.appendln((java.lang.Object) (short) 100);
        int int6 = strBuilder1.lastIndexOf('$');
        java.io.Reader reader7 = strBuilder1.asReader();
        boolean boolean8 = reader7.markSupported();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendln((float) 1L);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        java.util.List<java.lang.String> strList27 = strTokenizer26.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendAll((java.lang.Iterable<java.lang.String>) strList27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.setLength(0);
        int int36 = strBuilder35.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean40 = strBuilder38.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.appendln((float) 1L);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher51, strMatcher53);
        java.util.List<java.lang.String> strList55 = strTokenizer54.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder38.appendAll((java.lang.Iterable<java.lang.String>) strList55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray60 = strBuilder59.toCharArray();
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher69, strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher69, strMatcher73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray83 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, strMatcher85, strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray83);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder76.appendln(charArray83);
        int int93 = strMatcher73.isMatch(charArray83, (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray83);
        char[] charArray95 = strBuilder35.getChars(charArray83);
        // The following exception was thrown during execution in test generation
        try {
            int int98 = reader7.read(charArray83, 49, 23);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray95), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray95), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray95), "[#, 4, #, a, 4, #]");
    }

    @Test
    public void test04481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04481");
        java.io.IOException iOException2 = new java.io.IOException("#\n");
        java.io.IOException iOException3 = new java.io.IOException("0\n#4#", (java.lang.Throwable) iOException2);
        java.lang.String str4 = iOException2.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "java.io.IOException: #\n" + "'", str4, "java.io.IOException: #\n");
    }

    @Test
    public void test04482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04482");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        int int14 = strBuilder13.length();
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        java.util.List<java.lang.String> strList27 = strTokenizer26.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.appendAll((java.lang.Iterable<java.lang.String>) strList27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean32 = strBuilder30.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(true);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        boolean boolean47 = strTokenizer46.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder28.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean53 = strBuilder51.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln(false);
        boolean boolean59 = strBuilder57.contains(' ');
        java.lang.Object obj60 = properties1.put((java.lang.Object) strBuilder28, (java.lang.Object) strBuilder57);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.replaceFirst(strMatcher61, "hi!#4");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder57.insert(25, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 25");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 13 + "'", int14 == 13);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test04483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04483");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet3 = properties1.keySet();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties5.clear();
        properties5.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        java.util.Enumeration<?> wildcardEnumeration13 = properties11.propertyNames();
        boolean boolean15 = properties11.containsKey((java.lang.Object) (-1));
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        java.util.List<java.lang.String> strList28 = strTokenizer27.getTokenList();
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray35);
        java.lang.Object obj43 = properties11.getOrDefault((java.lang.Object) strList28, (java.lang.Object) charArray35);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup44 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor45 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup44);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup46 = strSubstitutor45.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor48 = strSubstitutor45.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = strSubstitutor45.setVariableSuffix('#');
        java.lang.StringBuffer stringBuffer51 = null;
        java.lang.String str54 = strSubstitutor45.replace(stringBuffer51, (-1), 0);
        java.lang.String str56 = strSubstitutor45.replace("StrTokenizer[not tokenized yet]");
        java.lang.Object obj57 = properties1.getOrDefault((java.lang.Object) charArray35, (java.lang.Object) strSubstitutor45);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor59 = strSubstitutor45.setVariableSuffix(' ');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor61 = strSubstitutor59.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean65 = strBuilder63.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.appendln((float) 1L);
        char[] charArray74 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, strMatcher76, strMatcher78);
        java.util.List<java.lang.String> strList80 = strTokenizer79.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder63.appendAll((java.lang.Iterable<java.lang.String>) strList80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray85 = strBuilder84.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.reverse();
        int int88 = strBuilder84.indexOf('#');
        java.lang.StringBuffer stringBuffer89 = strBuilder84.toStringBuffer();
        boolean boolean90 = strSubstitutor59.replaceIn(stringBuffer89);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str94 = strSubstitutor59.replace("java.io.IOException: .0\n#4#a4#\n", 100, (int) 't');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(wildcardStrLookup46);
        org.junit.Assert.assertNotNull(strSubstitutor48);
        org.junit.Assert.assertNotNull(strSubstitutor50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str56, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(strSubstitutor59);
        org.junit.Assert.assertNotNull(strSubstitutor61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(stringBuffer89);
        org.junit.Assert.assertEquals(stringBuffer89.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test04484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04484");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        boolean boolean9 = strBuilder7.contains(' ');
        int int10 = strBuilder7.length();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        java.util.Enumeration<?> wildcardEnumeration16 = properties14.propertyNames();
        boolean boolean18 = properties14.containsKey((java.lang.Object) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean22 = strBuilder20.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((float) 1L);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        java.util.List<java.lang.String> strList37 = strTokenizer36.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder20.appendAll((java.lang.Iterable<java.lang.String>) strList37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray42 = strBuilder41.toCharArray();
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher51, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher51, strMatcher55);
        java.lang.Object obj57 = properties14.get((java.lang.Object) charArray42);
        java.util.Properties properties58 = new java.util.Properties(properties14);
        java.lang.String str59 = properties14.toString();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup60 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor61 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup60);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup62 = strSubstitutor61.getVariableResolver();
        char char63 = strSubstitutor61.getEscapeChar();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strSubstitutor61.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray73 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher75, strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray73);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder66.appendln(charArray73);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray73);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher83, strMatcher84);
        boolean boolean86 = properties14.remove((java.lang.Object) strMatcher64, (java.lang.Object) charArray73);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder7.getChars(115, 70, charArray73, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 70");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 13 + "'", int10 == 13);
        org.junit.Assert.assertNotNull(wildcardEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{}" + "'", str59, "{}");
        org.junit.Assert.assertNull(wildcardStrLookup62);
        org.junit.Assert.assertTrue("'" + char63 + "' != '" + '$' + "'", char63 == '$');
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test04485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04485");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[not tokenized yet]");
        boolean boolean28 = strBuilder25.equals((java.lang.Object) strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.reverse();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.insert((int) '#', (long) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 35");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test04486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04486");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        boolean boolean16 = strTokenizer15.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setQuoteChar('#');
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        java.lang.Object obj35 = properties1.put((java.lang.Object) '#', (java.lang.Object) strTokenizer31);
        java.util.Properties properties36 = new java.util.Properties(properties1);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        java.util.Enumeration<?> wildcardEnumeration40 = properties38.propertyNames();
        boolean boolean42 = properties38.containsKey((java.lang.Object) (-1));
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        java.lang.String str44 = properties38.toString();
        boolean boolean45 = properties1.containsValue((java.lang.Object) properties38);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean49 = strBuilder47.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.append(true);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher60, strMatcher62);
        boolean boolean64 = strTokenizer63.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.appendSeparator('#');
        java.lang.String str74 = strBuilder67.midString(40, (int) (short) 10);
        java.util.Properties properties75 = null;
        java.util.Properties properties76 = new java.util.Properties(properties75);
        properties76.clear();
        java.util.Set<java.lang.Object> objSet78 = properties76.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder80.appendNewLine();
        java.util.Properties properties82 = null;
        java.util.Properties properties83 = new java.util.Properties(properties82);
        properties83.clear();
        properties83.clear();
        properties83.clear();
        java.util.Set<java.lang.String> strSet87 = properties83.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder80.appendAll((java.lang.Iterable<java.lang.String>) strSet87);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.append((-1L));
        boolean boolean91 = properties1.replace((java.lang.Object) 40, (java.lang.Object) objSet78, (java.lang.Object) strBuilder88);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean94 = properties1.containsValue((java.lang.Object) "hi!");
        java.io.OutputStream outputStream95 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream95, "hi!true#4#a4#0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{}" + "'", str44, "{}");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(objSet78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strSet87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test04487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04487");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.appendln(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.trim();
        boolean boolean27 = strBuilder1.equalsIgnoreCase(strBuilder21);
        char[] charArray28 = null;
        char[] charArray29 = strBuilder21.getChars(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean35 = strBuilder33.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln(false);
        int int40 = strBuilder39.length();
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher49, strMatcher51);
        java.util.List<java.lang.String> strList53 = strTokenizer52.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder39.appendAll((java.lang.Iterable<java.lang.String>) strList53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.ensureCapacity((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("1.0\nfalse\n#");
        int int62 = strBuilder61.length();
        char[] charArray63 = strBuilder61.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer31.reset(charArray63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.reset("1");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer64.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "hi!#4#a4#\na100");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "hi!#4#a4#\na100");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, i, !, #, 4, #, a, 4, #, \n, a, 1, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 13 + "'", int40 == 13);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 8 + "'", int62 == 8);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "hi!4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "hi!4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[h, i, !, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
    }

    @Test
    public void test04488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04488");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.ensureCapacity(18);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append('h');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        int int18 = strBuilder14.lastIndexOf(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test04489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04489");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        int int11 = strBuilder7.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replaceAll('4', ' ');
        java.util.stream.IntStream intStream17 = strBuilder7.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!1.013.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer20, "hi!1.0\nfalse\n##4a#4#\n0.1!i0.001h#4a#4#\n0.1!i0.001h\n");
        java.lang.String str23 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.setNewLineText("StrTokenizer[i!#4#a]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!1.0\nalse\nhi!1.013.0" + "'", str23, "hi!1.0\nalse\nhi!1.013.0");
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test04490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04490");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('4', 0);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setTrimmerMatcher(strMatcher41);
        java.lang.String str43 = strTokenizer39.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer39.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer39.setIgnoreEmptyTokens(false);
        boolean boolean49 = strTokenizer48.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer48.setQuoteChar('$');
        java.lang.String str52 = strTokenizer48.nextToken();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test04491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04491");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("1.0\nfalse\n#");
    }

    @Test
    public void test04492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04492");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        java.io.Writer writer21 = strBuilder2.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder2.replaceAll(' ', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendFixedWidthPadRight(9, 5, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean32 = strBuilder30.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(false);
        int int37 = strBuilder36.length();
        int int40 = strBuilder36.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.replaceAll('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder36.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.append(false);
        boolean boolean49 = strBuilder28.equals(strBuilder36);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.insert(20, "java.io.IOException: 0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 20");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 13 + "'", int37 == 13);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test04493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04493");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strBuilder28.asTokenizer();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer29.set("{=StrTokenizer[not tokenized yet]}");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strTokenizer29);
    }

    @Test
    public void test04494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04494");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("OException: java.io.IOE", "#");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strMatcher3);
    }

    @Test
    public void test04495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04495");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        char[] charArray8 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.append(true);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        boolean boolean27 = strTokenizer26.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        boolean boolean41 = strBuilder10.contains(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher37);
        boolean boolean43 = properties1.equals((java.lang.Object) strMatcher37);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties1.elements();
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strTokenizer56.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList58 = strTokenizer56.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer56.setQuoteChar('#');
        boolean boolean61 = properties1.equals((java.lang.Object) '#');
        java.lang.Object obj64 = properties1.setProperty("esl$f#4$#4#eurt!ih", "hi!\na ");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties1.entrySet();
        java.io.OutputStream outputStream66 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream66, "\neslaf\n0.1!ih35.0\nhi!1.0\nfalse\n\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEntrySet65);
    }

    @Test
    public void test04496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04496");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties1.entrySet();
        java.lang.Object obj44 = properties1.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.trim();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceAll(strMatcher51, "1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer55.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer55.getQuoteMatcher();
        java.lang.String str60 = strTokenizer55.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer55.setIgnoredChar('4');
        java.lang.Object obj63 = properties1.getOrDefault((java.lang.Object) strMatcher51, (java.lang.Object) strTokenizer55);
        java.util.Properties properties64 = new java.util.Properties(properties1);
        java.lang.Object obj65 = properties64.clone();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str60, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "{}");
    }

    @Test
    public void test04497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04497");
        java.io.IOException iOException1 = new java.io.IOException("h100.0i!1.0\n#4#");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
    }

    @Test
    public void test04498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04498");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.appendln(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.trim();
        boolean boolean27 = strBuilder1.equalsIgnoreCase(strBuilder21);
        char[] charArray28 = null;
        char[] charArray29 = strBuilder21.getChars(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '\n', 'b');
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "hi!#4#a4#\na100");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "hi!#4#a4#\na100");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, i, !, #, 4, #, a, 4, #, \n, a, 1, 0, 0]");
    }

    @Test
    public void test04499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04499");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder2.replace(strMatcher21, "hi!", (int) (short) 10, (int) 'a', (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder2.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln((long) 3);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup31 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor32 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup31);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup33 = strSubstitutor32.getVariableResolver();
        char char34 = strSubstitutor32.getEscapeChar();
        strSubstitutor32.setEnableSubstitutionInVariables(false);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor38 = strSubstitutor32.setVariablePrefix("i!100");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder30.appendFixedWidthPadRight((java.lang.Object) strSubstitutor32, 100, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean45 = strBuilder43.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendSeparator('#', (int) (short) 1);
        int int55 = strBuilder52.lastIndexOf('4', 10);
        char[] charArray62 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, "");
        java.lang.Object[] objArray65 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder52.appendAll(objArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean70 = strBuilder68.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.appendSeparator('#', (int) (short) 1);
        int int80 = strBuilder77.lastIndexOf('4', 10);
        char[] charArray87 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray87, "");
        java.lang.Object[] objArray90 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder77.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder77.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer95 = strBuilder77.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder52.appendln(stringBuffer95);
        boolean boolean97 = strSubstitutor32.replaceIn(stringBuffer95);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(wildcardStrLookup33);
        org.junit.Assert.assertTrue("'" + char34 + "' != '" + '$' + "'", char34 == '$');
        org.junit.Assert.assertNotNull(strSubstitutor38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[]");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(stringBuffer95);
        org.junit.Assert.assertEquals(stringBuffer95.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test04500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04500");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        int int19 = strTokenizer17.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer17.setTrimmerMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.deleteAll(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(13);
        char[] charArray29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.insert(1, charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder(26);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator('\n', '$');
        boolean boolean36 = strBuilder30.equals(strBuilder35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = strBuilder30.substring(79, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }
}

