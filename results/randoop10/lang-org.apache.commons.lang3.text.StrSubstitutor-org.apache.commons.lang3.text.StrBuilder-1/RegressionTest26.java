import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest26 {

    public static boolean debug = false;

    @Test
    public void test13001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13001");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        int int9 = strBuilder7.lastIndexOf(strMatcher8);
        int int11 = strBuilder7.indexOf("h!true#4#a4#false");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi!\n");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup15 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup15);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup17 = strSubstitutor16.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor16.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor22 = strSubstitutor19.setVariableSuffixMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!#4#a4#\na100", strMatcher14, strMatcher21);
        boolean boolean24 = strBuilder7.equals((java.lang.Object) strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder7.append(".0\n#4#");
        java.lang.String str27 = strBuilder26.getNullText();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNull(wildcardStrLookup17);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strSubstitutor22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test13002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13002");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("java.io.IOException: java.io.IOException: e\nhi!1.0\nfalse\n4\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test13003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13003");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceAll(' ', '#');
        char[] charArray6 = strBuilder2.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.replaceFirst("hi!\n", "0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.append('h');
        int int14 = strBuilder11.indexOf("h100.0i!1.0\n#4#a4#", 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendSeparator('h', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendFixedWidthPadRight(5, (int) 'e', 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean25 = strBuilder23.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendln((float) 1L);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        boolean boolean40 = strTokenizer39.isEmptyTokenAsNull();
        int int41 = strTokenizer39.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setTrimmerMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder23.deleteAll(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder23.append("i!\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder23.appendln(true);
        java.lang.String str49 = strBuilder23.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder23.append((double) 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder(46);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder23.appendln(strBuilder53);
        java.lang.String str56 = strBuilder54.leftString(97);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendSeparator("java.io.IOException: 0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder21.appendln(strBuilder58);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder21.delete((int) 'E', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!1.0i!\n#4#a4#\ntrue\n" + "'", str49, "hi!1.0i!\n#4#a4#\ntrue\n");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!1.0i!\n#4#a4#\ntrue\n4.0\n" + "'", str56, "hi!1.0i!\n#4#a4#\ntrue\n4.0\n");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test13004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13004");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet3 = properties1.keySet();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties5.clear();
        properties5.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        java.lang.Object obj13 = properties1.setProperty("0                                                 ", "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        java.util.Properties properties14 = new java.util.Properties(properties1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder19.appendln(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder17.appendln(charArray26);
        java.io.Writer writer36 = strBuilder17.asWriter();
        writer36.flush();
        writer36.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean42 = strBuilder40.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendln((float) 1L);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        java.util.List<java.lang.String> strList57 = strTokenizer56.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.appendAll((java.lang.Iterable<java.lang.String>) strList57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.io.Writer writer62 = writer36.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray71 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher73, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray71);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder64.appendln(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendSeparator('a', 10);
        java.util.Properties properties83 = new java.util.Properties();
        boolean boolean84 = strBuilder79.equals((java.lang.Object) properties83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder79.append((long) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder79.insert(10, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder79.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder58.appendln(strBuilder90);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder58.append((double) 40);
        java.lang.Object obj94 = properties1.get((java.lang.Object) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder58.ensureCapacity(11);
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(writer62);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test13005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13005");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        boolean boolean19 = reader17.markSupported();
        reader17.reset();
        int int21 = reader17.read();
        reader17.mark((int) (byte) 0);
        int int24 = reader17.read();
        reader17.reset();
        int int26 = reader17.read();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 104 + "'", int21 == 104);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 105 + "'", int24 == 105);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 105 + "'", int26 == 105);
    }

    @Test
    public void test13006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13006");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder2.replace(strMatcher21, "hi!", (int) (short) 10, (int) 'a', (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder2.append(true);
        char[] charArray31 = strBuilder28.toCharArray(2, 252);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "!\n#4#a4#\ntrue");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "!\n#4#a4#\ntrue");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[!, \n, #, 4, #, a, 4, #, \n, t, r, u, e]");
    }

    @Test
    public void test13007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13007");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!1.0\nfal-1.0se\n##4#a4#");
    }

    @Test
    public void test13008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13008");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        java.lang.Object obj14 = properties1.remove((java.lang.Object) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher25, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder16.appendln(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendSeparator('a', 10);
        java.util.Properties properties35 = new java.util.Properties();
        boolean boolean36 = strBuilder31.equals((java.lang.Object) properties35);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher60, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray58);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder51.appendln(charArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean74 = properties35.remove((java.lang.Object) charArray43, (java.lang.Object) strBuilder69);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties35.keys();
        boolean boolean76 = properties35.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.lang.String str78 = properties1.toString();
        java.util.Set<java.lang.Object> objSet79 = properties1.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet80 = properties1.entrySet();
        java.io.OutputStream outputStream81 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.save(outputStream81, "StrTokenizer[1.0\nf]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "{}" + "'", str78, "{}");
        org.junit.Assert.assertNotNull(objSet79);
        org.junit.Assert.assertNotNull(objEntrySet80);
    }

    @Test
    public void test13009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13009");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        java.io.Writer writer21 = strBuilder2.asWriter();
        writer21.flush();
        writer21.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean27 = strBuilder25.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendln((float) 1L);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        java.util.List<java.lang.String> strList42 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder25.appendAll((java.lang.Iterable<java.lang.String>) strList42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.io.Writer writer47 = writer21.append((java.lang.CharSequence) strBuilder43);
        int int48 = strBuilder43.size();
        java.lang.String str49 = strBuilder43.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.appendNull();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder43.insert(138, 128);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 138");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(writer47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 18 + "'", int48 == 18);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test13010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13010");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean10 = strBuilder8.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.append(true);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher21, strMatcher23);
        boolean boolean25 = strTokenizer24.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder8.appendAll((java.util.Iterator<java.lang.String>) strTokenizer24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt((int) (byte) 1);
        java.lang.String str31 = strSubstitutor6.replace(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean56 = strSubstitutor6.replaceIn(strBuilder55);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor58 = strSubstitutor6.setVariablePrefix("hi!\na");
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup59 = strSubstitutor6.getVariableResolver();
        boolean boolean60 = strSubstitutor6.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.appendNewLine();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        properties65.clear();
        properties65.clear();
        properties65.clear();
        java.util.Set<java.lang.String> strSet69 = properties65.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder62.appendAll((java.lang.Iterable<java.lang.String>) strSet69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.append((-1L));
        java.lang.StringBuffer stringBuffer73 = strBuilder72.toStringBuffer();
        java.lang.String str74 = strSubstitutor6.replace(stringBuffer73);
        char char75 = strSubstitutor6.getEscapeChar();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "h!true#4#a4#false" + "'", str31, "h!true#4#a4#false");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strSubstitutor58);
        org.junit.Assert.assertNull(wildcardStrLookup59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(stringBuffer73);
        org.junit.Assert.assertEquals(stringBuffer73.toString(), "hi!\n-1");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!\n-1" + "'", str74, "hi!\n-1");
        org.junit.Assert.assertTrue("'" + char75 + "' != '" + '$' + "'", char75 == '$');
    }

    @Test
    public void test13011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13011");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.append((long) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder16.insert(10, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendSeparator("", 98);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup32 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor33 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup32);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup34 = strSubstitutor33.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = strSubstitutor33.setVariablePrefix("hi!");
        char char37 = strSubstitutor36.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean41 = strBuilder39.contains("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        boolean boolean43 = strBuilder39.contains(strMatcher42);
        boolean boolean45 = strBuilder39.startsWith("StrTokenizer[not tokenized yet]");
        boolean boolean48 = strSubstitutor36.replaceIn(strBuilder39, (int) (short) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean52 = strBuilder50.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.append(true);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher63, strMatcher65);
        boolean boolean67 = strTokenizer66.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder50.appendAll((java.util.Iterator<java.lang.String>) strTokenizer66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.append(false);
        char[] charArray77 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher79, strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray77);
        int int86 = strBuilder70.indexOf(strMatcher84, (int) (short) 0);
        int int88 = strBuilder39.lastIndexOf(strMatcher84, 13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer("a4#13\n0", strMatcher84);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder30.deleteAll(strMatcher84);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.appendln((int) '.');
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(wildcardStrLookup34);
        org.junit.Assert.assertNotNull(strSubstitutor36);
        org.junit.Assert.assertTrue("'" + char37 + "' != '" + '$' + "'", char37 == '$');
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 7 + "'", int86 == 7);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test13012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13012");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.ensureCapacity((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("1.0\nfalse\n#");
        int int30 = strBuilder29.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.setCharAt(7, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.reverse();
        java.lang.String str38 = strBuilder34.midString(0, (int) (short) 0);
        int int41 = strBuilder34.lastIndexOf('E', 26);
        boolean boolean42 = strBuilder34.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test13013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13013");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties5.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties5.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties5.entrySet();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup9 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strSubstitutor10.getVariablePrefixMatcher();
        java.lang.String str13 = strSubstitutor10.replace("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strSubstitutor10.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor10.setVariableSuffix('b');
        boolean boolean17 = properties5.equals((java.lang.Object) strSubstitutor10);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor10.setVariableSuffix('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!1.0\n#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean25 = strBuilder23.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.setNewLineText("");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup30 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor31 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup30);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup32 = strSubstitutor31.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor34 = strSubstitutor31.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = strSubstitutor31.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor38 = strSubstitutor36.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean42 = strBuilder40.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendSeparator('#', (int) (short) 1);
        int int52 = strBuilder49.lastIndexOf('4', 10);
        char[] charArray59 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, "");
        java.lang.Object[] objArray62 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder49.appendAll(objArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean67 = strBuilder65.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendSeparator('#', (int) (short) 1);
        int int77 = strBuilder74.lastIndexOf('4', 10);
        char[] charArray84 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, "");
        java.lang.Object[] objArray87 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder74.appendAll(objArray87);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder74.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer92 = strBuilder74.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder49.appendln(stringBuffer92);
        boolean boolean94 = strSubstitutor38.replaceIn(stringBuffer92);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder23.appendln(stringBuffer92);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder21.appendln(stringBuffer92);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = strSubstitutor10.replaceIn(stringBuffer92, 79, 78);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str13, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(wildcardStrLookup32);
        org.junit.Assert.assertNotNull(strSubstitutor34);
        org.junit.Assert.assertNotNull(strSubstitutor36);
        org.junit.Assert.assertNotNull(strSubstitutor38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(stringBuffer92);
        org.junit.Assert.assertEquals(stringBuffer92.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test13014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13014");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        boolean boolean16 = strTokenizer15.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setQuoteChar('#');
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        java.lang.Object obj35 = properties1.put((java.lang.Object) '#', (java.lang.Object) strTokenizer31);
        java.util.Properties properties36 = new java.util.Properties(properties1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher47, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray45);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder38.appendln(charArray45);
        java.io.Reader reader54 = strBuilder38.asReader();
        reader54.reset();
        boolean boolean56 = reader54.markSupported();
        reader54.reset();
        int int58 = reader54.read();
        long long60 = reader54.skip((long) ' ');
        reader54.close();
        int int62 = reader54.read();
        reader54.mark(0);
        properties1.load(reader54);
        java.util.Collection<java.lang.Object> objCollection66 = properties1.values();
        java.lang.String str68 = properties1.getProperty("1.0\nfalse\n#");
        java.io.OutputStream outputStream69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream69, "alse\n#4#a4#100126", "{#4a#4#\n0.1!i0.001h#4#a4#=#-1, #=StrTokenizer[not tokenized yet]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 104 + "'", int58 == 104);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 9L + "'", long60 == 9L);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertNull(str68);
    }

    @Test
    public void test13015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13015");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties1.entrySet();
        properties1.clear();
        java.lang.String str46 = properties1.getProperty("java.io.IOException: java.io.IOException: java.io.IOException: ");
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        properties48.clear();
        java.util.Set<java.lang.Object> objSet50 = properties48.keySet();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        properties52.clear();
        properties52.clear();
        properties52.clear();
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.lang.Object obj57 = properties1.remove((java.lang.Object) properties52);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean61 = strBuilder59.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln(false);
        int int66 = strBuilder65.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendSeparator("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.setLength((int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder65.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder65.appendNull();
        char[] charArray80 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, strMatcher82, strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer86.setQuoteChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = new org.apache.commons.lang3.text.StrBuilder();
        boolean boolean90 = strBuilder89.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder89.append(6);
        boolean boolean93 = properties1.replace((java.lang.Object) strBuilder65, (java.lang.Object) '4', (java.lang.Object) strBuilder92);
        char[] charArray94 = strBuilder92.toCharArray();
        java.lang.String str97 = strBuilder92.substring(0, 80);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 13 + "'", int66 == 13);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), "6");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), "6");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[6]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "6" + "'", str97, "6");
    }

    @Test
    public void test13016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13016");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, "hi!\n100aaaaaaa52.0\n", "hi!1.0\nfalse\n#", 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup8 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup8);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup10 = strSubstitutor9.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = strSubstitutor9.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup13 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str15 = strStrLookup13.lookup("{}");
        strSubstitutor9.setVariableResolver(strStrLookup13);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor32 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup13, strMatcher17, strMatcher30, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer6.setDelimiterMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.appendNewLine();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        properties39.clear();
        properties39.clear();
        java.util.Set<java.lang.String> strSet43 = properties39.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.appendAll((java.lang.Iterable<java.lang.String>) strSet43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.setNullText("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean51 = strBuilder49.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.append(true);
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher62, strMatcher64);
        boolean boolean66 = strTokenizer65.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder49.appendAll((java.util.Iterator<java.lang.String>) strTokenizer65);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        properties69.clear();
        java.util.Enumeration<?> wildcardEnumeration71 = properties69.propertyNames();
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher80, strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getQuoteMatcher();
        boolean boolean85 = properties69.containsValue((java.lang.Object) strMatcher84);
        int int87 = strBuilder49.indexOf(strMatcher84, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder47.deleteFirst(strMatcher84);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor90 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, strMatcher34, strMatcher84, 'a');
        java.lang.String str92 = strStrLookup0.lookup("#4a#4#\n0.1!i0.001h$$$$$hi!\n#\n");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor93 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor94 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor98 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, "{#4", "{h!true#4#a4#false=StrTokenizer[#4#a4#]}", '4');
        org.junit.Assert.assertNotNull(strStrLookup0);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNull(wildcardStrLookup10);
        org.junit.Assert.assertNotNull(strSubstitutor12);
        org.junit.Assert.assertNotNull(strStrLookup13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(wildcardEnumeration71);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test13017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13017");
        java.io.IOException iOException1 = new java.io.IOException("hi!\n3\n");
    }

    @Test
    public void test13018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13018");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((double) '4');
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        boolean boolean21 = strTokenizer20.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList22 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer20.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer29 = strBuilder1.asWriter();
        writer29.write((int) ' ');
        java.io.Writer writer33 = writer29.append('a');
        writer33.close();
        java.io.Writer writer36 = writer33.append(' ');
        writer33.write(15);
        java.io.Writer writer40 = writer33.append('i');
        java.lang.CharSequence charSequence41 = null;
        java.io.Writer writer42 = writer40.append(charSequence41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean46 = strBuilder44.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln(false);
        int int51 = strBuilder50.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendSeparator("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.ensureCapacity((int) (short) 0);
        int int57 = strBuilder53.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.deleteFirst('t');
        java.io.Writer writer60 = writer42.append((java.lang.CharSequence) strBuilder59);
        writer42.write(86);
        writer42.flush();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(writer33);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(writer40);
        org.junit.Assert.assertNotNull(writer42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 13 + "'", int51 == 13);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 17 + "'", int57 == 17);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(writer60);
    }

    @Test
    public void test13019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13019");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor6.setVariableSuffix("{}");
        boolean boolean9 = strSubstitutor6.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean13 = strBuilder11.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.append(true);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        boolean boolean28 = strTokenizer27.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.replaceAll("", "hi!");
        java.lang.String str38 = strBuilder29.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder29.replaceAll("hi!", "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder29.append(10.0d);
        java.lang.String str44 = strSubstitutor6.replace((java.lang.Object) strBuilder43);
        java.lang.String str48 = strSubstitutor6.replace("#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#", 0, 0);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = strSubstitutor6.setVariableSuffix('$');
        java.lang.String str52 = strSubstitutor50.replace("hi!\n-1hi!1.");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = strSubstitutor50.replace("000000000000000000000000000000000000000000000000000", 71, 21);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "htruei!true#4#a4#false10.0" + "'", str44, "htruei!true#4#a4#false10.0");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(strSubstitutor50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!\n-1hi!1." + "'", str52, "hi!\n-1hi!1.");
    }

    @Test
    public void test13020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13020");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!true#4#a4#-1.0\ni");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar('e');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln(false);
        int int13 = strBuilder12.length();
        int int16 = strBuilder12.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.replaceAll('4', ' ');
        java.util.stream.IntStream intStream22 = strBuilder12.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!1.013.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder12.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer25, "hi!1.0\nfalse\n##4a#4#\n0.1!i0.001h#4a#4#\n0.1!i0.001h\n");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup28 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor29 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup28);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup30 = strSubstitutor29.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor32 = strSubstitutor29.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup33 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str35 = strStrLookup33.lookup("{}");
        strSubstitutor29.setVariableResolver(strStrLookup33);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher46, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor52 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup33, strMatcher37, strMatcher50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer25.setQuoteMatcher(strMatcher37);
        java.lang.String str54 = strTokenizer53.getContent();
        char[] charArray55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray55);
        java.util.List<java.lang.String> strList57 = strTokenizer56.getTokenList();
        int int58 = strTokenizer56.nextIndex();
        java.util.List<java.lang.String> strList59 = strTokenizer56.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer56.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer53.setDelimiterMatcher(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer1.setDelimiterMatcher(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 13 + "'", int13 == 13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(wildcardStrLookup30);
        org.junit.Assert.assertNotNull(strSubstitutor32);
        org.junit.Assert.assertNotNull(strStrLookup33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!1.013.0" + "'", str54, "hi!1.013.0");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
    }

    @Test
    public void test13021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13021");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("010.0");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test13022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13022");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        char[] charArray20 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "");
        java.lang.Object[] objArray23 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendAll(objArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator('#', (int) (short) 1);
        int int38 = strBuilder35.lastIndexOf('4', 10);
        char[] charArray45 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "");
        java.lang.Object[] objArray48 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder35.appendAll(objArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder35.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer53 = strBuilder35.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder10.appendln(stringBuffer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder10.deleteAll("hi!\n#");
        java.lang.String str59 = strBuilder56.midString((int) (byte) -1, 22);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(stringBuffer53);
        org.junit.Assert.assertEquals(stringBuffer53.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!1.0\nfalse\n#hi!1.0\nf" + "'", str59, "hi!1.0\nfalse\n#hi!1.0\nf");
    }

    @Test
    public void test13023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13023");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, "hi!\n100aaaaaaa52.0\n", "hi!1.0\nfalse\n#", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strSubstitutor4.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor7 = strSubstitutor4.setVariableSuffix("hi!\na");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup8 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str10 = strStrLookup8.lookup("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean14 = strBuilder12.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((float) 1L);
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher25, strMatcher27);
        java.util.List<java.lang.String> strList29 = strTokenizer28.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder12.appendAll((java.lang.Iterable<java.lang.String>) strList29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray34 = strBuilder33.toCharArray();
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher43, strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher59, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder50.appendln(charArray57);
        int int67 = strMatcher47.isMatch(charArray57, (int) (byte) 100);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        properties69.clear();
        java.util.Enumeration<?> wildcardEnumeration71 = properties69.propertyNames();
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher80, strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getQuoteMatcher();
        boolean boolean85 = properties69.containsValue((java.lang.Object) strMatcher84);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor87 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup8, strMatcher47, strMatcher84, ' ');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor88 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup8);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor92 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup8, "h100.0i!1.0\n#4#a4#\n", "OException: java.io.IOE", 'h');
        strSubstitutor7.setVariableResolver(strStrLookup8);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor94 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup8);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor96 = strSubstitutor94.setVariablePrefix("eslaf\n0.1!ihfalsehi!1.0\nfalse\n#4#a4");
        org.junit.Assert.assertNotNull(strStrLookup0);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strSubstitutor7);
        org.junit.Assert.assertNotNull(strStrLookup8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration71);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strSubstitutor96);
    }

    @Test
    public void test13024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13024");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.ensureCapacity((int) (short) 0);
        int int14 = strBuilder10.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((long) (short) 0);
        boolean boolean19 = strBuilder18.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendSeparator("a23.0", 63);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 17 + "'", int14 == 17);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test13025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13025");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.lang.String str3 = properties1.toString();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getQuoteMatcher();
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher25, strMatcher27);
        char[] charArray35 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, "");
        boolean boolean38 = properties1.replace((java.lang.Object) strMatcher16, (java.lang.Object) charArray23, (java.lang.Object) charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.appendln((double) '4');
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        boolean boolean61 = strTokenizer60.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList62 = strTokenizer60.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer60.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder41.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer66, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer69 = strBuilder41.asWriter();
        writer69.write((int) ' ');
        boolean boolean72 = properties1.remove((java.lang.Object) "hi!1.0\nfalse\n#", (java.lang.Object) writer69);
        int int73 = properties1.size();
        java.lang.Object obj76 = properties1.setProperty("ue#4#a4#StrTokenizer[not tokenized yet]{}", "\n");
        java.util.Properties properties77 = new java.util.Properties(properties1);
        java.lang.Object obj78 = properties77.clone();
        java.util.Enumeration<?> wildcardEnumeration79 = properties77.propertyNames();
        java.util.Set<java.lang.Object> objSet80 = properties77.keySet();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(writer69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration79);
        org.junit.Assert.assertNotNull(objSet80);
    }

    @Test
    public void test13026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13026");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("hi!\na");
        java.io.Reader reader13 = strBuilder10.asReader();
        reader13.mark(0);
        reader13.mark(63);
        java.nio.CharBuffer charBuffer18 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int19 = reader13.read(charBuffer18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader13);
    }

    @Test
    public void test13027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13027");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor6.setVariableSuffix("{}");
        boolean boolean9 = strSubstitutor6.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup10 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup10);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup12 = strSubstitutor11.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor11.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup15 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup15);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup17 = strSubstitutor16.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor16.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup20 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str22 = strStrLookup20.lookup("{}");
        strSubstitutor16.setVariableResolver(strStrLookup20);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor39 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup20, strMatcher24, strMatcher37, '4');
        strSubstitutor14.setVariableResolver(strStrLookup20);
        strSubstitutor6.setVariableResolver(strStrLookup20);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup20);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor46 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup20, "hi!\n100aaaaaaa52.0\n", "", '4');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor47 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup20);
        java.lang.String str49 = strSubstitutor47.replace("java.io.IOException: hi!\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceAll(' ', '#');
        char[] charArray56 = strBuilder52.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = strSubstitutor47.replace(strBuilder57, 33, 44);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardStrLookup12);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNull(wildcardStrLookup17);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertNotNull(strStrLookup20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "java.io.IOException: hi!\nfalse" + "'", str49, "java.io.IOException: hi!\nfalse");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test13028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13028");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("i!\n#4#a4#\n");
        java.lang.Object obj2 = strTokenizer1.clone();
        java.lang.String str3 = strTokenizer1.getContent();
        boolean boolean4 = strTokenizer1.hasNext();
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "i!\n#4#a4#\n" + "'", str3, "i!\n#4#a4#\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test13029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13029");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray29 = strBuilder28.toCharArray();
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher38, strMatcher42);
        java.lang.Object obj44 = properties1.get((java.lang.Object) charArray29);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties1.keys();
        java.util.Properties properties46 = new java.util.Properties(properties1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder48.appendln(charArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.append('a');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup74 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor75 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup74);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup76 = strSubstitutor75.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor78 = strSubstitutor75.setVariablePrefix('a');
        strSubstitutor75.setEnableSubstitutionInVariables(true);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor82 = strSubstitutor75.setVariablePrefix('1');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor84 = strSubstitutor75.setVariableSuffix("hi!1.013.0");
        java.lang.Object obj85 = properties46.put((java.lang.Object) 'a', (java.lang.Object) strSubstitutor84);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strSubstitutor84.getVariableSuffixMatcher();
        char char87 = strSubstitutor84.getEscapeChar();
        strSubstitutor84.setEnableSubstitutionInVariables(false);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNull(wildcardStrLookup76);
        org.junit.Assert.assertNotNull(strSubstitutor78);
        org.junit.Assert.assertNotNull(strSubstitutor82);
        org.junit.Assert.assertNotNull(strSubstitutor84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertTrue("'" + char87 + "' != '" + '$' + "'", char87 == '$');
    }

    @Test
    public void test13030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13030");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.replaceAll('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder54.append("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln((long) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.appendNewLine();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test13031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13031");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean10 = strBuilder8.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.append(true);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher21, strMatcher23);
        boolean boolean25 = strTokenizer24.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder8.appendAll((java.util.Iterator<java.lang.String>) strTokenizer24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt((int) (byte) 1);
        java.lang.String str31 = strSubstitutor6.replace(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean35 = strBuilder33.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.append(true);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher46, strMatcher48);
        boolean boolean50 = strTokenizer49.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder33.appendAll((java.util.Iterator<java.lang.String>) strTokenizer49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup60 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor61 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup60);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup62 = strSubstitutor61.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor64 = strSubstitutor61.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean68 = strBuilder66.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.appendln((float) 1L);
        char[] charArray77 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher79, strMatcher81);
        java.util.List<java.lang.String> strList83 = strTokenizer82.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder66.appendAll((java.lang.Iterable<java.lang.String>) strList83);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray88 = strBuilder87.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.reverse();
        int int91 = strBuilder87.indexOf('#');
        java.lang.StringBuffer stringBuffer92 = strBuilder87.toStringBuffer();
        boolean boolean93 = strSubstitutor61.replaceIn(stringBuffer92);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder51.appendln(stringBuffer92);
        java.lang.String str95 = strSubstitutor6.replace(stringBuffer92);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor97 = strSubstitutor6.setVariableSuffix('1');
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup98 = strSubstitutor6.getVariableResolver();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "h!true#4#a4#false" + "'", str31, "h!true#4#a4#false");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(wildcardStrLookup62);
        org.junit.Assert.assertNotNull(strSubstitutor64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(stringBuffer92);
        org.junit.Assert.assertEquals(stringBuffer92.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "#4a#4#\n0.1!i0.001h" + "'", str95, "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strSubstitutor97);
        org.junit.Assert.assertNull(wildcardStrLookup98);
    }

    @Test
    public void test13032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13032");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        boolean boolean12 = strTokenizer11.isEmptyTokenAsNull();
        int int13 = strTokenizer11.previousIndex();
        java.util.List<java.lang.String> strList14 = strTokenizer11.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer11.getDelimiterMatcher();
        boolean boolean16 = strTokenizer11.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer11.getDelimiterMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer11.add("java.io.IOException: 0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMatcher17);
    }

    @Test
    public void test13033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13033");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        boolean boolean9 = strBuilder7.contains(' ');
        int int11 = strBuilder7.lastIndexOf("hi!1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.append((double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.append("java.io.IOException: #\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean19 = strBuilder17.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendln((float) 1L);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        java.util.List<java.lang.String> strList34 = strTokenizer33.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder17.appendAll((java.lang.Iterable<java.lang.String>) strList34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(stringBuffer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.appendNewLine();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        properties45.clear();
        properties45.clear();
        properties45.clear();
        java.util.Set<java.lang.String> strSet49 = properties45.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.appendAll((java.lang.Iterable<java.lang.String>) strSet49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder40.appendAll((java.lang.Iterable<java.lang.String>) strSet49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        properties53.clear();
        java.util.Enumeration<?> wildcardEnumeration55 = properties53.propertyNames();
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher64, strMatcher66);
        boolean boolean68 = strTokenizer67.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList69 = strTokenizer67.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer67.setQuoteChar('#');
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher80, strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer83.setTrimmerMatcher(strMatcher85);
        java.lang.Object obj87 = properties53.put((java.lang.Object) '#', (java.lang.Object) strTokenizer83);
        java.util.Properties properties88 = new java.util.Properties(properties53);
        java.util.Set<java.lang.String> strSet89 = properties53.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder51.appendAll((java.lang.Iterable<java.lang.String>) strSet89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder7.appendWithSeparators((java.lang.Iterable<java.lang.String>) strSet89, "h100.0i!1.0\n#4#a4#32.0#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(wildcardEnumeration55);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(strSet89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test13034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13034");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("\neslaf\n0.1!ih35.0\nh100.0i!1.0\n#4#a4#\n");
    }

    @Test
    public void test13035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13035");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.setLength((int) '1');
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.deleteFirst("hi!\n-1hi!1.");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendNull();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test13036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13036");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.insert(0, (long) '#');
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.util.Set<java.lang.String> strSet7 = properties5.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendFixedWidthPadRight((java.lang.Object) properties5, (int) (short) 100, '#');
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!1.0\nfalse\nhi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer22.setDelimiterMatcher(strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer22.setQuoteChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder4.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer22, "hi!1.0\nfalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder4.minimizeCapacity();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test13037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13037");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        int int26 = strBuilder22.indexOf('#');
        java.lang.StringBuffer stringBuffer27 = strBuilder22.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceAll(' ', '#');
        boolean boolean35 = strBuilder30.contains("hi!1.0\nfalse\n4");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.appendSeparator('#', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder22.appendFixedWidthPadLeft((java.lang.Object) strBuilder30, (int) (byte) 10, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.replaceFirst('1', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.insert(0, (double) 101);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(stringBuffer27);
        org.junit.Assert.assertEquals(stringBuffer27.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test13038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13038");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.setCharAt((int) (byte) 0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendSeparator('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendSeparator('e');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.clear();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test13039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13039");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup6 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor7 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup6);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup8 = strSubstitutor7.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor7.setVariablePrefix('a');
        boolean boolean11 = properties5.containsValue((java.lang.Object) strSubstitutor10);
        java.lang.String str13 = properties5.getProperty("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        java.lang.Object obj14 = properties5.clone();
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.save(outputStream15, "hi!0.0i!1. \n#4#a4#\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNull(wildcardStrLookup8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
    }

    @Test
    public void test13040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13040");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean4 = strBuilder2.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.appendln((float) 1L);
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        java.util.List<java.lang.String> strList19 = strTokenizer18.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll((java.lang.Iterable<java.lang.String>) strList19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray24 = strBuilder23.toCharArray();
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33, strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setQuoteChar('$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray51);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder44.appendln(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln((float) 18);
        char[] charArray74 = strBuilder71.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, '!', '\000');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer41.reset(charArray74);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "hi!#4#a4#\na100at18.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "hi!#4#a4#\na100at18.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[h, i, !, #, 4, #, a, 4, #, \n, a, 1, 0, 0, a, t, 1, 8, ., 0, \n]");
        org.junit.Assert.assertNotNull(strTokenizer78);
    }

    @Test
    public void test13041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13041");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.setLength(0);
        int int27 = strBuilder26.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("h!true#4#a4#false");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean33 = strBuilder31.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendSeparator('#', (int) (short) 1);
        int int43 = strBuilder40.lastIndexOf('4', 10);
        char[] charArray50 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, "");
        java.lang.Object[] objArray53 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.appendAll(objArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder40.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer58 = strBuilder40.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder29.append(stringBuffer58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder26.append(strBuilder59);
        java.io.Writer writer61 = strBuilder60.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean65 = strBuilder63.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.append(true);
        char[] charArray74 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, strMatcher76, strMatcher78);
        boolean boolean80 = strTokenizer79.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder63.appendAll((java.util.Iterator<java.lang.String>) strTokenizer79);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder81.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder81.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder81.deleteFirst('a');
        java.io.Writer writer92 = writer61.append((java.lang.CharSequence) strBuilder91);
        // The following exception was thrown during execution in test generation
        try {
            char char94 = strBuilder91.charAt(62);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 62");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(stringBuffer58);
        org.junit.Assert.assertEquals(stringBuffer58.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(writer61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(writer92);
    }

    @Test
    public void test13042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13042");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strSubstitutor1.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariableSuffix(' ');
        strSubstitutor1.setEscapeChar('#');
        boolean boolean7 = strSubstitutor1.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor1.setVariableSuffix('E');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strSubstitutor1.getVariablePrefixMatcher();
        strSubstitutor1.setEscapeChar('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean16 = strBuilder14.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendln((float) 1L);
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        java.util.List<java.lang.String> strList31 = strTokenizer30.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder14.appendAll((java.lang.Iterable<java.lang.String>) strList31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.setLength(0);
        boolean boolean41 = strBuilder39.startsWith("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean45 = strBuilder43.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.append(true);
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher56, strMatcher58);
        boolean boolean60 = strTokenizer59.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder43.appendAll((java.util.Iterator<java.lang.String>) strTokenizer59);
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher70, strMatcher72);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer73.setTrimmerMatcher(strMatcher75);
        int int78 = strBuilder61.lastIndexOf(strMatcher75, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder39.deleteFirst(strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder39.append((long) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.appendSeparator("a", 19);
        int int87 = strBuilder81.indexOf('$', 278);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = strSubstitutor1.replaceIn(strBuilder81, 19, 138);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test13043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13043");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor1.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor1.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup10 = strSubstitutor9.getVariableResolver();
        strSubstitutor9.setEscapeChar('h');
        strSubstitutor9.setEnableSubstitutionInVariables(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean18 = strBuilder16.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(false);
        int int23 = strBuilder22.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.setLength((int) '1');
        java.lang.String str28 = strSubstitutor9.replace(strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendSeparator('4', 44);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.replaceAll("java.io.IOException:", "0\neslaf\n0.1!ih");
        java.lang.Iterable<java.lang.String> strIterable36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendWithSeparators(strIterable36, "hi!1.013.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.setLength(77);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNull(wildcardStrLookup10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 13 + "'", int23 == 13);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!1.0\nfalse\n#4#a4#\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000" + "'", str28, "hi!1.0\nfalse\n#4#a4#\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test13044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13044");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.setNullText("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder77.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceAll(' ', '#');
        boolean boolean82 = strBuilder73.equalsIgnoreCase(strBuilder78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strBuilder73.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder73.append('E');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder85.clear();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test13045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13045");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.replaceAll('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder54.append("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendSeparator('i');
        int int70 = strBuilder66.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.insert(41, (double) 14);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 6 + "'", int70 == 6);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test13046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13046");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray28);
        int int37 = strBuilder21.indexOf(strMatcher35, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder21.append((float) (short) -1);
        int int41 = strBuilder21.indexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append((double) 10.0f);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendSeparator("hi!1.0\nalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst('4');
        java.lang.String str51 = strBuilder50.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendln((double) 28L);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteAll("hi!true4a40\n");
        java.io.Reader reader56 = strBuilder55.asReader();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 7 + "'", int37 == 7);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!true##a4#false-1.010.01hi!1.0\nalse\n" + "'", str51, "hi!true##a4#false-1.010.01hi!1.0\nalse\n");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader56);
    }

    @Test
    public void test13047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13047");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        java.io.Writer writer21 = strBuilder2.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder2.replaceAll(' ', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendFixedWidthPadRight(9, 5, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendFixedWidthPadRight((int) ' ', 83, 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("97444444444", "se\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test13048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13048");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendln((double) '4');
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        boolean boolean27 = strTokenizer26.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList28 = strTokenizer26.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer26.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer32, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer35 = strBuilder7.asWriter();
        writer35.write((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher48, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder39.appendln(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        java.io.Writer writer64 = writer35.append((java.lang.CharSequence) strBuilder57, 0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.append('#');
        java.io.Writer writer73 = writer35.append((java.lang.CharSequence) strBuilder67);
        boolean boolean74 = properties1.containsKey((java.lang.Object) strBuilder67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]");
        java.lang.String str77 = strTokenizer76.next();
        boolean boolean78 = properties1.equals((java.lang.Object) str77);
        int int79 = properties1.size();
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties1.keys();
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(writer35);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(writer64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(writer73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "StrTokenizer[not" + "'", str77, "StrTokenizer[not");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(objEnumeration80);
    }

    @Test
    public void test13049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13049");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        int int11 = strBuilder7.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replaceAll('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder7.appendNull();
        int int19 = strBuilder17.indexOf("hi!1.0\nfalse\n#4#a4#13\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.setNewLineText("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendFixedWidthPadLeft(4, 24, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.insert((int) '\n', (double) 21);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        java.util.List<java.lang.String> strList41 = strTokenizer40.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer40.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder21.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder21.appendSeparator("htruei!true#364#a4#false$1\n0.0\n", "java.io.IOException: h100.0i!1.0\n#4#a4#32.0");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test13050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13050");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.lang.Object obj7 = properties1.setProperty("h 00.0i!1.0\n#4#a4#32.0#4#a4#", "hi!1.0\nalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendln((float) 1L);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher22, strMatcher24);
        boolean boolean26 = strTokenizer25.isEmptyTokenAsNull();
        int int27 = strTokenizer25.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer25.setTrimmerMatcher(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder9.deleteAll(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.append("i!\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder9.trim();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln(true);
        java.io.Writer writer37 = strBuilder33.asWriter();
        java.lang.Object obj38 = properties1.remove((java.lang.Object) strBuilder33);
        // The following exception was thrown during execution in test generation
        try {
            char char40 = strBuilder33.charAt(41);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 41");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test13051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13051");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!#4#a4#\na100                                                 false", "j");
        java.util.List<java.lang.String> strList3 = strTokenizer2.getTokenList();
        org.junit.Assert.assertNotNull(strList3);
    }

    @Test
    public void test13052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13052");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray9 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher11, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder2.appendln(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("#-1");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("StrT10okenizer[#4#a4#]100aaaaaaaa#4a#4#\n0.1!i0.001h\n", strMatcher18, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setQuoteChar('.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterChar('\n');
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
    }

    @Test
    public void test13053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13053");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!#");
    }

    @Test
    public void test13054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13054");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        properties38.clear();
        properties38.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean45 = strBuilder43.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.append(true);
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher56, strMatcher58);
        boolean boolean60 = strTokenizer59.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder43.appendAll((java.util.Iterator<java.lang.String>) strTokenizer59);
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher70, strMatcher72);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer73.setTrimmerMatcher(strMatcher75);
        int int78 = strBuilder61.lastIndexOf(strMatcher75, (int) (byte) 10);
        boolean boolean79 = properties38.containsValue((java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder61.appendln((double) 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder61.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder61.append("");
        java.io.Writer writer86 = strBuilder61.asWriter();
        properties1.store(writer86, "hi!1.0\nfalse\n#4\n");
        writer86.close();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(writer86);
    }

    @Test
    public void test13055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13055");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append('#');
        int int9 = strBuilder7.lastIndexOf("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append('t');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("!#4#a4#\na100\n");
        int int14 = strBuilder7.lastIndexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendln(30L);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = strBuilder7.substring(46);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test13056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13056");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.replaceAll('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder54.append("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln((long) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.insert((int) (byte) 0, (long) (short) 100);
        java.io.Reader reader77 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder66.appendln(strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.insert((int) 'e', 'e');
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(reader77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test13057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13057");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariablePrefix('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor6.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher18, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder9.appendln(charArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('a', 10);
        java.util.Properties properties28 = new java.util.Properties();
        boolean boolean29 = strBuilder24.equals((java.lang.Object) properties28);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray51);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder44.appendln(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean67 = properties28.remove((java.lang.Object) charArray36, (java.lang.Object) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder62.replaceAll('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.append("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.append("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder72.setNullText("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.appendSeparator('a', 4);
        boolean boolean83 = strBuilder78.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder78.replaceAll(' ', '0');
        java.lang.StringBuffer stringBuffer87 = strBuilder78.toStringBuffer();
        java.lang.String str88 = strSubstitutor6.replace(stringBuffer87);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(stringBuffer87);
        org.junit.Assert.assertEquals(stringBuffer87.toString(), "hi!#4#a4#\na1000000000000000000000000000000000000000000000000000hi!\nahi!{}a");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!#4#a4#\na1000000000000000000000000000000000000000000000000000hi!\nahi!{}a" + "'", str88, "hi!#4#a4#\na1000000000000000000000000000000000000000000000000000hi!\nahi!{}a");
    }

    @Test
    public void test13058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13058");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        int int11 = strBuilder7.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replaceAll('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder7.appendNull();
        java.lang.String str18 = strBuilder17.getNewLineText();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("##4a#4#\n0.1!i0.001h", 'h', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer22, "hi!tre#true4#a4#0\nhi!1.0\nfalse\n#4h100.0i!1.0\n#4#4#\n\nfalse\n");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test13059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13059");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) 10.0f);
        char[] charArray82 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, strMatcher84, strMatcher86);
        java.util.List<java.lang.String> strList88 = strTokenizer87.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer87.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder73.appendFixedWidthPadLeft((java.lang.Object) strTokenizer90, (int) (short) 0, '$');
        java.util.stream.IntStream intStream94 = strBuilder93.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder93.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder93.replace((int) (short) 1, 79, "java.io.IOException: StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(intStream94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test13060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13060");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        java.io.Writer writer21 = strBuilder2.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder2.replaceAll(' ', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.minimizeCapacity();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        properties27.clear();
        properties27.clear();
        java.util.Set<java.lang.String> strSet31 = properties27.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean35 = strBuilder33.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln(false);
        java.lang.Object obj40 = properties27.remove((java.lang.Object) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteAll("");
        java.lang.String str44 = strBuilder41.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder24.append(strBuilder41, (int) '\n', 138);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\neslaf\n0.1!ih" + "'", str44, "\neslaf\n0.1!ih");
    }

    @Test
    public void test13061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13061");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.appendNewLine();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties10.clear();
        properties10.clear();
        java.util.Set<java.lang.String> strSet14 = properties10.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strSet14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.insert(1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.insert((int) ' ', (java.lang.Object) true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder4.appendFixedWidthPadLeft((int) '#', (int) 't', 'a');
        boolean boolean24 = strBuilder4.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder4.insert(53, (float) 30L);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        int int32 = strBuilder29.lastIndexOf("hi!\na1", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln("##4");
        boolean boolean35 = strBuilder4.equalsIgnoreCase(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder4.appendPadding(109, '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.ensureCapacity(55);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test13062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13062");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray29 = strBuilder28.toCharArray();
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher38, strMatcher42);
        java.lang.Object obj44 = properties1.get((java.lang.Object) charArray29);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties1.keys();
        java.util.Set<java.lang.Object> objSet46 = properties1.keySet();
        int int47 = properties1.size();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test13063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13063");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("#\n", '4', 'h');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup5 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup5);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup7 = strSubstitutor6.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor6.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer10 = null;
        boolean boolean11 = strSubstitutor6.replaceIn(stringBuffer10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strSubstitutor6.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor6.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor6.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean20 = strBuilder18.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.replaceFirst('#', '4');
        char[] charArray31 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ', '4');
        java.lang.String str35 = strSubstitutor6.replace(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray31);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher46, strMatcher48);
        boolean boolean50 = strTokenizer49.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer49.getDelimiterMatcher();
        java.lang.String[] strArray52 = strTokenizer49.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", "hi!1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean59 = strBuilder57.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendln((float) 1L);
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher70, strMatcher72);
        java.util.List<java.lang.String> strList74 = strTokenizer73.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder57.appendAll((java.lang.Iterable<java.lang.String>) strList74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray79 = strBuilder78.toCharArray();
        char[] charArray86 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, strMatcher88, strMatcher90);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, strMatcher88, strMatcher92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer55.setIgnoredMatcher(strMatcher88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer49.setDelimiterMatcher(strMatcher88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher88);
        // The following exception was thrown during execution in test generation
        try {
            int int98 = strMatcher4.isMatch(charArray31, 101);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNull(wildcardStrLookup7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!1.0\nfalse\n4" + "'", str35, "hi!1.0\nfalse\n4");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strTokenizer95);
    }

    @Test
    public void test13064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13064");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("{}", (int) (short) -1);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        java.util.Enumeration<?> wildcardEnumeration29 = properties27.propertyNames();
        boolean boolean31 = properties27.containsKey((java.lang.Object) (-1));
        java.util.Collection<java.lang.Object> objCollection32 = properties27.values();
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher41, strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean48 = strBuilder46.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(false);
        int int53 = strBuilder52.length();
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher62, strMatcher64);
        java.util.List<java.lang.String> strList66 = strTokenizer65.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder52.appendAll((java.lang.Iterable<java.lang.String>) strList66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.appendSeparator("{}", (int) (short) -1);
        char[] charArray77 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher79, strMatcher81);
        boolean boolean83 = strTokenizer82.isEmptyTokenAsNull();
        int int84 = strTokenizer82.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer82.setTrimmerMatcher(strMatcher85);
        boolean boolean87 = properties27.replace((java.lang.Object) strMatcher41, (java.lang.Object) (short) -1, (java.lang.Object) strTokenizer86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder22.replaceAll(strMatcher41, "hi!");
        java.io.Reader reader90 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder22.insert((int) (short) 10, (double) 10.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder22.appendPadding((int) '0', '1');
        int int97 = strBuilder96.capacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 13 + "'", int53 == 13);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(reader90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 154 + "'", int97 == 154);
    }

    @Test
    public void test13065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13065");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("h", "0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.replaceFirst('0', 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendNull();
        java.lang.String str20 = strBuilder12.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder12.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.setNullText("hi!\n#4#a4#\n##################################################################################################-1");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((float) 1L);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        java.util.List<java.lang.String> strList43 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.lang.Iterable<java.lang.String>) strList43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.setLength(0);
        int int52 = strBuilder51.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("h!true#4#a4#false");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean58 = strBuilder56.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.appendSeparator('#', (int) (short) 1);
        int int68 = strBuilder65.lastIndexOf('4', 10);
        char[] charArray75 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, "");
        java.lang.Object[] objArray78 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder65.appendAll(objArray78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder65.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer83 = strBuilder65.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder54.append(stringBuffer83);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder51.append(strBuilder84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strBuilder51.asTokenizer();
        java.util.List<java.lang.String> strList87 = strTokenizer86.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder12.appendAll((java.lang.Iterable<java.lang.String>) strList87);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(stringBuffer83);
        org.junit.Assert.assertEquals(stringBuffer83.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test13066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13066");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.setNullText("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNewLine();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        properties20.clear();
        properties20.clear();
        properties20.clear();
        java.util.Set<java.lang.String> strSet24 = properties20.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.appendAll((java.lang.Iterable<java.lang.String>) strSet24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.setNullText("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean32 = strBuilder30.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(true);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        boolean boolean47 = strTokenizer46.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        properties50.clear();
        java.util.Enumeration<?> wildcardEnumeration52 = properties50.propertyNames();
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher61, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getQuoteMatcher();
        boolean boolean66 = properties50.containsValue((java.lang.Object) strMatcher65);
        int int68 = strBuilder30.indexOf(strMatcher65, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder28.deleteFirst(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder28.appendSeparator('$', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder7.appendFixedWidthPadRight((java.lang.Object) ' ', 8, 'a');
        char[] charArray76 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder7.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.append((double) (short) 10);
        boolean boolean82 = strBuilder78.endsWith("100");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder78.deleteCharAt(21);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n# aaaaaaa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n# aaaaaaa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, 4, a, #, 4, #, \n, 0, ., 1, !, i, 0, ., 0, 0, 1, h, h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, #,  , a, a, a, a, a, a, a]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test13067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13067");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        char[] charArray20 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "");
        java.lang.Object[] objArray23 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendAll(objArray23);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder10.replaceFirst(strMatcher38, "StrTokenizer[not tokenized yet]");
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher49, strMatcher51);
        java.util.List<java.lang.String> strList53 = strTokenizer52.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.appendAll((java.lang.Iterable<java.lang.String>) strList53);
        boolean boolean56 = strBuilder54.contains("hi!\na");
        java.io.Reader reader57 = strBuilder54.asReader();
        long long59 = reader57.skip((long) 4);
        char[] charArray66 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher68, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, '0', '$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = reader57.read(charArray66, 18, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 4L + "'", long59 == 4L);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher70);
    }

    @Test
    public void test13068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13068");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet3 = properties1.keySet();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties5.clear();
        properties5.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        java.util.Enumeration<?> wildcardEnumeration13 = properties11.propertyNames();
        boolean boolean15 = properties11.containsKey((java.lang.Object) (-1));
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        java.util.List<java.lang.String> strList28 = strTokenizer27.getTokenList();
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray35);
        java.lang.Object obj43 = properties11.getOrDefault((java.lang.Object) strList28, (java.lang.Object) charArray35);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup44 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor45 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup44);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup46 = strSubstitutor45.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor48 = strSubstitutor45.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = strSubstitutor45.setVariableSuffix('#');
        java.lang.StringBuffer stringBuffer51 = null;
        java.lang.String str54 = strSubstitutor45.replace(stringBuffer51, (-1), 0);
        java.lang.String str56 = strSubstitutor45.replace("StrTokenizer[not tokenized yet]");
        java.lang.Object obj57 = properties1.getOrDefault((java.lang.Object) charArray35, (java.lang.Object) strSubstitutor45);
        java.util.Set<java.lang.String> strSet58 = properties1.stringPropertyNames();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        properties60.clear();
        properties60.clear();
        java.lang.Object obj63 = properties1.remove((java.lang.Object) properties60);
        properties1.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties1.entrySet();
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(wildcardStrLookup46);
        org.junit.Assert.assertNotNull(strSubstitutor48);
        org.junit.Assert.assertNotNull(strSubstitutor50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str56, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEntrySet65);
    }

    @Test
    public void test13069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13069");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((double) '4');
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        boolean boolean21 = strTokenizer20.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList22 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer20.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer29 = strBuilder1.asWriter();
        writer29.write((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        java.io.Writer writer58 = writer29.append((java.lang.CharSequence) strBuilder51, 0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder51.append((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder51.replaceFirst("", "100");
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendln((float) 64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.append(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer70.reset();
        java.lang.String str72 = strTokenizer71.previousToken();
        java.lang.String[] strArray73 = strTokenizer71.getTokenArray();
        boolean boolean74 = strTokenizer71.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer71.setIgnoreEmptyTokens(true);
        java.util.List<java.lang.String> strList77 = strTokenizer71.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder68.appendAll((java.lang.Iterable<java.lang.String>) strList77);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi!#4#a4##");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder68.append((java.lang.Object) strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.append('t');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(writer58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test13070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13070");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("35StrTokenizer[not tokenized yet]$\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test13071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13071");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.String str23 = strBuilder22.getNullText();
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        int int36 = strBuilder22.lastIndexOf(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder22.insert(7, (long) (byte) 0);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup40 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup40);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup42 = strSubstitutor41.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor44 = strSubstitutor41.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer45 = null;
        boolean boolean46 = strSubstitutor41.replaceIn(stringBuffer45);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor48 = strSubstitutor41.setVariableSuffix('4');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = strSubstitutor48.setVariablePrefix("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher63, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder54.appendln(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.trim();
        boolean boolean78 = strBuilder52.equalsIgnoreCase(strBuilder72);
        char[] charArray79 = null;
        char[] charArray80 = strBuilder72.getChars(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, '4');
        java.lang.String str83 = strSubstitutor48.replace(charArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder39.appendln(charArray80);
        boolean boolean85 = strBuilder84.isEmpty();
        int int87 = strBuilder84.indexOf('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder84.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 7 + "'", int36 == 7);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(wildcardStrLookup42);
        org.junit.Assert.assertNotNull(strSubstitutor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strSubstitutor48);
        org.junit.Assert.assertNotNull(strSubstitutor50);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "hi!#4#a4#\na100");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "hi!#4#a4#\na100");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[h, i, !, #, 4, #, a, 4, #, \n, a, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!#4#a4#\na100" + "'", str83, "hi!#4#a4#\na100");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 4 + "'", int87 == 4);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test13072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13072");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strSubstitutor4.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor7 = strSubstitutor4.setVariableSuffix("hi!1.0\nalse\n");
        char char8 = strSubstitutor7.getEscapeChar();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strSubstitutor7);
        org.junit.Assert.assertTrue("'" + char8 + "' != '" + '$' + "'", char8 == '$');
    }

    @Test
    public void test13073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13073");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet1 = properties0.entrySet();
        java.lang.Object obj4 = properties0.setProperty("#", "{}");
        char[] charArray8 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.append(true);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        boolean boolean27 = strTokenizer26.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        boolean boolean41 = strBuilder10.contains(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup44 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor45 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup44);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup46 = strSubstitutor45.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor48 = strSubstitutor45.setVariablePrefix("hi!");
        char char49 = strSubstitutor45.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean53 = strBuilder51.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder57.setNullText("hi!\na");
        java.lang.String str66 = strSubstitutor45.replace(strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.appendNewLine();
        java.util.stream.IntStream intStream70 = strBuilder69.chars();
        boolean boolean71 = strBuilder65.equals((java.lang.Object) strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean75 = strBuilder73.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.replaceFirst('#', '4');
        char[] charArray86 = strBuilder79.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder69.append(charArray86);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray86);
        java.lang.Object obj93 = properties0.replace((java.lang.Object) strTokenizer43, (java.lang.Object) charArray86);
        java.util.Set<java.lang.String> strSet94 = properties0.stringPropertyNames();
        org.junit.Assert.assertNotNull(objEntrySet1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNull(wildcardStrLookup46);
        org.junit.Assert.assertNotNull(strSubstitutor48);
        org.junit.Assert.assertTrue("'" + char49 + "' != '" + '$' + "'", char49 == '$');
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str66, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(intStream70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(strSet94);
    }

    @Test
    public void test13074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13074");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(20);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.ensureCapacity(252);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence6 = strBuilder3.subSequence((int) 'h', 101);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 101");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test13075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13075");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet3 = properties1.keySet();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties5.clear();
        properties5.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        boolean boolean10 = properties1.isEmpty();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", "#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setDelimiterString("java.io.IOException: java.io.IOException: ");
        int int16 = strTokenizer15.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("##4a#4#\n0.1!i0.001h");
        java.lang.Object obj21 = strTokenizer20.clone();
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        boolean boolean34 = strTokenizer33.isEmptyTokenAsNull();
        int int35 = strTokenizer33.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer33.setDelimiterString("hi!");
        java.lang.String str38 = strTokenizer37.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer37.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer20.setIgnoredMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer18.setDelimiterMatcher(strMatcher39);
        java.lang.Object obj42 = properties1.remove((java.lang.Object) strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.appendln((double) '4');
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher60, strMatcher62);
        boolean boolean64 = strTokenizer63.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList65 = strTokenizer63.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer63.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder44.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer69, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray80 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, strMatcher82, strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray80);
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder73.appendln(charArray80);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray80);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, strMatcher90, strMatcher91);
        int int93 = strBuilder71.indexOf(strMatcher90);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder71.deleteAll("hi!#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder95.appendSeparator("10h");
        boolean boolean98 = properties1.containsValue((java.lang.Object) "10h");
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str38, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test13076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13076");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        int int14 = strBuilder11.indexOf(' ', (int) (byte) 1);
        int int17 = strBuilder11.lastIndexOf('a', 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean21 = strBuilder19.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendln((float) 1L);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        java.util.List<java.lang.String> strList36 = strTokenizer35.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder19.appendAll((java.lang.Iterable<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher50, strMatcher52);
        int int54 = strBuilder40.lastIndexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder40.insert(7, (long) (byte) 0);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup58 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor59 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strSubstitutor59.getVariablePrefixMatcher();
        boolean boolean61 = strBuilder40.contains(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder11.deleteFirst(strMatcher60);
        java.io.Reader reader63 = strBuilder11.asReader();
        int int64 = strBuilder11.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder11.appendln((double) 9L);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 5 + "'", int64 == 5);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test13077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13077");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.insert(0, (long) '#');
        boolean boolean42 = properties1.equals((java.lang.Object) '#');
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties1.elements();
        java.lang.Object obj44 = properties1.clone();
        java.util.Collection<java.lang.Object> objCollection45 = properties1.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll("{StrTokenizer[not=0                                                 }");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.trim();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup59 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor60 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup59);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup61 = strSubstitutor60.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor63 = strSubstitutor60.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer64 = null;
        boolean boolean65 = strSubstitutor60.replaceIn(stringBuffer64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strSubstitutor60.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor68 = strSubstitutor60.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor70 = strSubstitutor60.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor72 = strSubstitutor60.setVariableSuffix("StrTokeniz");
        java.lang.Object obj73 = properties1.put((java.lang.Object) strBuilder57, (java.lang.Object) strSubstitutor60);
        boolean boolean75 = properties1.containsValue((java.lang.Object) "1\n#4#[rezinekoTrtS4\neslaf\n0.1!ih");
        int int76 = properties1.size();
        java.lang.Object obj77 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean78 = properties1.containsValue(obj77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNull(wildcardStrLookup61);
        org.junit.Assert.assertNotNull(strSubstitutor63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strSubstitutor68);
        org.junit.Assert.assertNotNull(strSubstitutor70);
        org.junit.Assert.assertNotNull(strSubstitutor72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
    }

    @Test
    public void test13078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13078");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor6.setVariableSuffix("{}");
        boolean boolean9 = strSubstitutor6.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup10 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup10);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup12 = strSubstitutor11.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor11.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup15 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup15);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup17 = strSubstitutor16.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor16.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup20 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str22 = strStrLookup20.lookup("{}");
        strSubstitutor16.setVariableResolver(strStrLookup20);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor39 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup20, strMatcher24, strMatcher37, '4');
        strSubstitutor14.setVariableResolver(strStrLookup20);
        strSubstitutor6.setVariableResolver(strStrLookup20);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strSubstitutor6.getVariablePrefixMatcher();
        boolean boolean43 = strSubstitutor6.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor45 = strSubstitutor6.setVariablePrefix("hi!#4#a4#\na100");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strSubstitutor6.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strSubstitutor6.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strSubstitutor6.getVariableSuffixMatcher();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = strSubstitutor6.replace("0aeslaf\n#4a#4#!ih#", (int) 'b', (int) 't');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardStrLookup12);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNull(wildcardStrLookup17);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertNotNull(strStrLookup20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strSubstitutor45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher48);
    }

    @Test
    public void test13079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13079");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str2 = strStrLookup0.lookup("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean6 = strBuilder4.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.appendln((float) 1L);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder4.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray26 = strBuilder25.toCharArray();
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher35, strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher51, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder42.appendln(charArray49);
        int int59 = strMatcher39.isMatch(charArray49, (int) (byte) 100);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        properties61.clear();
        java.util.Enumeration<?> wildcardEnumeration63 = properties61.propertyNames();
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher72, strMatcher74);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getQuoteMatcher();
        boolean boolean77 = properties61.containsValue((java.lang.Object) strMatcher76);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor79 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, strMatcher39, strMatcher76, ' ');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor80 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor84 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, "h100.0i!1.0\n#4#a4#\n", "OException: java.io.IOE", 'h');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor88 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, "hi", "44 #4 ", 't');
        strSubstitutor88.setEscapeChar('$');
        org.junit.Assert.assertNotNull(strStrLookup0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration63);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test13080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13080");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln((double) '4');
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        boolean boolean34 = strTokenizer33.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList35 = strTokenizer33.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer33.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer39, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer42 = strBuilder14.asWriter();
        java.lang.String str44 = strBuilder14.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder11.insert((int) (short) 1, (java.lang.Object) str44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder11.deleteFirst('0');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(writer42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!\n100aaaaaaa52.0\n" + "'", str44, "hi!\n100aaaaaaa52.0\n");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test13081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13081");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(86);
    }

    @Test
    public void test13082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13082");
        java.io.IOException iOException2 = new java.io.IOException("hi!1.0\nStrTokenizer[#4#a4#]\n");
        java.io.IOException iOException3 = new java.io.IOException("{hi!\na=#4#a4#}", (java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException2);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder6.appendln(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator('a', 10);
        java.util.Properties properties25 = new java.util.Properties();
        boolean boolean26 = strBuilder21.equals((java.lang.Object) properties25);
        java.lang.Throwable throwable29 = null;
        java.io.IOException iOException30 = new java.io.IOException("", throwable29);
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.lang.Throwable[] throwableArray32 = iOException31.getSuppressed();
        java.io.IOException iOException33 = new java.io.IOException("StrTokenizer[#4#a4#]", (java.lang.Throwable) iOException31);
        java.lang.Throwable[] throwableArray34 = iOException31.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) iOException31, 4, '#');
        java.lang.Throwable throwable39 = null;
        java.io.IOException iOException40 = new java.io.IOException("", throwable39);
        java.io.IOException iOException41 = new java.io.IOException((java.lang.Throwable) iOException40);
        java.io.IOException iOException42 = new java.io.IOException((java.lang.Throwable) iOException41);
        java.io.IOException iOException43 = new java.io.IOException((java.lang.Throwable) iOException42);
        iOException31.addSuppressed((java.lang.Throwable) iOException42);
        java.lang.Throwable[] throwableArray45 = iOException31.getSuppressed();
        java.lang.Throwable throwable48 = null;
        java.io.IOException iOException49 = new java.io.IOException("", throwable48);
        java.io.IOException iOException50 = new java.io.IOException((java.lang.Throwable) iOException49);
        java.lang.Throwable[] throwableArray51 = iOException50.getSuppressed();
        java.io.IOException iOException52 = new java.io.IOException("StrTokenizer[#4#a4#]", (java.lang.Throwable) iOException50);
        java.lang.Throwable throwable53 = null;
        java.io.IOException iOException54 = new java.io.IOException(throwable53);
        iOException50.addSuppressed((java.lang.Throwable) iOException54);
        java.io.IOException iOException56 = new java.io.IOException((java.lang.Throwable) iOException54);
        iOException31.addSuppressed((java.lang.Throwable) iOException56);
        iOException2.addSuppressed((java.lang.Throwable) iOException56);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test13083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13083");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup5 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher29, strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher20, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor38 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup5, strMatcher33, strMatcher36, '$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor39 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup5);
        strSubstitutor1.setVariableResolver(strStrLookup5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor44 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup5, " yet]{}", "h100.0i!1.0\n#4#a4#\n", '$');
        java.lang.String str46 = strStrLookup5.lookup("h100.0i!1.0\n#4#a4#\n\nfalse\na");
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strStrLookup5);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test13084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13084");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        int int9 = strBuilder7.lastIndexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.deleteAll(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln(21);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        java.util.List<java.lang.String> strList28 = strTokenizer27.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer27.getTrimmerMatcher();
        int int32 = strBuilder13.indexOf(strMatcher30, 258);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test13085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13085");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        int int11 = strBuilder7.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replaceAll('4', ' ');
        java.util.stream.IntStream intStream17 = strBuilder7.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!1.013.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer20, "hi!1.0\nfalse\n##4a#4#\n0.1!i0.001h#4a#4#\n0.1!i0.001h\n");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup23 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor24 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup23);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup25 = strSubstitutor24.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor27 = strSubstitutor24.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup28 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str30 = strStrLookup28.lookup("{}");
        strSubstitutor24.setVariableResolver(strStrLookup28);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher41, strMatcher43);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor47 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup28, strMatcher32, strMatcher45, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer20.setQuoteMatcher(strMatcher32);
        java.lang.String str49 = strTokenizer48.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer48.reset("false");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.setIgnoredChar('h');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(wildcardStrLookup25);
        org.junit.Assert.assertNotNull(strSubstitutor27);
        org.junit.Assert.assertNotNull(strStrLookup28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!1.013.0" + "'", str49, "hi!1.013.0");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer53);
    }

    @Test
    public void test13086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13086");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.setNullText("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNewLine();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        properties20.clear();
        properties20.clear();
        properties20.clear();
        java.util.Set<java.lang.String> strSet24 = properties20.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.appendAll((java.lang.Iterable<java.lang.String>) strSet24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.setNullText("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean32 = strBuilder30.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(true);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        boolean boolean47 = strTokenizer46.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        properties50.clear();
        java.util.Enumeration<?> wildcardEnumeration52 = properties50.propertyNames();
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher61, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getQuoteMatcher();
        boolean boolean66 = properties50.containsValue((java.lang.Object) strMatcher65);
        int int68 = strBuilder30.indexOf(strMatcher65, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder28.deleteFirst(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder28.appendSeparator('$', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder7.appendFixedWidthPadRight((java.lang.Object) ' ', 8, 'a');
        char[] charArray76 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder7.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.append((double) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.appendln('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.deleteFirst('\n');
        int int87 = strBuilder82.lastIndexOf('h', 9);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n# aaaaaaa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n# aaaaaaa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, 4, a, #, 4, #, \n, 0, ., 1, !, i, 0, ., 0, 0, 1, h, h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, #,  , a, a, a, a, a, a, a]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test13087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13087");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher15, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor33 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, strMatcher28, strMatcher31, '$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor34 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor47 = strSubstitutor34.setVariablePrefixMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor49 = strSubstitutor47.setVariablePrefix(' ');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor51 = strSubstitutor49.setVariableSuffix("hi!1.0\nfalse\n#4#a4#13\n");
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        properties53.clear();
        properties53.clear();
        properties53.clear();
        java.util.Set<java.lang.String> strSet57 = properties53.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean61 = strBuilder59.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln(false);
        java.lang.Object obj66 = properties53.remove((java.lang.Object) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.appendSeparator("h!true#4#a4#false");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean73 = strBuilder71.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln(false);
        int int78 = strBuilder77.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.appendSeparator("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder77.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder77.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.appendSeparator('i');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder69.append((java.lang.CharSequence) strBuilder83);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder83.setNullText("0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder83.appendFixedWidthPadLeft(90, 46, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder92.insert(13, 4);
        java.lang.String str96 = strSubstitutor51.replace(strBuilder92);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder92.setLength(42);
        org.junit.Assert.assertNotNull(strStrLookup0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strSubstitutor47);
        org.junit.Assert.assertNotNull(strSubstitutor49);
        org.junit.Assert.assertNotNull(strSubstitutor51);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 13 + "'", int78 == 13);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "hiaaaaaaaaaaa4aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa90" + "'", str96, "hiaaaaaaaaaaa4aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa90");
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test13088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13088");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder6.replaceAll(strMatcher74, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.insert(4, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.deleteCharAt(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.appendFixedWidthPadLeft(16, 33, '$');
        int int87 = strBuilder79.indexOf('0');
        char[] charArray88 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder79.appendln(charArray88);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str91 = strBuilder89.substring(182);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 4 + "'", int87 == 4);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test13089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13089");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert(0, '#');
        boolean boolean29 = strBuilder27.contains("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append("hi!\n#4#a4#\n");
        int int32 = strBuilder31.size();
        boolean boolean34 = strBuilder31.startsWith("StrT10okeniz er[#4#a4#]100aaaaaaaa17.0\n");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 30 + "'", int32 == 30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test13090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13090");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", "#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setDelimiterString("java.io.IOException: java.io.IOException: ");
        int int13 = strTokenizer12.previousIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean17 = strBuilder15.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln(false);
        int int22 = strBuilder21.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((float) 1L);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        java.util.List<java.lang.String> strList43 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.lang.Iterable<java.lang.String>) strList43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray48 = strBuilder47.toCharArray();
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher57, strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray71 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher73, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray71);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder64.appendln(charArray71);
        int int81 = strMatcher61.isMatch(charArray71, (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer24.reset(charArray71);
        boolean boolean83 = properties1.replace((java.lang.Object) strTokenizer12, (java.lang.Object) strBuilder23, (java.lang.Object) strTokenizer24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer24.setDelimiterString("e\nhi!1.0\nfalse\n4\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer85.setIgnoredChar('b');
        boolean boolean88 = strTokenizer87.hasNext();
        java.lang.String str89 = strTokenizer87.previousToken();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 13 + "'", int22 == 13);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test13091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13091");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("{}", '#', 'e');
        java.lang.String[] strArray4 = strTokenizer3.getTokenArray();
        org.junit.Assert.assertNotNull(strArray4);
    }

    @Test
    public void test13092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13092");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!1.0\nfalse\n4StrTokenizer[#4#$hi!\n100aaaaaaa52.0\n", '4', 'a');
    }

    @Test
    public void test13093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13093");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties1.entrySet();
        java.lang.Object obj44 = properties1.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.trim();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceAll(strMatcher51, "1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer55.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer55.getQuoteMatcher();
        java.lang.String str60 = strTokenizer55.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer55.setIgnoredChar('4');
        java.lang.Object obj63 = properties1.getOrDefault((java.lang.Object) strMatcher51, (java.lang.Object) strTokenizer55);
        java.util.Properties properties64 = new java.util.Properties(properties1);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        properties66.clear();
        java.util.Set<java.lang.Object> objSet68 = properties66.keySet();
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        properties70.clear();
        properties70.clear();
        properties70.clear();
        properties66.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        java.lang.Object obj77 = properties70.setProperty("StrTokenizer[not", "0                                                 ");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        properties1.clear();
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        properties81.clear();
        java.util.Enumeration<?> wildcardEnumeration83 = properties81.propertyNames();
        boolean boolean85 = properties81.containsKey((java.lang.Object) (-1));
        java.util.Collection<java.lang.Object> objCollection86 = properties81.values();
        java.util.Enumeration<java.lang.Object> objEnumeration87 = properties81.keys();
        boolean boolean88 = properties81.isEmpty();
        int int89 = properties81.size();
        java.lang.Object obj92 = properties81.setProperty("hi! .0\nalse\n", "a100");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties81);
        java.io.PrintWriter printWriter94 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printWriter94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str60, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(wildcardEnumeration83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objCollection86);
        org.junit.Assert.assertNotNull(objEnumeration87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test13094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13094");
        java.io.IOException iOException3 = new java.io.IOException("0                                                 ");
        java.io.IOException iOException4 = new java.io.IOException("S", (java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException("java.io.IOException: hi!\n#", (java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray6 = iOException3.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray6);
    }

    @Test
    public void test13095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13095");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(stringBuffer25, (int) '#', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(false);
        int int31 = strBuilder28.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.replaceFirst("0.0i!1.0\n#4#a4#", "\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendFixedWidthPadLeft(16, 13, '1');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.appendln("hi!1.0\nfalse\nhi!", (int) '\000', 129);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 26 + "'", int31 == 26);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test13096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13096");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.trim();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup25 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str27 = strStrLookup25.lookup("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln((java.lang.Object) "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNullText("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup34 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor35 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup34);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup36 = strSubstitutor35.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor38 = strSubstitutor35.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup39 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str41 = strStrLookup39.lookup("{}");
        strSubstitutor35.setVariableResolver(strStrLookup39);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher52, strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor58 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup39, strMatcher43, strMatcher56, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer32.setDelimiterMatcher(strMatcher56);
        boolean boolean60 = strBuilder28.contains(strMatcher56);
        char[] charArray61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder28.appendln(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder28.insert((int) (short) 1, "hi!\n3\n");
        int int68 = strBuilder28.indexOf('0', 119);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strStrLookup25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNull(wildcardStrLookup36);
        org.junit.Assert.assertNotNull(strSubstitutor38);
        org.junit.Assert.assertNotNull(strStrLookup39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test13097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13097");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        char[] charArray8 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.append(true);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        boolean boolean27 = strTokenizer26.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        boolean boolean41 = strBuilder10.contains(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher37);
        boolean boolean43 = properties1.equals((java.lang.Object) strMatcher37);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties1.elements();
        java.lang.String str46 = properties1.getProperty("1.0\nf");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties1.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties1.elements();
        java.util.Set<java.lang.Object> objSet49 = properties1.keySet();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        properties51.clear();
        properties51.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties51.entrySet();
        properties51.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties51.elements();
        java.util.Set<java.lang.Object> objSet57 = properties51.keySet();
        java.lang.Object obj58 = properties1.remove((java.lang.Object) objSet57);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test13098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13098");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.appendNewLine();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties10.clear();
        properties10.clear();
        java.util.Set<java.lang.String> strSet14 = properties10.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strSet14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.insert(1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.insert((int) ' ', (java.lang.Object) true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder4.appendFixedWidthPadLeft((int) '#', (int) 't', 'a');
        char[] charArray24 = strBuilder23.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder28.appendln(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.trim();
        boolean boolean52 = strBuilder26.equalsIgnoreCase(strBuilder46);
        char[] charArray53 = null;
        char[] charArray54 = strBuilder46.getChars(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder23.append(charArray53, (int) '#', 104);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterString("#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        boolean boolean62 = strTokenizer61.hasPrevious();
        char[] charArray63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer61.reset(charArray63);
        java.util.List<java.lang.String> strList65 = strTokenizer61.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder23.appendAll((java.lang.Iterable<java.lang.String>) strList65);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "StrTokenizer[not tokenized yet]0true\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "StrTokenizer[not tokenized yet]0true\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[S, t, r, T, o, k, e, n, i, z, e, r, [, n, o, t,  , t, o, k, e, n, i, z, e, d,  , y, e, t, ], 0, t, r, u, e, \n, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, 3, 5]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "hi!#4#a4#\na100");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "hi!#4#a4#\na100");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[h, i, !, #, 4, #, a, 4, #, \n, a, 1, 0, 0]");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test13099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13099");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.deleteFirst("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendSeparator('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln('1');
        char[] charArray33 = strBuilder30.toCharArray(0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.insert(12, (int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean40 = strBuilder38.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendSeparator('#', (int) (short) 1);
        java.lang.StringBuffer stringBuffer48 = strBuilder47.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder30.appendln(stringBuffer48);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.insert(76, '\n');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 76");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "htruei!true#4#a4#false$1\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "htruei!true#4#a4#false$1\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[h, t, r, u, e, i, !, t, r, u, e, #, 4, #, a, 4, #, f, a, l, s, e, $, 1, \n]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(stringBuffer48);
        org.junit.Assert.assertEquals(stringBuffer48.toString(), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test13100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13100");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor1.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor1.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor9.setVariablePrefix("#4#a4#");
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        java.util.Enumeration<?> wildcardEnumeration15 = properties13.propertyNames();
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getQuoteMatcher();
        boolean boolean29 = properties13.containsValue((java.lang.Object) strMatcher28);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor30 = strSubstitutor9.setVariablePrefixMatcher(strMatcher28);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor32 = strSubstitutor30.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup33 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor34 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup33);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup35 = strSubstitutor34.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor37 = strSubstitutor34.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup38 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor39 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup38);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup40 = strSubstitutor39.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = strSubstitutor39.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup43 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str45 = strStrLookup43.lookup("{}");
        strSubstitutor39.setVariableResolver(strStrLookup43);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher56, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor62 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup43, strMatcher47, strMatcher60, '4');
        strSubstitutor37.setVariableResolver(strStrLookup43);
        strSubstitutor30.setVariableResolver(strStrLookup43);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor65 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup43);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor66 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup43);
        boolean boolean67 = strSubstitutor66.isEnableSubstitutionInVariables();
        java.lang.String str69 = strSubstitutor66.replace("ih35");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor71 = strSubstitutor66.setVariablePrefix("h!true#4#");
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertNotNull(wildcardEnumeration15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSubstitutor30);
        org.junit.Assert.assertNotNull(strSubstitutor32);
        org.junit.Assert.assertNull(wildcardStrLookup35);
        org.junit.Assert.assertNotNull(strSubstitutor37);
        org.junit.Assert.assertNull(wildcardStrLookup40);
        org.junit.Assert.assertNotNull(strSubstitutor42);
        org.junit.Assert.assertNotNull(strStrLookup43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ih35" + "'", str69, "ih35");
        org.junit.Assert.assertNotNull(strSubstitutor71);
    }

    @Test
    public void test13101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13101");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.lang.String str3 = properties1.toString();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getQuoteMatcher();
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher25, strMatcher27);
        char[] charArray35 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, "");
        boolean boolean38 = properties1.replace((java.lang.Object) strMatcher16, (java.lang.Object) charArray23, (java.lang.Object) charArray35);
        int int39 = properties1.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties1.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher51, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder42.appendln(charArray49);
        java.io.Reader reader58 = strBuilder42.asReader();
        reader58.reset();
        reader58.mark((int) (short) -1);
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher70, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        int int75 = reader58.read(charArray68);
        int int76 = reader58.read();
        reader58.reset();
        properties1.load(reader58);
        long long80 = reader58.skip((long) 19);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "hi!#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "hi!#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[h, i, !, #, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 6 + "'", int75 == 6);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 97 + "'", int76 == 97);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
    }

    @Test
    public void test13102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13102");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder11.appendln(charArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.insert(12, "hi!1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendln((java.lang.Object) "hi!1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder9.append(100L);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer46.setQuoteChar('$');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer49.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder34.replaceFirst(strMatcher51, "i!#4#a");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test13103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13103");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        boolean boolean5 = strBuilder1.contains(strMatcher4);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder10.appendln(charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder8.appendln(charArray17);
        java.io.Writer writer27 = strBuilder8.asWriter();
        writer27.flush();
        writer27.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean33 = strBuilder31.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendln((float) 1L);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher44, strMatcher46);
        java.util.List<java.lang.String> strList48 = strTokenizer47.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder31.appendAll((java.lang.Iterable<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.io.Writer writer53 = writer27.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher64, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder55.appendln(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendSeparator('a', 10);
        java.util.Properties properties74 = new java.util.Properties();
        boolean boolean75 = strBuilder70.equals((java.lang.Object) properties74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder70.append((long) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder70.insert(10, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder70.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder49.appendln(strBuilder81);
        boolean boolean83 = strBuilder1.equalsIgnoreCase(strBuilder82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        boolean boolean85 = strBuilder82.contains(strMatcher84);
        int int86 = strBuilder82.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(writer27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(writer53);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 36 + "'", int86 == 36);
    }

    @Test
    public void test13104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13104");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.replaceAll('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder54.append("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendSeparator('i');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.append((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.append((float) 116);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.append(false);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test13105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13105");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        char[] charArray20 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "");
        java.lang.Object[] objArray23 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendAll(objArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder10.appendSeparator('4', (int) (short) 10);
        java.lang.String str30 = strBuilder10.midString((int) 't', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder10.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendSeparator('$');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test13106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13106");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("0.0i!1.0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.append(17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.append('i');
        java.lang.String str12 = strBuilder9.midString(16, 43);
        int int13 = strBuilder9.length();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "17i" + "'", str12, "17i");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 19 + "'", int13 == 19);
    }

    @Test
    public void test13107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13107");
        java.lang.Throwable throwable1 = null;
        java.io.IOException iOException2 = new java.io.IOException("hi!true#4#a4#0\n", throwable1);
    }

    @Test
    public void test13108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13108");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset("hi!\n#4#a4#\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer16.reset();
        java.lang.String str18 = strTokenizer17.toString();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test13109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13109");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        reader17.mark((int) (short) -1);
        boolean boolean21 = reader17.ready();
        reader17.close();
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher31, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        int int36 = reader17.read(charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceAll(' ', '#');
        char[] charArray50 = strBuilder46.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.insert((int) (byte) 0, charArray50);
        int int52 = reader17.read(charArray50);
        boolean boolean53 = reader17.markSupported();
        boolean boolean54 = reader17.ready();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "hi!#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "hi!#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, i, !, #, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 6 + "'", int36 == 6);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4, #, \n]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test13110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13110");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceAll(' ', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.insert(97, (double) 44);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
    }

    @Test
    public void test13111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13111");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("##4a#4#\n0.1!i0.01001h");
    }

    @Test
    public void test13112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13112");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        int int36 = strBuilder19.lastIndexOf(strMatcher33, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.append((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("!#4#a4#\na100\n");
        char[] charArray42 = strBuilder39.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "53#4a#4#eurt!ih!#4#a4#\na100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "53#4a#4#eurt!ih!#4#a4#\na100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[5, 3, #, 4, a, #, 4, #, e, u, r, t, !, i, h, !, #, 4, #, a, 4, #, \n, a, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(strTokenizer43);
    }

    @Test
    public void test13113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13113");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray0);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup2 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray10);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher17, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor35 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup2, strMatcher30, strMatcher33, '$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer1.setQuoteMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer1.setDelimiterString("java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer1.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("0                                                 ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = strTokenizer42.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strStrLookup2);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
    }

    @Test
    public void test13114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13114");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        java.util.Set<java.lang.Object> objSet6 = properties1.keySet();
        java.lang.String str7 = properties1.toString();
        java.util.Collection<java.lang.Object> objCollection8 = properties1.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties1.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean13 = strBuilder11.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.replaceFirst('#', '4');
        char[] charArray24 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ', '4');
        boolean boolean28 = strTokenizer27.isEmptyTokenAsNull();
        boolean boolean29 = properties1.containsKey((java.lang.Object) strTokenizer27);
        java.util.Set<java.lang.String> strSet30 = properties1.stringPropertyNames();
        properties1.clear();
        int int32 = properties1.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties1.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties1.entrySet();
        java.io.Reader reader35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(reader35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNotNull(objEntrySet34);
    }

    @Test
    public void test13115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13115");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("java.io.IOException: java.io.IOException: java.io.IOException: ", "hi!\na");
        java.lang.String str5 = strBuilder0.leftString((int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln(true);
        boolean boolean9 = strBuilder6.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.replaceAll('4', 'e');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.clear();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test13116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13116");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder2.replace(strMatcher21, "hi!", (int) (short) 10, (int) 'a', (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder2.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) 34);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean34 = strBuilder32.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendln((float) 1L);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        java.util.List<java.lang.String> strList49 = strTokenizer48.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder32.appendAll((java.lang.Iterable<java.lang.String>) strList49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.setLength(0);
        int int58 = strBuilder57.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("h!true#4#a4#false");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean64 = strBuilder62.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendSeparator('#', (int) (short) 1);
        int int74 = strBuilder71.lastIndexOf('4', 10);
        char[] charArray81 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, "");
        java.lang.Object[] objArray84 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder71.appendAll(objArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder71.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer89 = strBuilder71.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder60.append(stringBuffer89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder57.append(strBuilder90);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder30.append(strBuilder57, 9, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder57.appendSeparator('\000', 'h');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(stringBuffer89);
        org.junit.Assert.assertEquals(stringBuffer89.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test13117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13117");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        boolean boolean19 = reader17.markSupported();
        reader17.close();
        reader17.mark(4);
        reader17.close();
        reader17.mark(11);
        int int26 = reader17.read();
        reader17.mark(82);
        boolean boolean29 = reader17.ready();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 104 + "'", int26 == 104);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test13118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13118");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup5 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup5);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup7 = strSubstitutor6.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor6.setVariablePrefix("hi!");
        char char10 = strSubstitutor6.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean14 = strBuilder12.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.setNullText("hi!\na");
        java.lang.String str27 = strSubstitutor6.replace(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNewLine();
        java.util.stream.IntStream intStream31 = strBuilder30.chars();
        boolean boolean32 = strBuilder26.equals((java.lang.Object) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.setCharAt(0, '1');
        boolean boolean38 = strSubstitutor4.replaceIn(strBuilder35, 7, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.deleteAll('0');
        java.lang.String str43 = strBuilder35.substring(0, (int) '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.appendSeparator('E', '0');
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNull(wildcardStrLookup7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertTrue("'" + char10 + "' != '" + '$' + "'", char10 == '$');
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str27, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "14a#4#\n.1!i.1hhi!1.\nfalse\n#" + "'", str43, "14a#4#\n.1!i.1hhi!1.\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test13119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13119");
        java.util.Properties properties1 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setTrimmerMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer16.setQuoteChar('$');
        java.lang.Object obj22 = strTokenizer21.clone();
        boolean boolean23 = properties1.containsValue(obj22);
        java.util.Properties properties24 = new java.util.Properties(properties1);
        boolean boolean25 = properties1.isEmpty();
        java.lang.String str26 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) "java.io.IOException: hi!1.0\nfalse\n#", properties1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "java.io.IOException: hi!1.0\nfalse\n#" + "'", str26, "java.io.IOException: hi!1.0\nfalse\n#");
    }

    @Test
    public void test13120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13120");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert((int) (byte) 0, (long) (short) 100);
        java.io.Reader reader8 = strBuilder1.asReader();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties10.clear();
        properties10.clear();
        char[] charArray17 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean21 = strBuilder19.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append(true);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        boolean boolean36 = strTokenizer35.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder19.appendAll((java.util.Iterator<java.lang.String>) strTokenizer35);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher46, strMatcher48);
        boolean boolean50 = strBuilder19.contains(strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher46);
        boolean boolean52 = properties10.equals((java.lang.Object) strMatcher46);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties10.elements();
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher62, strMatcher64);
        boolean boolean66 = strTokenizer65.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList67 = strTokenizer65.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer65.setQuoteChar('#');
        boolean boolean70 = properties10.equals((java.lang.Object) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray79 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, strMatcher81, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray79);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder72.appendln(charArray79);
        java.lang.Object obj88 = properties10.get((java.lang.Object) charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray79);
        int int90 = reader8.read(charArray79);
        long long92 = reader8.skip(93L);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "10035S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "10035S");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[1, 0, 0, 3, 5, S]");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 6 + "'", int90 == 6);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 30L + "'", long92 == 30L);
    }

    @Test
    public void test13121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13121");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties1.keys();
        boolean boolean8 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet9 = properties1.stringPropertyNames();
        properties1.clear();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test13122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13122");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean4 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher16, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendln(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        java.lang.Object obj24 = properties1.get((java.lang.Object) charArray14);
        java.util.Properties properties25 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties1.keys();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup27 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor28 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup27);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup29 = strSubstitutor28.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor31 = strSubstitutor28.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer32 = null;
        boolean boolean33 = strSubstitutor28.replaceIn(stringBuffer32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strSubstitutor28.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = strSubstitutor28.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor38 = strSubstitutor36.setVariablePrefix("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean42 = strBuilder40.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.replaceFirst('#', '4');
        char[] charArray53 = strBuilder46.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        java.lang.String str58 = strSubstitutor38.replace(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strSubstitutor38.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean63 = strBuilder61.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.deleteFirst("");
        boolean boolean68 = strBuilder67.isEmpty();
        java.lang.String str69 = strBuilder67.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.appendSeparator(" yet]{}", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder67.appendSeparator('t', 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean79 = strBuilder77.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder77.deleteFirst("");
        boolean boolean84 = strBuilder83.isEmpty();
        java.lang.String str85 = strBuilder83.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder83.appendSeparator(" yet]{}", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder83.appendSeparator('t', 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder67.append(strBuilder91);
        java.lang.Object obj93 = properties1.putIfAbsent((java.lang.Object) strSubstitutor38, (java.lang.Object) strBuilder92);
        properties1.clear();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(wildcardStrLookup29);
        org.junit.Assert.assertNotNull(strSubstitutor31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strSubstitutor36);
        org.junit.Assert.assertNotNull(strSubstitutor38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!1.0\nfalse\n4" + "'", str58, "hi!1.0\nfalse\n4");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!1.0\n" + "'", str69, "hi!1.0\n");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!1.0\n" + "'", str85, "hi!1.0\n");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNull(obj93);
    }

    @Test
    public void test13123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13123");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.deleteFirst("");
        boolean boolean8 = strBuilder7.isEmpty();
        java.lang.String str9 = strBuilder7.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.setLength((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean15 = strBuilder13.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.append(true);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder11.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("044444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        properties38.clear();
        properties38.clear();
        java.util.Set<java.lang.String> strSet42 = properties38.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean46 = strBuilder44.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln(false);
        java.lang.Object obj51 = properties38.remove((java.lang.Object) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.reverse();
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher61, strMatcher63);
        boolean boolean65 = strTokenizer64.isEmptyTokenAsNull();
        int int66 = strTokenizer64.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer64.setTrimmerMatcher(strMatcher67);
        boolean boolean69 = strTokenizer68.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder48.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer68, "true");
        java.lang.String[] strArray72 = strTokenizer68.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder36.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer68, "4#hi!1.0\nf");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!1.0\n" + "'", str9, "hi!1.0\n");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test13124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13124");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean15 = strBuilder13.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendln((float) 1L);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        java.util.List<java.lang.String> strList30 = strTokenizer29.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendAll((java.lang.Iterable<java.lang.String>) strList30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.String str35 = strBuilder34.getNullText();
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher44, strMatcher46);
        int int48 = strBuilder34.lastIndexOf(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean52 = strBuilder50.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator('#', (int) (short) 1);
        int int62 = strBuilder59.lastIndexOf('4', 10);
        char[] charArray69 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, "");
        java.lang.Object[] objArray72 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder59.appendAll(objArray72);
        char[] charArray80 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, strMatcher82, strMatcher84);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer85.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer85.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder59.replaceFirst(strMatcher87, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher44, strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 7 + "'", int48 == 7);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer92);
    }

    @Test
    public void test13125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13125");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup6 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor7 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup6);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup8 = strSubstitutor7.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor7.setVariablePrefix('a');
        boolean boolean11 = properties5.containsValue((java.lang.Object) strSubstitutor10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        java.util.Enumeration<?> wildcardEnumeration15 = properties13.propertyNames();
        boolean boolean17 = properties13.containsKey((java.lang.Object) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean21 = strBuilder19.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendln((float) 1L);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        java.util.List<java.lang.String> strList36 = strTokenizer35.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder19.appendAll((java.lang.Iterable<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray41 = strBuilder40.toCharArray();
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher50, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher50, strMatcher54);
        java.lang.Object obj56 = properties13.get((java.lang.Object) charArray41);
        java.util.Properties properties57 = new java.util.Properties(properties13);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("\neslaf\n0.1!ih35.0\nhi!#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.setNullText("i!1.0\nfalse\n#4\nStrTokenizer[");
        java.lang.Object obj63 = properties57.remove((java.lang.Object) "i!1.0\nfalse\n#4\nStrTokenizer[");
        java.util.Set<java.lang.Object> objSet64 = properties57.keySet();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNull(wildcardStrLookup8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objSet64);
    }

    @Test
    public void test13126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13126");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!#4#a4#\na032.0");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test13127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13127");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        java.lang.Object obj14 = properties1.remove((java.lang.Object) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.reverse();
        boolean boolean17 = strBuilder11.startsWith("hi!1.0\nfalse\n#4#a4#13\n");
        boolean boolean19 = strBuilder11.startsWith("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder23.appendln(charArray30);
        java.io.Reader reader39 = strBuilder23.asReader();
        reader39.reset();
        boolean boolean41 = reader39.markSupported();
        reader39.close();
        int int43 = reader39.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder48.appendln(charArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder46.appendln(charArray55);
        int int65 = reader39.read(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray55);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder11.append(charArray55, 23, 19);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 19");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 104 + "'", int43 == 104);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "i!#4#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "i!#4#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[i, !, #, 4, #, a]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 6 + "'", int65 == 6);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer67);
    }

    @Test
    public void test13128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13128");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean25 = strBuilder23.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendln((float) 1L);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        java.util.List<java.lang.String> strList40 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder23.appendAll((java.lang.Iterable<java.lang.String>) strList40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.String str45 = strBuilder44.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean49 = strBuilder47.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendSeparator('#', (int) (short) 1);
        int int59 = strBuilder56.lastIndexOf('4', 10);
        char[] charArray66 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, "");
        java.lang.Object[] objArray69 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder56.appendAll(objArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder56.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer74 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder44.append(stringBuffer74);
        boolean boolean76 = properties20.equals((java.lang.Object) strBuilder75);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        properties78.clear();
        java.util.Enumeration<?> wildcardEnumeration80 = properties78.propertyNames();
        boolean boolean82 = properties78.containsKey((java.lang.Object) (-1));
        java.util.Enumeration<?> wildcardEnumeration83 = properties78.propertyNames();
        java.lang.Object obj84 = null;
        boolean boolean85 = properties78.equals(obj84);
        boolean boolean86 = strBuilder75.equals(obj84);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder75.insert(26, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder75.insert(0, (float) 104);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder92.deleteAll("!#4#a4#\na100\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder92.setNullText("alse\n#40.0");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(stringBuffer74);
        org.junit.Assert.assertEquals(stringBuffer74.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test13129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13129");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder19.deleteAll("");
        boolean boolean32 = strBuilder19.startsWith("StrToken");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean36 = strBuilder34.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean47 = strBuilder45.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('#', (int) (short) 1);
        int int57 = strBuilder54.lastIndexOf('4', 10);
        char[] charArray64 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, "");
        java.lang.Object[] objArray67 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder54.appendAll(objArray67);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup69 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor75 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup69, strMatcher71, strMatcher73, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder68.replaceFirst(strMatcher73, "hi!\n100aaaaaaa52.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst(strMatcher78);
        boolean boolean80 = strBuilder40.equals(strBuilder77);
        boolean boolean82 = strBuilder77.contains("#4a#4#\n0.1!i0.001h$$$$$hi!\n#\n");
        java.lang.String str83 = strBuilder77.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder77.appendln(28);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.setNewLineText("h100.0i!1.0\n#4#a4#32.0#4#a4#\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder19.append((java.lang.CharSequence) "h100.0i!1.0\n#4#a4#32.0#4#a4#\n", 12, 84);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test13130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13130");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln("1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.insert(12, "hi!1.0\n");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup22 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor26 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup22, "hi!\n100aaaaaaa52.0\n", "hi!1.0\nfalse\n#", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strSubstitutor26.getVariableSuffixMatcher();
        boolean boolean28 = strBuilder18.equals((java.lang.Object) strSubstitutor26);
        java.lang.String str30 = strSubstitutor26.replace("");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor32 = strSubstitutor26.setVariableSuffix("                              hi!\na");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strStrLookup22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(strSubstitutor32);
    }

    @Test
    public void test13131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13131");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.trim();
        int int12 = strBuilder1.lastIndexOf("Str10oke");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean16 = strBuilder14.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendln((float) 1L);
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        java.util.List<java.lang.String> strList31 = strTokenizer30.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder14.appendAll((java.lang.Iterable<java.lang.String>) strList31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray36 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.reverse();
        int int39 = strBuilder35.indexOf('#');
        java.lang.StringBuffer stringBuffer40 = strBuilder35.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder1.appendln(stringBuffer40);
        int int43 = strBuilder41.indexOf('1');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(stringBuffer40);
        org.junit.Assert.assertEquals(stringBuffer40.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 12 + "'", int43 == 12);
    }

    @Test
    public void test13132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13132");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray29 = strBuilder28.toCharArray();
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher38, strMatcher42);
        java.lang.Object obj44 = properties1.get((java.lang.Object) charArray29);
        java.util.Properties properties45 = new java.util.Properties(properties1);
        java.lang.String str46 = properties45.toString();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties45.entrySet();
        properties45.clear();
        java.lang.String str50 = properties45.getProperty("e\nhi!1.0\nfalse\n4\n");
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties45.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties45.elements();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "{}" + "'", str46, "{}");
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(objEnumeration52);
    }

    @Test
    public void test13133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13133");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getQuoteMatcher();
        boolean boolean4 = strTokenizer2.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setIgnoredChar('#');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = strTokenizer2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test13134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13134");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.replaceAll('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder54.append("hi!\na");
        java.lang.String str65 = strBuilder54.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder54.deleteCharAt((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder54.delete((int) (short) 0, (int) ' ');
        boolean boolean72 = strBuilder70.endsWith("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.append("#4a#4#\n0.1!i0.001h$$$$$hi!\n#hi!100\naaaaaaaaaaa", 5, (int) (short) 10);
        boolean boolean78 = strBuilder76.contains('#');
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test13135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13135");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.appendln('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append("hi!\na ");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.appendSeparator('!', 'b');
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        boolean boolean47 = strTokenizer46.isEmptyTokenAsNull();
        int int48 = strTokenizer46.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer46.setDelimiterString("hi!");
        java.lang.String str51 = strTokenizer50.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer50.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder27.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer50, "");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str51, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test13136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13136");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.setLength(0);
        boolean boolean28 = strBuilder26.startsWith("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean32 = strBuilder30.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(true);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        boolean boolean47 = strTokenizer46.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer60.setTrimmerMatcher(strMatcher62);
        int int65 = strBuilder48.lastIndexOf(strMatcher62, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder26.deleteFirst(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder26.replaceAll("h100.0i!1.0\n#4#a4#32.0#4#a4#\n", "h!true#4#a4#false");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendSeparator("hi!#4#a4#", 30);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence75 = strBuilder69.subSequence(7, 109);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 109");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test13137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13137");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor1.setVariablePrefix('a');
        char[] charArray9 = null;
        java.lang.String str10 = strSubstitutor1.replace(charArray9);
        char char11 = strSubstitutor1.getEscapeChar();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup12 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher22, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray20);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher27, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor45 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup12, strMatcher40, strMatcher43, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher59, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder50.appendln(charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder48.appendln(charArray57);
        java.lang.String str67 = strSubstitutor45.replace(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '\n');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str72 = strSubstitutor1.replace(charArray57, (int) (byte) 1, (int) 't');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 116");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + char11 + "' != '" + '$' + "'", char11 == '$');
        org.junit.Assert.assertNotNull(strStrLookup12);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "#4#a4#" + "'", str67, "#4#a4#");
    }

    @Test
    public void test13138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13138");
        java.io.IOException iOException1 = new java.io.IOException("#4a#4#\n0.1!i0.001h#");
        java.lang.Throwable[] throwableArray2 = iOException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
    }

    @Test
    public void test13139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13139");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties5.entrySet();
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Collection<java.lang.Object> objCollection8 = properties5.values();
        java.lang.Object obj11 = properties5.setProperty("", "");
        java.util.Properties properties12 = new java.util.Properties(properties5);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNewLine();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        properties17.clear();
        properties17.clear();
        properties17.clear();
        java.util.Set<java.lang.String> strSet21 = properties17.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.appendAll((java.lang.Iterable<java.lang.String>) strSet21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNullText("hi!\na");
        java.io.Reader reader26 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.appendFixedWidthPadLeft(53, (int) '1', '0');
        int int33 = strBuilder30.indexOf("41a14", 37);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendSeparator('t');
        boolean boolean36 = properties12.containsValue((java.lang.Object) 't');
        boolean boolean37 = properties12.isEmpty();
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test13140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13140");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        int int19 = strTokenizer17.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer17.setTrimmerMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.deleteAll(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder1.append("i!\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.trim();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendln(true);
        char[] charArray33 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean37 = strBuilder35.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append(true);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher48, strMatcher50);
        boolean boolean52 = strTokenizer51.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder35.appendAll((java.util.Iterator<java.lang.String>) strTokenizer51);
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher62, strMatcher64);
        boolean boolean66 = strBuilder35.contains(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray33);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder28.insert(90, charArray33, (int) '4', 101);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 90");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
    }

    @Test
    public void test13141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13141");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet3 = properties1.keySet();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties5.clear();
        properties5.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj12 = properties5.setProperty("StrTokenizer[not", "0                                                 ");
        java.lang.String str13 = properties5.toString();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        properties15.clear();
        java.util.Enumeration<?> wildcardEnumeration17 = properties15.propertyNames();
        boolean boolean19 = properties15.containsKey((java.lang.Object) (-1));
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        java.util.List<java.lang.String> strList32 = strTokenizer31.getTokenList();
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher41, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray39);
        java.lang.Object obj47 = properties15.getOrDefault((java.lang.Object) strList32, (java.lang.Object) charArray39);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj50 = properties15.remove((java.lang.Object) properties49);
        java.util.Set<java.lang.Object> objSet51 = properties15.keySet();
        java.util.Properties properties52 = new java.util.Properties(properties15);
        java.util.Collection<java.lang.Object> objCollection53 = properties15.values();
        java.lang.Throwable throwable56 = null;
        java.io.IOException iOException57 = new java.io.IOException("", throwable56);
        java.io.IOException iOException58 = new java.io.IOException((java.lang.Throwable) iOException57);
        java.io.IOException iOException59 = new java.io.IOException((java.lang.Throwable) iOException58);
        java.io.IOException iOException60 = new java.io.IOException((java.lang.Throwable) iOException59);
        java.lang.Throwable[] throwableArray61 = iOException59.getSuppressed();
        java.io.IOException iOException62 = new java.io.IOException("java.io.IOException: StrTokenizer[#4#a4#]", (java.lang.Throwable) iOException59);
        java.lang.Object obj63 = properties5.put((java.lang.Object) properties15, (java.lang.Object) iOException62);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties15.elements();
        int int65 = properties15.size();
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{StrTokenizer[not=0                                                 }" + "'", str13, "{StrTokenizer[not=0                                                 }");
        org.junit.Assert.assertNotNull(wildcardEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test13142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13142");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append('#');
        boolean boolean9 = strBuilder2.contains("hi!\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean13 = strBuilder11.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendln((float) 1L);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        boolean boolean28 = strTokenizer27.isEmptyTokenAsNull();
        int int29 = strTokenizer27.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer27.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder11.deleteAll(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer37.reset();
        java.lang.String str39 = strTokenizer38.previousToken();
        java.lang.String[] strArray40 = strTokenizer38.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder32.appendAll((java.lang.Object[]) strArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder2.appendln(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder32.replaceAll(' ', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator('4', 't');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test13143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13143");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup1 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor2 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup1);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup3 = strSubstitutor2.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor5 = strSubstitutor2.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer6 = null;
        boolean boolean7 = strSubstitutor2.replaceIn(stringBuffer6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strSubstitutor2.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("0\n#4#a4#\n", strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setIgnoreEmptyTokens(false);
        int int14 = strTokenizer11.previousIndex();
        java.lang.Object obj15 = strTokenizer11.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!1.0\nfal-1.0se\n##4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer11.setQuoteMatcher(strMatcher17);
        org.junit.Assert.assertNull(wildcardStrLookup3);
        org.junit.Assert.assertNotNull(strSubstitutor5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer18);
    }

    @Test
    public void test13144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13144");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) -1);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup2 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray10);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher17, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor35 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup2, strMatcher30, strMatcher33, '$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup2);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean40 = strBuilder38.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.append(true);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher51, strMatcher53);
        boolean boolean55 = strTokenizer54.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder38.appendAll((java.util.Iterator<java.lang.String>) strTokenizer54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append(false);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray65);
        int int74 = strBuilder58.indexOf(strMatcher72, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder58.append((float) (short) -1);
        java.lang.StringBuffer stringBuffer77 = strBuilder76.toStringBuffer();
        java.lang.String str78 = strSubstitutor36.replace(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder1.append(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendSeparator(' ', 123);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.replaceAll('.', 'h');
        java.io.Writer writer86 = strBuilder85.asWriter();
        org.junit.Assert.assertNotNull(strStrLookup2);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 7 + "'", int74 == 7);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(stringBuffer77);
        org.junit.Assert.assertEquals(stringBuffer77.toString(), "hi!true#4#a4#false-1.0");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!true#4#a4#false-1.0" + "'", str78, "hi!true#4#a4#false-1.0");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(writer86);
    }

    @Test
    public void test13145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13145");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties20.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties20.keys();
        java.io.OutputStream outputStream62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.storeToXML(outputStream62, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration61);
    }

    @Test
    public void test13146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13146");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        java.lang.Object obj14 = properties1.remove((java.lang.Object) strBuilder11);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("h!true#4#a4#false");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        properties18.clear();
        java.util.Enumeration<?> wildcardEnumeration20 = properties18.propertyNames();
        boolean boolean22 = properties18.containsKey((java.lang.Object) (-1));
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher31, strMatcher33);
        java.util.List<java.lang.String> strList35 = strTokenizer34.getTokenList();
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher44, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray42);
        java.lang.Object obj50 = properties18.getOrDefault((java.lang.Object) strList35, (java.lang.Object) charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        int int53 = strMatcher16.isMatch(charArray42, 33);
        int int55 = strBuilder11.indexOf(strMatcher16, 126);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder11.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append("");
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(wildcardEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test13147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13147");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        int int15 = strBuilder10.indexOf("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.appendSeparator("#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean21 = strBuilder19.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendln((float) 1L);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        java.util.List<java.lang.String> strList36 = strTokenizer35.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder19.appendAll((java.lang.Iterable<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray41 = strBuilder40.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.reverse();
        int int44 = strBuilder40.indexOf('#');
        java.lang.StringBuffer stringBuffer45 = strBuilder40.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder10.appendln(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder10.appendSeparator(' ', '1');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup50 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor51 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup50);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup52 = strSubstitutor51.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor54 = strSubstitutor51.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean59 = strBuilder57.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendln((float) 1L);
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher70, strMatcher72);
        boolean boolean74 = strTokenizer73.isEmptyTokenAsNull();
        int int75 = strTokenizer73.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer73.setTrimmerMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder57.deleteAll(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("hi!\na", strMatcher76);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor80 = strSubstitutor54.setVariableSuffixMatcher(strMatcher76);
        int int82 = strBuilder49.indexOf(strMatcher76, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder49.insert(14, (float) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder49.appendSeparator("hi!true##a#35");
        java.lang.String str88 = strBuilder49.getNullText();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(stringBuffer45);
        org.junit.Assert.assertEquals(stringBuffer45.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(wildcardStrLookup52);
        org.junit.Assert.assertNotNull(strSubstitutor54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strSubstitutor80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 6 + "'", int82 == 6);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test13148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13148");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        int int36 = strBuilder19.lastIndexOf(strMatcher33, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.append((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder19.ensureCapacity((int) (short) -1);
        boolean boolean42 = strBuilder19.startsWith("#4#a4#");
        int int45 = strBuilder19.lastIndexOf('.', 182);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder19.appendFixedWidthPadRight(77, 126, 'b');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder19.appendln(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test13149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13149");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.appendln(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.trim();
        boolean boolean27 = strBuilder1.equalsIgnoreCase(strBuilder21);
        java.lang.String str28 = strBuilder1.getNewLineText();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        java.util.Set<java.lang.Object> objSet32 = properties30.keySet();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties34.clear();
        properties34.clear();
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        java.util.Enumeration<?> wildcardEnumeration42 = properties40.propertyNames();
        boolean boolean44 = properties40.containsKey((java.lang.Object) (-1));
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        java.util.List<java.lang.String> strList57 = strTokenizer56.getTokenList();
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher66, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray64);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray64);
        java.lang.Object obj72 = properties40.getOrDefault((java.lang.Object) strList57, (java.lang.Object) charArray64);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup73 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor74 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup73);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup75 = strSubstitutor74.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor77 = strSubstitutor74.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor79 = strSubstitutor74.setVariableSuffix('#');
        java.lang.StringBuffer stringBuffer80 = null;
        java.lang.String str83 = strSubstitutor74.replace(stringBuffer80, (-1), 0);
        java.lang.String str85 = strSubstitutor74.replace("StrTokenizer[not tokenized yet]");
        java.lang.Object obj86 = properties30.getOrDefault((java.lang.Object) charArray64, (java.lang.Object) strSubstitutor74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray64);
        boolean boolean88 = strTokenizer87.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer87.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer87, "i!1.0\n#4#a4#false\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer87.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNotNull(wildcardEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNull(wildcardStrLookup75);
        org.junit.Assert.assertNotNull(strSubstitutor77);
        org.junit.Assert.assertNotNull(strSubstitutor79);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str85, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strMatcher92);
    }

    @Test
    public void test13150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13150");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        char char5 = strSubstitutor4.getEscapeChar();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor7 = strSubstitutor4.setVariableSuffix("h!true#4#a4#false");
        strSubstitutor4.setEscapeChar(' ');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor4.setVariableSuffix("{StrTokenizer[not=0                                                 }");
        java.lang.String str13 = strSubstitutor11.replace("StrT10okenizer[#4#a4#]100aaaaaaaa#4a#4#\n0.1!i0.001h\n");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor15 = strSubstitutor11.setVariableSuffix('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher29, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder20.appendln(charArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder18.appendln(charArray27);
        java.io.Writer writer37 = strBuilder18.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.replace(1, 14, "h100.0i!1.0\n#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.ensureCapacity(30);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher54, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder45.appendln(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.trim();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup69 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str71 = strStrLookup69.lookup("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.appendln((java.lang.Object) "{}");
        int int75 = strBuilder68.indexOf("StrTokenizer[not", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder68.append((long) 104);
        java.lang.Object obj79 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder68.insert((int) (short) 1, obj79);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder41.appendln(strBuilder80);
        java.lang.String str82 = strSubstitutor15.replace(strBuilder81);
        strSubstitutor15.setEscapeChar('a');
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + '$' + "'", char5 == '$');
        org.junit.Assert.assertNotNull(strSubstitutor7);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrT10okenizer[#4#a4#]100aaaaaaaa#4a#4#\n0.1!i0.001h\n" + "'", str13, "StrT10okenizer[#4#a4#]100aaaaaaaa#4a#4#\n0.1!i0.001h\n");
        org.junit.Assert.assertNotNull(strSubstitutor15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strStrLookup69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hh100.0i!1.0\n#4#a4#hi!#4#a4#\na100{}\n104\n" + "'", str82, "hh100.0i!1.0\n#4#a4#hi!#4#a4#\na100{}\n104\n");
    }

    @Test
    public void test13151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13151");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.ensureCapacity((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendln(false);
        char char25 = strBuilder23.charAt(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.replaceAll('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendSeparator("hi!true#4#a4#0\n", 63);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("hi!1.0\nfalse\n#4#a4");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendSeparator('b', (int) 'e');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher48, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder39.appendln(charArray46);
        java.io.Reader reader55 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder39.appendFixedWidthPadLeft(1, 3, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteAll("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.appendln((double) 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.append((double) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder59.replaceAll('a', '4');
        char[] charArray71 = strBuilder70.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder37.append(charArray71, 174, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 7");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + char25 + "' != '" + 'i' + "'", char25 == 'i');
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "hi!#4#44#\n11112.0\ntrue\n0.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "hi!#4#44#\n11112.0\ntrue\n0.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[h, i, !, #, 4, #, 4, 4, #, \n, 1, 1, 1, 1, 2, ., 0, \n, t, r, u, e, \n, 0, ., 0]");
    }

    @Test
    public void test13152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13152");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        boolean boolean4 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties1.elements();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher16, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendln(charArray14);
        java.io.Reader reader23 = strBuilder7.asReader();
        reader23.reset();
        properties1.load(reader23);
        java.lang.Object obj26 = properties1.clone();
        properties1.clear();
        java.util.Properties properties28 = new java.util.Properties(properties1);
        properties28.clear();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{hi!#4#a4#=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{hi!#4#a4#=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{hi!#4#a4#=}");
    }

    @Test
    public void test13153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13153");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not", '1', '4');
        java.lang.String str4 = strTokenizer3.getContent();
        boolean boolean5 = strTokenizer3.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer3.setIgnoredChar('b');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not" + "'", str4, "StrTokenizer[not");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
    }

    @Test
    public void test13154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13154");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean6 = strBuilder4.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.append(true);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        boolean boolean21 = strTokenizer20.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder4.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray31);
        int int40 = strBuilder24.indexOf(strMatcher38, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder24.append((float) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder24.insert(12, (float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator('$', '#');
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, '0', '$');
        boolean boolean65 = strTokenizer64.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder48.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer64, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer64.reset();
        boolean boolean69 = strTokenizer64.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer64.reset();
        boolean boolean71 = properties1.containsKey((java.lang.Object) strTokenizer70);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7 + "'", int40 == 7);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test13155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13155");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder19.insert(1, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher44, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder35.appendln(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendSeparator('a', 10);
        java.util.Properties properties54 = new java.util.Properties();
        boolean boolean55 = strBuilder50.equals((java.lang.Object) properties54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.append((long) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder50.insert(10, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder50.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder50.ensureCapacity(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder30.appendFixedWidthPadRight((java.lang.Object) strBuilder63, 30, '4');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test13156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13156");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        int int9 = strBuilder7.lastIndexOf(strMatcher8);
        int int11 = strBuilder7.indexOf("h!true#4#a4#false");
        boolean boolean13 = strBuilder7.endsWith("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNewLine();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        properties18.clear();
        properties18.clear();
        properties18.clear();
        java.util.Set<java.lang.String> strSet22 = properties18.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.appendAll((java.lang.Iterable<java.lang.String>) strSet22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.trim();
        int int26 = strBuilder15.lastIndexOf("Str10oke");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean30 = strBuilder28.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendln((float) 1L);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher41, strMatcher43);
        java.util.List<java.lang.String> strList45 = strTokenizer44.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder28.appendAll((java.lang.Iterable<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray50 = strBuilder49.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.reverse();
        int int53 = strBuilder49.indexOf('#');
        java.lang.StringBuffer stringBuffer54 = strBuilder49.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder15.appendln(stringBuffer54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder7.append(stringBuffer54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append("hi!1.0\nfalse\n#4#a4#ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(stringBuffer54);
        org.junit.Assert.assertEquals(stringBuffer54.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test13157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13157");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.ensureCapacity((int) '4');
        java.lang.StringBuffer stringBuffer22 = strBuilder21.toStringBuffer();
        boolean boolean24 = strBuilder21.endsWith("hi!#4#a4#\n");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(stringBuffer22);
        org.junit.Assert.assertEquals(stringBuffer22.toString(), "hi!1.0\n#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test13158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13158");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, "hi!\n100aaaaaaa52.0\n", "hi!1.0\nfalse\n#", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strSubstitutor4.getVariableSuffixMatcher();
        char[] charArray9 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean13 = strBuilder11.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.append(true);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        boolean boolean28 = strTokenizer27.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        boolean boolean42 = strBuilder11.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher38);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor44 = strSubstitutor4.setVariableSuffixMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor46 = strSubstitutor44.setVariableSuffix('a');
        java.lang.String str48 = strSubstitutor44.replace("\neslaf\n0.1!ih35.0\nhi!#4#a4#\n");
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        properties50.clear();
        properties50.clear();
        properties50.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean57 = strBuilder55.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.append(true);
        char[] charArray66 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher68, strMatcher70);
        boolean boolean72 = strTokenizer71.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder55.appendAll((java.util.Iterator<java.lang.String>) strTokenizer71);
        char[] charArray80 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, strMatcher82, strMatcher84);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer85.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer85.setTrimmerMatcher(strMatcher87);
        int int90 = strBuilder73.lastIndexOf(strMatcher87, (int) (byte) 10);
        boolean boolean91 = properties50.containsValue((java.lang.Object) strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder73.append(40);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder73.append((double) '$');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str98 = strSubstitutor44.replace(strBuilder73, 98, 26);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strStrLookup0);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strSubstitutor44);
        org.junit.Assert.assertNotNull(strSubstitutor46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\neslaf\n0.1!ih35.0\nhi!#4#a4#\n" + "'", str48, "\neslaf\n0.1!ih35.0\nhi!#4#a4#\n");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test13159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13159");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        boolean boolean32 = strBuilder1.contains(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder1.appendln((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteCharAt(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendSeparator("hi!1.0\nfalse\n#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test13160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13160");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor1.setVariableSuffix('4');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup9 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str11 = strStrLookup9.lookup("{}");
        strSubstitutor1.setVariableResolver(strStrLookup9);
        java.lang.String str14 = strStrLookup9.lookup("hi!");
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNotNull(strStrLookup9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test13161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13161");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.appendln((double) '4');
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList44 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder23.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "StrTokenizer[not tokenized yet]");
        boolean boolean51 = strBuilder16.equals((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder16.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder16.appendln("hi!1.0\nfalse\n##4a#4#\n0.1!i0.001h#4a#4#\n0.1!i0.001h\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder16.append(19);
        boolean boolean57 = strBuilder56.isEmpty();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!\n", '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer60, "hi!1.0\n#4");
        java.lang.String str63 = strTokenizer60.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer60.setDelimiterString("true#4#a4#StrTokenizer[not tokenized yet]{");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!\n" + "'", str63, "hi!\n");
        org.junit.Assert.assertNotNull(strTokenizer65);
    }

    @Test
    public void test13162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13162");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean25 = strBuilder23.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendln((float) 1L);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        java.util.List<java.lang.String> strList40 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder23.appendAll((java.lang.Iterable<java.lang.String>) strList40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.String str45 = strBuilder44.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean49 = strBuilder47.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendSeparator('#', (int) (short) 1);
        int int59 = strBuilder56.lastIndexOf('4', 10);
        char[] charArray66 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, "");
        java.lang.Object[] objArray69 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder56.appendAll(objArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder56.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer74 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder44.append(stringBuffer74);
        boolean boolean76 = properties20.equals((java.lang.Object) strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.append((long) 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.deleteAll("i!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.appendln((float) 258);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(stringBuffer74);
        org.junit.Assert.assertEquals(stringBuffer74.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test13163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13163");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder6.deleteCharAt(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder75.appendFixedWidthPadLeft(7, 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.deleteAll("hi!1.0\nfalse\n#4#");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test13164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13164");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties1.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean47 = strBuilder45.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((float) 1L);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher58, strMatcher60);
        java.util.List<java.lang.String> strList62 = strTokenizer61.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder45.appendAll((java.lang.Iterable<java.lang.String>) strList62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendSeparator('4', 0);
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher80, strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer83.setTrimmerMatcher(strMatcher85);
        java.lang.String str87 = strTokenizer83.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder71.appendAll((java.util.Iterator<java.lang.String>) strTokenizer83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer83.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer90.getQuoteMatcher();
        java.util.Properties properties92 = new java.util.Properties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet93 = properties92.entrySet();
        java.lang.Object obj94 = properties1.replace((java.lang.Object) strTokenizer90, (java.lang.Object) objEntrySet93);
        java.util.Set<java.lang.String> strSet95 = properties1.stringPropertyNames();
        int int96 = properties1.size();
        java.lang.Object obj97 = null;
        boolean boolean98 = properties1.equals(obj97);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet99 = properties1.entrySet();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str87, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(objEntrySet93);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(strSet95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(objEntrySet99);
    }

    @Test
    public void test13165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13165");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!true##a4#false-1.010.01hi!1.0\nalse\n", "hi!1i");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoredMatcher(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setDelimiterString("\n#########");
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test13166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13166");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.ensureCapacity((int) '4');
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln(stringBuffer22, (int) (byte) 0, 3);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray33);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher49, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher40, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder19.appendAll((java.util.Iterator<java.lang.String>) strTokenizer54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.setNewLineText("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.appendSeparator("", "hi!#4#a4#\n11112.0\ntrue\n");
        int int64 = strBuilder58.capacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 104 + "'", int64 == 104);
    }

    @Test
    public void test13167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13167");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.ensureCapacity((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup23 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor24 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup23);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup25 = strSubstitutor24.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor27 = strSubstitutor24.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer28 = null;
        boolean boolean29 = strSubstitutor24.replaceIn(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strSubstitutor24.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strSubstitutor24.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder22.deleteFirst(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.setNullText("h100.0i!1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder(0);
        java.lang.Object obj37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(obj37);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.append((java.lang.CharSequence) strBuilder38, 33, 40);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(wildcardStrLookup25);
        org.junit.Assert.assertNotNull(strSubstitutor27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test13168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13168");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder24.appendln((double) 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder24.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln("hi!1.0\nfalse\n#", 0, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("java.io.IOException: hi!1.0\nfalse\n#4#a4#13\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        boolean boolean55 = strBuilder52.contains(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String[] strArray58 = strTokenizer57.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer57.setQuoteChar('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.appendAll((java.util.Iterator<java.lang.String>) strTokenizer60);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer60.add("java.io.IOException: java.io.IOException: 0                                                 ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test13169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13169");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceAll(' ', '#');
        char[] charArray6 = strBuilder2.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("#-1");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("i!\n#4#a4#\n", strMatcher10, strMatcher12);
        boolean boolean14 = strBuilder2.contains(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendln("StrToken");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test13170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13170");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append('#');
        boolean boolean9 = strBuilder2.contains("hi!\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean13 = strBuilder11.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendln((float) 1L);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        boolean boolean28 = strTokenizer27.isEmptyTokenAsNull();
        int int29 = strTokenizer27.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer27.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder11.deleteAll(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer37.reset();
        java.lang.String str39 = strTokenizer38.previousToken();
        java.lang.String[] strArray40 = strTokenizer38.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder32.appendAll((java.lang.Object[]) strArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder2.appendln(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendSeparator("0.0i!1.0\n#4#a4#");
        java.util.stream.IntStream intStream45 = strBuilder44.codePoints();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.append("java.io.IOException: .0\n#4#a4#\n", 10, 29);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(intStream45);
    }

    @Test
    public void test13171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13171");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.replaceAll('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder54.append("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.append("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.setNullText("StrTokenizer[#4#a4#]");
        boolean boolean72 = strBuilder70.endsWith("\neslaf\n0.1!ih35.0\nhi!#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendFixedWidthPadLeft(28, 97, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.appendSeparator('0', '#');
        int int80 = strBuilder76.length();
        int int83 = strBuilder76.lastIndexOf("000000000000000000000000000000000000000000000000000", 83);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 171 + "'", int80 == 171);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
    }

    @Test
    public void test13172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13172");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet1 = properties0.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean5 = strBuilder3.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln((float) 1L);
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher16, strMatcher18);
        java.util.List<java.lang.String> strList20 = strTokenizer19.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.appendAll((java.lang.Iterable<java.lang.String>) strList20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray25 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.reverse();
        int int28 = strBuilder24.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean32 = strBuilder30.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(true);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        boolean boolean47 = strTokenizer46.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        properties50.clear();
        java.util.Enumeration<?> wildcardEnumeration52 = properties50.propertyNames();
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher61, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getQuoteMatcher();
        boolean boolean66 = properties50.containsValue((java.lang.Object) strMatcher65);
        int int68 = strBuilder30.indexOf(strMatcher65, (int) (byte) 1);
        boolean boolean69 = strBuilder24.contains(strMatcher65);
        java.lang.Object obj71 = properties0.put((java.lang.Object) strBuilder24, (java.lang.Object) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder24.appendSeparator('a', '1');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder24.replace(41, 65, "hi!#4#a4#\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEntrySet1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test13173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13173");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException("StrTokenizer[#4#a4#]", (java.lang.Throwable) iOException5);
        java.lang.Throwable throwable8 = null;
        java.io.IOException iOException9 = new java.io.IOException(throwable8);
        iOException5.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException("h100.0i!1.0\n#4#a4#\n", (java.lang.Throwable) iOException5);
        java.io.IOException iOException14 = new java.io.IOException("0                                                 ");
        java.io.IOException iOException15 = new java.io.IOException("hi!1.0\nfalse\n#4#a4", (java.lang.Throwable) iOException14);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException14);
        iOException11.addSuppressed((java.lang.Throwable) iOException16);
        java.lang.Throwable[] throwableArray18 = iOException16.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test13174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13174");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder6.replaceAll(strMatcher74, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.insert(4, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.setCharAt(1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder82.appendSeparator("hi!\na", "#");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder88.insert(43, 'E');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 43");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test13175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13175");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        int int4 = properties1.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher18, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder9.appendln(charArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendln(charArray16);
        java.io.Writer writer26 = strBuilder7.asWriter();
        writer26.flush();
        writer26.write((int) (byte) -1);
        properties1.store(writer26, "hi!1.0\nfalse\n#");
        java.util.Properties properties32 = new java.util.Properties(properties1);
        boolean boolean33 = properties32.isEmpty();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(writer26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test13176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13176");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.lang.String str5 = properties1.toString();
        java.lang.Object obj6 = properties1.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("#4#a4#");
        java.util.List<java.lang.String> strList11 = strTokenizer8.getTokenList();
        java.lang.Object obj12 = properties1.remove((java.lang.Object) strList11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean16 = strBuilder14.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendln((float) 1L);
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        java.util.List<java.lang.String> strList31 = strTokenizer30.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder14.appendAll((java.lang.Iterable<java.lang.String>) strList31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray36 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.reverse();
        int int39 = strBuilder35.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.append(21);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((long) 49);
        boolean boolean46 = properties1.contains((java.lang.Object) 49);
        boolean boolean47 = properties1.isEmpty();
        java.lang.Object obj48 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean49 = properties1.containsValue(obj48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test13177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13177");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet3 = properties1.keySet();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties5.clear();
        properties5.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj12 = properties5.setProperty("StrTokenizer[not", "0                                                 ");
        java.lang.String str13 = properties5.toString();
        java.util.Properties properties14 = new java.util.Properties(properties5);
        java.util.Properties properties15 = new java.util.Properties(properties14);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        boolean boolean28 = strTokenizer27.isEmptyTokenAsNull();
        int int29 = strTokenizer27.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer27.setDelimiterString("hi!");
        int int32 = strTokenizer31.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer34.reset();
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher59, strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher50, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer35.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer31.setQuoteMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup67 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor68 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup67);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup69 = strSubstitutor68.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor71 = strSubstitutor68.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strSubstitutor71.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer66.setTrimmerMatcher(strMatcher72);
        boolean boolean74 = properties14.containsValue((java.lang.Object) strMatcher72);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties14.elements();
        java.lang.String str76 = properties14.toString();
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{StrTokenizer[not=0                                                 }" + "'", str13, "{StrTokenizer[not=0                                                 }");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNull(wildcardStrLookup69);
        org.junit.Assert.assertNotNull(strSubstitutor71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{}" + "'", str76, "{}");
    }

    @Test
    public void test13178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13178");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!#4#a4#\na100                                                 hi!\nahi!{}", 'E');
    }

    @Test
    public void test13179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13179");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!#4#a4#\na", '#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.appendNewLine();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        properties8.clear();
        properties8.clear();
        properties8.clear();
        java.util.Set<java.lang.String> strSet12 = properties8.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.appendAll((java.lang.Iterable<java.lang.String>) strSet12);
        int int14 = strBuilder5.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean18 = strBuilder16.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln((float) 1L);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher29, strMatcher31);
        boolean boolean33 = strTokenizer32.isEmptyTokenAsNull();
        int int34 = strTokenizer32.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setTrimmerMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder16.deleteAll(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.replaceAll(strMatcher35, "0.0i!1.0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer3.setTrimmerMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean44 = strBuilder42.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('#', (int) (short) 1);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        properties53.clear();
        java.util.Enumeration<?> wildcardEnumeration55 = properties53.propertyNames();
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher64, strMatcher66);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer67.getQuoteMatcher();
        boolean boolean69 = properties53.containsValue((java.lang.Object) strMatcher68);
        int int70 = strBuilder48.indexOf(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer40.setQuoteMatcher(strMatcher68);
        boolean boolean72 = strTokenizer40.hasPrevious();
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(wildcardEnumeration55);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test13180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13180");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        java.lang.Object obj39 = properties1.setProperty("h100.0i!1.0\n#4#a4#\n", "#4#a4#");
        java.util.Set<java.lang.Object> objSet40 = properties1.keySet();
        java.lang.Object obj41 = properties1.clone();
        java.util.Properties properties42 = new java.util.Properties(properties1);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{h100.0i!1.0\n#4#a4#\n=#4#a4#}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{h100.0i!1.0\n#4#a4#\n=#4#a4#}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{h100.0i!1.0\n#4#a4#\n=#4#a4#}");
    }

    @Test
    public void test13181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13181");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.setLength(0);
        boolean boolean28 = strBuilder26.startsWith("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean32 = strBuilder30.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(true);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        boolean boolean47 = strTokenizer46.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer60.setTrimmerMatcher(strMatcher62);
        int int65 = strBuilder48.lastIndexOf(strMatcher62, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder26.deleteFirst(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder26.setNewLineText("{}");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.setCharAt(27, 'h');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 27");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test13182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13182");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        java.util.Enumeration<?> wildcardEnumeration9 = properties7.propertyNames();
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher18, strMatcher20);
        boolean boolean22 = strTokenizer21.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer21.setQuoteChar('#');
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher34, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer37.setTrimmerMatcher(strMatcher39);
        java.lang.Object obj41 = properties7.put((java.lang.Object) '#', (java.lang.Object) strTokenizer37);
        java.util.Set<java.lang.Object> objSet42 = properties7.keySet();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        properties45.clear();
        properties45.clear();
        properties45.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean52 = strBuilder50.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.append(true);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher63, strMatcher65);
        boolean boolean67 = strTokenizer66.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder50.appendAll((java.util.Iterator<java.lang.String>) strTokenizer66);
        char[] charArray75 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher77, strMatcher79);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer80.setTrimmerMatcher(strMatcher82);
        int int85 = strBuilder68.lastIndexOf(strMatcher82, (int) (byte) 10);
        boolean boolean86 = properties45.containsValue((java.lang.Object) strBuilder68);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet87 = properties45.entrySet();
        int int88 = properties45.size();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.util.Set<java.lang.String> strSet90 = properties5.stringPropertyNames();
        int int91 = properties5.size();
        java.util.Collection<java.lang.Object> objCollection92 = properties5.values();
        java.io.OutputStream outputStream93 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.storeToXML(outputStream93, "#a4#false\n", "1.0\nfalse\n#");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objEntrySet87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(strSet90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertNotNull(objCollection92);
    }

    @Test
    public void test13183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13183");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.insert(0, (long) '#');
        boolean boolean42 = properties1.equals((java.lang.Object) '#');
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties1.elements();
        java.lang.Object obj44 = properties1.clone();
        java.lang.Object obj47 = properties1.setProperty("StrTokenizer[not tokenized yet]", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean51 = strBuilder49.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln(false);
        int int56 = strBuilder55.length();
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher65, strMatcher67);
        java.util.List<java.lang.String> strList69 = strTokenizer68.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder55.appendAll((java.lang.Iterable<java.lang.String>) strList69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendSeparator("{}", (int) (short) -1);
        int int76 = strBuilder70.lastIndexOf(' ', 7);
        boolean boolean77 = properties1.containsKey((java.lang.Object) strBuilder70);
        java.lang.String str79 = properties1.getProperty("StrT10okenizer[#4#a4#]100aaaaaaaa#4a#4#\n0.1!i0.001h\n");
        java.util.Collection<java.lang.Object> objCollection80 = properties1.values();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 13 + "'", int56 == 13);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(objCollection80);
    }

    @Test
    public void test13184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13184");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        int int26 = strBuilder22.indexOf('#');
        java.lang.StringBuffer stringBuffer27 = strBuilder22.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceAll(' ', '#');
        boolean boolean35 = strBuilder30.contains("hi!1.0\nfalse\n4");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.appendSeparator('#', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder22.appendFixedWidthPadLeft((java.lang.Object) strBuilder30, (int) (byte) 10, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.append('t');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence46 = strBuilder43.subSequence((int) '1', 6);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -43");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(stringBuffer27);
        org.junit.Assert.assertEquals(stringBuffer27.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test13185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13185");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        boolean boolean19 = reader17.markSupported();
        reader17.close();
        int int21 = reader17.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder26.appendln(charArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder24.appendln(charArray33);
        int int43 = reader17.read(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setIgnoredChar('b');
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 104 + "'", int21 == 104);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "i!#4#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "i!#4#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[i, !, #, 4, #, a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 6 + "'", int43 == 6);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
    }

    @Test
    public void test13186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13186");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.setLength(0);
        int int27 = strBuilder26.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean31 = strBuilder29.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((float) 1L);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        java.util.List<java.lang.String> strList46 = strTokenizer45.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder29.appendAll((java.lang.Iterable<java.lang.String>) strList46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray51 = strBuilder50.toCharArray();
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher60, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher60, strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray74 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, strMatcher76, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray74);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder67.appendln(charArray74);
        int int84 = strMatcher64.isMatch(charArray74, (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray74);
        char[] charArray86 = strBuilder26.getChars(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, '4', '$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, '.');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer87);
    }

    @Test
    public void test13187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13187");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        properties23.clear();
        properties23.clear();
        properties23.clear();
        boolean boolean27 = strBuilder19.equals((java.lang.Object) properties23);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties23.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties23.entrySet();
        java.io.PrintWriter printWriter30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.list(printWriter30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNotNull(objEntrySet29);
    }

    @Test
    public void test13188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13188");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        java.io.Writer writer21 = strBuilder2.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder2.replace(1, 14, "h100.0i!1.0\n#4#a4#");
        int int28 = strBuilder2.lastIndexOf('t', (int) '.');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test13189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13189");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException: ", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setDelimiterString("0                                                 ");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        boolean boolean17 = strTokenizer16.isEmptyTokenAsNull();
        int int18 = strTokenizer16.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer16.setDelimiterString("hi!");
        int int21 = strTokenizer20.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer23.reset();
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher34, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray32);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray32);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher48, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher39, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer24.setTrimmerMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer20.setQuoteMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer2.setQuoteMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer2.setDelimiterString("hi!#4#a4#\na032.0");
        boolean boolean59 = strTokenizer58.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test13190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13190");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.append((int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!\nfalse", '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.replaceFirst(strMatcher7, "{StrTokenizer[hi!]=StrTokenizer[]}");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder14.appendln(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder12.appendln(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder3.appendln(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendSeparator('i', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendSeparator('$', 0);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test13191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13191");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        int int15 = strBuilder10.indexOf("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.appendSeparator("#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.deleteAll('$');
        java.io.Reader reader20 = strBuilder10.asReader();
        reader20.close();
        reader20.reset();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader20);
    }

    @Test
    public void test13192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13192");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.appendln((double) '4');
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList44 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder23.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "StrTokenizer[not tokenized yet]");
        boolean boolean51 = strBuilder16.equals((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder16.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder16.appendln("hi!1.0\nfalse\n##4a#4#\n0.1!i0.001h#4a#4#\n0.1!i0.001h\n");
        int int56 = strBuilder54.indexOf("hi!1.0\nfalse\n#4\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.insert(154, (long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 154");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test13193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13193");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.ensureCapacity((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.append((int) '4');
        int int15 = strBuilder10.length();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 21 + "'", int15 == 21);
    }

    @Test
    public void test13194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13194");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceAll(' ', '#');
        char[] charArray6 = strBuilder2.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("#-1");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("i!\n#4#a4#\n", strMatcher10, strMatcher12);
        boolean boolean14 = strBuilder2.contains(strMatcher10);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup15 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup15);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup17 = strSubstitutor16.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor16.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = strSubstitutor16.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor23 = strSubstitutor21.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll(' ', '#');
        char[] charArray30 = strBuilder26.toCharArray();
        java.lang.String str31 = strSubstitutor21.replace(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, "1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'i');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, "StrT10okenizer[#4#a4#]100aaaaaaaaa");
        // The following exception was thrown during execution in test generation
        try {
            int int41 = strMatcher10.isMatch(charArray30, 19, 69, 65);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardStrLookup17);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertNotNull(strSubstitutor21);
        org.junit.Assert.assertNotNull(strSubstitutor23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[h, i, !, \n]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!\n" + "'", str31, "hi!\n");
    }

    @Test
    public void test13195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13195");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties1.values();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties1.elements();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.setNewLineText("");
        java.lang.Object obj16 = properties1.get((java.lang.Object) "");
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test13196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13196");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        int int14 = strBuilder13.length();
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        java.util.List<java.lang.String> strList27 = strTokenizer26.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.appendAll((java.lang.Iterable<java.lang.String>) strList27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean32 = strBuilder30.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(true);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        boolean boolean47 = strTokenizer46.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder28.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean53 = strBuilder51.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln(false);
        boolean boolean59 = strBuilder57.contains(' ');
        java.lang.Object obj60 = properties1.put((java.lang.Object) strBuilder28, (java.lang.Object) strBuilder57);
        java.lang.String str61 = strBuilder57.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.minimizeCapacity();
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 13 + "'", int14 == 13);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test13197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13197");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        char char5 = strSubstitutor1.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.setNullText("hi!\na");
        java.lang.String str22 = strSubstitutor1.replace(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.delete(1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.setNewLineText("#a4#false\n");
        java.lang.Throwable throwable31 = null;
        java.io.IOException iOException32 = new java.io.IOException("", throwable31);
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException32);
        java.lang.Throwable[] throwableArray34 = iOException33.getSuppressed();
        java.lang.Throwable[] throwableArray35 = iOException33.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder25.appendAll((java.lang.Object[]) throwableArray35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        java.util.Enumeration<?> wildcardEnumeration41 = properties39.propertyNames();
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher50, strMatcher52);
        boolean boolean54 = strTokenizer53.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList55 = strTokenizer53.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer53.setQuoteChar('#');
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher66, strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer69.setTrimmerMatcher(strMatcher71);
        java.lang.Object obj73 = properties39.put((java.lang.Object) '#', (java.lang.Object) strTokenizer69);
        java.util.Set<java.lang.Object> objSet74 = properties39.keySet();
        boolean boolean75 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties39.keySet();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("", "");
        java.lang.String str80 = strTokenizer79.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer79.getQuoteMatcher();
        java.lang.String[] strArray82 = strTokenizer79.getTokenArray();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup83 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor89 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup83, strMatcher85, strMatcher87, '4');
        java.lang.Object obj90 = properties39.getOrDefault((java.lang.Object) strTokenizer79, (java.lang.Object) strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: true", strMatcher87);
        int int92 = strBuilder36.indexOf(strMatcher87);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + '$' + "'", char5 == '$');
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str22, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(wildcardEnumeration41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objSet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 2 + "'", int92 == 2);
    }

    @Test
    public void test13198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13198");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray29 = strBuilder28.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean34 = strBuilder32.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendln((float) 1L);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        java.util.List<java.lang.String> strList49 = strTokenizer48.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder32.appendAll((java.lang.Iterable<java.lang.String>) strList49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray54 = strBuilder53.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder30.append(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.insert(5, (long) (byte) 1);
        boolean boolean60 = properties1.containsValue((java.lang.Object) 5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer62.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        boolean boolean65 = properties1.containsKey((java.lang.Object) strTokenizer63);
        java.lang.String str67 = properties1.getProperty("hi!1.0\nfalse\nhi!\n");
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties1.elements();
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(objEnumeration68);
    }

    @Test
    public void test13199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13199");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        java.util.Enumeration<?> wildcardEnumeration37 = properties1.propertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean41 = strBuilder39.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendln((float) 1L);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher52, strMatcher54);
        java.util.List<java.lang.String> strList56 = strTokenizer55.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder39.appendAll((java.lang.Iterable<java.lang.String>) strList56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.ensureCapacity((int) '4');
        java.lang.StringBuffer stringBuffer60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendln(stringBuffer60, (int) (byte) 0, 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder57.replaceFirst('#', 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst('4');
        boolean boolean69 = properties1.containsValue((java.lang.Object) strBuilder68);
        java.lang.Object obj72 = properties1.setProperty("hi!1.0\nfalse\n#4#a4#", "hi!true#4#a4#4");
        java.lang.String str73 = properties1.toString();
        java.util.Set<java.lang.Object> objSet74 = properties1.keySet();
        int int75 = properties1.size();
        java.io.PrintStream printStream76 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printStream76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(wildcardEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "{hi!1.0\nfalse\n#4#a4#=hi!true#4#a4#4}" + "'", str73, "{hi!1.0\nfalse\n#4#a4#=hi!true#4#a4#4}");
        org.junit.Assert.assertNotNull(objSet74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
    }

    @Test
    public void test13200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13200");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException: ", '$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setDelimiterString("\n#########");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.reset();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer5.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test13201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13201");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln((double) '4');
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        boolean boolean34 = strTokenizer33.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList35 = strTokenizer33.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer33.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer39, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer42 = strBuilder14.asWriter();
        java.lang.String str44 = strBuilder14.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder11.insert((int) (short) 1, (java.lang.Object) str44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder11.replaceFirst('t', 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator("0\n#4#a4#\n", (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.replaceAll('h', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean58 = strBuilder56.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.appendln((float) 1L);
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher69, strMatcher71);
        java.util.List<java.lang.String> strList73 = strTokenizer72.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder56.appendAll((java.lang.Iterable<java.lang.String>) strList73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray78 = strBuilder77.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, '#', '$');
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer83.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder48.replaceAll(strMatcher85, "Str10oke");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder87.replaceAll('#', '\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(writer42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!\n100aaaaaaa52.0\n" + "'", str44, "hi!\n100aaaaaaa52.0\n");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test13202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13202");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.ensureCapacity((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test13203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13203");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        java.lang.String str3 = strTokenizer2.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer2.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer2.setDelimiterString("hi!\n\nhi!1.0\nfalse\n#4#a4\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test13204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13204");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.insert((int) (short) 10, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean21 = strBuilder19.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(false);
        int int26 = strBuilder25.length();
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        java.util.List<java.lang.String> strList39 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder25.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder17.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteAll('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.appendln((float) 153);
        char[] charArray48 = null;
        // The following exception was thrown during execution in test generation
        try {
            strBuilder45.getChars(26, 48, charArray48, 29);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 48");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, #]");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 13 + "'", int26 == 13);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test13205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13205");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendFixedWidthPadRight(16, 11, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceFirst("i!true", "hi!1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder24.insert(18, true);
        java.util.stream.IntStream intStream35 = strBuilder34.codePoints();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strBuilder34.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.append((java.lang.CharSequence) "hi!1.0\nfal-1.0se\n##4#a4#");
        int int41 = strBuilder38.indexOf("hi!\n#4#a4#\ntrue", 110);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test13206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13206");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterString("");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendln((float) 1L);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        java.util.List<java.lang.String> strList23 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.lang.Iterable<java.lang.String>) strList23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray28 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.reverse();
        int int31 = strBuilder27.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean35 = strBuilder33.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.append(true);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher46, strMatcher48);
        boolean boolean50 = strTokenizer49.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder33.appendAll((java.util.Iterator<java.lang.String>) strTokenizer49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        properties53.clear();
        java.util.Enumeration<?> wildcardEnumeration55 = properties53.propertyNames();
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher64, strMatcher66);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer67.getQuoteMatcher();
        boolean boolean69 = properties53.containsValue((java.lang.Object) strMatcher68);
        int int71 = strBuilder33.indexOf(strMatcher68, (int) (byte) 1);
        boolean boolean72 = strBuilder27.contains(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer4.setIgnoredMatcher(strMatcher68);
        java.lang.Object obj74 = strTokenizer73.clone();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(wildcardEnumeration55);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test13207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13207");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((double) '4');
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        boolean boolean21 = strTokenizer20.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList22 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer20.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer29 = strBuilder1.asWriter();
        writer29.write((int) ' ');
        java.io.Writer writer33 = writer29.append('a');
        writer29.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll(' ', '#');
        char[] charArray41 = strBuilder37.toCharArray();
        writer29.write(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, "hi!#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset("{{}=hi!\nfalse}");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(writer33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer47);
    }

    @Test
    public void test13208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13208");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        int int14 = strBuilder11.indexOf(' ', (int) (byte) 1);
        int int17 = strBuilder11.lastIndexOf('a', 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendSeparator("h100.0i!h.0\n#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test13209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13209");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: 0\n");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test13210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13210");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: hi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test13211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13211");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert(0, '#');
        boolean boolean29 = strBuilder27.contains("hi!\n");
        java.io.Writer writer30 = strBuilder27.asWriter();
        java.io.Writer writer32 = writer30.append('0');
        writer32.write("");
        java.io.Writer writer36 = writer32.append('e');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(writer30);
        org.junit.Assert.assertNotNull(writer32);
        org.junit.Assert.assertNotNull(writer36);
    }

    @Test
    public void test13212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13212");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!\na");
        int int2 = strTokenizer1.size();
        java.lang.String str3 = strTokenizer1.nextToken();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!\na" + "'", str3, "hi!\na");
    }

    @Test
    public void test13213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13213");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet3 = properties1.keySet();
        properties1.clear();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        properties6.clear();
        properties6.clear();
        properties6.clear();
        java.util.Set<java.lang.String> strSet10 = properties6.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean14 = strBuilder12.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln(false);
        int int19 = strBuilder18.length();
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        java.util.List<java.lang.String> strList32 = strTokenizer31.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder18.appendAll((java.lang.Iterable<java.lang.String>) strList32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean37 = strBuilder35.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append(true);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher48, strMatcher50);
        boolean boolean52 = strTokenizer51.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder35.appendAll((java.util.Iterator<java.lang.String>) strTokenizer51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder33.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean58 = strBuilder56.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln(false);
        boolean boolean64 = strBuilder62.contains(' ');
        java.lang.Object obj65 = properties6.put((java.lang.Object) strBuilder33, (java.lang.Object) strBuilder62);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.util.Collection<java.lang.Object> objCollection67 = properties6.values();
        java.lang.Object obj68 = properties6.clone();
        java.lang.Class<?> wildcardClass69 = properties6.getClass();
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 13 + "'", int19 == 13);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objCollection67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "{hi!1.0\nfalse\n#4#a4#hi!true#4#a4#=hi!1.0\nfalse\n}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "{hi!1.0\nfalse\n#4#a4#hi!true#4#a4#=hi!1.0\nfalse\n}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "{hi!1.0\nfalse\n#4#a4#hi!true#4#a4#=hi!1.0\nfalse\n}");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test13214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13214");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.append((long) (short) 0);
        int int26 = strBuilder16.indexOf("#4#a4#", (int) (byte) -1);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        boolean boolean39 = strTokenizer38.isEmptyTokenAsNull();
        int int40 = strTokenizer38.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer38.setTrimmerMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder16.replaceFirst(strMatcher41, "##4");
        char[] charArray47 = strBuilder44.toCharArray(0, 19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, "4#");
        java.util.List<java.lang.String> strList50 = strTokenizer49.getTokenList();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "hi!#4#a4###4a0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "hi!#4#a4###4a0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[h, i, !, #, 4, #, a, 4, #, #, #, 4, a, 0]");
        org.junit.Assert.assertNotNull(strList50);
    }

    @Test
    public void test13215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13215");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        int int6 = properties5.size();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties5.elements();
        java.util.Set<java.lang.Object> objSet8 = properties5.keySet();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties10.clear();
        properties10.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean17 = strBuilder15.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.append(true);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        boolean boolean32 = strTokenizer31.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder15.appendAll((java.util.Iterator<java.lang.String>) strTokenizer31);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer45.setTrimmerMatcher(strMatcher47);
        int int50 = strBuilder33.lastIndexOf(strMatcher47, (int) (byte) 10);
        boolean boolean51 = properties10.containsValue((java.lang.Object) strBuilder33);
        int int52 = properties10.size();
        int int53 = properties10.size();
        java.lang.Object obj54 = properties10.clone();
        java.lang.Object obj55 = properties10.clone();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        boolean boolean57 = properties10.isEmpty();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "{}");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{}");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test13216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13216");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        java.util.Enumeration<?> wildcardEnumeration37 = properties1.propertyNames();
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher46, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setQuoteChar('$');
        boolean boolean55 = strTokenizer54.hasPrevious();
        java.lang.String str56 = strTokenizer54.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!#4#a4##", '\n', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        java.lang.Object obj62 = properties1.putIfAbsent((java.lang.Object) str56, (java.lang.Object) strTokenizer60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!1.0\nfalse\n#4#a4#", '4');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup66 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor67 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup66);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup68 = strSubstitutor67.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor70 = strSubstitutor67.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor72 = strSubstitutor67.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor74 = strSubstitutor72.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder76.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceAll(' ', '#');
        char[] charArray81 = strBuilder77.toCharArray();
        java.lang.String str82 = strSubstitutor72.replace(charArray81);
        java.lang.Object obj83 = properties1.replace((java.lang.Object) strTokenizer65, (java.lang.Object) str82);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(wildcardEnumeration37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4#a4#" + "'", str56, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(wildcardStrLookup68);
        org.junit.Assert.assertNotNull(strSubstitutor70);
        org.junit.Assert.assertNotNull(strSubstitutor72);
        org.junit.Assert.assertNotNull(strSubstitutor74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[h, i, !, \n]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!\n" + "'", str82, "hi!\n");
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test13217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13217");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Properties properties6 = new java.util.Properties(properties1);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append('#');
        int int16 = strBuilder14.lastIndexOf("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.append('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendln((long) 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.deleteAll('$');
        java.lang.Object obj23 = properties6.get((java.lang.Object) strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test13218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13218");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor1.setVariableSuffix('4');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor8.setVariablePrefix("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder14.appendln(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.trim();
        boolean boolean38 = strBuilder12.equalsIgnoreCase(strBuilder32);
        char[] charArray39 = null;
        char[] charArray40 = strBuilder32.getChars(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, '4');
        java.lang.String str43 = strSubstitutor8.replace(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, "#\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer45.getQuoteMatcher();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "hi!#4#a4#\na100");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "hi!#4#a4#\na100");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[h, i, !, #, 4, #, a, 4, #, \n, a, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!#4#a4#\na100" + "'", str43, "hi!#4#a4#\na100");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher47);
    }

    @Test
    public void test13219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13219");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendln((double) '4');
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        boolean boolean27 = strTokenizer26.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList28 = strTokenizer26.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer26.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer32, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer35 = strBuilder7.asWriter();
        writer35.write((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher48, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder39.appendln(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        java.io.Writer writer64 = writer35.append((java.lang.CharSequence) strBuilder57, 0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.append('#');
        java.io.Writer writer73 = writer35.append((java.lang.CharSequence) strBuilder67);
        boolean boolean74 = properties1.containsKey((java.lang.Object) strBuilder67);
        java.lang.Object obj75 = properties1.clone();
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(writer35);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(writer64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(writer73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "{}");
    }

    @Test
    public void test13220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13220");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteAll('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean7 = strBuilder5.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((float) 1L);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher18, strMatcher20);
        java.util.List<java.lang.String> strList22 = strTokenizer21.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder5.appendAll((java.lang.Iterable<java.lang.String>) strList22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray27 = strBuilder26.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.reverse();
        int int30 = strBuilder26.indexOf('#');
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        java.util.List<java.lang.String> strList43 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder26.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList43, "#4#a4#");
        java.lang.String str46 = strBuilder26.toString();
        boolean boolean47 = strBuilder1.equals((java.lang.Object) strBuilder26);
        java.lang.String str48 = strBuilder26.toString();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "#4a#4#\n0.1!i0.001h#4#a4#" + "'", str46, "#4a#4#\n0.1!i0.001h#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "#4a#4#\n0.1!i0.001h#4#a4#" + "'", str48, "#4a#4#\n0.1!i0.001h#4#a4#");
    }

    @Test
    public void test13221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13221");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[1.0\nf]");
    }

    @Test
    public void test13222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13222");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        int int14 = strBuilder11.indexOf(' ', (int) (byte) 1);
        int int17 = strBuilder11.lastIndexOf('a', 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean22 = strBuilder20.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(false);
        int int27 = strBuilder26.length();
        int int30 = strBuilder26.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean36 = strBuilder34.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((float) 1L);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher47, strMatcher49);
        java.util.List<java.lang.String> strList51 = strTokenizer50.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder34.appendAll((java.lang.Iterable<java.lang.String>) strList51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray56 = strBuilder55.toCharArray();
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher65, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher65, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', 'a');
        char[] charArray74 = strBuilder32.getChars(charArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder11.insert(0, charArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceAll('0', 'h');
        int int82 = strBuilder80.lastIndexOf('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder80.appendln((float) 30L);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder80.insert((int) 'h', (double) 123);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 104");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 13 + "'", int27 == 13);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "hi!1.0\nalse\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "hi!1.0\nalse\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[h, i, !, 1, ., 0, \n, a, l, s, e, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "hi!1.0\nalse\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "hi!1.0\nalse\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[h, i, !, 1, ., 0, \n, a, l, s, e, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 23 + "'", int82 == 23);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test13223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13223");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(stringBuffer25, (int) '#', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(false);
        int int32 = strBuilder30.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.setNewLineText("1.0\nf");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup35 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup35);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup37 = strSubstitutor36.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor39 = strSubstitutor36.setVariablePrefix("hi!");
        char char40 = strSubstitutor36.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean44 = strBuilder42.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.setNullText("hi!\na");
        java.lang.String str57 = strSubstitutor36.replace(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.appendNewLine();
        java.util.stream.IntStream intStream61 = strBuilder60.chars();
        boolean boolean62 = strBuilder56.equals((java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean66 = strBuilder64.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.replaceFirst('#', '4');
        char[] charArray77 = strBuilder70.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder60.append(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder30.appendln(charArray77);
        java.io.Reader reader84 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder30.appendNull();
        java.util.Properties properties86 = null;
        java.util.Properties properties87 = new java.util.Properties(properties86);
        properties87.clear();
        properties87.clear();
        java.util.Set<java.lang.Object> objSet90 = properties87.keySet();
        boolean boolean91 = strBuilder30.equals((java.lang.Object) properties87);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet92 = properties87.entrySet();
        java.io.InputStream inputStream93 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties87.loadFromXML(inputStream93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(wildcardStrLookup37);
        org.junit.Assert.assertNotNull(strSubstitutor39);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + '$' + "'", char40 == '$');
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str57, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(intStream61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(reader84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(objSet90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objEntrySet92);
    }

    @Test
    public void test13224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13224");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("", '$', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset("##4");
        java.lang.String str35 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder19.append((java.lang.Object) strTokenizer32);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.deleteFirst('a');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str35, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test13225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13225");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean17 = strBuilder15.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln((float) 1L);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        java.util.List<java.lang.String> strList32 = strTokenizer31.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder15.appendAll((java.lang.Iterable<java.lang.String>) strList32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.String str37 = strBuilder36.getNullText();
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher46, strMatcher48);
        int int50 = strBuilder36.lastIndexOf(strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer11.setQuoteMatcher(strMatcher46);
        char[] charArray55 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean59 = strBuilder57.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.append(true);
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher70, strMatcher72);
        boolean boolean74 = strTokenizer73.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder57.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        char[] charArray82 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, strMatcher84, strMatcher86);
        boolean boolean88 = strBuilder57.contains(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher84);
        int int93 = strMatcher46.isMatch(charArray55, 0, (int) (short) 1, 13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, "hi!1.0\n#false\n\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, '#');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 7 + "'", int50 == 7);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(strTokenizer94);
    }

    @Test
    public void test13226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13226");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        java.lang.String str3 = strTokenizer2.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setIgnoredChar(' ');
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        java.util.Enumeration<?> wildcardEnumeration9 = properties7.propertyNames();
        boolean boolean11 = properties7.containsKey((java.lang.Object) (-1));
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        java.lang.String str13 = properties7.toString();
        java.util.Collection<java.lang.Object> objCollection14 = properties7.values();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties7.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean20 = strBuilder18.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln((float) 1L);
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher31, strMatcher33);
        java.util.List<java.lang.String> strList35 = strTokenizer34.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder18.appendAll((java.lang.Iterable<java.lang.String>) strList35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator('4', 0);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer56.setTrimmerMatcher(strMatcher58);
        java.lang.String str60 = strTokenizer56.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder44.appendAll((java.util.Iterator<java.lang.String>) strTokenizer56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer56.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher74, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray72);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder65.appendln(charArray72);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray72);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher82, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer63.reset(charArray72);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer85.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher86);
        boolean boolean88 = properties7.contains((java.lang.Object) strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer2.setIgnoredMatcher(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{}" + "'", str13, "{}");
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str60, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strTokenizer89);
    }

    @Test
    public void test13227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13227");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray31);
        char[] charArray42 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean46 = strBuilder44.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append(true);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        boolean boolean61 = strTokenizer60.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder44.appendAll((java.util.Iterator<java.lang.String>) strTokenizer60);
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher71, strMatcher73);
        boolean boolean75 = strBuilder44.contains(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher71);
        char[] charArray83 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, strMatcher85, strMatcher87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher71, strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder24.append(charArray31);
        char[] charArray92 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer(charArray92, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray92);
        java.lang.String str97 = strTokenizer96.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "h100.0i!1.0\n#4#a4#32.0#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "h100.0i!1.0\n#4#a4#32.0#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #, 3, 2, ., 0, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str97, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test13228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13228");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup5 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup5);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup7 = strSubstitutor6.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor6.setVariablePrefix("hi!");
        char char10 = strSubstitutor6.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean14 = strBuilder12.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.setNullText("hi!\na");
        java.lang.String str27 = strSubstitutor6.replace(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNewLine();
        java.util.stream.IntStream intStream31 = strBuilder30.chars();
        boolean boolean32 = strBuilder26.equals((java.lang.Object) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.setCharAt(0, '1');
        boolean boolean38 = strSubstitutor4.replaceIn(strBuilder35, 7, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.deleteAll('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendSeparator("Str10okenizer[#4#a4#]", "\neslaf\n0.1!ih35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator('1', '4');
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNull(wildcardStrLookup7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertTrue("'" + char10 + "' != '" + '$' + "'", char10 == '$');
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str27, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test13229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13229");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        int int14 = strBuilder11.indexOf(' ', (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.insert(3, 5);
        java.lang.String str20 = strBuilder11.midString((int) 'e', 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.insert(96, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 96");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test13230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13230");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean1 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet2 = properties0.entrySet();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(objEntrySet2);
    }

    @Test
    public void test13231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13231");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        java.lang.Object obj39 = properties1.setProperty("h100.0i!1.0\n#4#a4#\n", "#4#a4#");
        java.util.Set<java.lang.Object> objSet40 = properties1.keySet();
        boolean boolean41 = properties1.isEmpty();
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher50, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer53.setTrimmerMatcher(strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer53.setQuoteChar('$');
        java.lang.Object obj59 = strTokenizer58.clone();
        java.lang.Object obj60 = strTokenizer58.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher71, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray69);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder62.appendln(charArray69);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray69);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher79, strMatcher80);
        boolean boolean82 = strTokenizer81.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean86 = strBuilder84.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder84.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder84.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder84.appendln("StrTokenizer[#4#a4#]");
        java.io.Reader reader93 = strBuilder84.asReader();
        boolean boolean94 = properties1.replace((java.lang.Object) strTokenizer58, (java.lang.Object) boolean82, (java.lang.Object) reader93);
        int int95 = reader93.read();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(reader93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 104 + "'", int95 == 104);
    }

    @Test
    public void test13232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13232");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((float) 1L);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        java.util.List<java.lang.String> strList43 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.lang.Iterable<java.lang.String>) strList43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray48 = strBuilder47.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder24.append(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.insert(5, (long) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.appendPadding(3, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.append((double) 70);
        char[] charArray62 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean66 = strBuilder64.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.append(true);
        char[] charArray75 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher77, strMatcher79);
        boolean boolean81 = strTokenizer80.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder64.appendAll((java.util.Iterator<java.lang.String>) strTokenizer80);
        char[] charArray89 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray89, strMatcher91, strMatcher93);
        boolean boolean95 = strBuilder64.contains(strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher91);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder58.append(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder97.appendln('0');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test13233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13233");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        int int4 = strBuilder1.lastIndexOf("hi!\na1", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln("##4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!1.0\nfalse\n4");
        java.util.List<java.lang.String> strList9 = strTokenizer8.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer8, "hi!\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean16 = strBuilder14.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendln((float) 1L);
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        java.util.List<java.lang.String> strList31 = strTokenizer30.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder14.appendAll((java.lang.Iterable<java.lang.String>) strList31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray36 = strBuilder35.toCharArray();
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher45, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder1.insert(6, charArray36);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test13234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13234");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.equals((java.lang.Object) (byte) 10);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup6 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        boolean boolean19 = strTokenizer18.isEmptyTokenAsNull();
        int int20 = strTokenizer18.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer18.setTrimmerMatcher(strMatcher21);
        boolean boolean23 = strTokenizer22.isIgnoreEmptyTokens();
        java.lang.Object obj24 = properties1.putIfAbsent((java.lang.Object) strStrLookup6, (java.lang.Object) boolean23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder26.appendln(charArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator('a', 10);
        java.lang.Object obj45 = properties1.get((java.lang.Object) 10);
        int int46 = properties1.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean50 = strBuilder48.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.append(true);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher61, strMatcher63);
        boolean boolean65 = strTokenizer64.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder48.appendAll((java.util.Iterator<java.lang.String>) strTokenizer64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append(false);
        char[] charArray75 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher77, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray75);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray75);
        int int84 = strBuilder68.indexOf(strMatcher82, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder68.append((float) (short) -1);
        int int88 = strBuilder68.indexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder68.append(9);
        boolean boolean91 = properties1.containsValue((java.lang.Object) strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder68.append((long) 28);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strStrLookup6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 7 + "'", int84 == 7);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test13235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13235");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup5 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str7 = strStrLookup5.lookup("{}");
        strSubstitutor1.setVariableResolver(strStrLookup5);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.append(true);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        boolean boolean27 = strTokenizer26.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.insert((int) (short) 1, true);
        boolean boolean34 = strSubstitutor1.replaceIn(strBuilder28);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = strSubstitutor1.setVariableSuffix('0');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor38 = strSubstitutor36.setVariableSuffix("\neslaf\n0.1!ih35.0\nhi!#4#a4#\n");
        strSubstitutor36.setEnableSubstitutionInVariables(true);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strStrLookup5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSubstitutor36);
        org.junit.Assert.assertNotNull(strSubstitutor38);
    }

    @Test
    public void test13236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13236");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties20.keys();
        boolean boolean61 = properties20.isEmpty();
        java.lang.Object obj64 = properties20.setProperty("hi!\na", "#4#a4#");
        properties20.clear();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(obj64);
    }

    @Test
    public void test13237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13237");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean40 = strBuilder38.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.append(true);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher51, strMatcher53);
        boolean boolean55 = strTokenizer54.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder38.appendAll((java.util.Iterator<java.lang.String>) strTokenizer54);
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher65, strMatcher67);
        boolean boolean69 = strBuilder38.contains(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder38.appendln((int) (short) 0);
        boolean boolean72 = properties1.containsKey((java.lang.Object) (short) 0);
        java.util.Collection<java.lang.Object> objCollection73 = properties1.values();
        boolean boolean74 = properties1.isEmpty();
        java.lang.Throwable throwable78 = null;
        java.io.IOException iOException79 = new java.io.IOException("", throwable78);
        java.lang.Throwable throwable82 = null;
        java.io.IOException iOException83 = new java.io.IOException("", throwable82);
        java.io.IOException iOException84 = new java.io.IOException((java.lang.Throwable) iOException83);
        java.lang.Throwable[] throwableArray85 = iOException84.getSuppressed();
        java.io.IOException iOException86 = new java.io.IOException("StrTokenizer[#4#a4#]", (java.lang.Throwable) iOException84);
        java.lang.Throwable throwable87 = null;
        java.io.IOException iOException88 = new java.io.IOException(throwable87);
        iOException84.addSuppressed((java.lang.Throwable) iOException88);
        iOException79.addSuppressed((java.lang.Throwable) iOException84);
        java.io.IOException iOException91 = new java.io.IOException("h100.0i!1.0\n#4#a4#19\n", (java.lang.Throwable) iOException84);
        java.io.IOException iOException92 = new java.io.IOException("hi!\nfalse", (java.lang.Throwable) iOException91);
        java.lang.Throwable[] throwableArray93 = iOException91.getSuppressed();
        java.lang.Throwable[] throwableArray94 = iOException91.getSuppressed();
        boolean boolean95 = properties1.contains((java.lang.Object) iOException91);
        java.lang.Object obj96 = properties1.clone();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertNotNull(throwableArray93);
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "{}");
    }

    @Test
    public void test13238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13238");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean15 = strBuilder13.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', (int) (short) 1);
        int int25 = strBuilder22.lastIndexOf('4', 10);
        char[] charArray32 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, "");
        java.lang.Object[] objArray35 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder22.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder22.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer40 = strBuilder22.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder9.appendln(stringBuffer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean45 = strBuilder43.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.appendln("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder41.appendFixedWidthPadRight((java.lang.Object) "StrTokenizer[#4#a4#]", 13, '#');
        java.lang.String str56 = strBuilder41.substring(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder41.replaceAll("StrTokenizer[#4#a4#]", "java.io.IOException: h100.0i!1.0\n#4#a4#19\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder41.deleteAll("100.01.0\n#4#a4#");
        int int62 = strBuilder61.capacity();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(stringBuffer40);
        org.junit.Assert.assertEquals(stringBuffer40.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "i!1.0\nfalse\n#4\nStrTokenizer[" + "'", str56, "i!1.0\nfalse\n#4\nStrTokenizer[");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 35 + "'", int62 == 35);
    }

    @Test
    public void test13239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13239");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("#4a#4#\n0.1!i0.001h");
        char[] charArray2 = strBuilder1.toCharArray();
        int int4 = strBuilder1.indexOf("");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, 4, a, #, 4, #, \n, 0, ., 1, !, i, 0, ., 0, 0, 1, h]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test13240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13240");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteCharAt((int) (byte) 1);
        java.lang.String str26 = strBuilder23.midString(0, 104);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.replaceFirst("StrTokenizer[StrTokenzer[not tokenzed yet]]", ".0");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendSeparator("hi!#4#a4#\na100                                                 ", "hi!\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(60);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll(' ', '#');
        char[] charArray41 = strBuilder37.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, "\na");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder29.deleteFirst(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "h!true#4#a4#false" + "'", str26, "h!true#4#a4#false");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test13241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13241");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder24.appendln((double) 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder24.insert(11, false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test13242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13242");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        boolean boolean12 = strTokenizer11.isEmptyTokenAsNull();
        int int13 = strTokenizer11.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer11.setTrimmerMatcher(strMatcher14);
        boolean boolean16 = strTokenizer15.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup17 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor18 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup17);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup19 = strSubstitutor18.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = strSubstitutor18.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean26 = strBuilder24.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln((float) 1L);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        boolean boolean41 = strTokenizer40.isEmptyTokenAsNull();
        int int42 = strTokenizer40.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer40.setTrimmerMatcher(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder24.deleteAll(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!\na", strMatcher43);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor47 = strSubstitutor21.setVariableSuffixMatcher(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer15.setDelimiterMatcher(strMatcher43);
        java.lang.String str49 = strTokenizer48.next();
        java.lang.String str50 = strTokenizer48.nextToken();
        java.util.List<java.lang.String> strList51 = strTokenizer48.getTokenList();
        int int52 = strTokenizer48.previousIndex();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(wildcardStrLookup19);
        org.junit.Assert.assertNotNull(strSubstitutor21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strSubstitutor47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "#4#a4#" + "'", str49, "#4#a4#");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test13243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13243");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        reader17.mark((int) (short) -1);
        boolean boolean21 = reader17.ready();
        long long23 = reader17.skip((long) (short) 0);
        reader17.reset();
        reader17.close();
        reader17.mark(4);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray34);
        char[] charArray45 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean49 = strBuilder47.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.append(true);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher60, strMatcher62);
        boolean boolean64 = strTokenizer63.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher74, strMatcher76);
        boolean boolean78 = strBuilder47.contains(strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher74);
        char[] charArray86 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, strMatcher88, strMatcher90);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer91.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher74, strMatcher92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher96 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray34);
        int int97 = reader17.read(charArray34);
        java.nio.CharBuffer charBuffer98 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int99 = reader17.read(charBuffer98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "hi!#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "hi!#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[h, i, !, #, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strMatcher96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 6 + "'", int97 == 6);
    }

    @Test
    public void test13244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13244");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '0', '$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, "0\n#4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '!');
        java.lang.String str20 = strTokenizer19.toString();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str20, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test13245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13245");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        int int36 = strBuilder19.lastIndexOf(strMatcher33, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.append((long) '#');
        java.util.stream.IntStream intStream39 = strBuilder19.chars();
        boolean boolean41 = strBuilder19.contains("hi!\n100aaaaaaa52.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder19.appendPadding(8, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder19.appendSeparator("", 15);
        java.lang.Throwable throwable50 = null;
        java.io.IOException iOException51 = new java.io.IOException("", throwable50);
        java.io.IOException iOException52 = new java.io.IOException((java.lang.Throwable) iOException51);
        java.io.IOException iOException53 = new java.io.IOException((java.lang.Throwable) iOException52);
        java.io.IOException iOException54 = new java.io.IOException((java.lang.Throwable) iOException53);
        java.lang.Throwable[] throwableArray55 = iOException53.getSuppressed();
        java.io.IOException iOException56 = new java.io.IOException("java.io.IOException: StrTokenizer[#4#a4#]", (java.lang.Throwable) iOException53);
        java.lang.Throwable[] throwableArray57 = iOException56.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder19.appendWithSeparators((java.lang.Object[]) throwableArray57, "##4a#4#\n0.1!i0.001h");
        java.lang.String str60 = strBuilder19.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder19.ensureCapacity(22);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(intStream39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!true#4#a4#3511111111" + "'", str60, "hi!true#4#a4#3511111111");
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test13246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13246");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        boolean boolean6 = properties1.isEmpty();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        properties8.clear();
        properties8.clear();
        properties8.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean15 = strBuilder13.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.append(true);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer29);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher40, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer43.setTrimmerMatcher(strMatcher45);
        int int48 = strBuilder31.lastIndexOf(strMatcher45, (int) (byte) 10);
        boolean boolean49 = properties8.containsValue((java.lang.Object) strBuilder31);
        java.util.Set<java.lang.Object> objSet50 = properties8.keySet();
        boolean boolean51 = properties1.equals((java.lang.Object) properties8);
        char[] charArray52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray52);
        int int54 = strTokenizer53.previousIndex();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        properties56.clear();
        properties56.clear();
        properties56.clear();
        java.util.Set<java.lang.String> strSet60 = properties56.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean64 = strBuilder62.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln(false);
        java.lang.Object obj69 = properties56.remove((java.lang.Object) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteAll("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.setNullText("hi!1.0\nfalse\n#4#a4#13\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray85 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, strMatcher87, strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray85);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder78.appendln(charArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder74.appendln((java.lang.Object) charArray85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer53.reset(charArray85);
        org.apache.commons.lang3.text.StrMatcher strMatcher97 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("\neslaf\n");
        java.lang.Object obj98 = properties1.replace((java.lang.Object) strTokenizer95, (java.lang.Object) strMatcher97);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(strMatcher97);
        org.junit.Assert.assertNull(obj98);
    }

    @Test
    public void test13247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13247");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor1.setVariableSuffix('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strSubstitutor8.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.appendNewLine();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        properties14.clear();
        properties14.clear();
        properties14.clear();
        java.util.Set<java.lang.String> strSet18 = properties14.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendAll((java.lang.Iterable<java.lang.String>) strSet18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append(' ');
        boolean boolean25 = strBuilder23.contains('a');
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher34, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer37.setTrimmerMatcher(strMatcher39);
        java.lang.String str41 = strTokenizer37.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder23.append((java.lang.Object) str41);
        java.util.stream.IntStream intStream43 = strBuilder23.chars();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup44 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor45 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup44);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup46 = strSubstitutor45.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor48 = strSubstitutor45.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = strSubstitutor45.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor52 = strSubstitutor50.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceAll(' ', '#');
        char[] charArray59 = strBuilder55.toCharArray();
        java.lang.String str60 = strSubstitutor50.replace(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, "1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder23.append(charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.append((int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!\nfalse", '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.replaceFirst(strMatcher71, "{StrTokenizer[hi!]=StrTokenizer[]}");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher71, strMatcher75);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = strMatcher9.isMatch(charArray59, (int) (short) -1, 55, 50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str41, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(intStream43);
        org.junit.Assert.assertNull(wildcardStrLookup46);
        org.junit.Assert.assertNotNull(strSubstitutor48);
        org.junit.Assert.assertNotNull(strSubstitutor50);
        org.junit.Assert.assertNotNull(strSubstitutor52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[h, i, !, \n]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!\n" + "'", str60, "hi!\n");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher75);
    }

    @Test
    public void test13248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13248");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(stringBuffer25, (int) '#', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(false);
        int int32 = strBuilder30.indexOf(' ');
        java.util.stream.IntStream intStream33 = strBuilder30.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendFixedWidthPadRight(5, 4, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendSeparator("hi!\n100aaaaaaa52.0\n");
        char[] charArray40 = strBuilder37.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "h100.0i!1.0\n#4#a4#\n\nfalse\n5$$$hi!\n100aaaaaaa52.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "h100.0i!1.0\n#4#a4#\n\nfalse\n5$$$hi!\n100aaaaaaa52.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #, \n, \n, f, a, l, s, e, \n, 5, $, $, $, h, i, !, \n, 1, 0, 0, a, a, a, a, a, a, a, 5, 2, ., 0, \n]");
    }

    @Test
    public void test13249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13249");
        java.io.IOException iOException1 = new java.io.IOException("htruei!true#364#a4#false$1\n0.0\n");
    }

    @Test
    public void test13250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13250");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher25, strMatcher27);
        boolean boolean29 = strTokenizer28.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer28.getDelimiterMatcher();
        int int31 = strBuilder1.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder1.appendSeparator("hi!\n100aaaaaaa52.0\n", 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder1.appendFixedWidthPadLeft((int) (short) 10, 105, '\000');
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test13251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13251");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.lang.Throwable throwable6 = null;
        java.io.IOException iOException7 = new java.io.IOException("", throwable6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException8.getSuppressed();
        java.lang.Throwable throwable12 = null;
        java.io.IOException iOException13 = new java.io.IOException("", throwable12);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.lang.Throwable[] throwableArray15 = iOException14.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException("StrTokenizer[#4#a4#]", (java.lang.Throwable) iOException14);
        java.lang.Throwable[] throwableArray17 = iOException16.getSuppressed();
        iOException8.addSuppressed((java.lang.Throwable) iOException16);
        boolean boolean19 = properties1.equals((java.lang.Object) iOException8);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties1.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean24 = strBuilder22.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendln((float) 1L);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        java.util.List<java.lang.String> strList39 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln(stringBuffer44);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln(stringBuffer46, (int) '#', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.deleteAll("i!\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder58.appendln(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder56.appendln(charArray65);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder56.replace(strMatcher75, "hi!", (int) (short) 10, (int) 'a', (int) (short) 10);
        java.lang.String str83 = strBuilder56.substring(0, 21);
        boolean boolean84 = properties1.remove((java.lang.Object) "i!\n#4#a4#\n", (java.lang.Object) strBuilder56);
        java.lang.String str87 = properties1.getProperty("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: \nh", "hi!1.0\nfalse\n#0.0\n\n");
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!\n#4#a4#\n" + "'", str83, "hi!\n#4#a4#\n");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!1.0\nfalse\n#0.0\n\n" + "'", str87, "hi!1.0\nfalse\n#0.0\n\n");
    }

    @Test
    public void test13252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13252");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        java.lang.String str25 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNewLine();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        properties30.clear();
        properties30.clear();
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.appendAll((java.lang.Iterable<java.lang.String>) strSet34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder22.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.replaceAll("hi!\n100aaaaaaa52.0\n", "#4a#4#\n0.1!i0.001h$$$$$hi!\n#hi!100\naaaaaaaaaaa");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.append((long) 11);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.deleteAll(strMatcher47);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.append("4", 115, 76);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#4a#4#\n0.1!i0.001h" + "'", str25, "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test13253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13253");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.ensureCapacity((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.reverse();
        boolean boolean30 = strBuilder27.endsWith("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.insert(2, (double) 104);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendNull();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test13254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13254");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        int int26 = strBuilder22.indexOf('#');
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        java.util.List<java.lang.String> strList39 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder22.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList39, "#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder22.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder22.replaceAll("{StrTokenizer[hi!]=StrTokenizer[]}", "hi!1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder22.append((float) 36);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hh100.0i!1.0\n##a#1");
        int int51 = strBuilder22.lastIndexOf(strMatcher50);
        int int52 = strBuilder22.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder22.appendln((long) 100);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup55 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor56 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup55);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup57 = strSubstitutor56.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor59 = strSubstitutor56.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll(' ', '#');
        char[] charArray73 = strBuilder69.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder62.insert((int) (byte) 0, charArray73);
        java.lang.String str75 = strSubstitutor56.replace(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder22.appendln(charArray73);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 35 + "'", int52 == 35);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNull(wildcardStrLookup57);
        org.junit.Assert.assertNotNull(strSubstitutor59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!\n" + "'", str75, "hi!\n");
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test13255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13255");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (short) 1, true);
        boolean boolean26 = strBuilder24.contains("hi!\na");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.append("java.io.IOException: java.io.IOException: 0                                                 ", 252, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test13256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13256");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet1 = properties0.entrySet();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup3 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup3);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup5 = strSubstitutor4.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor7 = strSubstitutor4.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup8 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str10 = strStrLookup8.lookup("{}");
        strSubstitutor4.setVariableResolver(strStrLookup8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = null;
        boolean boolean13 = strSubstitutor4.replaceIn(strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strBuilder15.asTokenizer();
        java.lang.Object obj22 = properties0.replace((java.lang.Object) strSubstitutor4, (java.lang.Object) strTokenizer21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.appendln((double) '4');
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher40, strMatcher42);
        boolean boolean44 = strTokenizer43.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList45 = strTokenizer43.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer43.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder24.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer49, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer52 = strBuilder24.asWriter();
        writer52.write((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher65, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray63);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder56.appendln(charArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        java.io.Writer writer81 = writer52.append((java.lang.CharSequence) strBuilder74, 0, (int) '#');
        java.lang.String str82 = strBuilder74.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder74.appendln((double) 104);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder74.append((float) '4');
        java.lang.Object obj87 = properties0.get((java.lang.Object) '4');
        properties0.clear();
        boolean boolean89 = properties0.isEmpty();
        java.io.OutputStream outputStream90 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream90, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ", "hi!#4#a4#\na\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEntrySet1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNull(wildcardStrLookup5);
        org.junit.Assert.assertNotNull(strSubstitutor7);
        org.junit.Assert.assertNotNull(strStrLookup8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(writer52);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!#4#a4#\na100                                                 " + "'", str82, "hi!#4#a4#\na100                                                 ");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test13257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13257");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        properties23.clear();
        properties23.clear();
        properties23.clear();
        boolean boolean27 = strBuilder19.equals((java.lang.Object) properties23);
        java.util.Enumeration<?> wildcardEnumeration28 = properties23.propertyNames();
        java.util.Collection<java.lang.Object> objCollection29 = properties23.values();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup30 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor31 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup30);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup32 = strSubstitutor31.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor34 = strSubstitutor31.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = strSubstitutor31.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean40 = strBuilder38.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(false);
        int int45 = strBuilder44.length();
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher54, strMatcher56);
        java.util.List<java.lang.String> strList58 = strTokenizer57.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder44.appendAll((java.lang.Iterable<java.lang.String>) strList58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder44.replaceFirst("1", "StrT10okenizer[#4#a4#]100aaaaaaaa#4a#4#\n0.1!i0.001h\n");
        java.lang.String str65 = strSubstitutor31.replace(strBuilder62, 4, 62);
        java.lang.Object obj66 = properties23.remove((java.lang.Object) str65);
        boolean boolean67 = properties23.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration28);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNull(wildcardStrLookup32);
        org.junit.Assert.assertNotNull(strSubstitutor34);
        org.junit.Assert.assertNotNull(strSubstitutor36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 13 + "'", int45 == 13);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "trT10okenizer[#4#a4#]100aaaaaaaa#4a#4#\n0.1!i0.001h\n.0\nfalse\n#4" + "'", str65, "trT10okenizer[#4#a4#]100aaaaaaaa#4a#4#\n0.1!i0.001h\n.0\nfalse\n#4");
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test13258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13258");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("h100.0i!1.0\n#4#a4#\n", "hi!1.0\n#4#a4#");
        boolean boolean3 = strTokenizer2.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer2.getTrimmerMatcher();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
    }

    @Test
    public void test13259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13259");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        boolean boolean4 = strTokenizer3.isIgnoreEmptyTokens();
        boolean boolean5 = strTokenizer3.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator('#', (int) (short) 1);
        int int19 = strBuilder16.lastIndexOf('4', 10);
        int int21 = strBuilder16.indexOf("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.appendSeparator("#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.deleteAll('$');
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder16.append(stringBuffer26, (int) 'h', 80);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder16.setNullText("hi!true#4#a4#false-1.0");
        boolean boolean32 = strBuilder31.isEmpty();
        java.util.stream.IntStream intStream33 = strBuilder31.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("h");
        boolean boolean36 = strBuilder31.contains(strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer3.setQuoteMatcher(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strTokenizer37);
    }

    @Test
    public void test13260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13260");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (short) 1, true);
        java.lang.CharSequence charSequence25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append(charSequence25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean30 = strBuilder28.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendln((float) 1L);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher41, strMatcher43);
        boolean boolean45 = strTokenizer44.isEmptyTokenAsNull();
        int int46 = strTokenizer44.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer44.setTrimmerMatcher(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder28.deleteAll(strMatcher47);
        java.io.Reader reader50 = strBuilder49.asReader();
        long long52 = reader50.skip(1L);
        boolean boolean53 = reader50.markSupported();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.appendNewLine();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        properties64.clear();
        properties64.clear();
        properties64.clear();
        java.util.Set<java.lang.String> strSet68 = properties64.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder61.appendAll((java.lang.Iterable<java.lang.String>) strSet68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.insert(1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder58.insert((int) ' ', (java.lang.Object) true);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder58.appendFixedWidthPadLeft((int) '#', (int) 't', 'a');
        char[] charArray78 = strBuilder77.toCharArray();
        int int81 = reader50.read(charArray78, 3, 3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder24.appendln(charArray78, 82, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.appendSeparator(' ', '$');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "Stri!1enizer[not tokenized yet]0true\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "Stri!1enizer[not tokenized yet]0true\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[S, t, r, i, !, 1, e, n, i, z, e, r, [, n, o, t,  , t, o, k, e, n, i, z, e, d,  , y, e, t, ], 0, t, r, u, e, \n, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, 3, 5]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 3 + "'", int81 == 3);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test13261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13261");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup5 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str7 = strStrLookup5.lookup("{}");
        strSubstitutor1.setVariableResolver(strStrLookup5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = null;
        boolean boolean10 = strSubstitutor1.replaceIn(strBuilder9);
        boolean boolean11 = strSubstitutor1.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup13 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup13);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup15 = strSubstitutor14.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor17 = strSubstitutor14.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor14.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean23 = strBuilder21.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.append(true);
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher34, strMatcher36);
        boolean boolean38 = strTokenizer37.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder21.appendAll((java.util.Iterator<java.lang.String>) strTokenizer37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteCharAt((int) (byte) 1);
        java.lang.String str44 = strSubstitutor19.replace(strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher55, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder46.appendln(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean69 = strSubstitutor19.replaceIn(strBuilder68);
        boolean boolean70 = strSubstitutor19.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder72.appendNewLine();
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        properties75.clear();
        properties75.clear();
        properties75.clear();
        java.util.Set<java.lang.String> strSet79 = properties75.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder72.appendAll((java.lang.Iterable<java.lang.String>) strSet79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.appendln(3);
        java.lang.String str83 = strSubstitutor19.replace((java.lang.Object) strBuilder82);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup84 = strSubstitutor19.getVariableResolver();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strSubstitutor19.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("hi!java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: \n", strMatcher85);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor87 = strSubstitutor1.setVariablePrefixMatcher(strMatcher85);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor89 = strSubstitutor1.setVariableSuffix('$');
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strStrLookup5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardStrLookup15);
        org.junit.Assert.assertNotNull(strSubstitutor17);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "h!true#4#a4#false" + "'", str44, "h!true#4#a4#false");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strSet79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!\n3\n" + "'", str83, "hi!\n3\n");
        org.junit.Assert.assertNull(wildcardStrLookup84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strSubstitutor87);
        org.junit.Assert.assertNotNull(strSubstitutor89);
    }

    @Test
    public void test13262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13262");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(stringBuffer25, (int) '#', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.deleteFirst('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.appendSeparator('$', (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder28.appendln((double) 'h');
        int int40 = strBuilder28.lastIndexOf("0.0i!1.0\n#4#a4#\n17", 278);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test13263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13263");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        boolean boolean16 = strTokenizer15.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setQuoteChar('#');
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        java.lang.Object obj35 = properties1.put((java.lang.Object) '#', (java.lang.Object) strTokenizer31);
        java.util.Properties properties36 = new java.util.Properties(properties1);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        java.util.Enumeration<?> wildcardEnumeration40 = properties38.propertyNames();
        boolean boolean42 = properties38.containsKey((java.lang.Object) (-1));
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        java.lang.String str44 = properties38.toString();
        boolean boolean45 = properties1.containsValue((java.lang.Object) properties38);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup46 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.Object obj47 = properties38.remove((java.lang.Object) strStrLookup46);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor51 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup46, "h100.0i!1.0\n#4#a4#19\n", "StrTokenizer[not", '$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor53 = strSubstitutor51.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor55 = strSubstitutor51.setVariablePrefix('b');
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{}" + "'", str44, "{}");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strStrLookup46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSubstitutor53);
        org.junit.Assert.assertNotNull(strSubstitutor55);
    }

    @Test
    public void test13264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13264");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix('a');
        strSubstitutor1.setEnableSubstitutionInVariables(true);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor1.setVariablePrefix('1');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor1.setVariableSuffix("hi!1.013.0");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup11 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher21, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher26, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor44 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup11, strMatcher39, strMatcher42, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher55, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder46.appendln(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher63, strMatcher64);
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher74, strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer77.setTrimmerMatcher(strMatcher79);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor82 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup11, strMatcher63, strMatcher79, ' ');
        strSubstitutor10.setVariableResolver(strStrLookup11);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor87 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup11, "10h", "{StrTokenizer[not=0                                                 }hi!1.0\nfalse\n#4#a4#hi!true#4#a4#", ' ');
        java.lang.String str89 = strStrLookup11.lookup("hi!1.0\nalse\n#");
        java.lang.String str91 = strStrLookup11.lookup("#\n0.1!i0.001hhi!\n\n1.0true");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor92 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup11);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNotNull(strStrLookup11);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test13265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13265");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        int int6 = properties5.size();
        java.lang.Object obj9 = properties5.setProperty("h100.0i!1.0\n#4#a4#hi!true#4#a4#16.0\n4", "14a#4#\n.1!i.1hhi!1.\nfalse\n#");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(obj9);
    }

    @Test
    public void test13266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13266");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.appendNewLine();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties10.clear();
        properties10.clear();
        properties10.clear();
        java.util.Set<java.lang.String> strSet14 = properties10.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strSet14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.insert(1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.insert((int) ' ', (java.lang.Object) true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder4.appendFixedWidthPadLeft((int) '#', (int) 't', 'a');
        boolean boolean24 = strBuilder4.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder4.insert(53, (float) 30L);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder4.appendSeparator('t', 13);
        int int32 = strBuilder4.lastIndexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder4.appendSeparator("##4a#4#\n0.1!i0.001hh1", "{h!true#4#a4#false=StrTokenizer[#4#a4#]}");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 154 + "'", int32 == 154);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test13267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13267");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder2.replace(strMatcher21, "hi!", (int) (short) 10, (int) 'a', (int) (short) 10);
        java.lang.String str29 = strBuilder2.substring(0, 21);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.ensureCapacity(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteAll("hi!1.0\nfalse\n4");
        java.io.Writer writer34 = strBuilder33.asWriter();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.insert(124, 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 124");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!\n#4#a4#\n" + "'", str29, "hi!\n#4#a4#\n");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
    }

    @Test
    public void test13268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13268");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendSeparator('4', 0);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer45.setTrimmerMatcher(strMatcher47);
        java.lang.String str49 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder33.appendAll((java.util.Iterator<java.lang.String>) strTokenizer45);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder33.replaceFirst(strMatcher51, "StrTokenizer[not tokenized yet]");
        java.lang.Object obj54 = properties1.remove((java.lang.Object) strBuilder53);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties1.keys();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str49, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
    }

    @Test
    public void test13269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13269");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.lang.String str3 = properties1.toString();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getQuoteMatcher();
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher25, strMatcher27);
        char[] charArray35 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, "");
        boolean boolean38 = properties1.replace((java.lang.Object) strMatcher16, (java.lang.Object) charArray23, (java.lang.Object) charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.appendln((double) '4');
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        boolean boolean61 = strTokenizer60.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList62 = strTokenizer60.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer60.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder41.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer66, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer69 = strBuilder41.asWriter();
        writer69.write((int) ' ');
        boolean boolean72 = properties1.remove((java.lang.Object) "hi!1.0\nfalse\n#", (java.lang.Object) writer69);
        writer69.close();
        writer69.flush();
        writer69.flush();
        java.io.Writer writer77 = writer69.append('#');
        java.io.Writer writer79 = writer69.append('h');
        java.io.Writer writer81 = writer79.append('4');
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(writer69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(writer77);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(writer81);
    }

    @Test
    public void test13270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13270");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!1.0\nfal-1.0se\n##4#a4#");
        java.util.stream.IntStream intStream2 = strBuilder1.codePoints();
        org.junit.Assert.assertNotNull(intStream2);
    }

    @Test
    public void test13271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13271");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        java.lang.Object obj14 = properties1.remove((java.lang.Object) strBuilder11);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties1.elements();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean20 = strBuilder18.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(false);
        int int25 = strBuilder24.length();
        int int28 = strBuilder24.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.replaceAll('4', ' ');
        java.util.stream.IntStream intStream34 = strBuilder24.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder24.replaceFirst('1', ' ');
        int int40 = strBuilder37.indexOf('t', 19);
        java.lang.Object obj41 = properties1.putIfAbsent((java.lang.Object) strMatcher16, (java.lang.Object) 19);
        int int42 = properties1.size();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        properties44.clear();
        properties44.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties44.entrySet();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        properties49.clear();
        properties49.clear();
        int int52 = properties49.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher66, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray64);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder57.appendln(charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder55.appendln(charArray64);
        java.io.Writer writer74 = strBuilder55.asWriter();
        writer74.flush();
        writer74.write((int) (byte) -1);
        properties49.store(writer74, "hi!1.0\nfalse\n#");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet80 = properties49.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties49.elements();
        java.util.Set<java.lang.String> strSet82 = properties49.stringPropertyNames();
        java.lang.Object obj83 = properties1.put((java.lang.Object) properties44, (java.lang.Object) strSet82);
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties44.elements();
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 13 + "'", int25 == 13);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(writer74);
        org.junit.Assert.assertNotNull(objEntrySet80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertNotNull(strSet82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objEnumeration84);
    }

    @Test
    public void test13272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13272");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        java.lang.String str25 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNewLine();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        properties30.clear();
        properties30.clear();
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.appendAll((java.lang.Iterable<java.lang.String>) strSet34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder22.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append((double) 8);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#4a#4#\n0.1!i0.001h" + "'", str25, "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test13273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13273");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet1 = properties0.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean5 = strBuilder3.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln((float) 1L);
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher16, strMatcher18);
        java.util.List<java.lang.String> strList20 = strTokenizer19.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.appendAll((java.lang.Iterable<java.lang.String>) strList20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray25 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.reverse();
        int int28 = strBuilder24.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean32 = strBuilder30.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(true);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        boolean boolean47 = strTokenizer46.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        properties50.clear();
        java.util.Enumeration<?> wildcardEnumeration52 = properties50.propertyNames();
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher61, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getQuoteMatcher();
        boolean boolean66 = properties50.containsValue((java.lang.Object) strMatcher65);
        int int68 = strBuilder30.indexOf(strMatcher65, (int) (byte) 1);
        boolean boolean69 = strBuilder24.contains(strMatcher65);
        java.lang.Object obj71 = properties0.put((java.lang.Object) strBuilder24, (java.lang.Object) (byte) 10);
        boolean boolean72 = properties0.isEmpty();
        java.lang.String str74 = properties0.getProperty("1.0\nf");
        java.util.Properties properties75 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup76 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor77 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup76);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup78 = strSubstitutor77.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor80 = strSubstitutor77.setVariablePrefix("hi!");
        char char81 = strSubstitutor80.getEscapeChar();
        char[] charArray82 = null;
        java.lang.String str85 = strSubstitutor80.replace(charArray82, 1, 16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor87 = strSubstitutor80.setVariableSuffix('t');
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup88 = strSubstitutor80.getVariableResolver();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strSubstitutor80.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = strSubstitutor80.getVariablePrefixMatcher();
        java.lang.Object obj91 = properties75.get((java.lang.Object) strSubstitutor80);
        java.util.Collection<java.lang.Object> objCollection92 = properties75.values();
        int int93 = properties75.size();
        org.junit.Assert.assertNotNull(objEntrySet1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(wildcardStrLookup78);
        org.junit.Assert.assertNotNull(strSubstitutor80);
        org.junit.Assert.assertTrue("'" + char81 + "' != '" + '$' + "'", char81 == '$');
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(strSubstitutor87);
        org.junit.Assert.assertNull(wildcardStrLookup88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(objCollection92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test13274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13274");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor1.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor1.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor9.setVariablePrefix("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean15 = strBuilder13.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.replaceFirst('#', '4');
        char[] charArray26 = strBuilder19.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        java.lang.String str31 = strSubstitutor11.replace(charArray26);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strSubstitutor11.getVariablePrefixMatcher();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!1.0\nfalse\n4" + "'", str31, "hi!1.0\nfalse\n4");
        org.junit.Assert.assertNotNull(strMatcher32);
    }

    @Test
    public void test13275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13275");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.deleteFirst("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('4', 'a');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test13276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13276");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((double) '4');
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        boolean boolean21 = strTokenizer20.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList22 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer20.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer29 = strBuilder1.asWriter();
        writer29.write((int) ' ');
        writer29.write("StrTokenizer[not");
        writer29.write((int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.insert((int) (byte) 0, (long) (short) 100);
        java.io.Reader reader44 = strBuilder37.asReader();
        int int45 = reader44.read();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup46 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor47 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup46);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup48 = strSubstitutor47.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = strSubstitutor47.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer51 = null;
        boolean boolean52 = strSubstitutor47.replaceIn(stringBuffer51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strSubstitutor47.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor55 = strSubstitutor47.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor57 = strSubstitutor47.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean61 = strBuilder59.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder65.replaceFirst('#', '4');
        char[] charArray72 = strBuilder65.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, ' ', '4');
        java.lang.String str76 = strSubstitutor47.replace(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        int int80 = reader44.read(charArray72, 4, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, '#');
        writer29.write(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, "$$$$$hi!i#i48");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 49 + "'", int45 == 49);
        org.junit.Assert.assertNull(wildcardStrLookup48);
        org.junit.Assert.assertNotNull(strSubstitutor50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strSubstitutor55);
        org.junit.Assert.assertNotNull(strSubstitutor57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "hi!10035alse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "hi!10035alse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[h, i, !, 1, 0, 0, 3, 5, a, l, s, e, \n, 4]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!1.0\nfalse\n4" + "'", str76, "hi!1.0\nfalse\n4");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 4 + "'", int80 == 4);
    }

    @Test
    public void test13277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13277");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj1 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean5 = strBuilder3.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln((float) 1L);
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher16, strMatcher18);
        java.util.List<java.lang.String> strList20 = strTokenizer19.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.appendAll((java.lang.Iterable<java.lang.String>) strList20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.setLength(0);
        boolean boolean30 = strBuilder28.startsWith("##4");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean34 = strBuilder32.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.append(true);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder32.appendAll((java.util.Iterator<java.lang.String>) strTokenizer48);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher59, strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer62.setTrimmerMatcher(strMatcher64);
        int int67 = strBuilder50.lastIndexOf(strMatcher64, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder28.deleteFirst(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean72 = strBuilder70.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder70.appendSeparator('#', (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceFirst("hi!1.013.0", "{}");
        boolean boolean83 = properties0.remove((java.lang.Object) strMatcher64, (java.lang.Object) strBuilder82);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder82.replace(1, (int) ' ', "0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder87.replaceFirst("hi!1.0\n#{StrTokenizer[not=0                                                 }", "hi!true#4#a4#-1.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder87.append(171);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertEquals(obj1.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj1), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj1), "{}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test13278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13278");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray0);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup2 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray10);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher17, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor35 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup2, strMatcher30, strMatcher33, '$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer1.setQuoteMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer1.setIgnoredChar('b');
        java.lang.String str39 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strTokenizer1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer1.setQuoteChar(' ');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strStrLookup2);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer41);
    }

    @Test
    public void test13279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13279");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append("java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("java.io.IOException: 044444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup30 = null;
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        int int44 = strTokenizer42.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setTrimmerMatcher(strMatcher45);
        java.lang.String str47 = strTokenizer42.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer42.setDelimiterString("hi!1.0\nfalse\n4");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Str10okenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer42.setIgnoredMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        int int54 = strTokenizer53.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer53.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor57 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup30, strMatcher51, strMatcher55, '0');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer29.setTrimmerMatcher(strMatcher51);
        int int59 = strBuilder27.lastIndexOf(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    }

    @Test
    public void test13280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13280");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setIgnoredMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer20.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup25 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor26 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup25);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup27 = strSubstitutor26.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor29 = strSubstitutor26.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strSubstitutor29.getVariableSuffixMatcher();
        java.lang.String str31 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer24.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer34.setQuoteChar('#');
        java.lang.Object obj38 = strTokenizer34.clone();
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher47, strMatcher49);
        boolean boolean51 = strTokenizer50.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer50.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer34.setQuoteMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer32.setIgnoredMatcher(strMatcher52);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNull(wildcardStrLookup27);
        org.junit.Assert.assertNotNull(strSubstitutor29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
    }

    @Test
    public void test13281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13281");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        java.lang.StringBuffer stringBuffer7 = null;
        java.lang.String str10 = strSubstitutor1.replace(stringBuffer7, (-1), 0);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        java.util.List<java.lang.String> strList23 = strTokenizer22.getTokenList();
        java.lang.String str24 = strSubstitutor1.replace((java.lang.Object) strTokenizer22);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup25 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor26 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup25);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup27 = strSubstitutor26.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor29 = strSubstitutor26.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer30 = null;
        boolean boolean31 = strSubstitutor26.replaceIn(stringBuffer30);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor33 = strSubstitutor26.setVariableSuffix('4');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup34 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str36 = strStrLookup34.lookup("{}");
        strSubstitutor26.setVariableResolver(strStrLookup34);
        strSubstitutor1.setVariableResolver(strStrLookup34);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor40 = strSubstitutor1.setVariableSuffix("#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        char char41 = strSubstitutor1.getEscapeChar();
        java.lang.String str43 = strSubstitutor1.replace("OException: java.io.IOE");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("h100.0i!1.0\n#4#a4#\n", 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setIgnoredChar('t');
        java.lang.String str49 = strSubstitutor1.replace((java.lang.Object) 't');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup50 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor51 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup50);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup52 = strSubstitutor51.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor54 = strSubstitutor51.setVariablePrefix('a');
        strSubstitutor51.setEnableSubstitutionInVariables(true);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor58 = strSubstitutor51.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strSubstitutor51.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor60 = strSubstitutor1.setVariableSuffixMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor62 = strSubstitutor60.setVariableSuffix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor64 = strSubstitutor62.setVariableSuffix('a');
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str24, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNull(wildcardStrLookup27);
        org.junit.Assert.assertNotNull(strSubstitutor29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSubstitutor33);
        org.junit.Assert.assertNotNull(strStrLookup34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strSubstitutor40);
        org.junit.Assert.assertTrue("'" + char41 + "' != '" + '$' + "'", char41 == '$');
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "OException: java.io.IOE" + "'", str43, "OException: java.io.IOE");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "t" + "'", str49, "t");
        org.junit.Assert.assertNull(wildcardStrLookup52);
        org.junit.Assert.assertNotNull(strSubstitutor54);
        org.junit.Assert.assertNotNull(strSubstitutor58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strSubstitutor60);
        org.junit.Assert.assertNotNull(strSubstitutor62);
        org.junit.Assert.assertNotNull(strSubstitutor64);
    }

    @Test
    public void test13282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13282");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        char char5 = strSubstitutor4.getEscapeChar();
        char[] charArray6 = null;
        java.lang.String str9 = strSubstitutor4.replace(charArray6, 1, 16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor4.setVariableSuffix('t');
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor26 = strSubstitutor11.setVariablePrefixMatcher(strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strSubstitutor11.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNewLine();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        properties32.clear();
        properties32.clear();
        properties32.clear();
        java.util.Set<java.lang.String> strSet36 = properties32.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.appendAll((java.lang.Iterable<java.lang.String>) strSet36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder29.trim();
        int int40 = strBuilder29.lastIndexOf("Str10oke");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean44 = strBuilder42.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendln((float) 1L);
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher55, strMatcher57);
        java.util.List<java.lang.String> strList59 = strTokenizer58.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder42.appendAll((java.lang.Iterable<java.lang.String>) strList59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray64 = strBuilder63.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.reverse();
        int int67 = strBuilder63.indexOf('#');
        java.lang.StringBuffer stringBuffer68 = strBuilder63.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder29.appendln(stringBuffer68);
        java.lang.String str70 = strSubstitutor11.replace(stringBuffer68);
        java.lang.String str72 = strSubstitutor11.replace("StrTokenizer[#4#a4#]100aaaaaaa");
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + '$' + "'", char5 == '$');
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strSubstitutor26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(stringBuffer68);
        org.junit.Assert.assertEquals(stringBuffer68.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "#4a#4#\n0.1!i0.001h" + "'", str70, "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "StrTokenizer[#4#a4#]100aaaaaaa" + "'", str72, "StrTokenizer[#4#a4#]100aaaaaaa");
    }

    @Test
    public void test13283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13283");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((double) '4');
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        boolean boolean21 = strTokenizer20.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList22 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer20.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer29 = strBuilder1.asWriter();
        writer29.write((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        java.io.Writer writer58 = writer29.append((java.lang.CharSequence) strBuilder51, 0, (int) '#');
        java.io.Writer writer60 = writer58.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean64 = strBuilder62.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln(false);
        int int69 = strBuilder68.length();
        char[] charArray76 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher78, strMatcher80);
        java.util.List<java.lang.String> strList82 = strTokenizer81.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder68.appendAll((java.lang.Iterable<java.lang.String>) strList82);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder83.ensureCapacity((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.deleteFirst("1.0\nfalse\n#");
        java.io.Writer writer91 = writer58.append((java.lang.CharSequence) strBuilder88);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder88.appendSeparator("", "i!1.0\nfalse\n#4\nStrTokenizer[");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder88.append("0\n#4#a4#\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(writer58);
        org.junit.Assert.assertNotNull(writer60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 13 + "'", int69 == 13);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(writer91);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test13284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13284");
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        properties2.clear();
        properties2.clear();
        properties2.clear();
        java.util.Properties properties6 = new java.util.Properties(properties2);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.appendln((double) '4');
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        boolean boolean28 = strTokenizer27.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList29 = strTokenizer27.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer27.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder8.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer36 = strBuilder8.asWriter();
        writer36.write((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher49, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder40.appendln(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        java.io.Writer writer65 = writer36.append((java.lang.CharSequence) strBuilder58, 0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.append('#');
        java.io.Writer writer74 = writer36.append((java.lang.CharSequence) strBuilder68);
        boolean boolean75 = properties2.containsKey((java.lang.Object) strBuilder68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]");
        java.lang.String str78 = strTokenizer77.next();
        boolean boolean79 = properties2.equals((java.lang.Object) str78);
        java.lang.String str80 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) 21, properties2);
        java.util.Set<java.lang.Object> objSet81 = properties2.keySet();
        java.util.Enumeration<?> wildcardEnumeration82 = properties2.propertyNames();
        java.io.PrintStream printStream83 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.list(printStream83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(writer65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(writer74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "StrTokenizer[not" + "'", str78, "StrTokenizer[not");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "21" + "'", str80, "21");
        org.junit.Assert.assertNotNull(objSet81);
        org.junit.Assert.assertNotNull(wildcardEnumeration82);
    }

    @Test
    public void test13285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13285");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        boolean boolean16 = strTokenizer15.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setQuoteChar('#');
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        java.lang.Object obj35 = properties1.put((java.lang.Object) '#', (java.lang.Object) strTokenizer31);
        boolean boolean36 = properties1.isEmpty();
        java.lang.Object obj37 = properties1.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi!#4");
        java.lang.Object obj40 = properties1.get((java.lang.Object) strMatcher39);
        boolean boolean42 = properties1.containsKey((java.lang.Object) 35);
        java.util.Properties properties43 = new java.util.Properties(properties1);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        properties45.clear();
        properties45.clear();
        properties45.clear();
        char[] charArray52 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean56 = strBuilder54.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.append(true);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        boolean boolean71 = strTokenizer70.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder54.appendAll((java.util.Iterator<java.lang.String>) strTokenizer70);
        char[] charArray79 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, strMatcher81, strMatcher83);
        boolean boolean85 = strBuilder54.contains(strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher81);
        boolean boolean87 = properties45.equals((java.lang.Object) strMatcher81);
        int int88 = properties45.size();
        boolean boolean89 = properties1.containsKey((java.lang.Object) properties45);
        java.util.Set<java.lang.Object> objSet90 = properties1.keySet();
        java.util.Collection<java.lang.Object> objCollection91 = properties1.values();
        java.lang.Object obj92 = properties1.clone();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "{#=StrTokenizer[not tokenized yet]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{#=StrTokenizer[not tokenized yet]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{#=StrTokenizer[not tokenized yet]}");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objSet90);
        org.junit.Assert.assertNotNull(objCollection91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "{#=StrTokenizer[not tokenized yet]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "{#=StrTokenizer[not tokenized yet]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "{#=StrTokenizer[not tokenized yet]}");
    }

    @Test
    public void test13286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13286");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        boolean boolean19 = reader17.markSupported();
        reader17.close();
        boolean boolean21 = reader17.markSupported();
        reader17.reset();
        boolean boolean23 = reader17.markSupported();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher34, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray32);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder25.appendln(charArray32);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray32);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher42, strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean48 = strBuilder46.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln((float) 1L);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher59, strMatcher61);
        java.util.List<java.lang.String> strList63 = strTokenizer62.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder46.appendAll((java.lang.Iterable<java.lang.String>) strList63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray68 = strBuilder67.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer44.reset(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '$', 'a');
        int int74 = reader17.read(charArray68);
        long long76 = reader17.skip(100L);
        reader17.reset();
        boolean boolean78 = reader17.markSupported();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "hi!#4#a4#\n0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "hi!#4#a4#\n0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[h, i, !, #, 4, #, a, 4, #, \n, 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test13287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13287");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        char char3 = strSubstitutor1.getEscapeChar();
        strSubstitutor1.setEnableSubstitutionInVariables(false);
        char char6 = strSubstitutor1.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.appendln((double) '4');
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        boolean boolean28 = strTokenizer27.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList29 = strTokenizer27.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer27.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder8.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer36 = strBuilder8.asWriter();
        writer36.write((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher49, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder40.appendln(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        java.io.Writer writer65 = writer36.append((java.lang.CharSequence) strBuilder58, 0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder58.append((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder58.replaceFirst("", "100");
        boolean boolean73 = strSubstitutor1.replaceIn(strBuilder70, 81, 25);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertTrue("'" + char3 + "' != '" + '$' + "'", char3 == '$');
        org.junit.Assert.assertTrue("'" + char6 + "' != '" + '$' + "'", char6 == '$');
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(writer65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test13288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13288");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean10 = strBuilder8.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.append(true);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher21, strMatcher23);
        boolean boolean25 = strTokenizer24.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder8.appendAll((java.util.Iterator<java.lang.String>) strTokenizer24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt((int) (byte) 1);
        java.lang.String str31 = strSubstitutor6.replace(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean56 = strSubstitutor6.replaceIn(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln("java.io.IOException: StrTokenizer[#4#a4#]", 0, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.replaceAll("", "100.0i!1.0\n#4#a4#hi!1.0\nfalse\n#48");
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher72, strMatcher74);
        java.util.List<java.lang.String> strList76 = strTokenizer75.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder55.appendAll((java.lang.Iterable<java.lang.String>) strList76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteAll('i');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendPadding(258, 'E');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder79.appendSeparator('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.reverse();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "h!true#4#a4#false" + "'", str31, "h!true#4#a4#false");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test13289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13289");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean10 = strBuilder8.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.append(true);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher21, strMatcher23);
        boolean boolean25 = strTokenizer24.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder8.appendAll((java.util.Iterator<java.lang.String>) strTokenizer24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt((int) (byte) 1);
        java.lang.String str31 = strSubstitutor6.replace(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean56 = strSubstitutor6.replaceIn(strBuilder55);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor58 = strSubstitutor6.setVariablePrefix("hi!\na");
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup59 = strSubstitutor6.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor61 = strSubstitutor6.setVariableSuffix("\n0.1!i0.001h$$$$$hi!\n");
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "h!true#4#a4#false" + "'", str31, "h!true#4#a4#false");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strSubstitutor58);
        org.junit.Assert.assertNull(wildcardStrLookup59);
        org.junit.Assert.assertNotNull(strSubstitutor61);
    }

    @Test
    public void test13290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13290");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        int int11 = strBuilder7.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replaceAll('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder7.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadLeft(7, 52, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendFixedWidthPadRight(44, (int) (short) 10, '1');
        int int26 = strBuilder21.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 74 + "'", int26 == 74);
    }

    @Test
    public void test13291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13291");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendln((float) 64);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup19 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor20 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup19);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup21 = strSubstitutor20.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor23 = strSubstitutor20.setVariablePrefix('a');
        strSubstitutor20.setEnableSubstitutionInVariables(true);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor27 = strSubstitutor20.setVariablePrefix('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("0.0i!1.0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append(17);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean35 = strBuilder33.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln(false);
        int int40 = strBuilder39.length();
        int int43 = strBuilder39.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean49 = strBuilder47.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendln((float) 1L);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher60, strMatcher62);
        java.util.List<java.lang.String> strList64 = strTokenizer63.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder47.appendAll((java.lang.Iterable<java.lang.String>) strList64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray69 = strBuilder68.toCharArray();
        char[] charArray76 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher78, strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher78, strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, 'a', 'a');
        char[] charArray87 = strBuilder45.getChars(charArray69);
        char[] charArray88 = strBuilder31.getChars(charArray69);
        java.lang.String str89 = strSubstitutor27.replace(charArray69);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup90 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor91 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup90);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup92 = strSubstitutor91.getVariableResolver();
        char char93 = strSubstitutor91.getEscapeChar();
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strSubstitutor91.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor95 = strSubstitutor27.setVariableSuffixMatcher(strMatcher94);
        int int96 = strBuilder18.lastIndexOf(strMatcher94);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(wildcardStrLookup21);
        org.junit.Assert.assertNotNull(strSubstitutor23);
        org.junit.Assert.assertNotNull(strSubstitutor27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 13 + "'", int40 == 13);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "0.0i!1.0\n#4#a4#\n17");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "0.0i!1.0\n#4#a4#\n17");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #, \n, 1, 7]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "0.0i!1.0\n#4#a4#\n17");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "0.0i!1.0\n#4#a4#\n17");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #, \n, 1, 7]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "0.0i!1.0\n#4#a4#\n17");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "0.0i!1.0\n#4#a4#\n17");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #, \n, 1, 7]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "0.0i!1.0\n#4#a4#\n17" + "'", str89, "0.0i!1.0\n#4#a4#\n17");
        org.junit.Assert.assertNull(wildcardStrLookup92);
        org.junit.Assert.assertTrue("'" + char93 + "' != '" + '$' + "'", char93 == '$');
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strSubstitutor95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
    }

    @Test
    public void test13292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13292");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor1.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor1.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor1.setVariableSuffix('#');
        java.lang.String str13 = strSubstitutor1.replace("#a4#32.0#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean17 = strBuilder15.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln((float) 1L);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        java.util.List<java.lang.String> strList32 = strTokenizer31.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder15.appendAll((java.lang.Iterable<java.lang.String>) strList32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.ensureCapacity((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendSeparator(' ');
        java.lang.Iterable<java.lang.String> strIterable38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendWithSeparators(strIterable38, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.insert(12, (long) 'i');
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties44.entrySet();
        java.lang.Object obj46 = properties44.clone();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup47 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor48 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup47);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup49 = strSubstitutor48.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor51 = strSubstitutor48.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup52 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str54 = strStrLookup52.lookup("{}");
        strSubstitutor48.setVariableResolver(strStrLookup52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = null;
        boolean boolean57 = strSubstitutor48.replaceIn(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strBuilder59.asTokenizer();
        java.lang.Object obj66 = properties44.replace((java.lang.Object) strSubstitutor48, (java.lang.Object) strTokenizer65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean70 = strBuilder68.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.appendln((float) 1L);
        char[] charArray79 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, strMatcher81, strMatcher83);
        java.util.List<java.lang.String> strList85 = strTokenizer84.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder68.appendAll((java.lang.Iterable<java.lang.String>) strList85);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray90 = strBuilder89.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder89.reverse();
        int int93 = strBuilder89.indexOf('#');
        java.lang.StringBuffer stringBuffer94 = strBuilder89.toStringBuffer();
        java.lang.String str95 = strSubstitutor48.replace(stringBuffer94);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder35.append(stringBuffer94);
        java.lang.String str97 = strSubstitutor1.replace(stringBuffer94);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#a4#32.0#4#a4#" + "'", str13, "#a4#32.0#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertNull(wildcardStrLookup49);
        org.junit.Assert.assertNotNull(strSubstitutor51);
        org.junit.Assert.assertNotNull(strStrLookup52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(stringBuffer94);
        org.junit.Assert.assertEquals(stringBuffer94.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "#4a#4#\n0.1!i0.001h" + "'", str95, "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "#4a#4#\n0.1!i0.001h" + "'", str97, "#4a#4#\n0.1!i0.001h");
    }

    @Test
    public void test13293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13293");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(stringBuffer25, (int) '#', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.deleteFirst('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.appendSeparator('$', (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst(' ');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup38 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor39 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup38);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup40 = strSubstitutor39.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = strSubstitutor39.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("h!true#4#a4#false");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean48 = strBuilder46.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator('#', (int) (short) 1);
        int int58 = strBuilder55.lastIndexOf('4', 10);
        char[] charArray65 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, "");
        java.lang.Object[] objArray68 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder55.appendAll(objArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder55.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer73 = strBuilder55.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder44.append(stringBuffer73);
        boolean boolean75 = strSubstitutor42.replaceIn(stringBuffer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder35.appendln(stringBuffer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln("hi!1.0i!\n#4#a4#\ntrue\n4.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(wildcardStrLookup40);
        org.junit.Assert.assertNotNull(strSubstitutor42);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(stringBuffer73);
        org.junit.Assert.assertEquals(stringBuffer73.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test13294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13294");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        int int26 = strBuilder22.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append("java.io.IOException: ##4", 3, 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.appendFixedWidthPadRight(22, (int) (byte) 1, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder30.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.setLength(153);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test13295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13295");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, "hi!\n100aaaaaaa52.0\n", "hi!1.0\nfalse\n#", 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup8 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup8);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup10 = strSubstitutor9.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = strSubstitutor9.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup13 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str15 = strStrLookup13.lookup("{}");
        strSubstitutor9.setVariableResolver(strStrLookup13);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor32 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup13, strMatcher17, strMatcher30, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer6.setDelimiterMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.appendNewLine();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        properties39.clear();
        properties39.clear();
        java.util.Set<java.lang.String> strSet43 = properties39.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.appendAll((java.lang.Iterable<java.lang.String>) strSet43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.setNullText("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean51 = strBuilder49.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.append(true);
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher62, strMatcher64);
        boolean boolean66 = strTokenizer65.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder49.appendAll((java.util.Iterator<java.lang.String>) strTokenizer65);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        properties69.clear();
        java.util.Enumeration<?> wildcardEnumeration71 = properties69.propertyNames();
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher80, strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getQuoteMatcher();
        boolean boolean85 = properties69.containsValue((java.lang.Object) strMatcher84);
        int int87 = strBuilder49.indexOf(strMatcher84, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder47.deleteFirst(strMatcher84);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor90 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, strMatcher34, strMatcher84, 'a');
        java.lang.String str92 = strStrLookup0.lookup("#4a#4#\n0.1!i0.001h$$$$$hi!\n#\n");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor93 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor94 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor96 = strSubstitutor94.setVariableSuffix('b');
        boolean boolean97 = strSubstitutor96.isEnableSubstitutionInVariables();
        org.junit.Assert.assertNotNull(strStrLookup0);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNull(wildcardStrLookup10);
        org.junit.Assert.assertNotNull(strSubstitutor12);
        org.junit.Assert.assertNotNull(strStrLookup13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(wildcardEnumeration71);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNotNull(strSubstitutor96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test13296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13296");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray31);
        char[] charArray42 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean46 = strBuilder44.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append(true);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        boolean boolean61 = strTokenizer60.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder44.appendAll((java.util.Iterator<java.lang.String>) strTokenizer60);
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher71, strMatcher73);
        boolean boolean75 = strBuilder44.contains(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher71);
        char[] charArray83 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, strMatcher85, strMatcher87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher71, strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder24.append(charArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder24.replaceAll('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder24.append(false);
        int int97 = strBuilder96.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 33 + "'", int97 == 33);
    }

    @Test
    public void test13297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13297");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder24.appendln((double) 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder24.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteAll("hi!\n#4#a4#\n");
        char[] charArray52 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean56 = strBuilder54.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.append(true);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        boolean boolean71 = strTokenizer70.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder54.appendAll((java.util.Iterator<java.lang.String>) strTokenizer70);
        char[] charArray79 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, strMatcher81, strMatcher83);
        boolean boolean85 = strBuilder54.contains(strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher81);
        char[] charArray87 = strBuilder48.getChars(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray87);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "hi!true#4#a4#16.0\n97\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "hi!true#4#a4#16.0\n97\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[h, i, !, t, r, u, e, #, 4, #, a, 4, #, 1, 6, ., 0, \n, 9, 7, \n]");
        org.junit.Assert.assertNotNull(strTokenizer88);
    }

    @Test
    public void test13298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13298");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!1.0\n#10");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test13299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13299");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi!true#4#a4#0\n");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test13300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13300");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(stringBuffer25, (int) '#', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(false);
        int int32 = strBuilder30.indexOf(' ');
        java.util.stream.IntStream intStream33 = strBuilder30.codePoints();
        char[] charArray34 = strBuilder30.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.insert(129, 't');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 129");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "h100.0i!1.0\n#4#a4#\n\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "h100.0i!1.0\n#4#a4#\n\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #, \n, \n, f, a, l, s, e, \n]");
    }

    @Test
    public void test13301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13301");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(stringBuffer25, (int) '#', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(false);
        int int32 = strBuilder30.indexOf(' ');
        java.util.stream.IntStream intStream33 = strBuilder30.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendFixedWidthPadRight(5, 4, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean41 = strBuilder39.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendln((float) 1L);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher52, strMatcher54);
        java.util.List<java.lang.String> strList56 = strTokenizer55.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder39.appendAll((java.lang.Iterable<java.lang.String>) strList56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray61 = strBuilder60.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.insert(0, '#');
        boolean boolean67 = strBuilder65.contains("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.append("hi!\n#4#a4#\n");
        char[] charArray70 = null;
        char[] charArray71 = strBuilder65.getChars(charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder30.append(charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.append(false);
        int int77 = strBuilder74.indexOf("", (int) (short) 10);
        int int78 = strBuilder74.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "##4a#4#\n0.1!i0.001hhi!\n#4#a4#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "##4a#4#\n0.1!i0.001hhi!\n#4#a4#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, #, 4, a, #, 4, #, \n, 0, ., 1, !, i, 0, ., 0, 0, 1, h, h, i, !, \n, #, 4, #, a, 4, #, \n]");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 35 + "'", int78 == 35);
    }

    @Test
    public void test13302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13302");
        char[] charArray3 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean7 = strBuilder5.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(true);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher18, strMatcher20);
        boolean boolean22 = strTokenizer21.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder5.appendAll((java.util.Iterator<java.lang.String>) strTokenizer21);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        boolean boolean36 = strBuilder5.contains(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'h');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '0');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("4#hi!1.0\nf5alse\n#4");
        int int46 = strTokenizer43.size();
        boolean boolean47 = strTokenizer43.hasNext();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test13303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13303");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert(0, '#');
        boolean boolean29 = strBuilder27.contains("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append("hi!\n#4#a4#\n");
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher40, strMatcher42);
        boolean boolean44 = strTokenizer43.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer43.getDelimiterMatcher();
        java.lang.String[] strArray46 = strTokenizer43.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder31.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer43, "StrTokenizer[not");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup49 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup49);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup51 = strSubstitutor50.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor53 = strSubstitutor50.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor55 = strSubstitutor50.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor57 = strSubstitutor55.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceAll(' ', '#');
        char[] charArray64 = strBuilder60.toCharArray();
        java.lang.String str65 = strSubstitutor55.replace(charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder31.append(charArray64, (int) (byte) 0, 0);
        char[] charArray75 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher77, strMatcher79);
        java.util.List<java.lang.String> strList81 = strTokenizer80.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer80.reset();
        boolean boolean83 = strTokenizer82.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder68.appendFixedWidthPadRight((java.lang.Object) strTokenizer82, 138, 'E');
        boolean boolean88 = strBuilder86.contains("hi!1.0\nfalse\n#hi!1.0\nf");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(wildcardStrLookup51);
        org.junit.Assert.assertNotNull(strSubstitutor53);
        org.junit.Assert.assertNotNull(strSubstitutor55);
        org.junit.Assert.assertNotNull(strSubstitutor57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[h, i, !, \n]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!\n" + "'", str65, "hi!\n");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test13304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13304");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        char char5 = strSubstitutor1.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.setNullText("hi!\na");
        java.lang.String str22 = strSubstitutor1.replace(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNewLine();
        java.util.stream.IntStream intStream26 = strBuilder25.chars();
        boolean boolean27 = strBuilder21.equals((java.lang.Object) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean31 = strBuilder29.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.replaceFirst('#', '4');
        char[] charArray42 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder25.append(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, 'i', '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, 'i', '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + '$' + "'", char5 == '$');
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str22, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer56);
    }

    @Test
    public void test13305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13305");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.setLength((int) (short) 1);
        char[] charArray16 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean20 = strBuilder18.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.append(true);
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher31, strMatcher33);
        boolean boolean35 = strTokenizer34.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer34);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        boolean boolean49 = strBuilder18.contains(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher45);
        int int51 = strBuilder12.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean55 = strBuilder53.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.appendln((float) 1L);
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher66, strMatcher68);
        java.util.List<java.lang.String> strList70 = strTokenizer69.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder53.appendAll((java.lang.Iterable<java.lang.String>) strList70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray75 = strBuilder74.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, 'i');
        int int81 = strMatcher45.isMatch(charArray75, 10, 12, 98);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, "\neslaf\n0.1!ih35.0\nh100.0i!1.0\n#4#a4#\n");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test13306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13306");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup8 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup8);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup10 = strSubstitutor9.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = strSubstitutor9.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor9.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor14.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean20 = strBuilder18.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('#', (int) (short) 1);
        int int30 = strBuilder27.lastIndexOf('4', 10);
        char[] charArray37 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, "");
        java.lang.Object[] objArray40 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder27.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean45 = strBuilder43.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendSeparator('#', (int) (short) 1);
        int int55 = strBuilder52.lastIndexOf('4', 10);
        char[] charArray62 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, "");
        java.lang.Object[] objArray65 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder52.appendAll(objArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder52.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer70 = strBuilder52.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder27.appendln(stringBuffer70);
        boolean boolean72 = strSubstitutor16.replaceIn(stringBuffer70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder1.appendln(stringBuffer70);
        int int76 = strBuilder1.lastIndexOf("#4#a4#", 63);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean80 = strBuilder78.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder78.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder78.appendln("StrTokenizer[#4#a4#]");
        java.lang.StringBuffer stringBuffer87 = strBuilder86.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder1.append(stringBuffer87, 0, 62);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(wildcardStrLookup10);
        org.junit.Assert.assertNotNull(strSubstitutor12);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(stringBuffer70);
        org.junit.Assert.assertEquals(stringBuffer70.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(stringBuffer87);
        org.junit.Assert.assertEquals(stringBuffer87.toString(), "hi!1.0\nStrTokenizer[#4#a4#]\n");
    }

    @Test
    public void test13307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13307");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        java.lang.Object obj14 = properties1.remove((java.lang.Object) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("");
        char[] charArray18 = null;
        char[] charArray19 = strBuilder15.getChars(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charMatcher('!');
        int int23 = strBuilder15.lastIndexOf(strMatcher21, 124);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder15.deleteCharAt(0);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "\neslaf\n0.1!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "\neslaf\n0.1!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[\n, e, s, l, a, f, \n, 0, ., 1, !, i, h]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test13308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13308");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor7 = strSubstitutor4.setVariableSuffixMatcher(strMatcher6);
        java.lang.String str8 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strSubstitutor4);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strSubstitutor4.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor4.setVariablePrefix("hi!1.0\n#1.0");
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strSubstitutor7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
    }

    @Test
    public void test13309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13309");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hh1000.0i!1.", 'b');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer2.reset();
        org.junit.Assert.assertNotNull(strTokenizer3);
    }

    @Test
    public void test13310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13310");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        java.util.Enumeration<?> wildcardEnumeration37 = properties1.propertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean41 = strBuilder39.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendln((float) 1L);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher52, strMatcher54);
        java.util.List<java.lang.String> strList56 = strTokenizer55.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder39.appendAll((java.lang.Iterable<java.lang.String>) strList56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.ensureCapacity((int) '4');
        java.lang.StringBuffer stringBuffer60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendln(stringBuffer60, (int) (byte) 0, 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder57.replaceFirst('#', 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst('4');
        boolean boolean69 = properties1.containsValue((java.lang.Object) strBuilder68);
        java.lang.Object obj72 = properties1.setProperty("hi!1.0\nfalse\n#4#a4#", "hi!true#4#a4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray81 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, strMatcher83, strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray81);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray81);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder74.appendln(charArray81);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder74.deleteFirst('h');
        java.lang.Object obj92 = properties1.remove((java.lang.Object) 'h');
        java.util.Set<java.lang.Object> objSet93 = properties1.keySet();
        java.util.Collection<java.lang.Object> objCollection94 = properties1.values();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(wildcardEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNotNull(objSet93);
        org.junit.Assert.assertNotNull(objCollection94);
    }

    @Test
    public void test13311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13311");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.trim();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceAll(strMatcher6, "1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendSeparator("hi!true##a#35");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test13312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13312");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        java.io.Writer writer21 = strBuilder2.asWriter();
        writer21.flush();
        writer21.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean27 = strBuilder25.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendln((float) 1L);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        java.util.List<java.lang.String> strList42 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder25.appendAll((java.lang.Iterable<java.lang.String>) strList42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.io.Writer writer47 = writer21.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher58, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder49.appendln(charArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.appendSeparator('a', 10);
        java.util.Properties properties68 = new java.util.Properties();
        boolean boolean69 = strBuilder64.equals((java.lang.Object) properties68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder64.append((long) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder64.insert(10, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder64.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder43.appendln(strBuilder75);
        int int78 = strBuilder43.indexOf("hi!1i");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder43.delete(35, (int) 'E');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(writer47);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test13313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13313");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        java.io.Writer writer21 = strBuilder2.asWriter();
        writer21.flush();
        writer21.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean27 = strBuilder25.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendln((float) 1L);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        java.util.List<java.lang.String> strList42 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder25.appendAll((java.lang.Iterable<java.lang.String>) strList42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.io.Writer writer47 = writer21.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher58, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder49.appendln(charArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.appendSeparator('a', 10);
        java.util.Properties properties68 = new java.util.Properties();
        boolean boolean69 = strBuilder64.equals((java.lang.Object) properties68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder64.append((long) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder64.insert(10, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder64.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder43.appendln(strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.appendSeparator('#');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup79 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor85 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup79, strMatcher81, strMatcher83, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder78.replaceFirst(strMatcher81, "hi!1.0\n#{StrTokenizer[not=0                                                 }");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder87.appendln((float) 97);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder87.deleteAll("hi");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(writer47);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test13314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13314");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder6.replaceAll(strMatcher74, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.append(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder78.appendln(116);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test13315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13315");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        int int14 = strBuilder11.indexOf(' ', (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln("\n#########");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendSeparator('$', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst('4', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteAll('#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test13316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13316");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet1 = properties0.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean5 = strBuilder3.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.replaceFirst('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.append("StrTokenizer[#4#a4#]", (int) (byte) 0, 16);
        boolean boolean20 = properties0.containsKey((java.lang.Object) 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean24 = strBuilder22.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendln((float) 1L);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        java.util.List<java.lang.String> strList39 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray44 = strBuilder43.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.insert(0, '#');
        boolean boolean50 = strBuilder48.contains("hi!\n");
        java.io.Writer writer51 = strBuilder48.asWriter();
        java.lang.String str53 = strBuilder48.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.appendSeparator("hi!1.0\nfalse\n#4", "hi!#4#a4#\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder56.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.clear();
        boolean boolean59 = properties0.contains((java.lang.Object) strBuilder57);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.setCharAt(60, 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 60");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEntrySet1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(writer51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "##4a#4#\n0.1!i0.001h" + "'", str53, "##4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test13317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13317");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.setCharAt((int) (byte) 0, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", '$', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset("##4");
        java.lang.String str14 = strTokenizer11.nextToken();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup15 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup15, "hi!\n100aaaaaaa52.0\n", "hi!1.0\nfalse\n#", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strSubstitutor19.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer11.setQuoteMatcher(strMatcher20);
        boolean boolean22 = strTokenizer11.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder4.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer11, "hi!");
        java.lang.String str25 = strTokenizer11.getContent();
        java.lang.String str26 = strTokenizer11.toString();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "##4" + "'", str14, "##4");
        org.junit.Assert.assertNotNull(strStrLookup15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "##4" + "'", str25, "##4");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "StrTokenizer[##4]" + "'", str26, "StrTokenizer[##4]");
    }

    @Test
    public void test13318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13318");
        char[] charArray7 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher9, strMatcher11);
        boolean boolean13 = strTokenizer12.isEmptyTokenAsNull();
        int int14 = strTokenizer12.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer12.setTrimmerMatcher(strMatcher15);
        java.lang.String str17 = strTokenizer12.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer12.setDelimiterString("hi!1.0\nfalse\n4");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Str10okenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer12.setIgnoredMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setQuoteChar('.');
        boolean boolean25 = strTokenizer24.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer24.setDelimiterString("0.1esl$f#4$#4#eurt!ih");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("a23.0", strMatcher28, strMatcher29);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher29);
    }

    @Test
    public void test13319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13319");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.appendln((double) '4');
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList44 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder23.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "StrTokenizer[not tokenized yet]");
        boolean boolean51 = strBuilder16.equals((java.lang.Object) strBuilder50);
        int int53 = strBuilder16.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder16.appendFixedWidthPadRight(8, 11, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "StrToken");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.deleteFirst('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.appendln((float) 30);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder57.replaceFirst("4", "a100");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder57.insert(0, (double) 83);
        int int71 = strBuilder57.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder57.appendln('a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.replace(71, 44, "hi!\n100aaaahi!1.0\nfalse\n4aaa52.0\n0");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 34 + "'", int71 == 34);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test13320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13320");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln("1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.insert(12, "hi!1.0\n");
        java.lang.CharSequence charSequence22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.append(charSequence22, 40, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator("java.io.IOException: hi!\n#", 116);
        boolean boolean30 = strBuilder28.contains('#');
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test13321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13321");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("{}", (int) (short) -1);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties27.clear();
        java.util.Enumeration<?> wildcardEnumeration29 = properties27.propertyNames();
        boolean boolean31 = properties27.containsKey((java.lang.Object) (-1));
        java.util.Collection<java.lang.Object> objCollection32 = properties27.values();
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher41, strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean48 = strBuilder46.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(false);
        int int53 = strBuilder52.length();
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher62, strMatcher64);
        java.util.List<java.lang.String> strList66 = strTokenizer65.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder52.appendAll((java.lang.Iterable<java.lang.String>) strList66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.appendSeparator("{}", (int) (short) -1);
        char[] charArray77 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher79, strMatcher81);
        boolean boolean83 = strTokenizer82.isEmptyTokenAsNull();
        int int84 = strTokenizer82.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer82.setTrimmerMatcher(strMatcher85);
        boolean boolean87 = properties27.replace((java.lang.Object) strMatcher41, (java.lang.Object) (short) -1, (java.lang.Object) strTokenizer86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder22.replaceAll(strMatcher41, "hi!");
        java.io.Reader reader90 = strBuilder22.asReader();
        int int93 = strBuilder22.indexOf("23", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder22.appendln("00.0i!1.0\n#4#a4#true\n16aaaaaaaaa");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 13 + "'", int53 == 13);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(reader90);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test13322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13322");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.appendln(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.trim();
        boolean boolean27 = strBuilder1.equalsIgnoreCase(strBuilder21);
        char[] charArray28 = null;
        char[] charArray29 = strBuilder21.getChars(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder21.insert(1, (float) 't');
        int int34 = strBuilder21.indexOf("hi!#4#a4#\na100");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "hi!#4#a4#\na100");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "hi!#4#a4#\na100");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, i, !, #, 4, #, a, 4, #, \n, a, 1, 0, 0]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test13323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13323");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.setLength(0);
        int int27 = strBuilder26.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean31 = strBuilder29.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((float) 1L);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        java.util.List<java.lang.String> strList46 = strTokenizer45.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder29.appendAll((java.lang.Iterable<java.lang.String>) strList46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray51 = strBuilder50.toCharArray();
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher60, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher60, strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray74 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, strMatcher76, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray74);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder67.appendln(charArray74);
        int int84 = strMatcher64.isMatch(charArray74, (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray74);
        char[] charArray86 = strBuilder26.getChars(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray74);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray74);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher88);
    }

    @Test
    public void test13324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13324");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((double) '4');
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        boolean boolean21 = strTokenizer20.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList22 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer20.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer29 = strBuilder1.asWriter();
        writer29.write((int) ' ');
        java.io.Writer writer33 = writer29.append('a');
        writer33.close();
        java.io.Writer writer36 = writer33.append(' ');
        writer33.write(15);
        java.io.Writer writer40 = writer33.append('i');
        java.lang.CharSequence charSequence41 = null;
        java.io.Writer writer42 = writer40.append(charSequence41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean46 = strBuilder44.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln(false);
        int int51 = strBuilder50.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendSeparator("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.ensureCapacity((int) (short) 0);
        int int57 = strBuilder53.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.deleteFirst('t');
        java.io.Writer writer60 = writer42.append((java.lang.CharSequence) strBuilder59);
        writer42.write(86);
        java.io.Writer writer64 = writer42.append('\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(writer33);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(writer40);
        org.junit.Assert.assertNotNull(writer42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 13 + "'", int51 == 13);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 17 + "'", int57 == 17);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(writer60);
        org.junit.Assert.assertNotNull(writer64);
    }

    @Test
    public void test13325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13325");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup5 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup5);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup7 = strSubstitutor6.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor6.setVariablePrefix("hi!");
        char char10 = strSubstitutor6.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean14 = strBuilder12.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.setNullText("hi!\na");
        java.lang.String str27 = strSubstitutor6.replace(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNewLine();
        java.util.stream.IntStream intStream31 = strBuilder30.chars();
        boolean boolean32 = strBuilder26.equals((java.lang.Object) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.setCharAt(0, '1');
        boolean boolean38 = strSubstitutor4.replaceIn(strBuilder35, 7, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.deleteAll('0');
        java.lang.String str43 = strBuilder35.midString(88, (int) (byte) 1);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNull(wildcardStrLookup7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertTrue("'" + char10 + "' != '" + '$' + "'", char10 == '$');
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str27, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test13326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13326");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.appendln(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.trim();
        boolean boolean27 = strBuilder1.equalsIgnoreCase(strBuilder21);
        char[] charArray28 = null;
        char[] charArray29 = strBuilder21.getChars(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendln((java.lang.Object) (short) 100);
        int int36 = strBuilder31.lastIndexOf('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean40 = strBuilder38.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.appendln((float) 1L);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher51, strMatcher53);
        java.util.List<java.lang.String> strList55 = strTokenizer54.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder38.appendAll((java.lang.Iterable<java.lang.String>) strList55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray60 = strBuilder59.toCharArray();
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher69, strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher69, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, 'a', 'a');
        char[] charArray78 = strBuilder31.getChars(charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder21.appendFixedWidthPadLeft((java.lang.Object) charArray78, 2, '4');
        boolean boolean83 = strBuilder81.endsWith("i!1.0\nfalse\n#4#a4#");
        java.util.stream.IntStream intStream84 = strBuilder81.chars();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "hi!#4#a4#\na100");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "hi!#4#a4#\na100");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, i, !, #, 4, #, a, 4, #, \n, a, 1, 0, 0]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "hi!100\n!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "hi!100\n!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[h, i, !, 1, 0, 0, \n, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "hi!100\n!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "hi!100\n!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[h, i, !, 1, 0, 0, \n, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(intStream84);
    }

    @Test
    public void test13327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13327");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        boolean boolean16 = strTokenizer15.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setQuoteChar('#');
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        java.lang.Object obj35 = properties1.put((java.lang.Object) '#', (java.lang.Object) strTokenizer31);
        java.util.Set<java.lang.Object> objSet36 = properties1.keySet();
        boolean boolean37 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties1.keys();
        java.util.Properties properties39 = new java.util.Properties(properties1);
        java.lang.String str40 = properties1.toString();
        boolean boolean41 = properties1.isEmpty();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{#=StrTokenizer[not tokenized yet]}" + "'", str40, "{#=StrTokenizer[not tokenized yet]}");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test13328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13328");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceAll(' ', '#');
        char[] charArray6 = strBuilder2.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.replaceFirst("hi!\n", "0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.append('h');
        boolean boolean13 = strBuilder2.contains("hi!java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: \n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test13329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13329");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray6);
        char[] charArray17 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean21 = strBuilder19.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append(true);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        boolean boolean36 = strTokenizer35.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder19.appendAll((java.util.Iterator<java.lang.String>) strTokenizer35);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher46, strMatcher48);
        boolean boolean50 = strBuilder19.contains(strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher46);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher60, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher46, strMatcher64);
        java.util.List<java.lang.String> strList66 = strTokenizer65.getTokenList();
        java.lang.String[] strArray67 = strTokenizer65.getTokenArray();
        java.lang.String str68 = strTokenizer65.nextToken();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "#4#a4#" + "'", str68, "#4#a4#");
    }

    @Test
    public void test13330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13330");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor6.setVariableSuffix("{}");
        boolean boolean9 = strSubstitutor6.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup10 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup10);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup12 = strSubstitutor11.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor11.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup15 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup15);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup17 = strSubstitutor16.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor16.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup20 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str22 = strStrLookup20.lookup("{}");
        strSubstitutor16.setVariableResolver(strStrLookup20);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor39 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup20, strMatcher24, strMatcher37, '4');
        strSubstitutor14.setVariableResolver(strStrLookup20);
        strSubstitutor6.setVariableResolver(strStrLookup20);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor45 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup20, "java.io.IOException: StrTokenizer[#4#a4#]", "hi", 't');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor46 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup20);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor47 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup20);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strSubstitutor47.getVariableSuffixMatcher();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardStrLookup12);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNull(wildcardStrLookup17);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertNotNull(strStrLookup20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher48);
    }

    @Test
    public void test13331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13331");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.lang.Object obj7 = properties1.setProperty("hi!#4#a4###4a0", "{StrTokenizer[");
        properties1.clear();
        java.io.InputStream inputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(inputStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj7);
    }

    @Test
    public void test13332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13332");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.trim();
        java.lang.String str15 = strBuilder13.rightString((int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strBuilder13.asTokenizer();
        boolean boolean17 = strBuilder13.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln((java.lang.Object) (short) 100);
        int int24 = strBuilder19.lastIndexOf('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((float) 1L);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        java.util.List<java.lang.String> strList43 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.lang.Iterable<java.lang.String>) strList43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray48 = strBuilder47.toCharArray();
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher57, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, 'a', 'a');
        char[] charArray66 = strBuilder19.getChars(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder13.append(charArray48, 6, (int) '\n');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, "17i");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getDelimiterMatcher();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!1.0\nfalse\n#4#a4#1" + "'", str15, "hi!1.0\nfalse\n#4#a4#1");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "hi!100\n!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "hi!100\n!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[h, i, !, 1, 0, 0, \n, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "hi!100\n!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "hi!100\n!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[h, i, !, 1, 0, 0, \n, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher73);
    }

    @Test
    public void test13333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13333");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        boolean boolean37 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties1.entrySet();
        java.util.Collection<java.lang.Object> objCollection39 = properties1.values();
        boolean boolean41 = properties1.containsValue((java.lang.Object) "100.01.0\n#4#a4#");
        java.util.Collection<java.lang.Object> objCollection42 = properties1.values();
        java.util.Set<java.lang.Object> objSet43 = properties1.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean47 = strBuilder45.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(false);
        int int52 = strBuilder51.length();
        int int55 = strBuilder51.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.appendSeparator('i', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceAll(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceAll(' ', '#');
        char[] charArray72 = strBuilder68.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder61.insert((int) (byte) 0, charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, '#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder58.appendAll((java.util.Iterator<java.lang.String>) strTokenizer76);
        boolean boolean78 = strTokenizer76.isIgnoreEmptyTokens();
        java.lang.Object obj79 = properties1.get((java.lang.Object) strTokenizer76);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 13 + "'", int52 == 13);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(obj79);
    }

    @Test
    public void test13334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13334");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (short) 1, true);
        boolean boolean26 = strBuilder24.contains("hi!\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.append("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean33 = strBuilder31.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendln((float) 1L);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher44, strMatcher46);
        java.util.List<java.lang.String> strList48 = strTokenizer47.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder31.appendAll((java.lang.Iterable<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray53 = strBuilder52.toCharArray();
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher62, strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher62, strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray76 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher78, strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray76);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder69.appendln(charArray76);
        int int86 = strMatcher66.isMatch(charArray76, (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer29.reset(charArray76);
        char[] charArray88 = strBuilder28.getChars(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray88, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer90.reset("hi!");
        int int93 = strTokenizer90.previousIndex();
        boolean boolean94 = strTokenizer90.isIgnoreEmptyTokens();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "htruei!true#4#a4#false#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "htruei!true#4#a4#false#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[h, t, r, u, e, i, !, t, r, u, e, #, 4, #, a, 4, #, f, a, l, s, e, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test13335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13335");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor6.setVariableSuffix("{}");
        boolean boolean9 = strSubstitutor6.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup10 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup10);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup12 = strSubstitutor11.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor11.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup15 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup15);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup17 = strSubstitutor16.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor16.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup20 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str22 = strStrLookup20.lookup("{}");
        strSubstitutor16.setVariableResolver(strStrLookup20);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor39 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup20, strMatcher24, strMatcher37, '4');
        strSubstitutor14.setVariableResolver(strStrLookup20);
        strSubstitutor6.setVariableResolver(strStrLookup20);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup20);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor43 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup20);
        java.lang.String str45 = strStrLookup20.lookup("#4a#4#\n0.1!i0.001h");
        java.lang.String str47 = strStrLookup20.lookup("lse\n#4\n");
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardStrLookup12);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNull(wildcardStrLookup17);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertNotNull(strStrLookup20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test13336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13336");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        char[] charArray20 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "");
        java.lang.Object[] objArray23 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendAll(objArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator('#', (int) (short) 1);
        int int38 = strBuilder35.lastIndexOf('4', 10);
        char[] charArray45 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "");
        java.lang.Object[] objArray48 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder35.appendAll(objArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder35.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer53 = strBuilder35.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder10.appendln(stringBuffer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder10.appendFixedWidthPadLeft((int) (short) -1, (int) '4', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceAll("hi!\n\n", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.setNewLineText("hi!1.0\nfalse\n##4#a4#");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup64 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor65 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup64);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup66 = strSubstitutor65.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor68 = strSubstitutor65.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor71 = strSubstitutor68.setVariableSuffixMatcher(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder58.replaceFirst(strMatcher70, "aaaaaaa52");
        java.io.Reader reader74 = strBuilder73.asReader();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(stringBuffer53);
        org.junit.Assert.assertEquals(stringBuffer53.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNull(wildcardStrLookup66);
        org.junit.Assert.assertNotNull(strSubstitutor68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strSubstitutor71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader74);
    }

    @Test
    public void test13337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13337");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties1.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean41 = strBuilder39.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendln((float) 1L);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher52, strMatcher54);
        java.util.List<java.lang.String> strList56 = strTokenizer55.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder39.appendAll((java.lang.Iterable<java.lang.String>) strList56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray61 = strBuilder60.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.reverse();
        java.lang.String str63 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder65.appendNewLine();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        properties68.clear();
        properties68.clear();
        properties68.clear();
        java.util.Set<java.lang.String> strSet72 = properties68.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder65.appendAll((java.lang.Iterable<java.lang.String>) strSet72);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder60.appendln(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder60.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer("h100.0i!1.0\n#4#a4#32.0#4#a4#\n", '4', '$');
        java.lang.Object obj84 = properties1.getOrDefault((java.lang.Object) strBuilder76, (java.lang.Object) strTokenizer83);
        java.lang.String str86 = properties1.getProperty("hi!1.0i!\n#4#a4#\ntrue\n");
        java.util.Collection<java.lang.Object> objCollection87 = properties1.values();
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties1.elements();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "#4a#4#\n0.1!i0.001h" + "'", str63, "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(objCollection87);
        org.junit.Assert.assertNotNull(objEnumeration88);
    }

    @Test
    public void test13338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13338");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!true##a4#false-1.010.01hi!1.0\nalse\n");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        boolean boolean14 = strTokenizer13.isEmptyTokenAsNull();
        int int15 = strTokenizer13.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer13.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getDelimiterMatcher();
        char[] charArray24 = new char[] { '4', '1', 'a', '1', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.appendNewLine();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties29.clear();
        properties29.clear();
        java.util.Set<java.lang.String> strSet33 = properties29.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.appendAll((java.lang.Iterable<java.lang.String>) strSet33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder26.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean43 = strBuilder41.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.appendln((float) 1L);
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher54, strMatcher56);
        boolean boolean58 = strTokenizer57.isEmptyTokenAsNull();
        int int59 = strTokenizer57.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer57.setTrimmerMatcher(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder41.deleteAll(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("hi!\na", strMatcher60);
        int int65 = strBuilder36.lastIndexOf(strMatcher60, (int) (byte) 10);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup66 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor67 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup66);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup68 = strSubstitutor67.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor70 = strSubstitutor67.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strSubstitutor70.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher60, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer17.setTrimmerMatcher(strMatcher71);
        java.lang.String str74 = strTokenizer73.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer73.reset("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer76.getIgnoredMatcher();
        java.lang.String[] strArray78 = strTokenizer76.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder1.appendWithSeparators((java.lang.Object[]) strArray78, "hi!hi!1.0\nfalse\n#4#a4#100");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "41a14");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "41a14");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, 1, a, 1, 4]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 5 + "'", int65 == 5);
        org.junit.Assert.assertNull(wildcardStrLookup68);
        org.junit.Assert.assertNotNull(strSubstitutor70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test13339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13339");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor6.setVariableSuffix("{}");
        boolean boolean9 = strSubstitutor6.isEnableSubstitutionInVariables();
        char char10 = strSubstitutor6.getEscapeChar();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = strSubstitutor6.setVariablePrefix("a");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup13 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup13);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup15 = strSubstitutor14.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor17 = strSubstitutor14.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor14.setVariableSuffix('#');
        java.lang.StringBuffer stringBuffer20 = null;
        java.lang.String str23 = strSubstitutor14.replace(stringBuffer20, (-1), 0);
        java.lang.String str25 = strSubstitutor14.replace("StrTokenizer[not tokenized yet]");
        strSubstitutor14.setEscapeChar('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor29 = strSubstitutor14.setVariableSuffix("hi!1.0\n#4#a4#");
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup30 = strSubstitutor29.getVariableResolver();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher41, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder32.appendln(charArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.trim();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup56 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str58 = strStrLookup56.lookup("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.appendln((java.lang.Object) "{}");
        int int62 = strBuilder55.indexOf("StrTokenizer[not", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean66 = strBuilder64.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder55.appendln(strBuilder64);
        boolean boolean69 = strBuilder55.startsWith("\neslaf\n0.1!ih35.0\nhi!#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder55.replaceAll("e\nhi!1.0\nfalse\n4\n", "hi!1.0\nfalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder55.appendSeparator("#a4#false\n", "hi!true##a4#false-1.010.01hi!1.0\nalse\n");
        boolean boolean78 = strSubstitutor29.replaceIn(strBuilder55, 20, 69);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup79 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor80 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup79);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup81 = strSubstitutor80.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor83 = strSubstitutor80.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup84 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        strSubstitutor80.setVariableResolver(strStrLookup84);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor89 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup84, "hi!1.0\nfalse\n#4#a4#", "tokenized", '$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor90 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup84);
        strSubstitutor29.setVariableResolver(strStrLookup84);
        strSubstitutor12.setVariableResolver(strStrLookup84);
        java.lang.String str94 = strStrLookup84.lookup("hi!\n#4#a4#\n##################################################################################################-1\n13.0\n");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor98 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup84, "hi!\n\nhi!1.0\nfalse\n#4#a4\n", "aaaaaaa52", 'b');
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + char10 + "' != '" + '$' + "'", char10 == '$');
        org.junit.Assert.assertNotNull(strSubstitutor12);
        org.junit.Assert.assertNull(wildcardStrLookup15);
        org.junit.Assert.assertNotNull(strSubstitutor17);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strSubstitutor29);
        org.junit.Assert.assertNull(wildcardStrLookup30);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strStrLookup56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(wildcardStrLookup81);
        org.junit.Assert.assertNotNull(strSubstitutor83);
        org.junit.Assert.assertNotNull(strStrLookup84);
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test13340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13340");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        java.util.List<java.lang.String> strList12 = strTokenizer11.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer11.setQuoteChar('$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setIgnoreEmptyTokens(false);
        int int17 = strTokenizer16.nextIndex();
        java.lang.String str18 = strTokenizer16.next();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
    }

    @Test
    public void test13341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13341");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean6 = strBuilder4.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.append(true);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        boolean boolean21 = strTokenizer20.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder4.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append(false);
        java.lang.Object obj25 = new java.lang.Object();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean29 = strBuilder27.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append(true);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher40, strMatcher42);
        boolean boolean44 = strTokenizer43.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        properties47.clear();
        java.util.Enumeration<?> wildcardEnumeration49 = properties47.propertyNames();
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher58, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getQuoteMatcher();
        boolean boolean63 = properties47.containsValue((java.lang.Object) strMatcher62);
        int int65 = strBuilder27.indexOf(strMatcher62, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        properties68.clear();
        java.util.Set<java.lang.Object> objSet70 = properties68.keySet();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        properties72.clear();
        properties72.clear();
        properties72.clear();
        properties68.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        java.lang.Object[] objArray77 = new java.lang.Object[] { obj25, strBuilder27, strTokenizer66, properties72 };
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder24.appendWithSeparators(objArray77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder1.appendAll(objArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder1.insert(7, (double) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder1.appendln('!');
        java.lang.String str87 = strBuilder85.leftString((int) '!');
        java.lang.CharSequence charSequence90 = strBuilder85.subSequence(8, 17);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertEquals("'" + charSequence90 + "' != '" + "1.0a.lang" + "'", charSequence90, "1.0a.lang");
    }

    @Test
    public void test13342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13342");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('4', 0);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setTrimmerMatcher(strMatcher41);
        java.lang.String str43 = strTokenizer39.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer39.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder48.appendln(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher65, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer46.reset(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.reset();
        java.lang.String str74 = strTokenizer71.previousToken();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test13343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13343");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder24.appendln((double) 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder24.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup48 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor49 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup48);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup50 = strSubstitutor49.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor52 = strSubstitutor49.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strSubstitutor52.getVariableSuffixMatcher();
        int int55 = strBuilder47.indexOf(strMatcher53, 0);
        java.lang.String str56 = strBuilder47.getNullText();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(wildcardStrLookup50);
        org.junit.Assert.assertNotNull(strSubstitutor52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test13344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13344");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteAll("0                                                 ");
        int int13 = strBuilder12.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.deleteFirst('4');
        boolean boolean17 = strBuilder15.contains("java.io.IOException: StrTokenizer[#4#a4#]");
        char[] charArray18 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "hi!1.0\nfa24lse\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "hi!\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "hi!\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[h, i, !, \n, \n]");
    }

    @Test
    public void test13345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13345");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[not tokenized yet]");
        boolean boolean28 = strBuilder25.equals((java.lang.Object) strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!\n100aaaaaaa52.0\n");
        boolean boolean35 = strTokenizer34.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer34.setDelimiterString("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer37.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.appendAll((java.util.Iterator<java.lang.String>) strTokenizer37);
        java.util.stream.IntStream intStream40 = strBuilder39.chars();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append("aaat52.0\n", 2, 96);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
    }

    @Test
    public void test13346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13346");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray29 = strBuilder28.toCharArray();
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher38, strMatcher42);
        java.lang.Object obj44 = properties1.get((java.lang.Object) charArray29);
        java.util.Properties properties45 = new java.util.Properties(properties1);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        properties47.clear();
        properties47.clear();
        int int50 = properties47.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher64, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder55.appendln(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder53.appendln(charArray62);
        java.io.Writer writer72 = strBuilder53.asWriter();
        writer72.flush();
        writer72.write((int) (byte) -1);
        properties47.store(writer72, "hi!1.0\nfalse\n#");
        properties1.store(writer72, "StrTokenizer[not tokenized yet]");
        java.util.Set<java.lang.String> strSet80 = properties1.stringPropertyNames();
        java.util.Properties properties81 = new java.util.Properties(properties1);
        java.io.OutputStream outputStream82 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream82, "hi!\na");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(writer72);
        org.junit.Assert.assertNotNull(strSet80);
    }

    @Test
    public void test13347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13347");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean15 = strBuilder13.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendln((float) 1L);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        int int31 = strTokenizer29.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer29.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder13.deleteAll(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder11.appendln(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendln("{StrTokenizer[not=0                                                 }", 0, 17);
        int int46 = strBuilder40.indexOf("#a4#false\n");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup47 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor48 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup47);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup49 = strSubstitutor48.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor51 = strSubstitutor48.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor54 = strSubstitutor51.setVariableSuffixMatcher(strMatcher53);
        int int56 = strBuilder40.lastIndexOf(strMatcher53, 21);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher70, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder61.appendln(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder59.appendln(charArray68);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder59.replace(strMatcher78, "hi!", (int) (short) 10, (int) 'a', (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder59.append(true);
        int int88 = strBuilder85.lastIndexOf('1', 7);
        char[] charArray91 = strBuilder85.toCharArray((int) (byte) 1, (int) (short) 100);
        int int93 = strMatcher53.isMatch(charArray91, 105);
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("#-1");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray91, strMatcher95);
        java.lang.Object obj97 = strTokenizer96.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str98 = strTokenizer96.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(wildcardStrLookup49);
        org.junit.Assert.assertNotNull(strSubstitutor51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strSubstitutor54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "i!\n#4#a4#\ntrue");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "i!\n#4#a4#\ntrue");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[i, !, \n, #, 4, #, a, 4, #, \n, t, r, u, e]");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test13348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13348");
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup0 = org.apache.commons.lang3.text.StrLookup.noneLookup();
        org.junit.Assert.assertNotNull(wildcardStrLookup0);
    }

    @Test
    public void test13349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13349");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        java.lang.StringBuffer stringBuffer7 = null;
        java.lang.String str10 = strSubstitutor1.replace(stringBuffer7, (-1), 0);
        boolean boolean11 = strSubstitutor1.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor13 = strSubstitutor1.setVariableSuffix("a4#falsehi!1.0\nfalse\n#4");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup14 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor15 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup14);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup16 = strSubstitutor15.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor18 = strSubstitutor15.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strSubstitutor18.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean23 = strBuilder21.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendln((float) 1L);
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher34, strMatcher36);
        java.util.List<java.lang.String> strList38 = strTokenizer37.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder21.appendAll((java.lang.Iterable<java.lang.String>) strList38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray43 = strBuilder42.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.reverse();
        int int46 = strBuilder42.indexOf('#');
        java.lang.StringBuffer stringBuffer47 = strBuilder42.toStringBuffer();
        boolean boolean48 = strSubstitutor18.replaceIn(stringBuffer47);
        java.lang.String str49 = strSubstitutor1.replace(stringBuffer47);
        boolean boolean50 = strSubstitutor1.isEnableSubstitutionInVariables();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strSubstitutor13);
        org.junit.Assert.assertNull(wildcardStrLookup16);
        org.junit.Assert.assertNotNull(strSubstitutor18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(stringBuffer47);
        org.junit.Assert.assertEquals(stringBuffer47.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "#4a#4#\n0.1!i0.001h" + "'", str49, "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test13350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13350");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean10 = strBuilder8.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.append(true);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher21, strMatcher23);
        boolean boolean25 = strTokenizer24.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder8.appendAll((java.util.Iterator<java.lang.String>) strTokenizer24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt((int) (byte) 1);
        java.lang.String str31 = strSubstitutor6.replace(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher42, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean56 = strSubstitutor6.replaceIn(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln("java.io.IOException: StrTokenizer[#4#a4#]", 0, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.replaceAll("", "100.0i!1.0\n#4#a4#hi!1.0\nfalse\n#48");
        boolean boolean65 = strBuilder63.startsWith("\n01#4a#4#\n0.1!ih2");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder63.append("h100.0i!1.0\n#4#4#\n\nfalse\n", 222, 66);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "h!true#4#a4#false" + "'", str31, "h!true#4#a4#false");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test13351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13351");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('4', 0);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setTrimmerMatcher(strMatcher41);
        java.lang.String str43 = strTokenizer39.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder27.replaceFirst("{}", "java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.setNullText("1.0\nalse\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.reverse();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test13352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13352");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        int int27 = strBuilder22.lastIndexOf("#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#", (int) (byte) 0);
        boolean boolean29 = strBuilder22.contains("{StrTokenizer[not=0                                                 }");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder22.appendln('0');
        char char33 = strBuilder22.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean37 = strBuilder35.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator('#', (int) (short) 1);
        int int47 = strBuilder44.lastIndexOf('4', 10);
        char[] charArray54 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, "");
        java.lang.Object[] objArray57 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder44.appendAll(objArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder44.appendSeparator('4', (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder22.appendln(strBuilder44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!\nfalse", '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setQuoteChar('4');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup68 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor69 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup68);
        strSubstitutor69.setEnableSubstitutionInVariables(false);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor73 = strSubstitutor69.setVariableSuffix("");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strSubstitutor73.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup75 = strSubstitutor73.getVariableResolver();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strSubstitutor73.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer67.setDelimiterMatcher(strMatcher76);
        int int78 = strBuilder22.indexOf(strMatcher76);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + char33 + "' != '" + 'h' + "'", char33 == 'h');
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strSubstitutor73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNull(wildcardStrLookup75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
    }

    @Test
    public void test13353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13353");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder24.appendln((double) 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder24.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteAll("hi!\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.insert(0, 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.deleteFirst("hi!\n3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.setLength(122);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test13354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13354");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        java.lang.String str12 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strBuilder11);
        boolean boolean14 = strBuilder11.startsWith("hi!1.0\nfalse\n4");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup15 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup15);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup17 = strSubstitutor16.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor16.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = strSubstitutor16.setVariableSuffix('#');
        java.lang.StringBuffer stringBuffer22 = null;
        java.lang.String str25 = strSubstitutor16.replace(stringBuffer22, (-1), 0);
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher34, strMatcher36);
        java.util.List<java.lang.String> strList38 = strTokenizer37.getTokenList();
        java.lang.String str39 = strSubstitutor16.replace((java.lang.Object) strTokenizer37);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup40 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup40);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup42 = strSubstitutor41.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor44 = strSubstitutor41.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer45 = null;
        boolean boolean46 = strSubstitutor41.replaceIn(stringBuffer45);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor48 = strSubstitutor41.setVariableSuffix('4');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup49 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str51 = strStrLookup49.lookup("{}");
        strSubstitutor41.setVariableResolver(strStrLookup49);
        strSubstitutor16.setVariableResolver(strStrLookup49);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher63, strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor70 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup49, strMatcher54, strMatcher68, '1');
        boolean boolean71 = strBuilder11.equals((java.lang.Object) strStrLookup49);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder11.append((double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.append((long) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst('t', 'i');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!\na" + "'", str12, "hi!\na");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardStrLookup17);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertNotNull(strSubstitutor21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str39, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNull(wildcardStrLookup42);
        org.junit.Assert.assertNotNull(strSubstitutor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strSubstitutor48);
        org.junit.Assert.assertNotNull(strStrLookup49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test13355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13355");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) 'i');
        int int4 = strBuilder1.indexOf('i', 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.ensureCapacity(43);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator("hi!1.0\n#4#a4#", 0);
        boolean boolean10 = strBuilder6.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.appendNull();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test13356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13356");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.ensureCapacity((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendSeparator(' ');
        java.lang.Iterable<java.lang.String> strIterable24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendWithSeparators(strIterable24, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi!\n3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.replaceAll(strMatcher28, "\n0.1!i0.001h$$$$$hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder21.deleteAll("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test13357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13357");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray29 = strBuilder28.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean34 = strBuilder32.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendln((float) 1L);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        java.util.List<java.lang.String> strList49 = strTokenizer48.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder32.appendAll((java.lang.Iterable<java.lang.String>) strList49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray54 = strBuilder53.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder30.append(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.insert(5, (long) (byte) 1);
        boolean boolean60 = properties1.containsValue((java.lang.Object) 5);
        java.lang.String str62 = properties1.getProperty("");
        java.util.Collection<java.lang.Object> objCollection63 = properties1.values();
        java.io.InputStream inputStream64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(inputStream64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(objCollection63);
    }

    @Test
    public void test13358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13358");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        properties23.clear();
        properties23.clear();
        properties23.clear();
        boolean boolean27 = strBuilder19.equals((java.lang.Object) properties23);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties23.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties23.entrySet();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("[]");
        boolean boolean34 = properties23.equals((java.lang.Object) strTokenizer31);
        boolean boolean35 = properties23.isEmpty();
        java.util.Collection<java.lang.Object> objCollection36 = properties23.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objCollection36);
    }

    @Test
    public void test13359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13359");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix('a');
        strSubstitutor1.setEnableSubstitutionInVariables(true);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor1.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor8.setVariablePrefix("hi!#4#a4#\na032.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean14 = strBuilder12.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((float) 1L);
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher25, strMatcher27);
        java.util.List<java.lang.String> strList29 = strTokenizer28.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder12.appendAll((java.lang.Iterable<java.lang.String>) strList29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator('4', 0);
        java.io.Reader reader39 = strBuilder35.asReader();
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher48, strMatcher50);
        boolean boolean52 = strTokenizer51.isEmptyTokenAsNull();
        int int53 = strTokenizer51.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer51.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean59 = strBuilder57.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendSeparator('#', (int) (short) 1);
        int int69 = strBuilder66.lastIndexOf('4', 10);
        char[] charArray70 = strBuilder66.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer55.reset(charArray70);
        int int74 = reader39.read(charArray70, 7, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, "i!\n#4#a4#\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, 'a', '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer79.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor81 = strSubstitutor8.setVariablePrefixMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor83 = strSubstitutor81.setVariablePrefix('#');
        strSubstitutor81.setEnableSubstitutionInVariables(false);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor87 = strSubstitutor81.setVariableSuffix("java.io.IOException: h!true#4#a4#falseh!1.0\nfalse\n#4#4#a4#\neslaf\n0.1!ih35.0\n\n");
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, #]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strSubstitutor81);
        org.junit.Assert.assertNotNull(strSubstitutor83);
        org.junit.Assert.assertNotNull(strSubstitutor87);
    }

    @Test
    public void test13360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13360");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray28);
        int int37 = strBuilder21.indexOf(strMatcher35, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder21.append((float) (short) -1);
        int int41 = strBuilder21.indexOf("StrTokenizer[not tokenized yet]");
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher50, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean59 = strBuilder57.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendln((float) 1L);
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher70, strMatcher72);
        java.util.List<java.lang.String> strList74 = strTokenizer73.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder57.appendAll((java.lang.Iterable<java.lang.String>) strList74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.String str79 = strBuilder78.getNullText();
        char[] charArray86 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, strMatcher88, strMatcher90);
        int int92 = strBuilder78.lastIndexOf(strMatcher88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer53.setQuoteMatcher(strMatcher88);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder21.deleteAll(strMatcher88);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder94.append((float) 1L);
        int int97 = strBuilder96.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder96.append('b');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 7 + "'", int37 == 7);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 7 + "'", int92 == 7);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 35 + "'", int97 == 35);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test13361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13361");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean24 = strBuilder22.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendln((float) 1L);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        java.util.List<java.lang.String> strList39 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray44 = strBuilder43.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer20.reset(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, '$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean53 = strBuilder51.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendln((float) 1L);
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher64, strMatcher66);
        java.util.List<java.lang.String> strList68 = strTokenizer67.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder51.appendAll((java.lang.Iterable<java.lang.String>) strList68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray73 = strBuilder72.toCharArray();
        char[] charArray80 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, strMatcher82, strMatcher84);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher82, strMatcher86);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup88 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor89 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup88);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup90 = strSubstitutor89.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor92 = strSubstitutor89.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer93 = null;
        boolean boolean94 = strSubstitutor89.replaceIn(stringBuffer93);
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strSubstitutor89.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher86, strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = strTokenizer97.reset();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNull(wildcardStrLookup90);
        org.junit.Assert.assertNotNull(strSubstitutor92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertNotNull(strTokenizer97);
        org.junit.Assert.assertNotNull(strTokenizer98);
    }

    @Test
    public void test13362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13362");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strSubstitutor4.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor7 = strSubstitutor4.setVariableSuffix("hi!1.0\nalse\n");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor4.setVariableSuffix("hi!#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder11.appendln(charArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendSeparator('a', 10);
        java.util.Properties properties30 = new java.util.Properties();
        boolean boolean31 = strBuilder26.equals((java.lang.Object) properties30);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher40, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher55, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder46.appendln(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean69 = properties30.remove((java.lang.Object) charArray38, (java.lang.Object) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder64.replaceAll('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder64.append("hi!\na");
        java.lang.String str75 = strBuilder64.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder64.setLength(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln((long) 82);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.appendln(false);
        boolean boolean82 = strSubstitutor9.replaceIn(strBuilder81);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendNewLine();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strSubstitutor7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test13363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13363");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.trim();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup25 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str27 = strStrLookup25.lookup("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln((java.lang.Object) "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNullText("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strBuilder30.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.replaceFirst("[]", "i!\n#");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strStrLookup25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test13364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13364");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!100\n97\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test13365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13365");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet3 = properties1.keySet();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties5.clear();
        properties5.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties1.values();
        int int11 = properties1.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        properties13.clear();
        properties13.clear();
        java.util.Set<java.lang.String> strSet17 = properties13.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean21 = strBuilder19.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendln((float) 1L);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        java.util.List<java.lang.String> strList36 = strTokenizer35.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder19.appendAll((java.lang.Iterable<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray41 = strBuilder40.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean46 = strBuilder44.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendln((float) 1L);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        java.util.List<java.lang.String> strList61 = strTokenizer60.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder44.appendAll((java.lang.Iterable<java.lang.String>) strList61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray66 = strBuilder65.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder42.append(strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.insert(5, (long) (byte) 1);
        boolean boolean72 = properties13.containsValue((java.lang.Object) 5);
        java.lang.String str74 = properties13.getProperty("i!");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test13366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13366");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.replaceFirst('#', '4');
        char[] charArray39 = strBuilder32.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        java.util.List<java.lang.String> strList44 = strTokenizer43.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder22.appendAll((java.lang.Iterable<java.lang.String>) strList44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test13367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13367");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[#4#");
        java.lang.Object obj2 = strTokenizer1.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer1.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("h100.0i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.setIgnoredMatcher(strMatcher5);
        java.lang.String str7 = strTokenizer1.nextToken();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[#4#" + "'", str7, "StrTokenizer[#4#");
    }

    @Test
    public void test13368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13368");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!#4#a4#\na\n", '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln(false);
        int int13 = strBuilder12.length();
        int int16 = strBuilder12.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.replaceAll('4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("", "");
        java.lang.String str25 = strTokenizer24.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer24.getQuoteMatcher();
        int int28 = strBuilder21.lastIndexOf(strMatcher26, 0);
        char[] charArray32 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean36 = strBuilder34.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.append(true);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher47, strMatcher49);
        boolean boolean51 = strTokenizer50.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder34.appendAll((java.util.Iterator<java.lang.String>) strTokenizer50);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher61, strMatcher63);
        boolean boolean65 = strBuilder34.contains(strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not", strMatcher26, strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokeniz");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("[StrTokenizer[#4#a4#]]", strMatcher61, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer2.setTrimmerMatcher(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 13 + "'", int13 == 13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
    }

    @Test
    public void test13369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13369");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        int int6 = properties1.size();
        java.lang.Object obj7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = properties1.containsValue(obj7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test13370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13370");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]0\n", "java.io.IOException: 044444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");
        java.lang.String[] strArray3 = strTokenizer2.getTokenArray();
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test13371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13371");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj1 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean5 = strBuilder3.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(false);
        int int10 = strBuilder9.length();
        int int13 = strBuilder9.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.deleteCharAt(7);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        properties17.clear();
        java.lang.String str19 = properties17.toString();
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher41, strMatcher43);
        char[] charArray51 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, "");
        boolean boolean54 = properties17.replace((java.lang.Object) strMatcher32, (java.lang.Object) charArray39, (java.lang.Object) charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.appendln((double) '4');
        char[] charArray71 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher73, strMatcher75);
        boolean boolean77 = strTokenizer76.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList78 = strTokenizer76.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer76.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer80.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder57.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer82, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer85 = strBuilder57.asWriter();
        writer85.write((int) ' ');
        boolean boolean88 = properties17.remove((java.lang.Object) "hi!1.0\nfalse\n#", (java.lang.Object) writer85);
        boolean boolean89 = properties0.remove((java.lang.Object) strBuilder15, (java.lang.Object) boolean88);
        java.io.Writer writer90 = strBuilder15.asWriter();
        boolean boolean92 = strBuilder15.endsWith("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder15.appendSeparator('$', ' ');
        boolean boolean97 = strBuilder95.contains('e');
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertEquals(obj1.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj1), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj1), "{}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 13 + "'", int10 == 13);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{}" + "'", str19, "{}");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(writer85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(writer90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test13372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13372");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.replaceFirst('#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup17 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor18 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup17);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup19 = strSubstitutor18.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = strSubstitutor18.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup22 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str24 = strStrLookup22.lookup("{}");
        strSubstitutor18.setVariableResolver(strStrLookup22);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup22, strMatcher26, strMatcher39, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer15.setDelimiterMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder7.deleteAll(strMatcher39);
        int int44 = strBuilder7.capacity();
        char[] charArray47 = strBuilder7.toCharArray(1, (int) 'h');
        int int49 = strBuilder7.lastIndexOf('1');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence52 = strBuilder7.subSequence(20, 63);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 63");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNull(wildcardStrLookup19);
        org.junit.Assert.assertNotNull(strSubstitutor21);
        org.junit.Assert.assertNotNull(strStrLookup22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 35 + "'", int44 == 35);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), ".0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), ".0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test13373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13373");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        char char5 = strSubstitutor1.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.setNullText("hi!\na");
        java.lang.String str22 = strSubstitutor1.replace(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNewLine();
        java.util.stream.IntStream intStream26 = strBuilder25.chars();
        boolean boolean27 = strBuilder21.equals((java.lang.Object) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean31 = strBuilder29.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.replaceFirst('#', '4');
        char[] charArray42 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder25.append(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendSeparator('t');
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + '$' + "'", char5 == '$');
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str22, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test13374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13374");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup5 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str7 = strStrLookup5.lookup("{}");
        strSubstitutor1.setVariableResolver(strStrLookup5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup5, "StrTokenizer[#4#a4#]", "java.io.IOException: java.io.IOException: java.io.IOException: ", '1');
        java.lang.String str14 = strStrLookup5.lookup("h100.0i!h.0\n#4#a4#");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor15 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup5);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strStrLookup5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test13375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13375");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        char[] charArray8 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.append(true);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        boolean boolean27 = strTokenizer26.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        boolean boolean41 = strBuilder10.contains(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher37);
        boolean boolean43 = properties1.equals((java.lang.Object) strMatcher37);
        int int44 = properties1.size();
        java.util.Set<java.lang.String> strSet45 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean49 = strBuilder47.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.replaceFirst('#', '4');
        char[] charArray60 = strBuilder53.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ', '4');
        boolean boolean64 = properties1.equals((java.lang.Object) '4');
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties1.entrySet();
        java.util.Collection<java.lang.Object> objCollection66 = properties1.values();
        java.lang.String str69 = properties1.getProperty("hi!1.0\nalse\n#4#a4#", "Obj");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Obj" + "'", str69, "Obj");
    }

    @Test
    public void test13376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13376");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        boolean boolean16 = strTokenizer15.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setQuoteChar('#');
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        java.lang.Object obj35 = properties1.put((java.lang.Object) '#', (java.lang.Object) strTokenizer31);
        boolean boolean36 = properties1.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean40 = strBuilder38.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.appendln((float) 1L);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher51, strMatcher53);
        java.util.List<java.lang.String> strList55 = strTokenizer54.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder38.appendAll((java.lang.Iterable<java.lang.String>) strList55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray60 = strBuilder59.toCharArray();
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher69, strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher69, strMatcher73);
        boolean boolean75 = properties1.containsKey((java.lang.Object) strMatcher73);
        java.lang.Object obj76 = properties1.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder78.appendNewLine();
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        properties81.clear();
        properties81.clear();
        properties81.clear();
        java.util.Set<java.lang.String> strSet85 = properties81.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder78.appendAll((java.lang.Iterable<java.lang.String>) strSet85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder78.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.append(' ');
        java.lang.Object obj91 = properties1.get((java.lang.Object) ' ');
        int int92 = properties1.size();
        boolean boolean93 = properties1.isEmpty();
        properties1.clear();
        java.lang.String str96 = properties1.getProperty("hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "{#=StrTokenizer[not tokenized yet]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "{#=StrTokenizer[not tokenized yet]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "{#=StrTokenizer[not tokenized yet]}");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strSet85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test13377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13377");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.replaceAll('#', '#');
        int int65 = strBuilder54.indexOf("#4a#4#\n0.1!i0.001h", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder54.appendln(true);
        int int69 = strBuilder54.lastIndexOf('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder54.append((double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder54.insert(27, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder54.append((double) 138);
        java.lang.String str77 = strBuilder76.getNullText();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 63 + "'", int69 == 63);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test13378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13378");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix('a');
        strSubstitutor4.setEscapeChar('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.appendNewLine();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        properties11.clear();
        properties11.clear();
        properties11.clear();
        java.util.Set<java.lang.String> strSet15 = properties11.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.appendAll((java.lang.Iterable<java.lang.String>) strSet15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder8.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceAll("hi!#4#a4#\na100                                                 ", "#4a#4#\n0.1!i0.001h");
        java.lang.String str24 = strSubstitutor4.replace(strBuilder18, (int) (byte) 0, 0);
        boolean boolean25 = strSubstitutor4.isEnableSubstitutionInVariables();
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test13379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13379");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!\na ");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.appendln(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray10);
        // The following exception was thrown during execution in test generation
        try {
            int int25 = strMatcher1.isMatch(charArray10, 101);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher23);
    }

    @Test
    public void test13380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13380");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not", '1', '4');
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not" + "'", str4, "StrTokenizer[not");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
    }

    @Test
    public void test13381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13381");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.String str23 = strBuilder22.getNullText();
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        int int36 = strBuilder22.lastIndexOf(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.appendNewLine();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        properties47.clear();
        properties47.clear();
        properties47.clear();
        java.util.Set<java.lang.String> strSet51 = properties47.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.appendAll((java.lang.Iterable<java.lang.String>) strSet51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.insert(1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder41.insert((int) ' ', (java.lang.Object) true);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder41.appendFixedWidthPadLeft((int) '#', (int) 't', 'a');
        char[] charArray61 = strBuilder60.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder22.append(charArray61, (int) 't', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendSeparator("java.io.IOException");
        int int68 = strBuilder66.lastIndexOf("hi!\n100aaaaaaa52.0\n");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 7 + "'", int36 == 7);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "StrTokenizer[not tokenized yet]0true\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "StrTokenizer[not tokenized yet]0true\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[S, t, r, T, o, k, e, n, i, z, e, r, [, n, o, t,  , t, o, k, e, n, i, z, e, d,  , y, e, t, ], 0, t, r, u, e, \n, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, 3, 5]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test13382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13382");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        java.lang.String str61 = properties20.getProperty("#4a#4#\n0.1!i0.001h");
        java.util.Properties properties62 = new java.util.Properties(properties20);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties20.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties20.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties20.keys();
        java.util.Properties properties66 = new java.util.Properties(properties20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer68.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer68.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setEmptyTokenAsNull(true);
        boolean boolean74 = properties66.equals((java.lang.Object) strTokenizer73);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties66.elements();
        java.io.OutputStream outputStream76 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties66.save(outputStream76, "01.0\n#4#a4#$");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
    }

    @Test
    public void test13383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13383");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder1.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator('4', (int) (byte) 0);
        java.io.Reader reader17 = strBuilder16.asReader();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
    }

    @Test
    public void test13384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13384");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        int int14 = strBuilder11.indexOf(' ', (int) (byte) 1);
        int int17 = strBuilder11.lastIndexOf('a', 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean22 = strBuilder20.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(false);
        int int27 = strBuilder26.length();
        int int30 = strBuilder26.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean36 = strBuilder34.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((float) 1L);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher47, strMatcher49);
        java.util.List<java.lang.String> strList51 = strTokenizer50.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder34.appendAll((java.lang.Iterable<java.lang.String>) strList51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray56 = strBuilder55.toCharArray();
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher65, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher65, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a', 'a');
        char[] charArray74 = strBuilder32.getChars(charArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder11.insert(0, charArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder11.deleteAll("hi!\na1");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.appendPadding((int) (short) 100, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.append("StrToken");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 13 + "'", int27 == 13);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "hi!1.0\nalse\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "hi!1.0\nalse\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[h, i, !, 1, ., 0, \n, a, l, s, e, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "hi!1.0\nalse\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "hi!1.0\nalse\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[h, i, !, 1, ., 0, \n, a, l, s, e, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test13385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13385");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        char[] charArray20 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "");
        java.lang.Object[] objArray23 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendAll(objArray23);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder10.replaceFirst(strMatcher38, "StrTokenizer[not tokenized yet]");
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher49, strMatcher51);
        java.util.List<java.lang.String> strList53 = strTokenizer52.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.appendAll((java.lang.Iterable<java.lang.String>) strList53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln((float) 17);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendln((long) 62);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendFixedWidthPadLeft(89, 4, '0');
        java.lang.String str65 = strBuilder64.getNullText();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test13386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13386");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        int int14 = strBuilder13.length();
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        java.util.List<java.lang.String> strList27 = strTokenizer26.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.appendAll((java.lang.Iterable<java.lang.String>) strList27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean32 = strBuilder30.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(true);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        boolean boolean47 = strTokenizer46.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder28.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean53 = strBuilder51.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln(false);
        boolean boolean59 = strBuilder57.contains(' ');
        java.lang.Object obj60 = properties1.put((java.lang.Object) strBuilder28, (java.lang.Object) strBuilder57);
        java.lang.String str61 = strBuilder57.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendln("#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        int int65 = strBuilder57.indexOf('h');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        int int68 = strBuilder57.lastIndexOf(strMatcher66, 79);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean72 = strBuilder70.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder76.replaceFirst('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder82.append("StrTokenizer[#4#a4#]", (int) (byte) 0, 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder82.appendPadding(1, '$');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder57.append((java.lang.CharSequence) strBuilder82, 104, 84);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 13 + "'", int14 == 13);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test13387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13387");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", "#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setDelimiterString("java.io.IOException: java.io.IOException: ");
        int int13 = strTokenizer12.previousIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean17 = strBuilder15.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln(false);
        int int22 = strBuilder21.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((float) 1L);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        java.util.List<java.lang.String> strList43 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.lang.Iterable<java.lang.String>) strList43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray48 = strBuilder47.toCharArray();
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher57, strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray71 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher73, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray71);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder64.appendln(charArray71);
        int int81 = strMatcher61.isMatch(charArray71, (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer24.reset(charArray71);
        boolean boolean83 = properties1.replace((java.lang.Object) strTokenizer12, (java.lang.Object) strBuilder23, (java.lang.Object) strTokenizer24);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer12.setIgnoredMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer12.setDelimiterString("java.io.IOException: h100.0i!1.0\n#4#a4#19\n");
        java.lang.String str88 = strTokenizer87.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer87.setIgnoredChar(' ');
        boolean boolean91 = strTokenizer90.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 13 + "'", int22 == 13);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "#4#a4#" + "'", str88, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test13388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13388");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean6 = strBuilder4.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.appendln((float) 1L);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder4.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.ensureCapacity((int) '4');
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendln(stringBuffer25, (int) (byte) 0, 3);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray36);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher52, strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher43, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder22.appendAll((java.util.Iterator<java.lang.String>) strTokenizer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceAll(' ', '#');
        char[] charArray67 = strBuilder63.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray67);
        char[] charArray69 = strBuilder60.getChars(charArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder60.deleteAll('a');
        char[] charArray79 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, strMatcher81, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray79);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException: java.io.IOException: ", strMatcher86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder71.replaceAll(strMatcher86, "hi!1.0\nfalse\n##4a#4#\n0.1!i0.001h#4a#4#\n0.1!i0.001h\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer2.setDelimiterMatcher(strMatcher86);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strTokenizer90);
    }

    @Test
    public void test13389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13389");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        char[] charArray8 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.append(true);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        boolean boolean27 = strTokenizer26.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        boolean boolean41 = strBuilder10.contains(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher37);
        boolean boolean43 = properties1.equals((java.lang.Object) strMatcher37);
        int int44 = properties1.size();
        java.util.Set<java.lang.String> strSet45 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean49 = strBuilder47.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.replaceFirst('#', '4');
        char[] charArray60 = strBuilder53.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ', '4');
        boolean boolean64 = properties1.equals((java.lang.Object) '4');
        java.util.Enumeration<?> wildcardEnumeration65 = properties1.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties1.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray75 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher77, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray75);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray75);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder68.appendln(charArray75);
        java.io.Reader reader84 = strBuilder68.asReader();
        reader84.reset();
        boolean boolean86 = reader84.markSupported();
        reader84.reset();
        int int88 = reader84.read();
        long long90 = reader84.skip((long) ' ');
        reader84.close();
        int int92 = reader84.read();
        reader84.close();
        properties1.load(reader84);
        properties1.clear();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(reader84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 104 + "'", int88 == 104);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 9L + "'", long90 == 9L);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test13390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13390");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, '#', '.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setEmptyTokenAsNull(true);
        java.lang.Class<?> wildcardClass6 = strTokenizer5.getClass();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test13391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13391");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor1.setVariableSuffix('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.appendln("StrTokenizer[#4#a4#]");
        java.lang.String str19 = strSubstitutor8.replace(strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendln("{StrTokenizer[hi!]=StrTokenizer[]}");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.insert(0, 10.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.appendln('\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.setCharAt(27, '#');
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!1.0\nStrTokenizer[#4#a4#]\n" + "'", str19, "hi!1.0\nStrTokenizer[#4#a4#]\n");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test13392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13392");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[not tokenized yet]");
        boolean boolean28 = strBuilder25.equals((java.lang.Object) strMatcher27);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        properties30.clear();
        properties30.clear();
        java.util.Properties properties34 = new java.util.Properties(properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties30.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder25.appendFixedWidthPadLeft((java.lang.Object) properties30, 97, 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder25.setNullText("");
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        properties42.clear();
        properties42.clear();
        properties42.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean49 = strBuilder47.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.append(true);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher60, strMatcher62);
        boolean boolean64 = strTokenizer63.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher74, strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer77.setTrimmerMatcher(strMatcher79);
        int int82 = strBuilder65.lastIndexOf(strMatcher79, (int) (byte) 10);
        boolean boolean83 = properties42.containsValue((java.lang.Object) strBuilder65);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet84 = properties42.entrySet();
        int int85 = properties42.size();
        java.util.Collection<java.lang.Object> objCollection86 = properties42.values();
        java.util.Set<java.lang.String> strSet87 = properties42.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder40.appendAll((java.lang.Iterable<java.lang.String>) strSet87);
        java.io.Writer writer89 = strBuilder88.asWriter();
        writer89.write("$");
        writer89.flush();
        java.io.Writer writer94 = writer89.append('a');
        writer89.close();
        writer89.close();
        writer89.write(10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objEntrySet84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(objCollection86);
        org.junit.Assert.assertNotNull(strSet87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(writer89);
        org.junit.Assert.assertNotNull(writer94);
    }

    @Test
    public void test13393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13393");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.append((long) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean27 = strBuilder25.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendln((float) 1L);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        java.util.List<java.lang.String> strList42 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder25.appendAll((java.lang.Iterable<java.lang.String>) strList42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.String str47 = strBuilder46.getNullText();
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher56, strMatcher58);
        int int60 = strBuilder46.lastIndexOf(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder46.insert(7, (long) (byte) 0);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup64 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor65 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strSubstitutor65.getVariablePrefixMatcher();
        boolean boolean67 = strBuilder46.contains(strMatcher66);
        boolean boolean68 = strBuilder23.contains(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder23.setLength(0);
        java.lang.StringBuffer stringBuffer71 = strBuilder23.toStringBuffer();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 7 + "'", int60 == 7);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(stringBuffer71);
        org.junit.Assert.assertEquals(stringBuffer71.toString(), "");
    }

    @Test
    public void test13394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13394");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties0.entrySet();
        java.util.Enumeration<?> wildcardEnumeration4 = properties0.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        int int6 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean10 = strBuilder8.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln((float) 1L);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher21, strMatcher23);
        java.util.List<java.lang.String> strList25 = strTokenizer24.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder8.appendAll((java.lang.Iterable<java.lang.String>) strList25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray30 = strBuilder29.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.reverse();
        int int33 = strBuilder29.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean37 = strBuilder35.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append(true);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher48, strMatcher50);
        boolean boolean52 = strTokenizer51.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder35.appendAll((java.util.Iterator<java.lang.String>) strTokenizer51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        properties55.clear();
        java.util.Enumeration<?> wildcardEnumeration57 = properties55.propertyNames();
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher66, strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getQuoteMatcher();
        boolean boolean71 = properties55.containsValue((java.lang.Object) strMatcher70);
        int int73 = strBuilder35.indexOf(strMatcher70, (int) (byte) 1);
        boolean boolean74 = strBuilder29.contains(strMatcher70);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup75 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor76 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup75);
        strSubstitutor76.setEnableSubstitutionInVariables(false);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor80 = strSubstitutor76.setVariableSuffix("");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strSubstitutor80.getVariableSuffixMatcher();
        int int82 = strBuilder29.indexOf(strMatcher81);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder29.appendSeparator('a', 63);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder29.appendln('4');
        boolean boolean88 = properties0.containsValue((java.lang.Object) strBuilder29);
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNotNull(wildcardEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(wildcardEnumeration57);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strSubstitutor80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test13395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13395");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        char char5 = strSubstitutor4.getEscapeChar();
        char[] charArray6 = null;
        java.lang.String str9 = strSubstitutor4.replace(charArray6, 1, 16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor4.setVariableSuffix('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean15 = strBuilder13.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', (int) (short) 1);
        int int25 = strBuilder22.lastIndexOf('4', 10);
        char[] charArray26 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.insert((int) (short) 10, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean33 = strBuilder31.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln(false);
        int int38 = strBuilder37.length();
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher47, strMatcher49);
        java.util.List<java.lang.String> strList51 = strTokenizer50.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder37.appendAll((java.lang.Iterable<java.lang.String>) strList51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder29.appendAll((java.lang.Iterable<java.lang.String>) strList51);
        boolean boolean56 = strSubstitutor4.replaceIn(strBuilder29, 30, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder29.appendFixedWidthPadLeft(30, 100, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.setLength(14);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.deleteAll("h100.0i!1.0\n#4#a4#\n\nfalse\nhi!1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendln(76);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + '$' + "'", char5 == '$');
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, #]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 13 + "'", int38 == 13);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test13396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13396");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean6 = strBuilder4.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.append(true);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        boolean boolean21 = strTokenizer20.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder4.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray31);
        int int40 = strBuilder24.indexOf(strMatcher38, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder24.append((float) (short) -1);
        int int44 = strBuilder24.indexOf("StrTokenizer[not tokenized yet]");
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean62 = strBuilder60.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln((float) 1L);
        char[] charArray71 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher73, strMatcher75);
        java.util.List<java.lang.String> strList77 = strTokenizer76.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder60.appendAll((java.lang.Iterable<java.lang.String>) strList77);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.String str82 = strBuilder81.getNullText();
        char[] charArray89 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray89, strMatcher91, strMatcher93);
        int int95 = strBuilder81.lastIndexOf(strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer56.setQuoteMatcher(strMatcher91);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder24.deleteAll(strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = strTokenizer2.setIgnoredMatcher(strMatcher91);
        java.lang.String[] strArray99 = strTokenizer98.getTokenArray();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7 + "'", int40 == 7);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 7 + "'", int95 == 7);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strTokenizer98);
        org.junit.Assert.assertNotNull(strArray99);
    }

    @Test
    public void test13397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13397");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.String str23 = strBuilder22.getNullText();
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        int int36 = strBuilder22.lastIndexOf(strMatcher32);
        int int38 = strBuilder22.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder22.setCharAt(9, '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append(46);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator(' ', '4');
        java.lang.String str48 = strBuilder46.rightString(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendFixedWidthPadRight(49, (int) ' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.append((double) 50);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 7 + "'", int36 == 7);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 16 + "'", int38 == 16);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "#a4#46 " + "'", str48, "#a4#46 ");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test13398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13398");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray10);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher17, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer2.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setTrimmerMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setQuoteChar('h');
        int int38 = strTokenizer35.size();
        java.lang.String str39 = strTokenizer35.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer35.setIgnoredChar('E');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup42 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor43 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup42);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup44 = strSubstitutor43.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor46 = strSubstitutor43.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer47 = null;
        boolean boolean48 = strSubstitutor43.replaceIn(stringBuffer47);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strSubstitutor43.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor51 = strSubstitutor43.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor53 = strSubstitutor43.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean57 = strBuilder55.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.replaceFirst('#', '4');
        char[] charArray68 = strBuilder61.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ', '4');
        java.lang.String str72 = strSubstitutor43.replace(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer41.reset(charArray68);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNull(wildcardStrLookup44);
        org.junit.Assert.assertNotNull(strSubstitutor46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strSubstitutor51);
        org.junit.Assert.assertNotNull(strSubstitutor53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!1.0\nfalse\n4" + "'", str72, "hi!1.0\nfalse\n4");
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
    }

    @Test
    public void test13399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13399");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.replaceAll('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean66 = strBuilder64.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendln((float) 1L);
        char[] charArray75 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher77, strMatcher79);
        java.util.List<java.lang.String> strList81 = strTokenizer80.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder64.appendAll((java.lang.Iterable<java.lang.String>) strList81);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray86 = strBuilder85.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.reverse();
        int int89 = strBuilder85.indexOf('#');
        java.lang.StringBuffer stringBuffer90 = strBuilder85.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder62.appendln(stringBuffer90);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder62.setNewLineText("i!true4a40\n");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(stringBuffer90);
        org.junit.Assert.assertEquals(stringBuffer90.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test13400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13400");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder2.replace(strMatcher21, "hi!", (int) (short) 10, (int) 'a', (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendFixedWidthPadLeft((int) (short) -1, (int) (byte) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendFixedWidthPadLeft(3, 126, 't');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "{}");
        boolean boolean38 = strTokenizer37.hasNext();
        java.lang.String str39 = strTokenizer37.nextToken();
        int int40 = strTokenizer37.size();
        java.lang.String str41 = strTokenizer37.nextToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean45 = strBuilder43.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.append(true);
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher56, strMatcher58);
        boolean boolean60 = strTokenizer59.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder43.appendAll((java.util.Iterator<java.lang.String>) strTokenizer59);
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher70, strMatcher72);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer73.setTrimmerMatcher(strMatcher75);
        int int78 = strBuilder61.lastIndexOf(strMatcher75, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder61.append((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder61.ensureCapacity((int) (short) -1);
        char[] charArray83 = strBuilder61.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer85.setDelimiterChar('h');
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer87.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer37.setDelimiterMatcher(strMatcher88);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder30.deleteFirst(strMatcher88);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str39, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "hi!true#4#a4#35");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "hi!true#4#a4#35");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[h, i, !, t, r, u, e, #, 4, #, a, 4, #, 3, 5]");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test13401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13401");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        java.lang.String str37 = properties1.toString();
        java.lang.String str39 = properties1.getProperty("4#\neslaf\n0.1!ih");
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{}" + "'", str37, "{}");
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test13402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13402");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        java.util.Collection<java.lang.Object> objCollection6 = properties1.values();
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean22 = strBuilder20.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(false);
        int int27 = strBuilder26.length();
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        java.util.List<java.lang.String> strList40 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder26.appendAll((java.lang.Iterable<java.lang.String>) strList40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator("{}", (int) (short) -1);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strTokenizer56.isEmptyTokenAsNull();
        int int58 = strTokenizer56.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer56.setTrimmerMatcher(strMatcher59);
        boolean boolean61 = properties1.replace((java.lang.Object) strMatcher15, (java.lang.Object) (short) -1, (java.lang.Object) strTokenizer60);
        java.util.Properties properties62 = new java.util.Properties(properties1);
        java.util.Enumeration<?> wildcardEnumeration63 = properties62.propertyNames();
        java.lang.String str64 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) properties62);
        properties62.clear();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 13 + "'", int27 == 13);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{}" + "'", str64, "{}");
    }

    @Test
    public void test13403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13403");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties1.elements();
        java.util.Collection<java.lang.Object> objCollection38 = properties1.values();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNotNull(objCollection38);
    }

    @Test
    public void test13404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13404");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("0\n#4#a4#\n", "");
        java.lang.String str3 = strTokenizer2.next();
        boolean boolean4 = strTokenizer2.hasPrevious();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0\n#4#a4#\n" + "'", str3, "0\n#4#a4#\n");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test13405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13405");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        java.lang.String str61 = properties20.getProperty("#4a#4#\n0.1!i0.001h");
        java.util.Properties properties62 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties20.elements();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(objEnumeration63);
    }

    @Test
    public void test13406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13406");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor1.replaceIn(stringBuffer5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor1.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor1.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor9.setVariablePrefix("0                                                 ");
        boolean boolean12 = strSubstitutor9.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strSubstitutor9.getVariablePrefixMatcher();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        properties15.clear();
        properties15.clear();
        properties15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean22 = strBuilder20.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(true);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        boolean boolean37 = strTokenizer36.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder20.appendAll((java.util.Iterator<java.lang.String>) strTokenizer36);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher47, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer50.setTrimmerMatcher(strMatcher52);
        int int55 = strBuilder38.lastIndexOf(strMatcher52, (int) (byte) 10);
        boolean boolean56 = properties15.containsValue((java.lang.Object) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder38.appendln((double) 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder38.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln("hi!1.0\nfalse\n#", 0, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.append("\neslaf\n0.1!ih35.0\nhi!#4#a4#\n");
        java.lang.String str67 = strSubstitutor9.replace(strBuilder60);
        java.lang.String str70 = strBuilder60.midString((int) ' ', 27);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder60.ensureCapacity(105);
        char[] charArray75 = strBuilder72.toCharArray(0, 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray75);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!true#4#a4#16.0\n97\nhi!1.\n\neslaf\n0.1!ih35.0\nhi!#4#a4#\n" + "'", str67, "hi!true#4#a4#16.0\n97\nhi!1.\n\neslaf\n0.1!ih35.0\nhi!#4#a4#\n");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "f\n0.1!ih35.0\nhi!#4#a4#\n" + "'", str70, "f\n0.1!ih35.0\nhi!#4#a4#\n");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "h");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "h");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[h]");
        org.junit.Assert.assertNotNull(strMatcher76);
    }

    @Test
    public void test13407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13407");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('4', 0);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setTrimmerMatcher(strMatcher41);
        java.lang.String str43 = strTokenizer39.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer39.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher57, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder48.appendln(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher65, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer46.reset(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.setDelimiterString("hi!1.0\nfalse\n##4a#4#\n0.1!i0.001h#4a#4#\n0.1!i0.001h\n");
        char[] charArray77 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher79, strMatcher81);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer82.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer82.setQuoteChar('$');
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer85.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer85.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer85.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer68.setDelimiterMatcher(strMatcher88);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strTokenizer89);
    }

    @Test
    public void test13408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13408");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(29);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendln((java.lang.Object) (short) 100);
        int int8 = strBuilder3.lastIndexOf('$');
        java.io.Reader reader9 = strBuilder3.asReader();
        boolean boolean10 = reader9.markSupported();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder1.appendFixedWidthPadRight((java.lang.Object) reader9, 49, 'E');
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test13409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13409");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.ensureCapacity((int) '4');
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln(stringBuffer22, (int) (byte) 0, 3);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray33);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher49, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher40, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder19.appendAll((java.util.Iterator<java.lang.String>) strTokenizer54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder56.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceAll(' ', '#');
        char[] charArray64 = strBuilder60.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray64);
        char[] charArray66 = strBuilder57.getChars(charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder57.deleteAll('a');
        java.io.Writer writer69 = strBuilder57.asWriter();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(writer69);
    }

    @Test
    public void test13410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13410");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("hi!\na");
        java.io.Reader reader13 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.appendFixedWidthPadLeft(53, (int) '1', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNewLine();
        java.lang.String str20 = strBuilder18.substring(0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strBuilder18.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!\n\n0000000000000000000000000000000000000000000000053\n" + "'", str20, "hi!\n\n0000000000000000000000000000000000000000000000053\n");
        org.junit.Assert.assertNotNull(strTokenizer21);
    }

    @Test
    public void test13411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13411");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) 10.0f);
        char[] charArray82 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, strMatcher84, strMatcher86);
        java.util.List<java.lang.String> strList88 = strTokenizer87.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer87.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder73.appendFixedWidthPadLeft((java.lang.Object) strTokenizer90, (int) (short) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder93.appendSeparator('\n', 48);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test13412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13412");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append(' ');
        java.io.Reader reader14 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendSeparator('h', 89);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test13413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13413");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.reverse();
        java.lang.String str3 = strBuilder2.getNullText();
        java.io.Writer writer4 = strBuilder2.asWriter();
        // The following exception was thrown during execution in test generation
        try {
            writer4.write("hi!1.0\n444a44false\n", 41, 174);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(writer4);
    }

    @Test
    public void test13414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13414");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.appendNewLine();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties29.clear();
        properties29.clear();
        java.util.Set<java.lang.String> strSet33 = properties29.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.appendAll((java.lang.Iterable<java.lang.String>) strSet33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.appendAll((java.lang.Iterable<java.lang.String>) strSet33);
        int int37 = strBuilder24.lastIndexOf('#');
        boolean boolean38 = strBuilder24.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean42 = strBuilder40.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.append(true);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strTokenizer56.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.appendAll((java.util.Iterator<java.lang.String>) strTokenizer56);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer70.setTrimmerMatcher(strMatcher72);
        int int75 = strBuilder58.lastIndexOf(strMatcher72, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder58.append((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder77.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.append("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder77.appendln(35);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup83 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor84 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup83);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup85 = strSubstitutor84.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor87 = strSubstitutor84.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strSubstitutor87.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder77.replace(strMatcher88, "$", 13, 97, (int) (byte) 100);
        int int95 = strBuilder77.lastIndexOf("hi!true#4#a4#35");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder24.append(strBuilder77);
        java.lang.StringBuffer stringBuffer97 = strBuilder24.toStringBuffer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 17 + "'", int37 == 17);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNull(wildcardStrLookup85);
        org.junit.Assert.assertNotNull(strSubstitutor87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(stringBuffer97);
        org.junit.Assert.assertEquals(stringBuffer97.toString(), "h100.0i!1.0\n#4#a4#\n53#4a#4#eurt!iha35\n");
    }

    @Test
    public void test13415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13415");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        java.lang.Object obj14 = properties1.remove((java.lang.Object) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.append("hi!1.0\nfalse\n#4#a4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.trim();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.insert(182, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 182");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test13416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13416");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder1.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendSeparator("StrTokenizer[#4#a4#]", "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setLength((int) 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln(46);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean24 = strBuilder22.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendln((float) 1L);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        java.util.List<java.lang.String> strList39 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray44 = strBuilder43.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, '1', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        int int49 = strBuilder18.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder18.insert(22, true);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test13417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13417");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        boolean boolean19 = reader17.markSupported();
        reader17.reset();
        boolean boolean21 = reader17.ready();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        properties23.clear();
        java.lang.String str25 = properties23.toString();
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher34, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher47, strMatcher49);
        char[] charArray57 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, "");
        boolean boolean60 = properties23.replace((java.lang.Object) strMatcher38, (java.lang.Object) charArray45, (java.lang.Object) charArray57);
        int int61 = reader17.read(charArray45);
        long long63 = reader17.skip((long) (byte) 10);
        long long65 = reader17.skip((long) 2);
        long long67 = reader17.skip((long) (byte) -1);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "hi!#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "hi!#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[h, i, !, #, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 6 + "'", int61 == 6);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 4L + "'", long63 == 4L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
    }

    @Test
    public void test13418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13418");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("sl$f#4$#4#eurt!ih");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setDelimiterString("hi!1.0\nfalse\nhi!true#4#a4#35#4#a4#10");
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
    }

    @Test
    public void test13419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13419");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.appendln('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append("hi!\na ");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append(false);
        java.util.stream.IntStream intStream32 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean36 = strBuilder34.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.replaceFirst('#', '4');
        char[] charArray47 = strBuilder40.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strBuilder40.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder31.replaceAll(strMatcher49, "0.0i!1.0\n#4#a4#");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test13420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13420");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher25, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder16.appendln(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.trim();
        boolean boolean40 = strBuilder14.equalsIgnoreCase(strBuilder34);
        char[] charArray41 = null;
        char[] charArray42 = strBuilder34.getChars(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder7.append(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder7.insert(0, (int) (byte) 10);
        java.lang.String str47 = strBuilder46.toString();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup48 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor49 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup48);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup50 = strSubstitutor49.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor52 = strSubstitutor49.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer53 = null;
        boolean boolean54 = strSubstitutor49.replaceIn(stringBuffer53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strSubstitutor49.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor57 = strSubstitutor49.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor59 = strSubstitutor57.setVariablePrefix("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean63 = strBuilder61.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.replaceFirst('#', '4');
        char[] charArray74 = strBuilder67.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray74);
        java.lang.String str79 = strSubstitutor59.replace(charArray74);
        char[] charArray80 = strBuilder46.getChars(charArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder46.appendln((long) 8);
        java.lang.String str85 = strBuilder82.midString(16, 98);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder82.appendSeparator('\000', 'e');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "hi!#4#a4#\na100");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "hi!#4#a4#\na100");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[h, i, !, #, 4, #, a, 4, #, \n, a, 1, 0, 0]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "10h" + "'", str47, "10h");
        org.junit.Assert.assertNull(wildcardStrLookup50);
        org.junit.Assert.assertNotNull(strSubstitutor52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strSubstitutor57);
        org.junit.Assert.assertNotNull(strSubstitutor59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "10h1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "10h1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[1, 0, h, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!1.0\nfalse\n4" + "'", str79, "hi!1.0\nfalse\n4");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "10h1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "10h1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[1, 0, h, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test13421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13421");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor1.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor6.setVariableSuffix("{}");
        boolean boolean9 = strSubstitutor6.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup10 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup10);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup12 = strSubstitutor11.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor11.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup15 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup15);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup17 = strSubstitutor16.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor16.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup20 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str22 = strStrLookup20.lookup("{}");
        strSubstitutor16.setVariableResolver(strStrLookup20);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor39 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup20, strMatcher24, strMatcher37, '4');
        strSubstitutor14.setVariableResolver(strStrLookup20);
        strSubstitutor6.setVariableResolver(strStrLookup20);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup20);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor46 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup20, "hi!\n100aaaaaaa52.0\n", "", '4');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup20, "hi!true#4#a4#false-1.0", "hi!true#4#a4#16.0\n97\n", '#');
        java.lang.String str54 = strSubstitutor50.replace("hi!100\naaaaaaaaahi!1.0\naa3", 0, 0);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardStrLookup12);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNull(wildcardStrLookup17);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertNotNull(strStrLookup20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    public void test13422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13422");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        java.util.Set<java.lang.Object> objSet37 = properties1.keySet();
        java.util.Properties properties38 = new java.util.Properties(properties1);
        java.util.Enumeration<?> wildcardEnumeration39 = properties38.propertyNames();
        properties38.clear();
        java.util.Set<java.lang.String> strSet41 = properties38.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher52, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder43.appendln(charArray50);
        java.io.Reader reader59 = strBuilder43.asReader();
        reader59.reset();
        reader59.mark((int) (short) -1);
        boolean boolean63 = reader59.ready();
        long long65 = reader59.skip((long) (short) 0);
        reader59.reset();
        java.lang.Object obj67 = properties38.get((java.lang.Object) reader59);
        java.io.OutputStream outputStream68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties38.storeToXML(outputStream68, "12");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertNull(obj67);
    }

    @Test
    public void test13423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13423");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        int int11 = strBuilder7.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replaceAll('4', ' ');
        java.util.stream.IntStream intStream17 = strBuilder7.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.replaceFirst('1', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("0.0i!1.0\n#4#a4#\n");
        java.lang.String str23 = strTokenizer22.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer22, ".0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst('a', 't');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.insert(89, (double) 22L);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 89");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "0.0i!1.0\n#4#a4#" + "'", str23, "0.0i!1.0\n#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test13424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13424");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        java.io.Writer writer21 = strBuilder2.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder2.replace(1, 14, "h100.0i!1.0\n#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.insert(6, '1');
        int int32 = strBuilder30.lastIndexOf('i');
        java.lang.String str35 = strBuilder30.substring((int) (byte) 0, 43);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8 + "'", int32 == 8);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hh100.10i!1.0\n#4#a4#false\n" + "'", str35, "hh100.10i!1.0\n#4#a4#false\n");
    }

    @Test
    public void test13425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13425");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        int int13 = strBuilder10.lastIndexOf('4', 10);
        char[] charArray20 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "");
        java.lang.Object[] objArray23 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendAll(objArray23);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder10.replaceFirst(strMatcher38, "StrTokenizer[not tokenized yet]");
        java.lang.StringBuffer stringBuffer41 = strBuilder40.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.deleteCharAt(6);
        int int47 = strBuilder40.lastIndexOf("hi!true#4#a4#3597.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.setLength(9);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(stringBuffer41);
        org.junit.Assert.assertEquals(stringBuffer41.toString(), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test13426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13426");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(stringBuffer25, (int) '#', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(false);
        int int32 = strBuilder30.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.setNewLineText("1.0\nf");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup35 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup35);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup37 = strSubstitutor36.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor39 = strSubstitutor36.setVariablePrefix("hi!");
        char char40 = strSubstitutor36.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean44 = strBuilder42.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.setNullText("hi!\na");
        java.lang.String str57 = strSubstitutor36.replace(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.appendNewLine();
        java.util.stream.IntStream intStream61 = strBuilder60.chars();
        boolean boolean62 = strBuilder56.equals((java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean66 = strBuilder64.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.replaceFirst('#', '4');
        char[] charArray77 = strBuilder70.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder60.append(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder30.appendln(charArray77);
        java.io.Reader reader84 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder30.appendNull();
        java.util.Properties properties86 = null;
        java.util.Properties properties87 = new java.util.Properties(properties86);
        properties87.clear();
        properties87.clear();
        java.util.Set<java.lang.Object> objSet90 = properties87.keySet();
        boolean boolean91 = strBuilder30.equals((java.lang.Object) properties87);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet92 = properties87.entrySet();
        boolean boolean93 = properties87.isEmpty();
        int int94 = properties87.size();
        java.io.PrintStream printStream95 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties87.list(printStream95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(wildcardStrLookup37);
        org.junit.Assert.assertNotNull(strSubstitutor39);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + '$' + "'", char40 == '$');
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str57, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(intStream61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(reader84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(objSet90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objEntrySet92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
    }

    @Test
    public void test13427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13427");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '$', 'h');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup21 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor22 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup21);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup23 = strSubstitutor22.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor25 = strSubstitutor22.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer26 = null;
        boolean boolean27 = strSubstitutor22.replaceIn(stringBuffer26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strSubstitutor22.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor30 = strSubstitutor22.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor32 = strSubstitutor22.setVariableSuffix('#');
        java.lang.String str34 = strSubstitutor32.replace("#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = strSubstitutor32.setVariablePrefix('$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor38 = strSubstitutor32.setVariablePrefix('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strSubstitutor38.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer20.setDelimiterMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer20.setQuoteChar(' ');
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNull(wildcardStrLookup23);
        org.junit.Assert.assertNotNull(strSubstitutor25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strSubstitutor30);
        org.junit.Assert.assertNotNull(strSubstitutor32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str34, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strSubstitutor36);
        org.junit.Assert.assertNotNull(strSubstitutor38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
    }

    @Test
    public void test13428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13428");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.setDelimiterChar('i');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test13429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13429");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        boolean boolean19 = reader17.markSupported();
        reader17.close();
        int int21 = reader17.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder26.appendln(charArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder24.appendln(charArray33);
        int int43 = reader17.read(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        int int46 = strTokenizer45.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer45.getTrimmerMatcher();
        char[] charArray48 = null;
        int int52 = strMatcher47.isMatch(charArray48, 50, 129, 52);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 104 + "'", int21 == 104);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "i!#4#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "i!#4#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[i, !, #, 4, #, a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 6 + "'", int43 == 6);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test13430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13430");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        int int14 = strBuilder11.indexOf(' ', (int) (byte) 1);
        java.lang.String str17 = strBuilder11.midString((int) (short) 100, (int) (byte) 100);
        boolean boolean18 = strBuilder11.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator('1', 'i');
        java.io.Reader reader22 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.deleteFirst(".0\n#4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder11.appendSeparator('$', 15);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test13431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13431");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!\nfalse", '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean6 = strBuilder4.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append("java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean19 = strBuilder17.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.append(true);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        boolean boolean34 = strTokenizer33.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer33);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher44, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setTrimmerMatcher(strMatcher49);
        int int52 = strBuilder35.lastIndexOf(strMatcher49, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder35.append((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder35.ensureCapacity((int) (short) -1);
        char[] charArray57 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        properties60.clear();
        java.util.Enumeration<?> wildcardEnumeration62 = properties60.propertyNames();
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher71, strMatcher73);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getQuoteMatcher();
        boolean boolean76 = properties60.containsValue((java.lang.Object) strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher58, strMatcher75);
        int int79 = strBuilder15.lastIndexOf(strMatcher58, 46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer2.setTrimmerMatcher(strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer80.setDelimiterString("java.io.IOException: hi!1.0\nfalse\n#4#a4#13\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer80.reset("hi!1.0\nfalse\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        java.lang.String str86 = strTokenizer85.getContent();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "hi!true#4#a4#35");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "hi!true#4#a4#35");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[h, i, !, t, r, u, e, #, 4, #, a, 4, #, 3, 5]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(wildcardEnumeration62);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!1.0\nfalse\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" + "'", str86, "hi!1.0\nfalse\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
    }

    @Test
    public void test13432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13432");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.deleteAll("hi!1.0\nfalse\n4");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendNewLine();
        int int20 = strBuilder1.length();
        java.lang.Class<?> wildcardClass21 = strBuilder1.getClass();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 11 + "'", int20 == 11);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test13433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13433");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        boolean boolean32 = strBuilder1.contains(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder1.appendln((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteCharAt(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(' ', '#');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup40 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup40);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.append((java.lang.Object) strStrLookup40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.setCharAt(26, 't');
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        properties48.clear();
        java.util.Enumeration<?> wildcardEnumeration50 = properties48.propertyNames();
        boolean boolean51 = properties48.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties48.entrySet();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        java.util.Set<java.lang.String> strSet54 = properties48.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder39.appendWithSeparators((java.lang.Iterable<java.lang.String>) strSet54, "\n100aaaaaaa26.0");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strStrLookup40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(wildcardEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test13434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13434");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet3 = properties1.keySet();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties5.clear();
        properties5.clear();
        properties5.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder14.appendln(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder12.appendln(charArray21);
        java.io.Writer writer31 = strBuilder12.asWriter();
        writer31.flush();
        writer31.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean37 = strBuilder35.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.appendln((float) 1L);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher48, strMatcher50);
        java.util.List<java.lang.String> strList52 = strTokenizer51.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder35.appendAll((java.lang.Iterable<java.lang.String>) strList52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.io.Writer writer57 = writer31.append((java.lang.CharSequence) strBuilder53);
        writer57.write("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean63 = strBuilder61.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.appendSeparator('#', (int) (short) 1);
        int int73 = strBuilder70.lastIndexOf('4', 10);
        char[] charArray80 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, "");
        java.lang.Object[] objArray83 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder70.appendAll(objArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder70.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer88 = strBuilder70.toStringBuffer();
        java.lang.Object obj89 = properties5.replace((java.lang.Object) "", (java.lang.Object) strBuilder70);
        java.util.Set<java.lang.Object> objSet90 = properties5.keySet();
        properties5.clear();
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(writer31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(writer57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(stringBuffer88);
        org.junit.Assert.assertEquals(stringBuffer88.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(objSet90);
    }

    @Test
    public void test13435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13435");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((double) '4');
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        boolean boolean21 = strTokenizer20.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList22 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer20.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder30.appendln(charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher47, strMatcher48);
        int int50 = strBuilder28.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup51 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor52 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup51);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup53 = strSubstitutor52.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor55 = strSubstitutor52.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer56 = null;
        boolean boolean57 = strSubstitutor52.replaceIn(stringBuffer56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strSubstitutor52.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor60 = strSubstitutor52.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor62 = strSubstitutor52.setVariableSuffix('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean66 = strBuilder64.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.replaceFirst('#', '4');
        char[] charArray77 = strBuilder70.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, ' ', '4');
        java.lang.String str81 = strSubstitutor52.replace(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder28.appendln(charArray77);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.insert((int) 'i', '!');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 105");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(wildcardStrLookup53);
        org.junit.Assert.assertNotNull(strSubstitutor55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strSubstitutor60);
        org.junit.Assert.assertNotNull(strSubstitutor62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!1.0\nfalse\n4" + "'", str81, "hi!1.0\nfalse\n4");
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test13436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13436");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher12, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray10);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher17, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer2.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setTrimmerMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer32.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher36);
    }

    @Test
    public void test13437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13437");
        java.lang.Throwable throwable5 = null;
        java.io.IOException iOException6 = new java.io.IOException("", throwable5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException8.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: ", (java.lang.Throwable) iOException8);
        java.io.IOException iOException12 = new java.io.IOException("h!true#4#a4#false", (java.lang.Throwable) iOException11);
        java.io.IOException iOException13 = new java.io.IOException("0\n#4#a4#\n", (java.lang.Throwable) iOException11);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.io.IOException iOException15 = new java.io.IOException("", (java.lang.Throwable) iOException14);
        org.junit.Assert.assertNotNull(throwableArray10);
    }

    @Test
    public void test13438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13438");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.replaceAll("", "hi!");
        java.lang.String str28 = strBuilder19.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder19.replaceAll("hi!", "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("", throwable34);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException35);
        java.io.IOException iOException37 = new java.io.IOException((java.lang.Throwable) iOException36);
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException37);
        java.lang.Throwable[] throwableArray39 = iOException37.getSuppressed();
        java.io.IOException iOException40 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: ", (java.lang.Throwable) iOException37);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder19.appendFixedWidthPadRight((java.lang.Object) iOException40, (int) (short) 100, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.append(true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.appendln("{hi!\na=#4#a4#}", 62, 124);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test13439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13439");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        char char5 = strSubstitutor4.getEscapeChar();
        char char6 = strSubstitutor4.getEscapeChar();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = strSubstitutor4.replace("lse\n#4\n", 27, (int) '0');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + '$' + "'", char5 == '$');
        org.junit.Assert.assertTrue("'" + char6 + "' != '" + '$' + "'", char6 == '$');
    }

    @Test
    public void test13440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13440");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher16, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        char[] charArray25 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean29 = strBuilder27.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append(true);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher40, strMatcher42);
        boolean boolean44 = strTokenizer43.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer43);
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher54, strMatcher56);
        boolean boolean58 = strBuilder27.contains(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher54);
        char[] charArray66 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher68, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher54, strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder7.deleteAll(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln((double) 10.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.appendln("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        boolean boolean79 = properties0.equals((java.lang.Object) strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder74.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder74.appendSeparator('!', 0);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test13441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13441");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert(0, '#');
        boolean boolean29 = strBuilder27.contains("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append("hi!\n#4#a4#\n");
        char[] charArray32 = null;
        char[] charArray33 = strBuilder27.getChars(charArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.appendln((long) 98);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder27.appendln('e');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "##4a#4#\n0.1!i0.001hhi!\n#4#a4#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "##4a#4#\n0.1!i0.001hhi!\n#4#a4#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, #, 4, a, #, 4, #, \n, 0, ., 1, !, i, 0, ., 0, 0, 1, h, h, i, !, \n, #, 4, #, a, 4, #, \n]");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test13442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13442");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.insert(0, (long) '#');
        boolean boolean42 = properties1.equals((java.lang.Object) '#');
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties1.elements();
        java.lang.Object obj44 = properties1.clone();
        java.lang.String str46 = properties1.getProperty("#-1");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean50 = strBuilder48.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.appendln((float) 1L);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher61, strMatcher63);
        java.util.List<java.lang.String> strList65 = strTokenizer64.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder48.appendAll((java.lang.Iterable<java.lang.String>) strList65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray70 = strBuilder69.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.reverse();
        java.lang.String str72 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.appendNewLine();
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        properties77.clear();
        properties77.clear();
        properties77.clear();
        java.util.Set<java.lang.String> strSet81 = properties77.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder74.appendAll((java.lang.Iterable<java.lang.String>) strSet81);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder69.appendln(strBuilder82);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder69.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder85.replaceAll("hi!\n100aaaaaaa52.0\n", "#4a#4#\n0.1!i0.001h$$$$$hi!\n#hi!100\naaaaaaaaaaa");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder85.append((long) 11);
        boolean boolean93 = properties1.equals((java.lang.Object) 11);
        boolean boolean94 = properties1.isEmpty();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "#4a#4#\n0.1!i0.001h" + "'", str72, "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test13443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13443");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.append((long) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder16.insert(10, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder16.deleteFirst('$');
        java.lang.StringBuffer stringBuffer29 = strBuilder28.toStringBuffer();
        java.lang.Object obj30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append(obj30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.deleteFirst(strMatcher33);
        java.util.stream.IntStream intStream35 = strBuilder31.chars();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(stringBuffer29);
        org.junit.Assert.assertEquals(stringBuffer29.toString(), "hi!#4#a4#\nfalsea0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
    }

    @Test
    public void test13444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13444");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher24, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher15, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor33 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, strMatcher28, strMatcher31, '$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor34 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor38 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, "StrTokenizer[not tokenized yet]", "java.io.IOException: h100.0i!1.0\n#4#a4#19\n", 't');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0, "hi!1.0\nfalse\n#hi!1.0\nfalse\n#4\n1111111111111111111111101111111111111111111111111111-1", "hi!#4#a4#", 'e');
        org.junit.Assert.assertNotNull(strStrLookup0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher31);
    }

    @Test
    public void test13445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13445");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        char char5 = strSubstitutor4.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        boolean boolean11 = strBuilder7.contains(strMatcher10);
        boolean boolean13 = strBuilder7.startsWith("StrTokenizer[not tokenized yet]");
        boolean boolean16 = strSubstitutor4.replaceIn(strBuilder7, (int) (short) 1, 0);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup17 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher41, strMatcher43);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher32, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup17, strMatcher45, strMatcher48, '$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor51 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup17);
        strSubstitutor4.setVariableResolver(strStrLookup17);
        strSubstitutor4.setEnableSubstitutionInVariables(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", "#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setDelimiterString("java.io.IOException: java.io.IOException: ");
        int int60 = strTokenizer59.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("##4a#4#\n0.1!i0.001h");
        java.lang.Object obj65 = strTokenizer64.clone();
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher74, strMatcher76);
        boolean boolean78 = strTokenizer77.isEmptyTokenAsNull();
        int int79 = strTokenizer77.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer77.setDelimiterString("hi!");
        java.lang.String str82 = strTokenizer81.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer81.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer64.setIgnoredMatcher(strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer62.setDelimiterMatcher(strMatcher83);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor86 = strSubstitutor4.setVariablePrefixMatcher(strMatcher83);
        char[] charArray87 = null;
        java.lang.String str90 = strSubstitutor4.replace(charArray87, 78, 17);
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + '$' + "'", char5 == '$');
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strStrLookup17);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str82, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strSubstitutor86);
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test13446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13446");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        boolean boolean5 = strBuilder1.contains(strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        int int7 = strBuilder1.lastIndexOf(strMatcher6);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendln(stringBuffer8, 84, (int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean15 = strBuilder13.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendln((float) 1L);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher26, strMatcher28);
        java.util.List<java.lang.String> strList30 = strTokenizer29.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendAll((java.lang.Iterable<java.lang.String>) strList30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(stringBuffer35);
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln(stringBuffer37, (int) '#', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.deleteFirst('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher55, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder46.appendln(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer66, "0.0i!1.0\n#4#a4#\n");
        java.lang.StringBuffer stringBuffer69 = strBuilder61.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean73 = strBuilder71.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.appendln((float) 1L);
        char[] charArray82 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, strMatcher84, strMatcher86);
        java.util.List<java.lang.String> strList88 = strTokenizer87.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder71.appendAll((java.lang.Iterable<java.lang.String>) strList88);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder89.ensureCapacity((int) '4');
        java.lang.StringBuffer stringBuffer92 = strBuilder91.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder61.appendln(stringBuffer92);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder40.append(stringBuffer92);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder11.appendln(stringBuffer92);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(stringBuffer69);
        org.junit.Assert.assertEquals(stringBuffer69.toString(), "hi!#4#a4#\na");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(stringBuffer92);
        org.junit.Assert.assertEquals(stringBuffer92.toString(), "hi!1.0\n#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test13447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13447");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("", throwable2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray5 = iOException4.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException("StrTokenizer[#4#a4#]", (java.lang.Throwable) iOException4);
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException(throwable7);
        iOException4.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        org.junit.Assert.assertNotNull(throwableArray5);
    }

    @Test
    public void test13448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13448");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.replaceFirst("1", "StrT10okenizer[#4#a4#]100aaaaaaaa#4a#4#\n0.1!i0.001h\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendPadding((int) '$', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test13449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13449");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        int int36 = strBuilder19.lastIndexOf(strMatcher33, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.append((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder19.ensureCapacity((int) (short) -1);
        char[] charArray41 = strBuilder19.toCharArray();
        java.util.Iterator<java.lang.String> strItor42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder19.appendWithSeparators(strItor42, "#");
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        properties46.clear();
        java.util.Enumeration<?> wildcardEnumeration48 = properties46.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet49 = properties46.entrySet();
        java.util.Properties properties50 = new java.util.Properties(properties46);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup51 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor52 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup51);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup53 = strSubstitutor52.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor55 = strSubstitutor52.setVariablePrefix('a');
        boolean boolean56 = properties50.containsValue((java.lang.Object) strSubstitutor55);
        boolean boolean57 = strBuilder44.equals((java.lang.Object) strSubstitutor55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder44.append((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder44.append(14);
        int int62 = strBuilder61.capacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "hi!true#4#a4#35");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "hi!true#4#a4#35");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[h, i, !, t, r, u, e, #, 4, #, a, 4, #, 3, 5]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(wildcardEnumeration48);
        org.junit.Assert.assertNotNull(objEntrySet49);
        org.junit.Assert.assertNull(wildcardStrLookup53);
        org.junit.Assert.assertNotNull(strSubstitutor55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 35 + "'", int62 == 35);
    }

    @Test
    public void test13450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13450");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrT10okenizer[");
    }

    @Test
    public void test13451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13451");
        char[] charArray7 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher9, strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray7);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher14, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = strTokenizer28.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
    }

    @Test
    public void test13452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13452");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        int int22 = strBuilder20.lastIndexOf(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer11.setTrimmerMatcher(strMatcher21);
        java.lang.Object obj24 = strTokenizer11.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer11.getIgnoredMatcher();
        java.lang.String str26 = strTokenizer11.next();
        java.lang.String str27 = strTokenizer11.getContent();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "#4#a4#" + "'", str26, "#4#a4#");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#4#a4#" + "'", str27, "#4#a4#");
    }

    @Test
    public void test13453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13453");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not", '1', '4');
        java.lang.String str4 = strTokenizer3.getContent();
        boolean boolean5 = strTokenizer3.hasNext();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not" + "'", str4, "StrTokenizer[not");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test13454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13454");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("a.io.IOException: java.io.IOException: java.io.IOException: ##4\nhi!1.0\nfalse\n453\n", '.', '0');
    }

    @Test
    public void test13455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13455");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.append('a');
        int int14 = strBuilder11.indexOf(' ', (int) (byte) 1);
        int int17 = strBuilder11.lastIndexOf('a', 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean21 = strBuilder19.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendln((float) 1L);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        java.util.List<java.lang.String> strList36 = strTokenizer35.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder19.appendAll((java.lang.Iterable<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher50, strMatcher52);
        int int54 = strBuilder40.lastIndexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder40.insert(7, (long) (byte) 0);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup58 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor59 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strSubstitutor59.getVariablePrefixMatcher();
        boolean boolean61 = strBuilder40.contains(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder11.deleteFirst(strMatcher60);
        int int64 = strBuilder62.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.reverse();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test13456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13456");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        char char5 = strSubstitutor1.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.setNullText("hi!\na");
        java.lang.String str22 = strSubstitutor1.replace(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNewLine();
        java.util.stream.IntStream intStream26 = strBuilder25.chars();
        boolean boolean27 = strBuilder21.equals((java.lang.Object) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean31 = strBuilder29.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.replaceFirst('#', '4');
        char[] charArray42 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder25.append(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, 'i', '1');
        boolean boolean52 = strTokenizer51.isIgnoreEmptyTokens();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer51.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + '$' + "'", char5 == '$');
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str22, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test13457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13457");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        boolean boolean6 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties1.elements();
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEnumeration7);
    }

    @Test
    public void test13458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13458");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(stringBuffer23);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(stringBuffer25, (int) '#', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln('a');
        int int36 = strBuilder34.lastIndexOf("ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt0");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test13459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13459");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher8, strMatcher10);
        boolean boolean12 = strTokenizer11.isEmptyTokenAsNull();
        int int13 = strTokenizer11.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer11.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean19 = strBuilder17.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator('#', (int) (short) 1);
        int int29 = strBuilder26.lastIndexOf('4', 10);
        char[] charArray30 = strBuilder26.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer15.reset(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "hi!1.0\nfalse\n#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
    }

    @Test
    public void test13460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13460");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln(charArray11);
        java.io.Writer writer21 = strBuilder2.asWriter();
        writer21.flush();
        writer21.write((int) (byte) -1);
        writer21.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean29 = strBuilder27.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln(false);
        int int34 = strBuilder33.length();
        java.io.Writer writer35 = writer21.append((java.lang.CharSequence) strBuilder33);
        writer35.write(23);
        writer35.write(98);
        java.io.Writer writer41 = writer35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.appendNewLine();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        properties46.clear();
        properties46.clear();
        properties46.clear();
        java.util.Set<java.lang.String> strSet50 = properties46.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.appendAll((java.lang.Iterable<java.lang.String>) strSet50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder43.append('a');
        int int56 = strBuilder53.indexOf(' ', (int) (byte) 1);
        java.lang.String str59 = strBuilder53.midString((int) (short) 100, (int) (byte) 100);
        boolean boolean60 = strBuilder53.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder53.appendSeparator('1', 'i');
        java.io.Reader reader64 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder53.deleteFirst(".0\n#4#");
        java.io.Writer writer67 = writer35.append((java.lang.CharSequence) strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 13 + "'", int34 == 13);
        org.junit.Assert.assertNotNull(writer35);
        org.junit.Assert.assertNotNull(writer41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(writer67);
    }

    @Test
    public void test13461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13461");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        properties7.clear();
        java.util.Enumeration<?> wildcardEnumeration9 = properties7.propertyNames();
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher18, strMatcher20);
        boolean boolean22 = strTokenizer21.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer21.setQuoteChar('#');
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher34, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer37.setTrimmerMatcher(strMatcher39);
        java.lang.Object obj41 = properties7.put((java.lang.Object) '#', (java.lang.Object) strTokenizer37);
        java.util.Set<java.lang.Object> objSet42 = properties7.keySet();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher52, strMatcher54);
        boolean boolean56 = strTokenizer55.isEmptyTokenAsNull();
        int int57 = strTokenizer55.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer55.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer55.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer55.setDelimiterString("\n");
        java.lang.Object obj63 = strTokenizer55.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer55.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean69 = strBuilder67.contains("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        boolean boolean71 = strBuilder67.contains(strMatcher70);
        java.lang.Object obj72 = properties5.put((java.lang.Object) strTokenizer65, (java.lang.Object) strMatcher70);
        java.lang.String str75 = properties5.getProperty("StrT10okenizer[#4#a4#]100aaaaaaaaa", "\neslaf\n0.1 ttttttttttttt");
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "\neslaf\n0.1 ttttttttttttt" + "'", str75, "\neslaf\n0.1 ttttttttttttt");
    }

    @Test
    public void test13462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13462");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("", throwable2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray5 = iOException4.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException("StrTokenizer[#4#a4#]", (java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray7 = iOException4.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray9 = iOException8.getSuppressed();
        java.lang.Throwable throwable10 = null;
        java.io.IOException iOException11 = new java.io.IOException(throwable10);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException11);
        iOException8.addSuppressed((java.lang.Throwable) iOException12);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test13463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13463");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.insert((int) (byte) 0, (long) (short) 100);
        java.io.Reader reader51 = strBuilder44.asReader();
        boolean boolean52 = reader51.ready();
        long long54 = reader51.skip((long) '0');
        properties1.load(reader51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("hi!1.0\nfalse\n#4\n", 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean62 = strBuilder60.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln((float) 1L);
        char[] charArray71 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher73, strMatcher75);
        java.util.List<java.lang.String> strList77 = strTokenizer76.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder60.appendAll((java.lang.Iterable<java.lang.String>) strList77);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer82 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendln(stringBuffer82);
        java.lang.String str86 = strBuilder83.midString(10, 14);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder83.setNullText("#");
        java.lang.Object obj89 = properties1.getOrDefault((java.lang.Object) strTokenizer58, (java.lang.Object) strBuilder88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer58.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 36L + "'", long54 == 36L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "0\n#4#a4#\n" + "'", str86, "0\n#4#a4#\n");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "h100.0i!1.0\n#4#a4#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "h100.0i!1.0\n#4#a4#\n");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "h100.0i!1.0\n#4#a4#\n");
        org.junit.Assert.assertNotNull(strTokenizer91);
    }

    @Test
    public void test13464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13464");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder24.appendln((double) 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder24.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder24.append("");
        java.io.Writer writer49 = strBuilder24.asWriter();
        java.lang.String str51 = strBuilder24.leftString(92);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder24.appendSeparator('\n', 61);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean60 = strBuilder58.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln(false);
        int int65 = strBuilder64.length();
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher74, strMatcher76);
        java.util.List<java.lang.String> strList78 = strTokenizer77.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder64.appendAll((java.lang.Iterable<java.lang.String>) strList78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.replaceAll('a', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder85.appendFixedWidthPadRight(33, 174, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder85.replaceFirst('e', 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder54.append(strBuilder85, 100, 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(writer49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!true#4#a4#16.0\n97\n" + "'", str51, "hi!true#4#a4#16.0\n97\n");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 13 + "'", int65 == 13);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test13465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13465");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!\na");
        int int2 = strTokenizer1.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test13466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13466");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder6.replaceAll(strMatcher74, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder80.appendNewLine();
        java.util.Properties properties82 = null;
        java.util.Properties properties83 = new java.util.Properties(properties82);
        properties83.clear();
        properties83.clear();
        properties83.clear();
        java.util.Set<java.lang.String> strSet87 = properties83.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder80.appendAll((java.lang.Iterable<java.lang.String>) strSet87);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder80.setNullText("java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder76.appendln(strBuilder80);
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        int int94 = strBuilder91.lastIndexOf(strMatcher93);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strSet87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test13467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13467");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setTrimmerMatcher(strMatcher33);
        int int36 = strBuilder19.lastIndexOf(strMatcher33, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.append((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder19.ensureCapacity((int) (short) -1);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        properties42.clear();
        java.lang.String str44 = properties42.toString();
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getQuoteMatcher();
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher66, strMatcher68);
        char[] charArray76 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, "");
        boolean boolean79 = properties42.replace((java.lang.Object) strMatcher57, (java.lang.Object) charArray64, (java.lang.Object) charArray76);
        boolean boolean80 = strBuilder40.contains(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder82.appendNewLine();
        java.util.Properties properties84 = null;
        java.util.Properties properties85 = new java.util.Properties(properties84);
        properties85.clear();
        properties85.clear();
        properties85.clear();
        java.util.Set<java.lang.String> strSet89 = properties85.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder82.appendAll((java.lang.Iterable<java.lang.String>) strSet89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder90.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder91.setNullText("hi!\na");
        java.lang.String str95 = strBuilder93.rightString(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder40.append(strBuilder93);
        java.lang.Iterable<java.lang.String> strIterable97 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder93.appendWithSeparators(strIterable97, "\neslaf\n0.1!ihh!true#4#a4#falsefalse\n");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{}" + "'", str44, "{}");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strSet89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "\n" + "'", str95, "\n");
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test13468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13468");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup22 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher32, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray30);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher46, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher37, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charMatcher('$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor55 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup22, strMatcher50, strMatcher53, '$');
        int int57 = strBuilder21.lastIndexOf(strMatcher53, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder21.replaceAll('a', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder21.reverse();
        int int62 = strBuilder61.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendNewLine();
        int int66 = strBuilder63.indexOf("java.io.IOException: java.io.IOException: ", 124);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.appendln(96);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strStrLookup22);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 18 + "'", int62 == 18);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test13469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13469");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("hi!\na");
        java.lang.String str14 = strBuilder12.rightString(1);
        int int17 = strBuilder12.lastIndexOf('E', 100);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\n" + "'", str14, "\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test13470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13470");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup5 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str7 = strStrLookup5.lookup("{}");
        strSubstitutor1.setVariableResolver(strStrLookup5);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln(false);
        int int17 = strBuilder16.length();
        int int20 = strBuilder16.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean24 = strBuilder22.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendln((float) 1L);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher35, strMatcher37);
        java.util.List<java.lang.String> strList39 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray44 = strBuilder43.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.insert(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder16.appendln(strBuilder50, 10, 0);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup54 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor55 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup54);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup56 = strSubstitutor55.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor58 = strSubstitutor55.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup59 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        java.lang.String str61 = strStrLookup59.lookup("{}");
        strSubstitutor55.setVariableResolver(strStrLookup59);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher72, strMatcher74);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getQuoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor78 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup59, strMatcher63, strMatcher76, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder50.deleteAll(strMatcher63);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor80 = strSubstitutor1.setVariableSuffixMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor82 = strSubstitutor80.setVariableSuffix("#4#a4#");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor84 = strSubstitutor80.setVariablePrefix("hi!\na1");
        strSubstitutor80.setEnableSubstitutionInVariables(true);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor88 = strSubstitutor80.setVariablePrefix('\n');
        strSubstitutor88.setEscapeChar('!');
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertNotNull(strStrLookup5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 13 + "'", int17 == 13);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(wildcardStrLookup56);
        org.junit.Assert.assertNotNull(strSubstitutor58);
        org.junit.Assert.assertNotNull(strStrLookup59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strSubstitutor80);
        org.junit.Assert.assertNotNull(strSubstitutor82);
        org.junit.Assert.assertNotNull(strSubstitutor84);
        org.junit.Assert.assertNotNull(strSubstitutor88);
    }

    @Test
    public void test13471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13471");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        int int19 = strTokenizer17.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer17.setTrimmerMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.deleteAll(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean29 = strBuilder27.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln((float) 1L);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher40, strMatcher42);
        java.util.List<java.lang.String> strList44 = strTokenizer43.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder27.appendAll((java.lang.Iterable<java.lang.String>) strList44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.insert((int) (short) 1, (java.lang.Object) 100.0f);
        java.lang.StringBuffer stringBuffer49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln(stringBuffer49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.appendNewLine();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        properties55.clear();
        properties55.clear();
        properties55.clear();
        java.util.Set<java.lang.String> strSet59 = properties55.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.appendAll((java.lang.Iterable<java.lang.String>) strSet59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder50.appendAll((java.lang.Iterable<java.lang.String>) strSet59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder22.appendWithSeparators((java.lang.Iterable<java.lang.String>) strSet59, "ih35");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder22.setNullText("okenizer[not=0                ");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test13472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13472");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('4', 0);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setTrimmerMatcher(strMatcher41);
        java.lang.String str43 = strTokenizer39.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert((int) (short) 10, "100.0i!1.0\n#4#a4#hi!1.0\nfalse\n#48");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.insert(65, (double) 50);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 65");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test13473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13473");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: ");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.lang.Throwable throwable5 = null;
        java.io.IOException iOException6 = new java.io.IOException("", throwable5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray8 = iOException7.getSuppressed();
        java.lang.Throwable[] throwableArray9 = iOException7.getSuppressed();
        iOException3.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException3);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test13474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13474");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray23 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.reverse();
        int int26 = strBuilder22.indexOf('#');
        java.lang.StringBuffer stringBuffer27 = strBuilder22.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceAll(' ', '#');
        boolean boolean35 = strBuilder30.contains("hi!1.0\nfalse\n4");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.appendSeparator('#', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder22.appendFixedWidthPadLeft((java.lang.Object) strBuilder30, (int) (byte) 10, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.insert(0, "010.0");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup45 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor46 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup45);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup47 = strSubstitutor46.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor49 = strSubstitutor46.setVariablePrefix("hi!");
        java.lang.StringBuffer stringBuffer50 = null;
        boolean boolean51 = strSubstitutor46.replaceIn(stringBuffer50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strSubstitutor46.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor54 = strSubstitutor46.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor56 = strSubstitutor54.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor58 = strSubstitutor54.setVariableSuffix("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor60 = strSubstitutor54.setVariablePrefix('.');
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strSubstitutor54.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup62 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor63 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup62);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup64 = strSubstitutor63.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor66 = strSubstitutor63.setVariablePrefix('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("{}");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor69 = strSubstitutor66.setVariableSuffixMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup70 = strSubstitutor66.getVariableResolver();
        boolean boolean71 = strSubstitutor66.isEnableSubstitutionInVariables();
        java.lang.Throwable throwable73 = null;
        java.io.IOException iOException74 = new java.io.IOException("", throwable73);
        java.io.IOException iOException75 = new java.io.IOException((java.lang.Throwable) iOException74);
        java.lang.Throwable[] throwableArray76 = iOException75.getSuppressed();
        java.lang.Throwable[] throwableArray77 = iOException75.getSuppressed();
        java.lang.String str78 = strSubstitutor66.replace((java.lang.Object) throwableArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean82 = strBuilder80.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder80.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder80.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder80.appendln("StrTokenizer[#4#a4#]");
        java.lang.StringBuffer stringBuffer89 = strBuilder88.toStringBuffer();
        boolean boolean90 = strSubstitutor66.replaceIn(stringBuffer89);
        java.lang.String str91 = strSubstitutor54.replace(stringBuffer89);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder44.append(stringBuffer89, 74, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(stringBuffer27);
        org.junit.Assert.assertEquals(stringBuffer27.toString(), "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(wildcardStrLookup47);
        org.junit.Assert.assertNotNull(strSubstitutor49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strSubstitutor54);
        org.junit.Assert.assertNotNull(strSubstitutor56);
        org.junit.Assert.assertNotNull(strSubstitutor58);
        org.junit.Assert.assertNotNull(strSubstitutor60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNull(wildcardStrLookup64);
        org.junit.Assert.assertNotNull(strSubstitutor66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strSubstitutor69);
        org.junit.Assert.assertNull(wildcardStrLookup70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(stringBuffer89);
        org.junit.Assert.assertEquals(stringBuffer89.toString(), "hi!1.0\nStrTokenizer[#4#a4#]\n");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!1.0\nStrTokenizer[#4#a4#]\n" + "'", str91, "hi!1.0\nStrTokenizer[#4#a4#]\n");
    }

    @Test
    public void test13475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13475");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.replaceFirst("1", "StrT10okenizer[#4#a4#]100aaaaaaaa#4a#4#\n0.1!i0.001h\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln(52);
        int int33 = strBuilder31.indexOf("#4a#4#\n0.1!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 36 + "'", int33 == 36);
    }

    @Test
    public void test13476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13476");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        boolean boolean4 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties1.elements();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher16, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendln(charArray14);
        java.io.Reader reader23 = strBuilder7.asReader();
        reader23.reset();
        properties1.load(reader23);
        reader23.reset();
        boolean boolean27 = reader23.ready();
        int int28 = reader23.read();
        int int29 = reader23.read();
        java.nio.CharBuffer charBuffer30 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int31 = reader23.read(charBuffer30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 104 + "'", int28 == 104);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 105 + "'", int29 == 105);
    }

    @Test
    public void test13477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13477");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher25, strMatcher27);
        boolean boolean29 = strTokenizer28.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer28.getDelimiterMatcher();
        int int31 = strBuilder1.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder1.appendSeparator("hi!\n100aaaaaaa52.0\n", 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa35");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.insert(7, (double) 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.ensureCapacity(55);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test13478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13478");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup0 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup0);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup2 = strSubstitutor1.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = strSubstitutor1.setVariablePrefix("hi!");
        char char5 = strSubstitutor4.getEscapeChar();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor7 = strSubstitutor4.setVariableSuffix("h!true#4#a4#false");
        strSubstitutor7.setEscapeChar('1');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor7.setVariableSuffix('i');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = strSubstitutor11.replace("hi!#4#a4#\na\n", 0, (int) '.');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardStrLookup2);
        org.junit.Assert.assertNotNull(strSubstitutor4);
        org.junit.Assert.assertTrue("'" + char5 + "' != '" + '$' + "'", char5 == '$');
        org.junit.Assert.assertNotNull(strSubstitutor7);
        org.junit.Assert.assertNotNull(strSubstitutor11);
    }

    @Test
    public void test13479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13479");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        boolean boolean19 = reader17.markSupported();
        reader17.close();
        reader17.close();
        long long23 = reader17.skip((long) 10);
        reader17.close();
        reader17.mark((int) (byte) 0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10L + "'", long23 == 10L);
    }

    @Test
    public void test13480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13480");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.Object obj33 = properties1.getOrDefault((java.lang.Object) strList18, (java.lang.Object) charArray25);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj36 = properties1.remove((java.lang.Object) properties35);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties1.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean41 = strBuilder39.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendln((float) 1L);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher52, strMatcher54);
        java.util.List<java.lang.String> strList56 = strTokenizer55.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder39.appendAll((java.lang.Iterable<java.lang.String>) strList56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray61 = strBuilder60.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.reverse();
        java.lang.String str63 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder65.appendNewLine();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        properties68.clear();
        properties68.clear();
        properties68.clear();
        java.util.Set<java.lang.String> strSet72 = properties68.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder65.appendAll((java.lang.Iterable<java.lang.String>) strSet72);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder60.appendln(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder60.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer("h100.0i!1.0\n#4#a4#32.0#4#a4#\n", '4', '$');
        java.lang.Object obj84 = properties1.getOrDefault((java.lang.Object) strBuilder76, (java.lang.Object) strTokenizer83);
        java.lang.String str86 = properties1.getProperty("hi!1.0i!\n#4#a4#\ntrue\n");
        java.lang.String str89 = properties1.getProperty("4#84.0\n", "");
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "#4a#4#\n0.1!i0.001h" + "'", str63, "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
    }

    @Test
    public void test13481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13481");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setLength(37);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher44, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder35.appendln(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder33.appendln(charArray42);
        java.io.Writer writer52 = strBuilder33.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder33.replace(1, 14, "h100.0i!1.0\n#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.trim();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("#4#a4#");
        java.util.List<java.lang.String> strList64 = strTokenizer61.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder58.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList64, "hi!java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder30.appendAll((java.lang.Iterable<java.lang.String>) strList64);
        java.lang.String str68 = strBuilder30.toString();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(writer52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!4#a4#\na100a\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000" + "'", str68, "hi!4#a4#\na100a\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
    }

    @Test
    public void test13482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13482");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        java.util.Enumeration<?> wildcardEnumeration3 = properties1.propertyNames();
        boolean boolean5 = properties1.containsKey((java.lang.Object) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean9 = strBuilder7.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((float) 1L);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher20, strMatcher22);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray29 = strBuilder28.toCharArray();
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher38, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher38, strMatcher42);
        java.lang.Object obj44 = properties1.get((java.lang.Object) charArray29);
        java.util.Properties properties45 = new java.util.Properties(properties1);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        properties47.clear();
        properties47.clear();
        int int50 = properties47.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher64, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder55.appendln(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder53.appendln(charArray62);
        java.io.Writer writer72 = strBuilder53.asWriter();
        writer72.flush();
        writer72.write((int) (byte) -1);
        properties47.store(writer72, "hi!1.0\nfalse\n#");
        properties1.store(writer72, "StrTokenizer[not tokenized yet]");
        writer72.write("h100.0i!1.0\n#4#a4#\n");
        java.io.Writer writer83 = writer72.append('a');
        writer72.close();
        java.io.Writer writer86 = writer72.append('t');
        java.io.Writer writer88 = writer86.append('t');
        java.io.Writer writer90 = writer86.append('$');
        writer90.write(12);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(writer72);
        org.junit.Assert.assertNotNull(writer83);
        org.junit.Assert.assertNotNull(writer86);
        org.junit.Assert.assertNotNull(writer88);
        org.junit.Assert.assertNotNull(writer90);
    }

    @Test
    public void test13483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13483");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.replaceFirst('#', '4');
        char[] charArray14 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, "h100.0i!1.0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', '4');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "hi!1.0\nfalse\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[h, i, !, 1, ., 0, \n, f, a, l, s, e, \n, 4]");
    }

    @Test
    public void test13484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13484");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        char[] charArray8 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.append(true);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher23, strMatcher25);
        boolean boolean27 = strTokenizer26.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher37, strMatcher39);
        boolean boolean41 = strBuilder10.contains(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher37);
        boolean boolean43 = properties1.equals((java.lang.Object) strMatcher37);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties1.elements();
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strTokenizer56.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList58 = strTokenizer56.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer56.setQuoteChar('#');
        boolean boolean61 = properties1.equals((java.lang.Object) '#');
        java.lang.Object obj64 = properties1.setProperty("hi!\na#\n0.1!i0.0#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#", "                              hi!\na#\n0.1!i0.0");
        java.util.Enumeration<?> wildcardEnumeration65 = properties1.propertyNames();
        java.lang.String str67 = properties1.getProperty("hi!\na1109");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test13485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13485");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.ensureCapacity((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.replace(129, 62, "");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test13486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13486");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        properties1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean8 = strBuilder6.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(true);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher19, strMatcher21);
        boolean boolean23 = strTokenizer22.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setTrimmerMatcher(strMatcher38);
        int int41 = strBuilder24.lastIndexOf(strMatcher38, (int) (byte) 10);
        boolean boolean42 = properties1.containsValue((java.lang.Object) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder24.appendln((double) 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder24.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder24.append(61);
        java.lang.String str50 = strBuilder48.rightString(43);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!true#4#a4#16.0\n97\n61" + "'", str50, "hi!true#4#a4#16.0\n97\n61");
    }

    @Test
    public void test13487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13487");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append(true);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteCharAt((int) (byte) 1);
        java.lang.String str26 = strBuilder23.midString(0, 104);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.replaceFirst("StrTokenizer[StrTokenzer[not tokenzed yet]]", ".0");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendSeparator("hi!#4#a4#\na100                                                 ", "hi!\nfalse");
        java.lang.StringBuffer stringBuffer33 = strBuilder32.toStringBuffer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "h!true#4#a4#false" + "'", str26, "h!true#4#a4#false");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(stringBuffer33);
        org.junit.Assert.assertEquals(stringBuffer33.toString(), "h!true#4#a4#falsehi!#4#a4#\na100                                                 ");
    }

    @Test
    public void test13488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13488");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        java.io.Reader reader17 = strBuilder1.asReader();
        reader17.reset();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        properties20.clear();
        java.lang.String str22 = properties20.toString();
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher31, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getQuoteMatcher();
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher44, strMatcher46);
        char[] charArray54 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, "");
        boolean boolean57 = properties20.replace((java.lang.Object) strMatcher35, (java.lang.Object) charArray42, (java.lang.Object) charArray54);
        int int58 = reader17.read(charArray42);
        long long60 = reader17.skip((long) (byte) 1);
        boolean boolean61 = reader17.ready();
        reader17.close();
        reader17.mark((int) '!');
        int int65 = reader17.read();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "hi!#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "hi!#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[h, i, !, #, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 6 + "'", int58 == 6);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
    }

    @Test
    public void test13489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13489");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((double) '4');
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        boolean boolean21 = strTokenizer20.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList22 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer20.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer26, "StrTokenizer[not tokenized yet]");
        java.io.Writer writer29 = strBuilder1.asWriter();
        writer29.write((int) ' ');
        writer29.write("");
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        properties35.clear();
        properties35.clear();
        properties35.clear();
        java.lang.Throwable throwable40 = null;
        java.io.IOException iOException41 = new java.io.IOException("", throwable40);
        java.io.IOException iOException42 = new java.io.IOException((java.lang.Throwable) iOException41);
        boolean boolean43 = properties35.containsValue((java.lang.Object) iOException41);
        java.lang.String str44 = properties35.toString();
        java.lang.String str45 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) "", properties35);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher56, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray54);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder47.appendln(charArray54);
        java.io.Reader reader63 = strBuilder47.asReader();
        reader63.reset();
        boolean boolean65 = reader63.markSupported();
        reader63.reset();
        int int67 = reader63.read();
        long long69 = reader63.skip((long) ' ');
        reader63.close();
        long long72 = reader63.skip((long) 8);
        reader63.reset();
        long long75 = reader63.skip((long) 't');
        properties35.load(reader63);
        java.lang.String str79 = properties35.getProperty("\n", "kenizer[#4#a4#]hi! .0\nalse\n00aaaaaaa");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{}" + "'", str44, "{}");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 104 + "'", int67 == 104);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 9L + "'", long69 == 9L);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10L + "'", long75 == 10L);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "kenizer[#4#a4#]hi! .0\nalse\n00aaaaaaa" + "'", str79, "kenizer[#4#a4#]hi! .0\nalse\n00aaaaaaa");
    }

    @Test
    public void test13490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13490");
        char[] charArray7 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher9, strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        int int23 = strBuilder21.lastIndexOf(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer12.setTrimmerMatcher(strMatcher22);
        java.lang.Object obj25 = strTokenizer12.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer12.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean30 = strBuilder28.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendln((float) 1L);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher41, strMatcher43);
        java.util.List<java.lang.String> strList45 = strTokenizer44.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder28.appendAll((java.lang.Iterable<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray50 = strBuilder49.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("rT10okenizer[#4#a4#]100aaaaaaaa", strMatcher26, strMatcher51);
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup53 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor54 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup53);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup55 = strSubstitutor54.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor57 = strSubstitutor54.setVariablePrefix("hi!");
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup58 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor59 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup58);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup60 = strSubstitutor59.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor62 = strSubstitutor59.setVariablePrefix("hi!");
        char char63 = strSubstitutor59.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean67 = strBuilder65.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder71.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder71.setNullText("hi!\na");
        java.lang.String str80 = strSubstitutor59.replace(strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder82.appendNewLine();
        java.util.stream.IntStream intStream84 = strBuilder83.chars();
        boolean boolean85 = strBuilder79.equals((java.lang.Object) strBuilder83);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder79.setCharAt(0, '1');
        boolean boolean91 = strSubstitutor57.replaceIn(strBuilder88, 7, 0);
        strSubstitutor57.setEscapeChar('$');
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strSubstitutor57.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer52.setDelimiterMatcher(strMatcher94);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNull(wildcardStrLookup55);
        org.junit.Assert.assertNotNull(strSubstitutor57);
        org.junit.Assert.assertNull(wildcardStrLookup60);
        org.junit.Assert.assertNotNull(strSubstitutor62);
        org.junit.Assert.assertTrue("'" + char63 + "' != '" + '$' + "'", char63 == '$');
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str80, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(intStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strTokenizer95);
    }

    @Test
    public void test13491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13491");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher10, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('a', 10);
        java.util.Properties properties20 = new java.util.Properties();
        boolean boolean21 = strBuilder16.equals((java.lang.Object) properties20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.appendln(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator('a', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((int) (byte) 100, (int) '4', ' ');
        boolean boolean59 = properties20.remove((java.lang.Object) charArray28, (java.lang.Object) strBuilder54);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties20.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean64 = strBuilder62.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln(false);
        int int69 = strBuilder68.length();
        int int72 = strBuilder68.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder68.replaceAll('4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("", "");
        java.lang.String str81 = strTokenizer80.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer80.getQuoteMatcher();
        int int84 = strBuilder77.lastIndexOf(strMatcher82, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder77.delete(2, 6);
        boolean boolean88 = properties20.containsKey((java.lang.Object) strBuilder87);
        java.lang.String str90 = strBuilder87.leftString(31);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 13 + "'", int69 == 13);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi\nalse\n" + "'", str90, "hi\nalse\n");
    }

    @Test
    public void test13492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13492");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        int int4 = properties1.size();
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objSet5);
    }

    @Test
    public void test13493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13493");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher14, strMatcher16);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (java.lang.Object) 100.0f);
        boolean boolean24 = strBuilder22.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendln((long) 19);
        java.io.Reader reader27 = strBuilder22.asReader();
        long long29 = reader27.skip((long) 43);
        reader27.close();
        int int31 = reader27.read();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 21L + "'", long29 == 21L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test13494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13494");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        java.util.Set<java.lang.String> strSet8 = properties4.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strSet8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean15 = strBuilder13.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', (int) (short) 1);
        int int25 = strBuilder22.lastIndexOf('4', 10);
        char[] charArray32 = new char[] { '4', '4', ' ', '#', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, "");
        java.lang.Object[] objArray35 = new java.lang.Object[] { "" };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder22.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder22.appendSeparator('4', (int) (short) 10);
        java.lang.StringBuffer stringBuffer40 = strBuilder22.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder9.appendln(stringBuffer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean45 = strBuilder43.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.appendln("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder41.appendFixedWidthPadRight((java.lang.Object) "StrTokenizer[#4#a4#]", 13, '#');
        java.lang.String str56 = strBuilder41.substring(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder41.replaceAll("StrTokenizer[#4#a4#]", "java.io.IOException: h100.0i!1.0\n#4#a4#19\n");
        int int60 = strBuilder41.capacity();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup61 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor62 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup61);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup63 = strSubstitutor62.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor65 = strSubstitutor62.setVariablePrefix("hi!");
        char char66 = strSubstitutor62.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean70 = strBuilder68.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder74.insert(0, "#4a#4#\n0.1!i0.001h");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder74.setNullText("hi!\na");
        java.lang.String str83 = strSubstitutor62.replace(strBuilder82);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder82.delete(1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder41.append((java.lang.CharSequence) strBuilder86);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder89.replace(22, 63, "ue#4#a4#StrTokenizer[not tokenized yet]{}");
        boolean boolean94 = strBuilder89.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "44 #4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "44 #4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, 4,  , #, 4,  ]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(stringBuffer40);
        org.junit.Assert.assertEquals(stringBuffer40.toString(), "hi!1.0\nfalse\n#4");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "i!1.0\nfalse\n#4\nStrTokenizer[" + "'", str56, "i!1.0\nfalse\n#4\nStrTokenizer[");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 35 + "'", int60 == 35);
        org.junit.Assert.assertNull(wildcardStrLookup63);
        org.junit.Assert.assertNotNull(strSubstitutor65);
        org.junit.Assert.assertTrue("'" + char66 + "' != '" + '$' + "'", char66 == '$');
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#" + "'", str83, "#4a#4#\n0.1!i0.001hhi!1.0\nfalse\n#");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test13495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13495");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties4.clear();
        properties4.clear();
        properties4.clear();
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher16, strMatcher18);
        boolean boolean20 = strTokenizer19.isEmptyTokenAsNull();
        int int21 = strTokenizer19.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer19.setTrimmerMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer19.setQuoteChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean29 = strBuilder27.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln(false);
        int int34 = strBuilder33.length();
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher43, strMatcher45);
        java.util.List<java.lang.String> strList47 = strTokenizer46.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendAll((java.lang.Iterable<java.lang.String>) strList47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean52 = strBuilder50.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((float) 1L);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher63, strMatcher65);
        java.util.List<java.lang.String> strList67 = strTokenizer66.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder50.appendAll((java.lang.Iterable<java.lang.String>) strList67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray72 = strBuilder71.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.reverse();
        java.lang.String str74 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strBuilder71);
        boolean boolean75 = properties4.replace((java.lang.Object) strTokenizer25, (java.lang.Object) strList47, (java.lang.Object) strBuilder71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer25.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher2, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("a4#13\n0", strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer80.setDelimiterString("hi!1.0i!\n#4#a4#\ntrue\n");
        java.lang.String str83 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strTokenizer80);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 13 + "'", int34 == 13);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "#4a#4#\n0.1!i0.001h" + "'", str74, "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str83, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test13496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13496");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties1.clear();
        properties1.clear();
        boolean boolean4 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties1.elements();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher16, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendln(charArray14);
        java.io.Reader reader23 = strBuilder7.asReader();
        reader23.reset();
        properties1.load(reader23);
        java.lang.Object obj26 = properties1.clone();
        properties1.clear();
        java.util.Properties properties28 = new java.util.Properties(properties1);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        java.util.Enumeration<?> wildcardEnumeration32 = properties30.propertyNames();
        boolean boolean34 = properties30.containsKey((java.lang.Object) (-1));
        java.util.Collection<java.lang.Object> objCollection35 = properties30.values();
        java.util.Set<java.lang.Object> objSet36 = properties30.keySet();
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher45, strMatcher47);
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        int int50 = strTokenizer48.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer48.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer48.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setQuoteMatcher(strMatcher54);
        java.lang.String[] strArray56 = strTokenizer55.getTokenArray();
        java.lang.Object obj57 = properties30.remove((java.lang.Object) strTokenizer55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher71, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray69);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder62.appendln(charArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder60.appendln(charArray69);
        java.io.Writer writer79 = strBuilder60.asWriter();
        writer79.flush();
        writer79.write((int) (byte) -1);
        writer79.flush();
        boolean boolean84 = properties30.containsValue((java.lang.Object) writer79);
        writer79.write("{StrTokenizer[not=0                                                 }", (int) '#', 11);
        properties28.store(writer79, "hi!true#4#a4#4");
        properties28.clear();
        java.util.Collection<java.lang.Object> objCollection92 = properties28.values();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{hi!#4#a4#=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{hi!#4#a4#=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{hi!#4#a4#=}");
        org.junit.Assert.assertNotNull(wildcardEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objCollection92);
    }

    @Test
    public void test13497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13497");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(100, (int) (byte) 10, 'a');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher15, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray24 = new char[] { '#', '#', '4' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean28 = strBuilder26.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(true);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher39, strMatcher41);
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher53, strMatcher55);
        boolean boolean57 = strBuilder26.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher53);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher53, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) 10.0f);
        char[] charArray82 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, strMatcher84, strMatcher86);
        java.util.List<java.lang.String> strList88 = strTokenizer87.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer87.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder73.appendFixedWidthPadLeft((java.lang.Object) strTokenizer90, (int) (short) 0, '$');
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup94 = null;
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor95 = new org.apache.commons.lang3.text.StrSubstitutor(strStrLookup94);
        org.apache.commons.lang3.text.StrMatcher strMatcher96 = strSubstitutor95.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder73.appendln((java.lang.Object) strSubstitutor95);
        org.apache.commons.lang3.text.StrMatcher strMatcher98 = strSubstitutor95.getVariablePrefixMatcher();
        java.lang.Class<?> wildcardClass99 = strMatcher98.getClass();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strMatcher96);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strMatcher98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test13498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13498");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        int int11 = strBuilder7.lastIndexOf('4', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append(8);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        properties19.clear();
        properties19.clear();
        properties19.clear();
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher31, strMatcher33);
        boolean boolean35 = strTokenizer34.isEmptyTokenAsNull();
        int int36 = strTokenizer34.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer34.setTrimmerMatcher(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer34.setQuoteChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean44 = strBuilder42.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln(false);
        int int49 = strBuilder48.length();
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher58, strMatcher60);
        java.util.List<java.lang.String> strList62 = strTokenizer61.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder48.appendAll((java.lang.Iterable<java.lang.String>) strList62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean67 = strBuilder65.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.appendln((float) 1L);
        char[] charArray76 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher78, strMatcher80);
        java.util.List<java.lang.String> strList82 = strTokenizer81.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder65.appendAll((java.lang.Iterable<java.lang.String>) strList82);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray87 = strBuilder86.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.reverse();
        java.lang.String str89 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strBuilder86);
        boolean boolean90 = properties19.replace((java.lang.Object) strTokenizer40, (java.lang.Object) strList62, (java.lang.Object) strBuilder86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer40.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher17, strMatcher93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer("a4#13\n0", strMatcher93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = strTokenizer95.setDelimiterString("hi!1.0i!\n#4#a4#\ntrue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer97);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 13 + "'", int49 == 13);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "#4a#4#\n0.1!i0.001h" + "'", str89, "#4a#4#\n0.1!i0.001h");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertNotNull(strTokenizer97);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test13499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13499");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean3 = strBuilder1.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(false);
        int int8 = strBuilder7.length();
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher17, strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("{}", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.ensureCapacity((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("1.0\nfalse\n#");
        int int30 = strBuilder29.length();
        char[] charArray31 = strBuilder29.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.insert(46, (double) 96);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 46");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 13 + "'", int8 == 13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "hi!4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "hi!4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[h, i, !, 4, #, a, 4, #]");
    }

    @Test
    public void test13500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13500");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceAll(' ', '#');
        char[] charArray6 = strBuilder2.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.replaceFirst("hi!\n", "0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.append('h');
        int int14 = strBuilder11.indexOf("h100.0i!1.0\n#4#a4#", 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst('h');
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        properties18.clear();
        properties18.clear();
        properties18.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean25 = strBuilder23.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.append(true);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher36, strMatcher38);
        boolean boolean40 = strTokenizer39.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder23.appendAll((java.util.Iterator<java.lang.String>) strTokenizer39);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher50, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer53.setTrimmerMatcher(strMatcher55);
        int int58 = strBuilder41.lastIndexOf(strMatcher55, (int) (byte) 10);
        boolean boolean59 = properties18.containsValue((java.lang.Object) strBuilder41);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties18.entrySet();
        properties18.clear();
        java.lang.String str63 = properties18.getProperty("java.io.IOException: java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        boolean boolean68 = strBuilder66.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.appendln((float) 1L);
        char[] charArray77 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher79, strMatcher81);
        java.util.List<java.lang.String> strList83 = strTokenizer82.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder66.appendAll((java.lang.Iterable<java.lang.String>) strList83);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.insert((int) (short) 1, (java.lang.Object) 100.0f);
        char[] charArray88 = strBuilder87.toCharArray();
        boolean boolean89 = properties18.remove((java.lang.Object) 15, (java.lang.Object) strBuilder87);
        java.util.Set<java.lang.String> strSet90 = properties18.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder16.appendWithSeparators((java.lang.Iterable<java.lang.String>) strSet90, "{{}=hi!\nfalse}");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder92.appendln(41);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str97 = strBuilder92.substring(123, (int) 'E');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "h100.0i!1.0\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[h, 1, 0, 0, ., 0, i, !, 1, ., 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strSet90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
    }
}

