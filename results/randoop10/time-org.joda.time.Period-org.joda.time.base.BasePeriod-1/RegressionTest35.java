import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest35 {

    public static boolean debug = false;

    @Test
    public void test17501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17501");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period8 = period6.minusMonths(0);
        org.joda.time.Minutes minutes9 = period8.toStandardMinutes();
        org.joda.time.Duration duration10 = minutes9.toStandardDuration();
        org.joda.time.Period period13 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period15 = period13.minusMonths(0);
        org.joda.time.Minutes minutes16 = period15.toStandardMinutes();
        org.joda.time.Duration duration17 = minutes16.toStandardDuration();
        boolean boolean18 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(readableInstant19, readableInstant20);
        org.joda.time.Duration duration22 = duration10.minus((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant23);
        org.joda.time.Duration duration26 = duration10.plus((long) 8);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = duration10.toPeriodFrom(readableInstant27);
        org.joda.time.Period period31 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period32 = period31.negated();
        org.joda.time.DurationFieldType durationFieldType34 = period31.getFieldType((int) (short) 1);
        int int35 = period28.get(durationFieldType34);
        org.joda.time.PeriodType periodType36 = period28.getPeriodType();
        org.joda.time.PeriodType periodType37 = periodType36.withDaysRemoved();
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant2, readableInstant3, periodType37);
        org.joda.time.Period period39 = new org.joda.time.Period((long) 268435465, (long) (short) -1, periodType37);
        org.joda.time.PeriodType periodType40 = period39.getPeriodType();
        org.joda.time.Period period42 = period39.minusHours((-2147483548));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
    }

    @Test
    public void test17502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17502");
        org.joda.time.format.PeriodPrinter periodPrinter4 = null;
        org.joda.time.format.PeriodParser periodParser5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = new org.joda.time.format.PeriodFormatter(periodPrinter4, periodParser5);
        boolean boolean7 = periodFormatter6.isParser();
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds11 = seconds9.plus(seconds10);
        org.joda.time.PeriodType periodType12 = seconds9.getPeriodType();
        org.joda.time.Period period15 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period16 = period15.negated();
        org.joda.time.DurationFieldType durationFieldType18 = period15.getFieldType((int) (short) 1);
        int int19 = periodType12.indexOf(durationFieldType18);
        org.joda.time.Period period20 = new org.joda.time.Period((long) ' ', periodType12);
        org.joda.time.format.PeriodFormatter periodFormatter21 = periodFormatter6.withParseType(periodType12);
        org.joda.time.PeriodType periodType22 = periodType12.withDaysRemoved();
        org.joda.time.PeriodType periodType23 = periodType22.withSecondsRemoved();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) 0, (long) 3, periodType22, chronology24);
        org.joda.time.PeriodType periodType26 = periodType22.withWeeksRemoved();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period(0L, (long) 2147483644, periodType22, chronology27);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(periodFormatter21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType26);
    }

    @Test
    public void test17503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17503");
        org.joda.time.ReadableDuration readableDuration0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period6 = period4.minusMonths(0);
        org.joda.time.Minutes minutes7 = period6.toStandardMinutes();
        org.joda.time.Duration duration8 = minutes7.toStandardDuration();
        org.joda.time.Minutes minutes10 = minutes7.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration11 = minutes7.toStandardDuration();
        org.joda.time.Period period14 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period16 = period14.minusMonths(0);
        org.joda.time.Minutes minutes17 = period16.toStandardMinutes();
        org.joda.time.Duration duration18 = minutes17.toStandardDuration();
        org.joda.time.Period period19 = duration18.toPeriod();
        boolean boolean20 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Period period23 = duration11.toPeriodTo(readableInstant21, periodType22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = duration11.toPeriodFrom(readableInstant24);
        int int26 = period25.getMinutes();
        org.joda.time.Period period28 = period25.withHours(6);
        org.joda.time.PeriodType periodType29 = period25.getPeriodType();
        org.joda.time.PeriodType periodType30 = periodType29.withYearsRemoved();
        org.joda.time.Period period31 = new org.joda.time.Period(readableDuration0, readableInstant1, periodType29);
        org.joda.time.Period period33 = org.joda.time.Period.parse("PT2S");
        int int34 = period33.getHours();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period38 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period40 = period38.minusMonths(0);
        org.joda.time.Minutes minutes41 = period40.toStandardMinutes();
        org.joda.time.Minutes minutes43 = minutes41.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes44 = minutes35.minus(minutes41);
        org.joda.time.DurationFieldType durationFieldType45 = minutes35.getFieldType();
        org.joda.time.Period period47 = period33.withFieldAdded(durationFieldType45, 4);
        org.joda.time.Period period49 = period31.withFieldAdded(durationFieldType45, (int) (short) 1);
        org.joda.time.Period period51 = period31.withMonths((-97));
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Duration duration53 = period51.toDurationFrom(readableInstant52);
        org.joda.time.Duration duration55 = duration53.plus((long) (-207432000));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration55);
    }

    @Test
    public void test17504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17504");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withParseType(periodType5);
        boolean boolean8 = periodFormatter7.isPrinter();
        org.joda.time.format.PeriodParser periodParser9 = periodFormatter7.getParser();
        boolean boolean10 = periodFormatter7.isParser();
        java.util.Locale locale11 = null;
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter7.withLocale(locale11);
        java.util.Locale locale13 = periodFormatter12.getLocale();
        java.util.Locale locale14 = periodFormatter12.getLocale();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(periodParser9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertNull(locale13);
        org.junit.Assert.assertNull(locale14);
    }

    @Test
    public void test17505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17505");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        boolean boolean14 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration16 = duration6.plus((long) (short) 10);
        org.joda.time.Period period17 = duration6.toPeriod();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period23 = period21.minusMonths(0);
        org.joda.time.Minutes minutes24 = period23.toStandardMinutes();
        org.joda.time.Duration duration25 = minutes24.toStandardDuration();
        org.joda.time.Period period26 = duration25.toPeriod();
        org.joda.time.Duration duration28 = duration25.plus((long) (byte) 0);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration28);
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Period period32 = duration28.toPeriod(periodType31);
        boolean boolean33 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration28);
        java.lang.String str34 = duration28.toString();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = duration28.toPeriodTo(readableInstant35);
        java.lang.String str37 = duration28.toString();
        long long38 = duration28.getMillis();
        long long39 = duration28.getStandardSeconds();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT0S" + "'", str34, "PT0S");
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT0S" + "'", str37, "PT0S");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    }

    @Test
    public void test17506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17506");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (-5), chronology1);
        org.joda.time.Period period5 = new org.joda.time.Period((long) 35, (long) (byte) 1);
        org.joda.time.Period period6 = period5.toPeriod();
        org.joda.time.Seconds seconds7 = period6.toStandardSeconds();
        org.joda.time.Period period8 = period2.withFields((org.joda.time.ReadablePeriod) seconds7);
        org.joda.time.Period period10 = period2.withMillis(268435465);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test17507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17507");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds4 = seconds2.plus(seconds3);
        org.joda.time.Seconds seconds6 = seconds2.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds7 = seconds1.plus(seconds2);
        org.joda.time.Seconds seconds9 = seconds1.plus((int) '4');
        org.joda.time.Duration duration10 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds15 = seconds13.plus(seconds14);
        org.joda.time.Seconds seconds17 = seconds13.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds18 = seconds12.plus(seconds13);
        org.joda.time.Seconds seconds20 = seconds12.plus((int) '4');
        org.joda.time.Duration duration21 = seconds20.toStandardDuration();
        boolean boolean22 = seconds9.isLessThan(seconds20);
        org.joda.time.Seconds seconds23 = seconds9.negated();
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds26 = seconds24.plus(seconds25);
        org.joda.time.Seconds seconds28 = seconds25.plus((int) (byte) 0);
        org.joda.time.Seconds seconds30 = seconds25.minus(8);
        org.joda.time.DurationFieldType durationFieldType31 = seconds25.getFieldType();
        boolean boolean32 = seconds9.isGreaterThan(seconds25);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds37 = seconds35.plus(seconds36);
        org.joda.time.Seconds seconds39 = seconds35.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds40 = seconds34.plus(seconds35);
        org.joda.time.Duration duration41 = seconds35.toStandardDuration();
        org.joda.time.Period period43 = org.joda.time.Period.hours((int) '#');
        org.joda.time.Seconds seconds44 = period43.toStandardSeconds();
        boolean boolean45 = seconds35.isLessThan(seconds44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds48 = seconds46.plus(seconds47);
        org.joda.time.PeriodType periodType49 = seconds46.getPeriodType();
        int int50 = seconds46.size();
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.seconds((int) (byte) 10);
        boolean boolean54 = seconds52.equals((java.lang.Object) "PeriodType[StandardNoMinutes]");
        org.joda.time.Seconds seconds55 = seconds46.plus(seconds52);
        boolean boolean56 = seconds35.isGreaterThan(seconds46);
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds59 = seconds57.plus(seconds58);
        java.lang.String str60 = seconds57.toString();
        org.joda.time.DurationFieldType durationFieldType61 = seconds57.getFieldType();
        org.joda.time.Seconds seconds63 = seconds57.multipliedBy(0);
        org.joda.time.Seconds seconds65 = seconds57.dividedBy((-1));
        org.joda.time.Seconds seconds66 = seconds35.minus(seconds57);
        org.joda.time.Seconds seconds67 = seconds25.minus(seconds66);
        org.joda.time.Seconds seconds69 = seconds25.minus((-520));
        java.lang.String str70 = seconds25.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PT2S" + "'", str60, "PT2S");
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "PT2S" + "'", str70, "PT2S");
    }

    @Test
    public void test17508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17508");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period5 = period2.normalizedStandard();
        org.joda.time.Period period7 = period2.minusMinutes((int) '#');
        org.joda.time.Duration duration8 = period7.toStandardDuration();
        int int9 = period7.getWeeks();
        org.joda.time.MutablePeriod mutablePeriod10 = period7.toMutablePeriod();
        org.joda.time.format.PeriodPrinter periodPrinter11 = null;
        org.joda.time.format.PeriodParser periodParser12 = null;
        org.joda.time.format.PeriodFormatter periodFormatter13 = new org.joda.time.format.PeriodFormatter(periodPrinter11, periodParser12);
        boolean boolean14 = periodFormatter13.isParser();
        org.joda.time.Days days16 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days18 = days16.multipliedBy((int) (short) 100);
        org.joda.time.Duration duration19 = days16.toStandardDuration();
        org.joda.time.Duration duration21 = new org.joda.time.Duration((long) (byte) -1);
        long long22 = duration21.getMillis();
        int int23 = duration19.compareTo((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Duration duration25 = duration21.plus((long) 59);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period31 = period29.minusMonths(0);
        org.joda.time.Period period33 = period31.minusSeconds(0);
        org.joda.time.Period period35 = period33.minusWeeks(10);
        org.joda.time.Period period36 = period33.negated();
        org.joda.time.Period period38 = period33.minusMillis((int) (short) 0);
        org.joda.time.DurationFieldType[] durationFieldTypeArray39 = period33.getFieldTypes();
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.forFields(durationFieldTypeArray39);
        org.joda.time.Period period41 = duration25.toPeriodTo(readableInstant26, periodType40);
        org.joda.time.format.PeriodFormatter periodFormatter42 = periodFormatter13.withParseType(periodType40);
        org.joda.time.Period period44 = org.joda.time.Period.hours((int) (short) 10);
        int int45 = period44.size();
        int int46 = period44.getHours();
        org.joda.time.format.PeriodPrinter periodPrinter47 = null;
        org.joda.time.format.PeriodParser periodParser48 = null;
        org.joda.time.format.PeriodFormatter periodFormatter49 = new org.joda.time.format.PeriodFormatter(periodPrinter47, periodParser48);
        boolean boolean50 = periodFormatter49.isParser();
        org.joda.time.Days days51 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType52 = days51.getPeriodType();
        org.joda.time.PeriodType periodType53 = periodType52.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter54 = periodFormatter49.withParseType(periodType52);
        boolean boolean55 = periodFormatter54.isPrinter();
        boolean boolean56 = periodFormatter54.isParser();
        org.joda.time.format.PeriodParser periodParser57 = periodFormatter54.getParser();
        org.joda.time.PeriodType periodType58 = periodFormatter54.getParseType();
        org.joda.time.Period period59 = period44.normalizedStandard(periodType58);
        org.joda.time.Period period61 = org.joda.time.Period.hours((-1));
        org.joda.time.Duration duration64 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration66 = duration64.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration66, readableInstant67);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Days days72 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType73 = days72.getPeriodType();
        org.joda.time.PeriodType periodType74 = periodType73.withHoursRemoved();
        org.joda.time.PeriodType periodType75 = periodType73.withSecondsRemoved();
        org.joda.time.Period period76 = duration70.toPeriodFrom(readableInstant71, periodType73);
        org.joda.time.DurationFieldType durationFieldType77 = org.joda.time.DurationFieldType.minutes();
        boolean boolean78 = periodType73.equals((java.lang.Object) durationFieldType77);
        java.lang.String str79 = durationFieldType77.getName();
        org.joda.time.Period period81 = period68.withFieldAdded(durationFieldType77, 8);
        boolean boolean82 = period61.isSupported(durationFieldType77);
        java.lang.String str83 = durationFieldType77.toString();
        boolean boolean84 = period59.isSupported(durationFieldType77);
        boolean boolean85 = periodType40.isSupported(durationFieldType77);
        int int86 = period7.indexOf(durationFieldType77);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(durationFieldTypeArray39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(periodFormatter42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8 + "'", int45 == 8);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodFormatter54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(periodParser57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "minutes" + "'", str79, "minutes");
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "minutes" + "'", str83, "minutes");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 5 + "'", int86 == 5);
    }

    @Test
    public void test17509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17509");
        org.joda.time.Duration duration3 = new org.joda.time.Duration((long) (-2));
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType9 = days8.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withHoursRemoved();
        org.joda.time.PeriodType periodType11 = periodType9.withSecondsRemoved();
        org.joda.time.Period period12 = duration6.toPeriodFrom(readableInstant7, periodType9);
        org.joda.time.Days days13 = duration6.toStandardDays();
        org.joda.time.PeriodType periodType14 = days13.getPeriodType();
        org.joda.time.Period period15 = duration3.toPeriodTo(readableInstant4, periodType14);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((long) 2, (long) 'a', periodType14, chronology16);
        int int18 = periodType14.size();
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test17510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17510");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.multipliedBy((int) 'a');
        org.joda.time.Hours hours4 = hours2.minus((int) (short) 10);
        int int5 = hours4.getHours();
        org.joda.time.Hours hours7 = hours4.minus(10);
        org.joda.time.PeriodType periodType8 = hours7.getPeriodType();
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn(readableInterval9);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Hours hours12 = org.joda.time.Hours.hoursIn(readableInterval11);
        org.joda.time.Hours hours14 = hours12.multipliedBy(8);
        org.joda.time.Hours hours15 = hours10.plus(hours12);
        org.joda.time.Period period17 = org.joda.time.Period.millis((int) '#');
        int int18 = period17.getYears();
        org.joda.time.Period period20 = period17.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours21 = period17.toStandardHours();
        int int22 = hours21.size();
        org.joda.time.Hours hours24 = hours21.multipliedBy(10);
        org.joda.time.Hours hours25 = hours10.minus(hours21);
        org.joda.time.Period period26 = hours21.toPeriod();
        org.joda.time.Hours hours27 = hours7.minus(hours21);
        org.joda.time.DurationFieldType durationFieldType28 = hours27.getFieldType();
        org.joda.time.Period period31 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period33 = period31.minusMonths(0);
        org.joda.time.Period period35 = period31.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType36 = period31.getPeriodType();
        org.joda.time.Hours hours37 = period31.toStandardHours();
        org.joda.time.Period period39 = org.joda.time.Period.millis((int) '#');
        int int40 = period39.getYears();
        org.joda.time.Hours hours41 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period39);
        boolean boolean42 = hours37.isLessThan(hours41);
        org.joda.time.Hours hours44 = hours41.plus(2147483645);
        java.lang.String str45 = hours41.toString();
        org.joda.time.Hours hours47 = org.joda.time.Hours.hours((-268435455));
        org.joda.time.PeriodType periodType48 = hours47.getPeriodType();
        org.joda.time.Hours hours49 = hours41.minus(hours47);
        boolean boolean50 = hours27.isLessThan(hours41);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 87 + "'", int5 == 87);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PT0H" + "'", str45, "PT0H");
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test17511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17511");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = hours0.getFieldType();
        org.joda.time.Period period4 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period4.negated();
        int int6 = period4.getHours();
        org.joda.time.Period period8 = org.joda.time.Period.days(10);
        org.joda.time.Period period10 = period8.plusMonths((int) 'a');
        org.joda.time.Period period12 = period8.plusSeconds((int) (short) 100);
        org.joda.time.Period period14 = period12.minusMonths((int) 'a');
        org.joda.time.Period period15 = period4.withFields((org.joda.time.ReadablePeriod) period14);
        org.joda.time.Hours hours16 = period4.toStandardHours();
        int int17 = hours16.getHours();
        org.joda.time.Hours hours18 = hours0.plus(hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours19.dividedBy(100);
        org.joda.time.Period period24 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period26 = period24.minusMonths(0);
        org.joda.time.Period period28 = period26.minusSeconds(0);
        org.joda.time.Period period29 = period28.normalizedStandard();
        org.joda.time.Hours hours30 = period29.toStandardHours();
        boolean boolean31 = hours21.isLessThan(hours30);
        org.joda.time.Period period33 = org.joda.time.Period.millis((int) '#');
        int int34 = period33.getYears();
        org.joda.time.Hours hours35 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period33);
        org.joda.time.Period period37 = period33.multipliedBy((int) (byte) 0);
        org.joda.time.Hours hours38 = period37.toStandardHours();
        org.joda.time.Hours hours39 = hours21.minus(hours38);
        boolean boolean40 = hours16.isLessThan(hours38);
        org.joda.time.Hours hours41 = org.joda.time.Hours.ONE;
        java.lang.String str42 = hours41.toString();
        org.joda.time.Hours hours43 = hours41.negated();
        org.joda.time.Hours hours44 = hours38.plus(hours41);
        org.joda.time.Duration duration45 = hours38.toStandardDuration();
        org.joda.time.Period period48 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period49 = period48.negated();
        int int50 = period48.getHours();
        org.joda.time.Period period52 = org.joda.time.Period.days(10);
        org.joda.time.Period period54 = period52.plusMonths((int) 'a');
        org.joda.time.Period period56 = period52.plusSeconds((int) (short) 100);
        org.joda.time.Period period58 = period56.minusMonths((int) 'a');
        org.joda.time.Period period59 = period48.withFields((org.joda.time.ReadablePeriod) period58);
        org.joda.time.Hours hours60 = period48.toStandardHours();
        org.joda.time.Period period63 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period64 = period63.negated();
        org.joda.time.Period period65 = period48.withFields((org.joda.time.ReadablePeriod) period63);
        org.joda.time.Period period67 = period65.plusWeeks(6);
        org.joda.time.Hours hours68 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period67);
        org.joda.time.Hours hours70 = hours68.minus(0);
        boolean boolean71 = duration45.equals((java.lang.Object) 0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT1H" + "'", str42, "PT1H");
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test17512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17512");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(2);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours4 = hours2.minus(hours3);
        boolean boolean5 = hours1.isLessThan(hours2);
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours8 = hours6.minus(hours7);
        org.joda.time.Hours hours10 = hours7.minus((-10));
        org.joda.time.PeriodType periodType11 = hours7.getPeriodType();
        org.joda.time.Hours hours12 = hours7.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.hours(7);
        org.joda.time.Duration duration15 = hours14.toStandardDuration();
        org.joda.time.Hours hours16 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = hours16.getFieldType();
        org.joda.time.Period period20 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period21 = period20.negated();
        int int22 = period20.getHours();
        org.joda.time.Period period24 = org.joda.time.Period.days(10);
        org.joda.time.Period period26 = period24.plusMonths((int) 'a');
        org.joda.time.Period period28 = period24.plusSeconds((int) (short) 100);
        org.joda.time.Period period30 = period28.minusMonths((int) 'a');
        org.joda.time.Period period31 = period20.withFields((org.joda.time.ReadablePeriod) period30);
        org.joda.time.Hours hours32 = period20.toStandardHours();
        int int33 = hours32.getHours();
        org.joda.time.Hours hours34 = hours16.plus(hours32);
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours35.dividedBy(100);
        org.joda.time.Period period40 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period42 = period40.minusMonths(0);
        org.joda.time.Period period44 = period42.minusSeconds(0);
        org.joda.time.Period period45 = period44.normalizedStandard();
        org.joda.time.Hours hours46 = period45.toStandardHours();
        boolean boolean47 = hours37.isLessThan(hours46);
        org.joda.time.Period period49 = org.joda.time.Period.millis((int) '#');
        int int50 = period49.getYears();
        org.joda.time.Hours hours51 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period49);
        org.joda.time.Period period53 = period49.multipliedBy((int) (byte) 0);
        org.joda.time.Hours hours54 = period53.toStandardHours();
        org.joda.time.Hours hours55 = hours37.minus(hours54);
        boolean boolean56 = hours32.isLessThan(hours54);
        org.joda.time.Hours hours57 = org.joda.time.Hours.ONE;
        java.lang.String str58 = hours57.toString();
        org.joda.time.Hours hours59 = hours57.negated();
        org.joda.time.Hours hours60 = null;
        org.joda.time.Hours hours61 = hours57.minus(hours60);
        boolean boolean62 = hours32.isLessThan(hours57);
        boolean boolean63 = hours14.isLessThan(hours57);
        org.joda.time.Hours hours65 = hours14.dividedBy((-87));
        boolean boolean66 = hours12.isGreaterThan(hours65);
        boolean boolean67 = hours2.isLessThan(hours12);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "PT1H" + "'", str58, "PT1H");
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test17513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17513");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(128849018820000L, periodType1);
        int int3 = period2.getSeconds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test17514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17514");
        org.joda.time.Period period1 = new org.joda.time.Period(180000L);
    }

    @Test
    public void test17515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17515");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        long long2 = duration1.getStandardSeconds();
        org.joda.time.Period period5 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period7 = period5.minusMonths(0);
        org.joda.time.Minutes minutes8 = period7.toStandardMinutes();
        org.joda.time.Duration duration9 = minutes8.toStandardDuration();
        org.joda.time.Minutes minutes11 = minutes8.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration12 = minutes8.toStandardDuration();
        org.joda.time.Period period15 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period17 = period15.minusMonths(0);
        org.joda.time.Minutes minutes18 = period17.toStandardMinutes();
        org.joda.time.Duration duration19 = minutes18.toStandardDuration();
        org.joda.time.Period period20 = duration19.toPeriod();
        boolean boolean21 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Period period24 = duration12.toPeriodTo(readableInstant22, periodType23);
        org.joda.time.Duration duration25 = duration1.plus((org.joda.time.ReadableDuration) duration12);
        java.lang.String str26 = duration1.toString();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardDays(0L);
        boolean boolean29 = duration1.isEqual((org.joda.time.ReadableDuration) duration28);
        long long30 = duration1.getStandardDays();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = duration1.toPeriodTo(readableInstant31);
        org.joda.time.Duration duration34 = duration1.minus((-2L));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds35 = duration1.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Value cannot fit in an int: -128849018880");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-128849018880L) + "'", long2 == (-128849018880L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT-128849018880S" + "'", str26, "PT-128849018880S");
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1491308L) + "'", long30 == (-1491308L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
    }

    @Test
    public void test17516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17516");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration4 = duration2.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalFrom(readableInstant7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval8);
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((-95));
        org.joda.time.Minutes minutes13 = minutes11.minus((int) (byte) 1);
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.DurationFieldType durationFieldType16 = minutes15.getFieldType();
        org.joda.time.Minutes minutes18 = minutes15.dividedBy(95);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(minutes18);
    }

    @Test
    public void test17517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17517");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds2 = seconds0.plus(seconds1);
        java.lang.String str3 = seconds0.toString();
        org.joda.time.DurationFieldType durationFieldType4 = seconds0.getFieldType();
        org.joda.time.Seconds seconds6 = seconds0.multipliedBy(0);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.THREE;
        org.joda.time.Duration duration8 = seconds7.toStandardDuration();
        boolean boolean9 = seconds6.isGreaterThan(seconds7);
        org.joda.time.DurationFieldType durationFieldType11 = seconds6.getFieldType((int) (short) 0);
        org.joda.time.Seconds seconds12 = seconds6.negated();
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration17 = duration15.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalFrom(readableInstant20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval21);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.seconds(7);
        org.joda.time.Seconds seconds25 = seconds22.plus(seconds24);
        boolean boolean26 = seconds6.isGreaterThan(seconds25);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds31 = seconds29.plus(seconds30);
        org.joda.time.Seconds seconds33 = seconds29.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds34 = seconds28.plus(seconds29);
        org.joda.time.Duration duration35 = seconds28.toStandardDuration();
        boolean boolean36 = seconds25.isLessThan(seconds28);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2S" + "'", str3, "PT2S");
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test17518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17518");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((-103));
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test17519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17519");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(56);
        org.joda.time.Seconds seconds3 = seconds1.plus(11);
        org.joda.time.Seconds seconds5 = seconds3.dividedBy((-36));
        org.joda.time.PeriodType periodType6 = seconds3.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test17520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17520");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds4 = seconds2.plus(seconds3);
        org.joda.time.Seconds seconds6 = seconds2.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds7 = seconds1.plus(seconds2);
        org.joda.time.Seconds seconds9 = seconds1.plus((int) '4');
        org.joda.time.Duration duration10 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds15 = seconds13.plus(seconds14);
        org.joda.time.Seconds seconds17 = seconds13.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds18 = seconds12.plus(seconds13);
        org.joda.time.Seconds seconds20 = seconds12.plus((int) '4');
        org.joda.time.Duration duration21 = seconds20.toStandardDuration();
        boolean boolean22 = seconds9.isLessThan(seconds20);
        org.joda.time.Seconds seconds23 = seconds9.negated();
        org.joda.time.Period period26 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period28 = period26.minusMonths(0);
        org.joda.time.Period period30 = period26.withMillis((int) (short) 0);
        int int31 = period30.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod32 = period30.toMutablePeriod();
        org.joda.time.Duration duration33 = period30.toStandardDuration();
        org.joda.time.Seconds seconds34 = duration33.toStandardSeconds();
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds37 = seconds35.plus(seconds36);
        org.joda.time.Seconds seconds39 = seconds35.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds40 = seconds34.minus(seconds39);
        int int41 = seconds40.size();
        org.joda.time.Seconds seconds42 = seconds23.plus(seconds40);
        org.joda.time.Period period45 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period47 = period45.minusMonths(0);
        org.joda.time.Period period49 = period45.withMillis((int) (short) 0);
        int int50 = period49.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod51 = period49.toMutablePeriod();
        org.joda.time.Duration duration52 = period49.toStandardDuration();
        org.joda.time.Seconds seconds53 = duration52.toStandardSeconds();
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds56 = seconds54.plus(seconds55);
        org.joda.time.Seconds seconds58 = seconds54.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds59 = seconds53.minus(seconds58);
        int int60 = seconds59.size();
        org.joda.time.Seconds seconds61 = seconds42.minus(seconds59);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds64 = seconds62.plus(seconds63);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.ONE;
        boolean boolean66 = seconds63.isGreaterThan(seconds65);
        org.joda.time.Duration duration67 = seconds65.toStandardDuration();
        org.joda.time.Seconds seconds68 = seconds65.negated();
        org.joda.time.Seconds seconds70 = seconds68.multipliedBy((int) '#');
        org.joda.time.Seconds seconds72 = seconds68.plus((int) (short) -1);
        org.joda.time.Seconds seconds73 = seconds59.plus(seconds68);
        org.joda.time.Seconds seconds74 = seconds68.negated();
        int int75 = seconds68.getSeconds();
        org.joda.time.Seconds seconds76 = seconds68.negated();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(seconds76);
    }

    @Test
    public void test17521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17521");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType4 = periodType3.withMinutesRemoved();
        org.joda.time.Period period5 = new org.joda.time.Period(0L, periodType4);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period(13194000L, (long) 118, periodType4, chronology6);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test17522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17522");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Period period17 = duration16.toPeriod();
        boolean boolean18 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Period period21 = duration9.toPeriodTo(readableInstant19, periodType20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant22);
        long long24 = duration9.getStandardMinutes();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration9.toPeriod(chronology25);
        int int27 = period26.getSeconds();
        org.joda.time.Period period28 = period26.normalizedStandard();
        int int29 = period26.getHours();
        int int30 = period26.getWeeks();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test17523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17523");
        org.joda.time.Period period1 = org.joda.time.Period.parse("PT2S");
        int int2 = period1.getHours();
        org.joda.time.Period period4 = period1.withMonths((int) ' ');
        org.joda.time.Period period6 = period1.withWeeks((int) ' ');
        org.joda.time.Period period8 = period6.withMinutes((-35));
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds12 = seconds10.minus((int) 'a');
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds15 = seconds13.plus(seconds14);
        org.joda.time.Seconds seconds17 = seconds13.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds20 = seconds18.plus(seconds19);
        java.lang.String str21 = seconds18.toString();
        org.joda.time.DurationFieldType durationFieldType22 = seconds18.getFieldType();
        java.lang.String str23 = durationFieldType22.getName();
        boolean boolean24 = seconds13.isSupported(durationFieldType22);
        int int25 = seconds12.get(durationFieldType22);
        org.joda.time.Chronology chronology26 = null;
        boolean boolean27 = durationFieldType22.isSupported(chronology26);
        int int28 = periodType9.indexOf(durationFieldType22);
        org.joda.time.Period period29 = period6.normalizedStandard(periodType9);
        org.joda.time.PeriodType periodType30 = periodType9.withSecondsRemoved();
        org.joda.time.PeriodType periodType31 = periodType9.withMinutesRemoved();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2S" + "'", str21, "PT2S");
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "seconds" + "'", str23, "seconds");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-95) + "'", int25 == (-95));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
    }

    @Test
    public void test17524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17524");
        org.joda.time.Period period1 = org.joda.time.Period.days((int) '#');
        org.joda.time.Period period3 = period1.withWeeks((int) (byte) 0);
        org.joda.time.Period period5 = period1.plusSeconds((int) '4');
        org.joda.time.Period period7 = period5.minusMinutes(4);
        org.joda.time.Period period9 = period5.withYears(118);
        org.joda.time.Duration duration11 = org.joda.time.Duration.parse("PT0.036S");
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration11.toPeriod(chronology12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType18 = days17.getPeriodType();
        org.joda.time.PeriodType periodType19 = periodType18.withHoursRemoved();
        org.joda.time.PeriodType periodType20 = periodType18.withSecondsRemoved();
        org.joda.time.Period period21 = duration15.toPeriodFrom(readableInstant16, periodType18);
        long long22 = duration15.getStandardHours();
        org.joda.time.Duration duration25 = duration15.withDurationAdded(10L, (-36));
        org.joda.time.Period period26 = duration25.toPeriod();
        java.lang.String str27 = duration25.toString();
        org.joda.time.Duration duration28 = duration11.minus((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = duration11.toPeriodFrom(readableInstant29);
        int int31 = period30.getSeconds();
        org.joda.time.Period period32 = period30.toPeriod();
        org.joda.time.Period period33 = period9.withFields((org.joda.time.ReadablePeriod) period32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration35 = period32.toDurationTo(readableInstant34);
        long long36 = duration35.getStandardMinutes();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT99.640S" + "'", str27, "PT99.640S");
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
    }

    @Test
    public void test17525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17525");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeksIn(readableInterval4);
        boolean boolean6 = weeks3.isLessThan(weeks5);
        boolean boolean7 = weeks2.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks8 = null;
        org.joda.time.Weeks weeks9 = weeks5.minus(weeks8);
        org.joda.time.DurationFieldType durationFieldType10 = weeks9.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeksIn(readableInterval16);
        boolean boolean18 = weeks15.isLessThan(weeks17);
        boolean boolean19 = weeks14.isGreaterThan(weeks17);
        boolean boolean20 = weeks11.isLessThan(weeks14);
        org.joda.time.Weeks weeks21 = weeks9.plus(weeks14);
        org.joda.time.Weeks weeks23 = weeks14.minus(2);
        org.joda.time.Weeks weeks25 = weeks23.minus((int) (short) 10);
        org.joda.time.Period period27 = org.joda.time.Period.hours(2147483645);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.weeks(1);
        boolean boolean32 = weeks29.isGreaterThan(weeks31);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.MIN_VALUE;
        boolean boolean34 = weeks31.isGreaterThan(weeks33);
        org.joda.time.Weeks weeks36 = weeks31.multipliedBy(0);
        boolean boolean37 = weeks28.isGreaterThan(weeks31);
        org.joda.time.Weeks weeks38 = weeks23.minus(weeks31);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeksIn(readableInterval43);
        boolean boolean45 = weeks42.isLessThan(weeks44);
        boolean boolean46 = weeks41.isGreaterThan(weeks44);
        org.joda.time.Weeks weeks47 = null;
        org.joda.time.Weeks weeks48 = weeks44.minus(weeks47);
        org.joda.time.DurationFieldType durationFieldType49 = weeks48.getFieldType();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.weeksIn(readableInterval55);
        boolean boolean57 = weeks54.isLessThan(weeks56);
        boolean boolean58 = weeks53.isGreaterThan(weeks56);
        boolean boolean59 = weeks50.isLessThan(weeks53);
        org.joda.time.Weeks weeks60 = weeks48.plus(weeks53);
        org.joda.time.Weeks weeks62 = weeks53.minus(2);
        org.joda.time.Weeks weeks64 = weeks62.dividedBy((-10));
        int int65 = weeks64.getWeeks();
        org.joda.time.Weeks weeks66 = weeks23.plus(weeks64);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks64);
        org.joda.time.Weeks weeks69 = weeks67.minus((-116));
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
    }

    @Test
    public void test17526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17526");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period3 = period2.negated();
        int int4 = period2.getHours();
        org.joda.time.Period period6 = org.joda.time.Period.days(10);
        org.joda.time.Period period8 = period6.plusMonths((int) 'a');
        org.joda.time.Period period10 = period6.plusSeconds((int) (short) 100);
        org.joda.time.Period period12 = period10.minusMonths((int) 'a');
        org.joda.time.Period period13 = period2.withFields((org.joda.time.ReadablePeriod) period12);
        org.joda.time.Hours hours14 = period2.toStandardHours();
        org.joda.time.Hours hours16 = hours14.minus((int) '#');
        org.joda.time.Hours hours17 = org.joda.time.Hours.ONE;
        int int18 = hours17.getHours();
        org.joda.time.Hours hours20 = hours17.multipliedBy((-95));
        org.joda.time.Hours hours22 = hours20.dividedBy((int) (short) 1);
        org.joda.time.Hours hours23 = hours14.plus(hours20);
        org.joda.time.Period period25 = org.joda.time.Period.millis(0);
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.months();
        boolean boolean27 = period25.isSupported(durationFieldType26);
        java.lang.String str28 = durationFieldType26.getName();
        boolean boolean29 = hours20.isSupported(durationFieldType26);
        org.joda.time.Hours hours30 = hours20.negated();
        org.joda.time.Hours hours32 = hours30.multipliedBy((-1491308));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "months" + "'", str28, "months");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
    }

    @Test
    public void test17527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17527");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType1 = days0.getPeriodType();
        org.joda.time.Days days2 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        org.joda.time.Days days5 = days2.minus(0);
        org.joda.time.Days days6 = days5.negated();
        boolean boolean7 = days0.isGreaterThan(days5);
        org.joda.time.Days days8 = days0.negated();
        org.joda.time.DurationFieldType durationFieldType9 = days0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType10 = days0.getFieldType();
        org.joda.time.PeriodType periodType11 = days0.getPeriodType();
        org.joda.time.Duration duration12 = days0.toStandardDuration();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test17528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17528");
        org.joda.time.Period period1 = new org.joda.time.Period(100L);
        org.joda.time.Period period3 = period1.withMillis(6);
        int int4 = period3.getMonths();
        org.joda.time.Weeks weeks5 = period3.toStandardWeeks();
        org.joda.time.Weeks weeks7 = weeks5.multipliedBy(776);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
    }

    @Test
    public void test17529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17529");
        org.joda.time.Period period0 = new org.joda.time.Period();
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration2 = period0.toDurationFrom(readableInstant1);
        org.joda.time.Minutes minutes3 = period0.toStandardMinutes();
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy(2147483647);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Minutes minutes17 = minutes15.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes18 = minutes9.minus(minutes15);
        org.joda.time.Period period21 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period23 = period21.minusMonths(0);
        org.joda.time.Minutes minutes24 = period23.toStandardMinutes();
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((java.lang.Object) minutes24, chronology27);
        org.joda.time.Minutes minutes29 = minutes9.minus(minutes24);
        org.joda.time.Period period32 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period33 = period32.negated();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration35 = period33.toDurationTo(readableInstant34);
        org.joda.time.Minutes minutes36 = period33.toStandardMinutes();
        org.joda.time.PeriodType periodType37 = minutes36.getPeriodType();
        boolean boolean38 = minutes24.isLessThan(minutes36);
        org.joda.time.Period period41 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period43 = period41.minusMonths(0);
        org.joda.time.Minutes minutes44 = period43.toStandardMinutes();
        org.joda.time.Duration duration45 = minutes44.toStandardDuration();
        org.joda.time.Minutes minutes47 = minutes44.multipliedBy((int) (short) 1);
        int int48 = minutes47.getMinutes();
        boolean boolean49 = minutes24.isLessThan(minutes47);
        boolean boolean50 = minutes8.isGreaterThan(minutes47);
        org.joda.time.Minutes minutes52 = minutes47.dividedBy((-1));
        org.joda.time.DurationFieldType durationFieldType53 = minutes47.getFieldType();
        org.joda.time.Period period56 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period58 = period56.minusMonths(0);
        org.joda.time.Minutes minutes59 = period58.toStandardMinutes();
        org.joda.time.Duration duration60 = minutes59.toStandardDuration();
        org.joda.time.Minutes minutes62 = minutes59.multipliedBy((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType63 = minutes59.getFieldType();
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.MutablePeriod mutablePeriod65 = minutes64.toMutablePeriod();
        org.joda.time.Minutes minutes66 = minutes59.plus(minutes64);
        org.joda.time.Minutes minutes67 = minutes47.plus(minutes59);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.minutes((int) (short) 10);
        org.joda.time.Minutes minutes70 = minutes67.minus(minutes69);
        boolean boolean71 = minutes5.isGreaterThan(minutes69);
        org.joda.time.Period period72 = minutes5.toPeriod();
        org.joda.time.Minutes minutes73 = minutes5.negated();
        org.joda.time.Period period76 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period78 = period76.minusMonths(0);
        org.joda.time.Period period79 = period76.normalizedStandard();
        org.joda.time.MutablePeriod mutablePeriod80 = period79.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Duration duration82 = period79.toDurationFrom(readableInstant81);
        org.joda.time.Period period83 = period79.normalizedStandard();
        org.joda.time.Period period84 = period79.negated();
        org.joda.time.Period period86 = period79.minusMonths((-97));
        org.joda.time.Minutes minutes87 = period79.toStandardMinutes();
        org.joda.time.DurationFieldType durationFieldType88 = minutes87.getFieldType();
        boolean boolean89 = minutes73.isLessThan(minutes87);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(mutablePeriod80);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertNotNull(minutes87);
        org.junit.Assert.assertNotNull(durationFieldType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test17530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17530");
        org.joda.time.Days days0 = org.joda.time.Days.TWO;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.PeriodType periodType2 = days1.getPeriodType();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardSeconds(47L);
        long long5 = duration4.getStandardHours();
        org.joda.time.Days days6 = duration4.toStandardDays();
        boolean boolean7 = days1.isGreaterThan(days6);
        org.joda.time.Days days9 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days11 = days9.multipliedBy((int) (short) 100);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType13 = days12.getPeriodType();
        org.joda.time.Days days15 = days12.minus(0);
        org.joda.time.Days days16 = days9.minus(days15);
        org.joda.time.PeriodType periodType17 = days9.getPeriodType();
        org.joda.time.Days days19 = days9.dividedBy((int) 'a');
        org.joda.time.Days days21 = days19.dividedBy((int) '4');
        org.joda.time.Days days22 = days21.negated();
        int int24 = days22.getValue(0);
        boolean boolean25 = days1.isGreaterThan(days22);
        int int26 = days22.size();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test17531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17531");
        org.joda.time.Period period8 = new org.joda.time.Period(23, (-63), 4, 168, (-1680), (int) '4', 1, (-2));
    }

    @Test
    public void test17532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17532");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Period period17 = duration16.toPeriod();
        boolean boolean18 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Period period21 = duration9.toPeriodTo(readableInstant19, periodType20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = duration9.toPeriodFrom(readableInstant22);
        org.joda.time.Period period24 = period23.negated();
        org.joda.time.Period period26 = org.joda.time.Period.millis((int) (short) 0);
        org.joda.time.Period period27 = period26.toPeriod();
        org.joda.time.Period period29 = period26.withWeeks((-1));
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Duration duration31 = period26.toDurationFrom(readableInstant30);
        org.joda.time.DurationFieldType durationFieldType33 = period26.getFieldType(1);
        org.joda.time.Chronology chronology34 = null;
        boolean boolean35 = durationFieldType33.isSupported(chronology34);
        org.joda.time.Period period37 = period23.withFieldAdded(durationFieldType33, (-4188));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(period37);
    }

    @Test
    public void test17533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17533");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(56);
        org.joda.time.Seconds seconds3 = seconds1.plus(11);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.seconds((int) '#');
        int int6 = seconds5.getSeconds();
        org.joda.time.Seconds seconds8 = seconds5.dividedBy((int) (short) 1);
        int int9 = seconds8.getSeconds();
        boolean boolean10 = seconds1.isLessThan(seconds8);
        org.joda.time.Seconds seconds12 = seconds8.dividedBy((-37));
        org.joda.time.DurationFieldType durationFieldType14 = seconds8.getFieldType(0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 35 + "'", int6 == 35);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType14);
    }

    @Test
    public void test17534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17534");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.dividedBy(8);
        org.joda.time.Hours hours5 = hours3.plus((int) 'a');
        org.joda.time.DurationFieldType durationFieldType6 = hours5.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
    }

    @Test
    public void test17535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17535");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Minutes minutes6 = period5.toStandardMinutes();
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes9 = minutes0.minus(minutes6);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period13 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period15 = period13.minusMonths(0);
        org.joda.time.Minutes minutes16 = period15.toStandardMinutes();
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes19 = minutes10.minus(minutes16);
        org.joda.time.Period period22 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period24 = period22.minusMonths(0);
        org.joda.time.Minutes minutes25 = period24.toStandardMinutes();
        org.joda.time.Duration duration26 = minutes25.toStandardDuration();
        org.joda.time.Minutes minutes28 = minutes25.multipliedBy((int) (short) 1);
        int int29 = minutes10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes28);
        org.joda.time.Minutes minutes30 = minutes9.plus(minutes28);
        org.joda.time.Period period33 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period35 = period33.minusMonths(0);
        org.joda.time.Minutes minutes36 = period35.toStandardMinutes();
        org.joda.time.Minutes minutes38 = minutes36.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((java.lang.Object) minutes36, chronology39);
        org.joda.time.Period period41 = minutes36.toPeriod();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean43 = minutes36.isLessThan(minutes42);
        org.joda.time.Minutes minutes44 = minutes30.minus(minutes36);
        org.joda.time.Duration duration45 = minutes36.toStandardDuration();
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.minutes(8);
        org.joda.time.Minutes minutes49 = minutes47.plus(14400);
        org.joda.time.Period period52 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period54 = period52.minusMonths(0);
        org.joda.time.Minutes minutes55 = period54.toStandardMinutes();
        org.joda.time.Minutes minutes57 = minutes55.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes59 = minutes55.plus(8);
        org.joda.time.Minutes minutes61 = minutes55.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period65 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period67 = period65.minusMonths(0);
        org.joda.time.Minutes minutes68 = period67.toStandardMinutes();
        org.joda.time.Minutes minutes70 = minutes68.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes71 = minutes62.minus(minutes68);
        org.joda.time.Period period74 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period76 = period74.minusMonths(0);
        org.joda.time.Minutes minutes77 = period76.toStandardMinutes();
        org.joda.time.Minutes minutes79 = minutes77.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.Period period81 = new org.joda.time.Period((java.lang.Object) minutes77, chronology80);
        org.joda.time.Minutes minutes82 = minutes62.minus(minutes77);
        org.joda.time.DurationFieldType durationFieldType84 = minutes82.getFieldType((int) (short) 0);
        org.joda.time.PeriodType periodType85 = minutes82.getPeriodType();
        org.joda.time.Minutes minutes86 = minutes82.negated();
        org.joda.time.DurationFieldType durationFieldType87 = minutes82.getFieldType();
        org.joda.time.Minutes minutes88 = minutes55.plus(minutes82);
        java.lang.String str89 = minutes82.toString();
        boolean boolean90 = minutes49.isGreaterThan(minutes82);
        org.joda.time.Minutes minutes91 = minutes36.minus(minutes82);
        org.joda.time.Minutes minutes93 = minutes91.dividedBy((int) '#');
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "PT2M" + "'", str89, "PT2M");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(minutes91);
        org.junit.Assert.assertNotNull(minutes93);
    }

    @Test
    public void test17536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17536");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withParseType(periodType5);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType9 = days8.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withSecondsRemoved();
        org.joda.time.PeriodType periodType11 = periodType9.withYearsRemoved();
        java.lang.String str12 = periodType11.toString();
        org.joda.time.format.PeriodFormatter periodFormatter13 = periodFormatter7.withParseType(periodType11);
        org.joda.time.PeriodType periodType14 = periodFormatter13.getParseType();
        java.util.Locale locale15 = periodFormatter13.getLocale();
        java.util.Locale locale16 = periodFormatter13.getLocale();
        boolean boolean17 = periodFormatter13.isPrinter();
        boolean boolean18 = periodFormatter13.isPrinter();
        org.joda.time.format.PeriodPrinter periodPrinter19 = periodFormatter13.getPrinter();
        boolean boolean20 = periodFormatter13.isPrinter();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PeriodType[Days]" + "'", str12, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodFormatter13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNull(locale15);
        org.junit.Assert.assertNull(locale16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(periodPrinter19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test17537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17537");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withParseType(periodType5);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType9 = days8.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withSecondsRemoved();
        org.joda.time.PeriodType periodType11 = periodType9.withYearsRemoved();
        java.lang.String str12 = periodType11.toString();
        org.joda.time.format.PeriodFormatter periodFormatter13 = periodFormatter7.withParseType(periodType11);
        org.joda.time.format.PeriodPrinter periodPrinter14 = periodFormatter7.getPrinter();
        java.util.Locale locale15 = null;
        org.joda.time.format.PeriodFormatter periodFormatter16 = periodFormatter7.withLocale(locale15);
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.format.PeriodFormatter periodFormatter18 = periodFormatter7.withParseType(periodType17);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod20 = periodFormatter18.parseMutablePeriod("PT-14.400S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PeriodType[Days]" + "'", str12, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodFormatter13);
        org.junit.Assert.assertNull(periodPrinter14);
        org.junit.Assert.assertNotNull(periodFormatter16);
        org.junit.Assert.assertNotNull(periodFormatter18);
    }

    @Test
    public void test17538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17538");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) 8);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Period period4 = period2.minusDays(5);
        org.joda.time.Period period6 = period4.plusSeconds((int) (byte) 100);
        org.joda.time.Minutes minutes7 = period6.toStandardMinutes();
        int int8 = period6.size();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
    }

    @Test
    public void test17539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17539");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period2.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType7 = period2.getPeriodType();
        int int9 = period2.getValue(0);
        org.joda.time.MutablePeriod mutablePeriod10 = period2.toMutablePeriod();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod10);
    }

    @Test
    public void test17540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17540");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        int int5 = period4.getYears();
        org.joda.time.Period period6 = period4.toPeriod();
        org.joda.time.Period period8 = period6.plusMinutes(100);
        org.joda.time.Period period10 = period6.minusMillis(1);
        int int11 = period6.getWeeks();
        int int12 = period6.getYears();
        org.joda.time.Period period14 = period6.plusDays(6);
        int int15 = period14.getYears();
        org.joda.time.Period period17 = period14.withYears(999);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds20 = seconds18.plus(seconds19);
        java.lang.String str21 = seconds18.toString();
        org.joda.time.Seconds seconds23 = seconds18.minus(87);
        org.joda.time.Seconds seconds25 = seconds18.plus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.ZERO;
        org.joda.time.Seconds seconds29 = seconds27.multipliedBy((int) (byte) 100);
        org.joda.time.Seconds seconds31 = seconds27.multipliedBy((int) (byte) 0);
        org.joda.time.Duration duration32 = seconds27.toStandardDuration();
        org.joda.time.Period period35 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period37 = period35.minusMonths(0);
        org.joda.time.Period period39 = period37.minusSeconds(0);
        org.joda.time.DurationFieldType durationFieldType40 = org.joda.time.DurationFieldType.minutes();
        int int41 = period37.get(durationFieldType40);
        org.joda.time.Chronology chronology42 = null;
        boolean boolean43 = durationFieldType40.isSupported(chronology42);
        int int44 = seconds27.get(durationFieldType40);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.DurationField durationField46 = durationFieldType40.getField(chronology45);
        boolean boolean47 = seconds25.isSupported(durationFieldType40);
        org.joda.time.Period period49 = period17.withFieldAdded(durationFieldType40, (int) (byte) -1);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2S" + "'", str21, "PT2S");
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationField46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(period49);
    }

    @Test
    public void test17541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17541");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        java.lang.String str1 = days0.toString();
        org.joda.time.Days days3 = days0.multipliedBy((int) (byte) -1);
        int int4 = days0.getDays();
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        java.lang.String str6 = days5.toString();
        org.joda.time.Days days8 = days5.multipliedBy((int) (byte) -1);
        org.joda.time.Days days9 = days5.negated();
        org.joda.time.Days days10 = org.joda.time.Days.ONE;
        org.joda.time.Days days11 = org.joda.time.Days.ONE;
        int int12 = days10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days11);
        org.joda.time.Days days14 = days11.multipliedBy((int) '#');
        org.joda.time.Days days15 = days9.minus(days11);
        org.joda.time.Duration duration18 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration20 = duration18.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Interval interval24 = duration20.toIntervalFrom(readableInstant23);
        org.joda.time.Days days25 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval24);
        org.joda.time.Days days27 = days25.minus((int) '4');
        org.joda.time.Days days29 = days25.minus((int) 'a');
        org.joda.time.Days days30 = days11.plus(days29);
        org.joda.time.Duration duration31 = days29.toStandardDuration();
        org.joda.time.Days days33 = org.joda.time.Days.days((int) (byte) 1);
        org.joda.time.Days days35 = days33.minus(999);
        boolean boolean36 = days29.isLessThan(days33);
        boolean boolean37 = days0.isGreaterThan(days29);
        java.lang.String str38 = days29.toString();
        org.joda.time.PeriodType periodType39 = days29.getPeriodType();
        org.joda.time.PeriodType periodType40 = days29.getPeriodType();
        int int41 = periodType40.size();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "P5D" + "'", str1, "P5D");
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P5D" + "'", str6, "P5D");
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-97D" + "'", str38, "P-97D");
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
    }

    @Test
    public void test17542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17542");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) (-89));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test17543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17543");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds2 = seconds0.multipliedBy(10);
        org.joda.time.Duration duration5 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration7 = duration5.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.parse("PT0S");
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Duration duration14 = duration11.plus((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration16 = duration7.withDurationAdded((org.joda.time.ReadableDuration) duration14, (int) (byte) 0);
        org.joda.time.Period period17 = duration16.toPeriod();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds23 = seconds21.plus(seconds22);
        org.joda.time.Seconds seconds25 = seconds21.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds26 = seconds20.plus(seconds21);
        org.joda.time.Seconds seconds28 = seconds20.plus((int) '4');
        org.joda.time.Duration duration29 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds34 = seconds32.plus(seconds33);
        org.joda.time.Seconds seconds36 = seconds32.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds37 = seconds31.plus(seconds32);
        org.joda.time.Seconds seconds39 = seconds31.plus((int) '4');
        org.joda.time.Duration duration40 = seconds39.toStandardDuration();
        boolean boolean41 = seconds28.isLessThan(seconds39);
        boolean boolean42 = seconds18.isGreaterThan(seconds28);
        boolean boolean43 = duration16.equals((java.lang.Object) seconds28);
        org.joda.time.Seconds seconds44 = seconds0.minus(seconds28);
        org.joda.time.Seconds seconds46 = seconds44.dividedBy((-2147483552));
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
    }

    @Test
    public void test17544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17544");
        org.joda.time.Period period1 = org.joda.time.Period.millis(0);
        org.joda.time.Days days2 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Days days4 = days2.plus((int) ' ');
        org.joda.time.DurationFieldType durationFieldType5 = days4.getFieldType();
        java.lang.String str6 = durationFieldType5.getName();
        java.lang.String str7 = durationFieldType5.getName();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "days" + "'", str6, "days");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "days" + "'", str7, "days");
    }

    @Test
    public void test17545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17545");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(35);
        org.joda.time.Weeks weeks3 = weeks1.multipliedBy(5);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Duration duration5 = weeks4.toStandardDuration();
        boolean boolean6 = weeks3.isGreaterThan(weeks4);
        int int7 = weeks4.getWeeks();
        int int8 = weeks4.getWeeks();
        org.joda.time.Weeks weeks10 = weeks4.plus((-53));
        org.joda.time.Weeks weeks11 = weeks4.negated();
        org.joda.time.Duration duration12 = weeks4.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test17546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17546");
        org.joda.time.Period period4 = new org.joda.time.Period(5, 268435465, 2, 6);
        org.joda.time.Period period6 = period4.plusMinutes((-2147483647));
        org.joda.time.Minutes minutes7 = period6.toStandardMinutes();
        int int8 = period6.getDays();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test17547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17547");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period2.withMillis((int) (short) 0);
        int int7 = period6.getSeconds();
        java.lang.Object obj8 = null;
        boolean boolean9 = period6.equals(obj8);
        org.joda.time.Period period11 = period6.withWeeks((int) '#');
        org.joda.time.Period period13 = org.joda.time.Period.days(10);
        org.joda.time.Minutes minutes14 = period13.toStandardMinutes();
        org.joda.time.Period period16 = period13.minusMonths(100);
        org.joda.time.Period period18 = period16.minusYears((int) (short) 10);
        org.joda.time.Period period19 = period11.plus((org.joda.time.ReadablePeriod) period16);
        org.joda.time.Period period21 = period16.withMinutes((-103));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test17548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17548");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) 10);
        org.joda.time.Period period4 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period6 = period4.minusMonths(0);
        org.joda.time.Minutes minutes7 = period6.toStandardMinutes();
        org.joda.time.Duration duration8 = minutes7.toStandardDuration();
        org.joda.time.Minutes minutes10 = minutes7.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration11 = minutes7.toStandardDuration();
        org.joda.time.Period period14 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period16 = period14.minusMonths(0);
        org.joda.time.Minutes minutes17 = period16.toStandardMinutes();
        org.joda.time.Duration duration18 = minutes17.toStandardDuration();
        org.joda.time.Period period19 = duration18.toPeriod();
        boolean boolean20 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        boolean boolean23 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Duration duration26 = duration18.withDurationAdded((long) 10, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = duration26.toPeriodTo(readableInstant27, periodType28);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardDays(1123200000L);
        boolean boolean32 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration31);
        java.lang.String str33 = duration26.toString();
        java.lang.String str34 = duration26.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT0S" + "'", str33, "PT0S");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT0S" + "'", str34, "PT0S");
    }

    @Test
    public void test17549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17549");
        org.joda.time.Period period2 = new org.joda.time.Period(16106127900L, (long) (-1491308));
        java.lang.String str3 = period2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "P-6M-5DT-10H-20M-19.208S" + "'", str3, "P-6M-5DT-10H-20M-19.208S");
    }

    @Test
    public void test17550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17550");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType1 = days0.getPeriodType();
        org.joda.time.Days days3 = days0.plus((int) (byte) 100);
        org.joda.time.Duration duration4 = days3.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = duration4.toPeriodFrom(readableInstant5);
        java.lang.String str7 = duration4.toString();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) (-1), chronology9);
        org.joda.time.Period period12 = period10.minusMonths((int) (byte) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration14 = period12.toDurationFrom(readableInstant13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant15);
        org.joda.time.Duration duration17 = duration4.minus((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration14.toPeriod(chronology18);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT9072000S" + "'", str7, "PT9072000S");
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test17551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17551");
        org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT9072000S");
        org.joda.time.Hours hours2 = duration1.toStandardHours();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours3.dividedBy(100);
        org.joda.time.Period period8 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period10 = period8.minusMonths(0);
        org.joda.time.Period period12 = period10.minusSeconds(0);
        org.joda.time.Period period13 = period12.normalizedStandard();
        org.joda.time.Hours hours14 = period13.toStandardHours();
        boolean boolean15 = hours5.isLessThan(hours14);
        org.joda.time.Period period17 = org.joda.time.Period.millis((int) '#');
        int int18 = period17.getYears();
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Period period21 = period17.multipliedBy((int) (byte) 0);
        org.joda.time.Hours hours22 = period21.toStandardHours();
        org.joda.time.Hours hours23 = hours5.minus(hours22);
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours25.dividedBy(100);
        org.joda.time.Period period30 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period32 = period30.minusMonths(0);
        org.joda.time.Period period34 = period32.minusSeconds(0);
        org.joda.time.Period period35 = period34.normalizedStandard();
        org.joda.time.Hours hours36 = period35.toStandardHours();
        boolean boolean37 = hours27.isLessThan(hours36);
        boolean boolean38 = hours24.isLessThan(hours27);
        org.joda.time.Duration duration39 = hours27.toStandardDuration();
        java.lang.String str40 = hours27.toString();
        org.joda.time.Period period42 = org.joda.time.Period.millis((int) '#');
        int int43 = period42.getYears();
        org.joda.time.ReadablePeriod readablePeriod44 = null;
        org.joda.time.Period period45 = period42.withFields(readablePeriod44);
        org.joda.time.Hours hours46 = period42.toStandardHours();
        org.joda.time.Hours hours47 = hours27.minus(hours46);
        org.joda.time.Hours hours48 = hours22.minus(hours27);
        boolean boolean49 = hours2.isGreaterThan(hours22);
        org.joda.time.Hours hours51 = hours22.plus((-1));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT0H" + "'", str40, "PT0H");
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(hours51);
    }

    @Test
    public void test17552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17552");
        org.joda.time.Period period4 = new org.joda.time.Period(52, 1, (-97), (int) 'a');
        org.joda.time.Period period6 = period4.plusSeconds(3);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.PeriodType periodType8 = periodType7.withSecondsRemoved();
        org.joda.time.Period period9 = period6.normalizedStandard(periodType8);
        org.joda.time.DurationFieldType durationFieldType10 = org.joda.time.DurationFieldType.weeks();
        boolean boolean11 = period9.isSupported(durationFieldType10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period13 = period9.withMonths(100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test17553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17553");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType4 = days3.getPeriodType();
        org.joda.time.PeriodType periodType5 = periodType4.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType4.withSecondsRemoved();
        org.joda.time.Period period7 = duration1.toPeriodFrom(readableInstant2, periodType4);
        long long8 = duration1.getMillis();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant9);
        org.joda.time.Period period14 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period16 = period14.minusMonths(0);
        org.joda.time.Period period18 = period14.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType19 = period14.getPeriodType();
        org.joda.time.PeriodType periodType20 = periodType19.withMinutesRemoved();
        org.joda.time.PeriodType periodType21 = periodType20.withHoursRemoved();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) (short) -1, periodType21, chronology22);
        org.joda.time.Period period25 = period23.plusYears(2);
        org.joda.time.Period period26 = period10.minus((org.joda.time.ReadablePeriod) period25);
        org.joda.time.Period period28 = period26.minusMonths(100);
        org.joda.time.MutablePeriod mutablePeriod29 = period26.toMutablePeriod();
        org.joda.time.Period period30 = period26.toPeriod();
        org.joda.time.Period period32 = period30.plusYears((int) (short) 100);
        org.joda.time.Period period34 = period32.plusDays((int) '4');
        org.joda.time.Period period36 = period32.minusMinutes(2147483644);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days37 = period36.toStandardDays();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Days as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100000L + "'", long8 == 100000L);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
    }

    @Test
    public void test17554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17554");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period7 = duration6.toPeriod();
        org.joda.time.Period period10 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period12 = period10.minusMonths(0);
        org.joda.time.Minutes minutes13 = period12.toStandardMinutes();
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes16 = minutes13.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration17 = minutes13.toStandardDuration();
        org.joda.time.Period period20 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period22 = period20.minusMonths(0);
        org.joda.time.Minutes minutes23 = period22.toStandardMinutes();
        org.joda.time.Duration duration24 = minutes23.toStandardDuration();
        org.joda.time.Period period25 = duration24.toPeriod();
        boolean boolean26 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean27 = duration6.isEqual((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration29 = minutes28.toStandardDuration();
        long long30 = duration29.getStandardSeconds();
        org.joda.time.Period period33 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period35 = period33.minusMonths(0);
        org.joda.time.Minutes minutes36 = period35.toStandardMinutes();
        org.joda.time.Duration duration37 = minutes36.toStandardDuration();
        org.joda.time.Minutes minutes39 = minutes36.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration40 = minutes36.toStandardDuration();
        org.joda.time.Period period43 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period45 = period43.minusMonths(0);
        org.joda.time.Minutes minutes46 = period45.toStandardMinutes();
        org.joda.time.Duration duration47 = minutes46.toStandardDuration();
        org.joda.time.Period period48 = duration47.toPeriod();
        boolean boolean49 = duration40.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.days();
        org.joda.time.Period period52 = duration40.toPeriodTo(readableInstant50, periodType51);
        org.joda.time.Duration duration53 = duration29.plus((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Period period56 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period58 = period56.minusMonths(0);
        org.joda.time.Minutes minutes59 = period58.toStandardMinutes();
        org.joda.time.Duration duration60 = minutes59.toStandardDuration();
        org.joda.time.Period period63 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period65 = period63.minusMonths(0);
        org.joda.time.Minutes minutes66 = period65.toStandardMinutes();
        org.joda.time.Duration duration67 = minutes66.toStandardDuration();
        boolean boolean68 = duration60.isShorterThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration67, readableInstant69);
        long long71 = duration67.getStandardHours();
        org.joda.time.Duration duration72 = duration40.minus((org.joda.time.ReadableDuration) duration67);
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardSeconds((long) 0);
        java.lang.String str75 = duration74.toString();
        org.joda.time.Duration duration77 = duration74.minus((long) 10);
        org.joda.time.Duration duration79 = duration72.withDurationAdded((org.joda.time.ReadableDuration) duration74, (int) 'a');
        boolean boolean80 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration79);
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardDays((long) 999);
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.Period period84 = duration82.toPeriodTo(readableInstant83);
        boolean boolean85 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration82);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-128849018880L) + "'", long30 == (-128849018880L));
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "PT0S" + "'", str75, "PT0S");
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test17555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17555");
        org.joda.time.Period period3 = org.joda.time.Period.parse("PT2S");
        int int4 = period3.getHours();
        org.joda.time.Period period6 = period3.withMonths((int) ' ');
        org.joda.time.Period period7 = period3.toPeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.hours(2);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours12 = hours10.minus(hours11);
        boolean boolean13 = hours9.isLessThan(hours10);
        org.joda.time.DurationFieldType durationFieldType14 = hours9.getFieldType();
        org.joda.time.Period period16 = period3.withField(durationFieldType14, 3);
        org.joda.time.Period period17 = period3.negated();
        org.joda.time.PeriodType periodType18 = period17.getPeriodType();
        org.joda.time.PeriodType periodType19 = periodType18.withYearsRemoved();
        org.joda.time.Period period20 = new org.joda.time.Period((long) (-95), (long) (-102), periodType19);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
    }

    @Test
    public void test17556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17556");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P10D");
        org.joda.time.Days days2 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        org.joda.time.Days days5 = days2.plus((int) (byte) 100);
        boolean boolean6 = days1.isLessThan(days5);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        java.lang.String str8 = days7.toString();
        org.joda.time.Days days10 = days7.minus(8);
        org.joda.time.Days days12 = days10.minus((-10));
        org.joda.time.Days days13 = days1.plus(days12);
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        java.lang.String str15 = days14.toString();
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType17 = days16.getPeriodType();
        org.joda.time.Days days19 = days16.minus(0);
        boolean boolean20 = days14.isLessThan(days19);
        boolean boolean21 = days12.isGreaterThan(days14);
        org.joda.time.Days days23 = days14.dividedBy((int) '4');
        org.joda.time.Days days25 = days14.minus(11);
        org.joda.time.Days days27 = days25.dividedBy(1680);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P5D" + "'", str8, "P5D");
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P5D" + "'", str15, "P5D");
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
    }

    @Test
    public void test17557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17557");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) '#');
        int int2 = period1.getYears();
        org.joda.time.Hours hours3 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period1);
        int int4 = hours3.getHours();
        org.joda.time.Hours hours6 = hours3.multipliedBy((int) (short) 1);
        org.joda.time.Hours hours8 = hours3.multipliedBy((int) (short) 100);
        org.joda.time.Hours hours10 = hours3.plus((-2147483648));
        org.joda.time.Hours hours11 = null;
        boolean boolean12 = hours10.isGreaterThan(hours11);
        org.joda.time.Hours hours14 = org.joda.time.Hours.hours((-10));
        org.joda.time.Hours hours15 = org.joda.time.Hours.MIN_VALUE;
        boolean boolean16 = hours14.isLessThan(hours15);
        org.joda.time.Hours hours18 = hours14.multipliedBy(52);
        org.joda.time.Hours hours19 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = hours19.getFieldType();
        org.joda.time.Period period23 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period24 = period23.negated();
        int int25 = period23.getHours();
        org.joda.time.Period period27 = org.joda.time.Period.days(10);
        org.joda.time.Period period29 = period27.plusMonths((int) 'a');
        org.joda.time.Period period31 = period27.plusSeconds((int) (short) 100);
        org.joda.time.Period period33 = period31.minusMonths((int) 'a');
        org.joda.time.Period period34 = period23.withFields((org.joda.time.ReadablePeriod) period33);
        org.joda.time.Hours hours35 = period23.toStandardHours();
        int int36 = hours35.getHours();
        org.joda.time.Hours hours37 = hours19.plus(hours35);
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours38.dividedBy(100);
        org.joda.time.Period period43 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period45 = period43.minusMonths(0);
        org.joda.time.Period period47 = period45.minusSeconds(0);
        org.joda.time.Period period48 = period47.normalizedStandard();
        org.joda.time.Hours hours49 = period48.toStandardHours();
        boolean boolean50 = hours40.isLessThan(hours49);
        org.joda.time.Period period52 = org.joda.time.Period.millis((int) '#');
        int int53 = period52.getYears();
        org.joda.time.Hours hours54 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period52);
        org.joda.time.Period period56 = period52.multipliedBy((int) (byte) 0);
        org.joda.time.Hours hours57 = period56.toStandardHours();
        org.joda.time.Hours hours58 = hours40.minus(hours57);
        boolean boolean59 = hours35.isLessThan(hours57);
        org.joda.time.Hours hours60 = org.joda.time.Hours.ONE;
        java.lang.String str61 = hours60.toString();
        org.joda.time.Hours hours62 = hours60.negated();
        org.joda.time.Hours hours63 = hours57.plus(hours60);
        org.joda.time.Hours hours64 = org.joda.time.Hours.THREE;
        boolean boolean65 = hours57.isLessThan(hours64);
        java.lang.String str66 = hours57.toString();
        org.joda.time.Hours hours67 = hours18.minus(hours57);
        org.joda.time.Hours hours69 = hours18.minus((-100));
        org.joda.time.Period period70 = hours18.toPeriod();
        org.joda.time.Hours hours71 = hours10.minus(hours18);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT1H" + "'", str61, "PT1H");
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT0H" + "'", str66, "PT0H");
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(hours71);
    }

    @Test
    public void test17558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17558");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period7 = duration6.toPeriod();
        org.joda.time.Period period8 = period7.normalizedStandard();
        org.joda.time.Duration duration9 = period7.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Minutes minutes18 = minutes15.multipliedBy((int) (short) 1);
        java.lang.String str19 = minutes18.toString();
        org.joda.time.Duration duration22 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration24 = duration22.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalFrom(readableInstant27);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((-95));
        org.joda.time.Minutes minutes32 = minutes18.minus(minutes31);
        org.joda.time.Period period33 = period7.minus((org.joda.time.ReadablePeriod) minutes31);
        org.joda.time.DurationFieldType durationFieldType35 = period7.getFieldType(0);
        org.joda.time.Period period37 = period7.plusMillis((int) (byte) 100);
        org.joda.time.MutablePeriod mutablePeriod38 = period37.toMutablePeriod();
        int int39 = period37.getMinutes();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT0M" + "'", str19, "PT0M");
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test17559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17559");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Period period17 = duration16.toPeriod();
        boolean boolean18 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Period period21 = duration9.toPeriodTo(readableInstant19, periodType20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = duration9.toPeriodFrom(readableInstant22);
        org.joda.time.Period period24 = period23.negated();
        org.joda.time.Period period25 = period24.toPeriod();
        org.joda.time.Period period26 = period24.toPeriod();
        org.joda.time.Period period28 = period24.plusMonths(400);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test17560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17560");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period2.minusSeconds((int) (byte) 100);
        org.joda.time.Period period8 = period2.plusWeeks((-1));
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds12 = seconds10.plus(seconds11);
        org.joda.time.PeriodType periodType13 = seconds10.getPeriodType();
        org.joda.time.Period period14 = new org.joda.time.Period((long) 'a', periodType13);
        org.joda.time.Period period15 = period14.normalizedStandard();
        org.joda.time.Period period16 = period8.minus((org.joda.time.ReadablePeriod) period14);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = period14.getValue(2400);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2400");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test17561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17561");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType4 = days3.getPeriodType();
        org.joda.time.PeriodType periodType5 = periodType4.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType4.withSecondsRemoved();
        org.joda.time.Period period7 = duration1.toPeriodFrom(readableInstant2, periodType4);
        long long8 = duration1.getStandardHours();
        org.joda.time.Duration duration11 = duration1.withDurationAdded(10L, (-36));
        org.joda.time.Period period12 = duration11.toPeriod();
        org.joda.time.Duration duration15 = duration11.withDurationAdded((long) ' ', (int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant16);
        long long18 = duration11.getStandardDays();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = duration11.toPeriodFrom(readableInstant19);
        int int21 = period20.size();
        java.lang.String str22 = period20.toString();
        org.joda.time.Duration duration23 = period20.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = duration23.toPeriodTo(readableInstant24);
        org.joda.time.Period period26 = new org.joda.time.Period((java.lang.Object) readableInstant24);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT1M39.640S" + "'", str22, "PT1M39.640S");
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test17562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17562");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        org.joda.time.Duration duration15 = duration6.withDurationAdded((org.joda.time.ReadableDuration) duration13, (int) (short) 100);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration6.toPeriod(chronology16);
        org.joda.time.Period period19 = period17.plusMinutes(6);
        org.joda.time.Duration duration20 = period19.toStandardDuration();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration20.toPeriod(chronology21);
        java.lang.String str23 = period22.toString();
        org.joda.time.Period period25 = period22.plusDays(0);
        org.joda.time.PeriodType periodType26 = period22.getPeriodType();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT6M" + "'", str23, "PT6M");
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(periodType26);
    }

    @Test
    public void test17563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17563");
        org.joda.time.Period period1 = org.joda.time.Period.months((-94));
        org.joda.time.Period period3 = period1.withDays((-18));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test17564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17564");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period4.minusSeconds(0);
        org.joda.time.Period period8 = period6.minusWeeks(10);
        int int9 = period6.getWeeks();
        org.joda.time.Period period11 = period6.withMinutes(2);
        org.joda.time.Period period13 = period6.withMinutes(1);
        org.joda.time.Period period15 = period6.multipliedBy(4);
        org.joda.time.Seconds seconds16 = period6.toStandardSeconds();
        org.joda.time.Days days17 = seconds16.toStandardDays();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(days17);
    }

    @Test
    public void test17565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17565");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds2 = seconds0.multipliedBy(10);
        org.joda.time.DurationFieldType durationFieldType3 = seconds2.getFieldType();
        org.joda.time.Seconds seconds4 = seconds2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = seconds4.getFieldType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
    }

    @Test
    public void test17566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17566");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = hours0.getFieldType();
        org.joda.time.Hours hours2 = hours0.negated();
        org.joda.time.Duration duration3 = hours0.toStandardDuration();
        org.joda.time.Hours hours5 = hours0.dividedBy((int) (byte) 100);
        org.joda.time.Hours hours6 = hours5.negated();
        org.joda.time.Hours hours8 = hours5.dividedBy((int) (byte) 1);
        org.joda.time.Hours hours10 = hours5.plus(268435465);
        org.joda.time.Duration duration11 = hours10.toStandardDuration();
        org.joda.time.Hours hours12 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = hours12.getFieldType();
        org.joda.time.Hours hours14 = hours12.negated();
        org.joda.time.Duration duration15 = hours12.toStandardDuration();
        org.joda.time.Hours hours17 = hours12.dividedBy((int) (byte) 100);
        org.joda.time.PeriodType periodType18 = hours12.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours19 = hours10.plus(hours12);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 289910301 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(periodType18);
    }

    @Test
    public void test17567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17567");
        org.joda.time.Period period4 = new org.joda.time.Period(5, 104, 4, (int) ' ');
        org.joda.time.Period period6 = period4.minusDays((-2147483639));
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test17568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17568");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (short) 1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        java.lang.String str4 = period3.toString();
        org.joda.time.Period period6 = period3.multipliedBy((-2));
        org.joda.time.Period period8 = period6.minusWeeks(11);
        org.joda.time.Period period10 = period8.minusWeeks((-2122032));
        org.joda.time.PeriodType periodType11 = period8.getPeriodType();
        org.joda.time.Period period13 = period8.plusDays(14400);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT0.001S" + "'", str4, "PT0.001S");
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test17569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17569");
        org.joda.time.Period period8 = new org.joda.time.Period((int) (short) 1, 3, 100, (int) (short) 0, (-10), (int) '4', 0, 10);
        org.joda.time.Period period10 = period8.minusMonths(8);
        org.joda.time.Period period11 = period8.negated();
        int int12 = period11.getYears();
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test17570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17570");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        java.util.Locale locale4 = null;
        org.joda.time.format.PeriodFormatter periodFormatter5 = periodFormatter2.withLocale(locale4);
        boolean boolean6 = periodFormatter2.isParser();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        java.util.Locale locale9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = periodFormatter2.withLocale(locale9);
        org.joda.time.format.PeriodParser periodParser11 = periodFormatter2.getParser();
        org.joda.time.format.PeriodParser periodParser12 = periodFormatter2.getParser();
        java.util.Locale locale13 = null;
        org.joda.time.format.PeriodFormatter periodFormatter14 = periodFormatter2.withLocale(locale13);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(periodFormatter5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(periodFormatter10);
        org.junit.Assert.assertNull(periodParser11);
        org.junit.Assert.assertNull(periodParser12);
        org.junit.Assert.assertNotNull(periodFormatter14);
    }

    @Test
    public void test17571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17571");
        org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT0.011S");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.time();
        org.joda.time.Period period3 = duration1.toPeriod(periodType2);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.Period period9 = new org.joda.time.Period((long) (byte) 1, (long) (-36), periodType8);
        org.joda.time.PeriodType periodType10 = periodType8.withMinutesRemoved();
        org.joda.time.PeriodType periodType11 = periodType8.withMinutesRemoved();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((long) 10, (long) 5, periodType11, chronology12);
        int int14 = periodType11.size();
        org.joda.time.PeriodType periodType15 = periodType11.withWeeksRemoved();
        org.joda.time.Period period16 = period3.normalizedStandard(periodType15);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test17572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17572");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.weeks(1);
        boolean boolean3 = weeks0.isGreaterThan(weeks2);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.MIN_VALUE;
        boolean boolean5 = weeks2.isGreaterThan(weeks4);
        org.joda.time.Weeks weeks7 = weeks2.multipliedBy(0);
        org.joda.time.Weeks weeks9 = weeks2.minus((int) (short) -1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeksIn(readableInterval14);
        boolean boolean16 = weeks13.isLessThan(weeks15);
        boolean boolean17 = weeks12.isGreaterThan(weeks15);
        org.joda.time.PeriodType periodType18 = weeks12.getPeriodType();
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeksIn(readableInterval19);
        org.joda.time.Weeks weeks22 = weeks20.plus(11);
        org.joda.time.Weeks weeks24 = weeks20.plus((int) (short) 100);
        boolean boolean25 = weeks12.isLessThan(weeks20);
        org.joda.time.Duration duration26 = weeks12.toStandardDuration();
        org.joda.time.Weeks weeks27 = weeks2.plus(weeks12);
        org.joda.time.Duration duration28 = weeks2.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(duration28);
    }

    @Test
    public void test17573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17573");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (-36));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds((long) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period8 = period6.minusMonths(0);
        org.joda.time.Minutes minutes9 = period8.toStandardMinutes();
        org.joda.time.Duration duration10 = minutes9.toStandardDuration();
        org.joda.time.Minutes minutes12 = minutes9.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration13 = minutes9.toStandardDuration();
        org.joda.time.Period period16 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period18 = period16.minusMonths(0);
        org.joda.time.Minutes minutes19 = period18.toStandardMinutes();
        org.joda.time.Duration duration20 = minutes19.toStandardDuration();
        org.joda.time.Period period21 = duration20.toPeriod();
        boolean boolean22 = duration13.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Interval interval24 = duration20.toIntervalTo(readableInstant23);
        boolean boolean25 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration28 = duration20.withDurationAdded((long) 10, (int) (short) 0);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = duration28.toPeriodTo(readableInstant29, periodType30);
        boolean boolean32 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableDuration readableDuration33 = null;
        boolean boolean34 = duration28.isShorterThan(readableDuration33);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test17574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17574");
        org.joda.time.Period period1 = new org.joda.time.Period((long) 1);
        org.joda.time.Period period3 = period1.withMillis((int) '4');
        org.joda.time.Period period5 = period1.minusSeconds(87);
        int int6 = period5.getMonths();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds9 = seconds7.multipliedBy(10);
        org.joda.time.DurationFieldType durationFieldType10 = seconds7.getFieldType();
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.seconds(0);
        org.joda.time.Seconds seconds13 = null;
        org.joda.time.Seconds seconds14 = seconds12.plus(seconds13);
        org.joda.time.Seconds seconds16 = seconds14.multipliedBy(52);
        org.joda.time.PeriodType periodType17 = seconds14.getPeriodType();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds20 = seconds18.plus(seconds19);
        org.joda.time.Seconds seconds22 = seconds19.plus((int) (byte) 0);
        org.joda.time.Seconds seconds24 = seconds19.minus(8);
        org.joda.time.Seconds seconds26 = seconds24.plus(1);
        org.joda.time.Seconds seconds27 = seconds14.plus(seconds24);
        org.joda.time.Seconds seconds28 = seconds7.minus(seconds24);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds33 = seconds31.plus(seconds32);
        org.joda.time.Seconds seconds35 = seconds31.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds36 = seconds30.plus(seconds31);
        org.joda.time.Seconds seconds38 = seconds36.dividedBy(65);
        org.joda.time.Seconds seconds40 = seconds36.dividedBy(1);
        org.joda.time.Seconds seconds41 = seconds7.minus(seconds40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.THREE;
        org.joda.time.Duration duration43 = seconds42.toStandardDuration();
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.seconds((int) '#');
        int int46 = seconds45.getSeconds();
        org.joda.time.Seconds seconds48 = seconds45.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds49 = seconds42.plus(seconds48);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.parseSeconds("PT0S");
        java.lang.String str52 = seconds51.toString();
        org.joda.time.Period period55 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period57 = period55.minusMonths(0);
        int int58 = period57.getYears();
        org.joda.time.Period period59 = period57.toPeriod();
        org.joda.time.Seconds seconds60 = period57.toStandardSeconds();
        boolean boolean61 = seconds51.isLessThan(seconds60);
        java.lang.String str62 = seconds60.toString();
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds65 = seconds63.plus(seconds64);
        java.lang.String str66 = seconds63.toString();
        org.joda.time.DurationFieldType durationFieldType67 = seconds63.getFieldType();
        org.joda.time.Seconds seconds69 = seconds63.multipliedBy(0);
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.THREE;
        org.joda.time.Duration duration71 = seconds70.toStandardDuration();
        boolean boolean72 = seconds69.isGreaterThan(seconds70);
        org.joda.time.Seconds seconds73 = seconds60.plus(seconds70);
        boolean boolean74 = seconds42.isGreaterThan(seconds73);
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.Period period77 = new org.joda.time.Period((long) (-5), chronology76);
        org.joda.time.Period period80 = new org.joda.time.Period((long) 35, (long) (byte) 1);
        org.joda.time.Period period81 = period80.toPeriod();
        org.joda.time.Seconds seconds82 = period81.toStandardSeconds();
        org.joda.time.Period period83 = period77.withFields((org.joda.time.ReadablePeriod) seconds82);
        boolean boolean84 = seconds73.isLessThan(seconds82);
        org.joda.time.Seconds seconds86 = seconds82.minus(6);
        boolean boolean87 = seconds7.isGreaterThan(seconds86);
        org.joda.time.Period period88 = period5.withFields((org.joda.time.ReadablePeriod) seconds7);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 35 + "'", int46 == 35);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT0S" + "'", str52, "PT0S");
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PT0S" + "'", str62, "PT0S");
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT2S" + "'", str66, "PT2S");
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(period88);
    }

    @Test
    public void test17575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17575");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Minutes minutes6 = period5.toStandardMinutes();
        org.joda.time.Duration duration7 = minutes6.toStandardDuration();
        org.joda.time.Period period10 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period12 = period10.minusMonths(0);
        org.joda.time.Minutes minutes13 = period12.toStandardMinutes();
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        boolean boolean15 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(readableInstant16, readableInstant17);
        org.joda.time.Duration duration19 = duration7.minus((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant20);
        org.joda.time.Duration duration23 = duration7.plus((long) 8);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration23.toIntervalFrom(readableInstant24);
        org.joda.time.Period period28 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period30 = period28.minusMonths(0);
        org.joda.time.Minutes minutes31 = period30.toStandardMinutes();
        org.joda.time.Duration duration32 = minutes31.toStandardDuration();
        org.joda.time.Period period35 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period37 = period35.minusMonths(0);
        org.joda.time.Minutes minutes38 = period37.toStandardMinutes();
        org.joda.time.Duration duration39 = minutes38.toStandardDuration();
        boolean boolean40 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration42 = duration32.plus((long) (short) 10);
        org.joda.time.Duration duration44 = duration23.withDurationAdded((org.joda.time.ReadableDuration) duration42, (int) (byte) 0);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration46 = duration44.toDuration();
        org.joda.time.Minutes minutes47 = duration44.toStandardMinutes();
        org.joda.time.Period period50 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period52 = period50.minusMonths(0);
        org.joda.time.Minutes minutes53 = period52.toStandardMinutes();
        org.joda.time.Duration duration54 = minutes53.toStandardDuration();
        org.joda.time.Period period57 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period59 = period57.minusMonths(0);
        org.joda.time.Minutes minutes60 = period59.toStandardMinutes();
        org.joda.time.Duration duration61 = minutes60.toStandardDuration();
        boolean boolean62 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Duration duration65 = new org.joda.time.Duration(readableInstant63, readableInstant64);
        org.joda.time.Duration duration66 = duration54.minus((org.joda.time.ReadableDuration) duration65);
        long long67 = duration65.getMillis();
        org.joda.time.Duration duration69 = duration44.withDurationAdded((org.joda.time.ReadableDuration) duration65, 13);
        org.joda.time.Period period70 = duration44.toPeriod();
        org.joda.time.Period period72 = period70.plusMonths(32);
        org.joda.time.Period period74 = period72.plusMinutes((-2697));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period74);
    }

    @Test
    public void test17576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17576");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-60L));
        org.joda.time.Duration duration4 = duration1.withDurationAdded((long) 8, 70);
        long long5 = duration1.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3600000L) + "'", long5 == (-3600000L));
    }

    @Test
    public void test17577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17577");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((-268435465L));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test17578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17578");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withParseType(periodType5);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType9 = days8.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withSecondsRemoved();
        org.joda.time.PeriodType periodType11 = periodType9.withYearsRemoved();
        java.lang.String str12 = periodType11.toString();
        org.joda.time.format.PeriodFormatter periodFormatter13 = periodFormatter7.withParseType(periodType11);
        org.joda.time.PeriodType periodType14 = periodFormatter13.getParseType();
        org.joda.time.PeriodType periodType15 = periodFormatter13.getParseType();
        java.util.Locale locale16 = periodFormatter13.getLocale();
        org.joda.time.PeriodType periodType17 = periodFormatter13.getParseType();
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.format.PeriodFormatter periodFormatter19 = periodFormatter13.withParseType(periodType18);
        java.io.Writer writer20 = null;
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period24 = org.joda.time.Period.millis(14400);
        org.joda.time.PeriodType periodType25 = period24.getPeriodType();
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant21, readableInstant22, periodType25);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter13.printTo(writer20, (org.joda.time.ReadablePeriod) period26);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PeriodType[Days]" + "'", str12, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodFormatter13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNull(locale16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodFormatter19);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodType25);
    }

    @Test
    public void test17579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17579");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(104);
        int int2 = period1.getMinutes();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 104 + "'", int2 == 104);
    }

    @Test
    public void test17580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17580");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds2 = seconds0.plus(seconds1);
        org.joda.time.PeriodType periodType3 = seconds0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType4 = seconds0.getFieldType();
        org.joda.time.PeriodType periodType5 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((-97));
        org.joda.time.Seconds seconds8 = seconds0.negated();
        org.joda.time.Seconds seconds10 = seconds8.plus(87);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds13 = seconds11.plus(seconds12);
        org.joda.time.PeriodType periodType14 = seconds11.getPeriodType();
        int int15 = seconds11.size();
        org.joda.time.PeriodType periodType16 = seconds11.getPeriodType();
        org.joda.time.Seconds seconds18 = seconds11.minus((int) (byte) -1);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) (byte) 100);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds23 = seconds21.plus(seconds22);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.ONE;
        boolean boolean25 = seconds22.isGreaterThan(seconds24);
        org.joda.time.Duration duration26 = seconds24.toStandardDuration();
        org.joda.time.Seconds seconds27 = seconds24.negated();
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.ONE;
        org.joda.time.Period period29 = seconds28.toPeriod();
        org.joda.time.Seconds seconds31 = seconds28.multipliedBy((int) (byte) -1);
        org.joda.time.Seconds seconds32 = seconds24.plus(seconds31);
        boolean boolean33 = seconds20.isLessThan(seconds32);
        org.joda.time.Seconds seconds35 = seconds20.plus(105);
        org.joda.time.Seconds seconds37 = seconds35.multipliedBy((-89));
        org.joda.time.Seconds seconds38 = seconds10.minus(seconds35);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
    }

    @Test
    public void test17581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17581");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = minutes2.plus((int) (byte) -1);
        org.joda.time.Minutes minutes6 = minutes4.minus((-97));
        org.joda.time.Minutes minutes7 = minutes6.negated();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes6);
        org.joda.time.Period period11 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period13 = period11.minusMonths(0);
        org.joda.time.Minutes minutes14 = period13.toStandardMinutes();
        org.joda.time.Duration duration15 = minutes14.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes14.multipliedBy((int) (short) 1);
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy(2);
        org.joda.time.Duration duration20 = minutes19.toStandardDuration();
        org.joda.time.Period period23 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period25 = period23.minusMonths(0);
        org.joda.time.Minutes minutes26 = period25.toStandardMinutes();
        org.joda.time.Duration duration27 = minutes26.toStandardDuration();
        org.joda.time.Minutes minutes29 = minutes26.multipliedBy((int) (short) 1);
        java.lang.String str30 = minutes29.toString();
        org.joda.time.Duration duration33 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration35 = duration33.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration35.toIntervalFrom(readableInstant38);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval39);
        org.joda.time.Minutes minutes42 = minutes40.multipliedBy((-95));
        org.joda.time.Minutes minutes43 = minutes29.minus(minutes42);
        boolean boolean44 = minutes19.isGreaterThan(minutes29);
        boolean boolean45 = minutes8.isGreaterThan(minutes29);
        org.joda.time.Minutes minutes47 = minutes8.multipliedBy(85);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT0M" + "'", str30, "PT0M");
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(minutes47);
    }

    @Test
    public void test17582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17582");
        org.joda.time.Period period2 = org.joda.time.Period.parse("PT-1680H");
        org.joda.time.PeriodType periodType3 = period2.getPeriodType();
        org.joda.time.Period period4 = new org.joda.time.Period((long) 18, periodType3);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(periodType3);
    }

    @Test
    public void test17583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17583");
        org.joda.time.Period period8 = new org.joda.time.Period((-2147483645), 44, 52, (-6), (-5), (int) (short) 0, (-36), (int) (byte) 0);
        int int9 = period8.getMinutes();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test17584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17584");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        boolean boolean14 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        java.lang.String str17 = duration13.toString();
        long long18 = duration13.getMillis();
        long long19 = duration13.getStandardHours();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = duration13.toPeriodFrom(readableInstant20);
        org.joda.time.Period period23 = period21.withDays(3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT0S" + "'", str17, "PT0S");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test17585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17585");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds2 = seconds0.multipliedBy(10);
        org.joda.time.DurationFieldType durationFieldType3 = seconds0.getFieldType();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds6 = seconds4.plus(seconds5);
        org.joda.time.Seconds seconds8 = seconds4.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds9 = seconds0.plus(seconds4);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((java.lang.Object) seconds4, chronology10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds14 = seconds12.plus(seconds13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.ONE;
        boolean boolean16 = seconds13.isGreaterThan(seconds15);
        boolean boolean17 = seconds4.isLessThan(seconds15);
        org.joda.time.Seconds seconds18 = seconds4.negated();
        org.joda.time.Seconds seconds19 = seconds4.negated();
        org.joda.time.PeriodType periodType20 = seconds4.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(periodType20);
    }

    @Test
    public void test17586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17586");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period2.withMillis((int) (short) 0);
        int int7 = period6.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod8 = period6.toMutablePeriod();
        org.joda.time.Duration duration9 = period6.toStandardDuration();
        org.joda.time.Seconds seconds10 = duration9.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType11 = seconds10.getFieldType();
        org.joda.time.Chronology chronology12 = null;
        boolean boolean13 = durationFieldType11.isSupported(chronology12);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test17587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17587");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        boolean boolean14 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration16 = duration6.plus((long) (short) 10);
        org.joda.time.Period period17 = duration6.toPeriod();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period23 = period21.minusMonths(0);
        org.joda.time.Minutes minutes24 = period23.toStandardMinutes();
        org.joda.time.Duration duration25 = minutes24.toStandardDuration();
        org.joda.time.Period period26 = duration25.toPeriod();
        org.joda.time.Duration duration28 = duration25.plus((long) (byte) 0);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration28);
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Period period32 = duration28.toPeriod(periodType31);
        boolean boolean33 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period41 = period39.minusMonths(0);
        org.joda.time.Period period43 = period39.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType44 = period39.getPeriodType();
        org.joda.time.PeriodType periodType45 = periodType44.withMinutesRemoved();
        org.joda.time.PeriodType periodType46 = periodType45.withHoursRemoved();
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant35, readableInstant36, periodType45);
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant34, periodType45);
        org.joda.time.PeriodType periodType49 = periodType45.withMonthsRemoved();
        org.joda.time.PeriodType periodType50 = periodType45.withMillisRemoved();
        org.joda.time.PeriodType periodType51 = periodType45.withYearsRemoved();
        org.joda.time.PeriodType periodType52 = periodType51.withWeeksRemoved();
        org.joda.time.PeriodType periodType53 = periodType52.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType55 = periodType52.getFieldType(0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(durationFieldType55);
    }

    @Test
    public void test17588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17588");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardSeconds(6000L);
        org.joda.time.Duration duration5 = duration2.withDurationAdded(10L, 100);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Period period8 = period6.minusMillis((-2147483596));
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test17589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17589");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Period period17 = duration16.toPeriod();
        boolean boolean18 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Period period21 = duration9.toPeriodTo(readableInstant19, periodType20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = duration9.toPeriodFrom(readableInstant22);
        org.joda.time.Period period24 = period23.negated();
        org.joda.time.Period period26 = period24.minusHours(8);
        org.joda.time.Period period28 = period24.withSeconds((int) (short) 0);
        org.joda.time.Period period30 = period24.minusMillis(65);
        org.joda.time.Period period32 = period30.plusWeeks((-35791394));
        org.joda.time.Period period34 = period30.plusHours((-1491203));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
    }

    @Test
    public void test17590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17590");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes(120L);
        org.joda.time.Period period5 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period7 = period5.minusMonths(0);
        org.joda.time.Minutes minutes8 = period7.toStandardMinutes();
        org.joda.time.Duration duration9 = minutes8.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        boolean boolean17 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration19 = duration9.plus((long) (short) 10);
        org.joda.time.Period period20 = duration9.toPeriod();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period26 = period24.minusMonths(0);
        org.joda.time.Minutes minutes27 = period26.toStandardMinutes();
        org.joda.time.Duration duration28 = minutes27.toStandardDuration();
        org.joda.time.Period period29 = duration28.toPeriod();
        org.joda.time.Duration duration31 = duration28.plus((long) (byte) 0);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration31);
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Period period35 = duration31.toPeriod(periodType34);
        boolean boolean36 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period44 = period42.minusMonths(0);
        org.joda.time.Period period46 = period42.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType47 = period42.getPeriodType();
        org.joda.time.PeriodType periodType48 = periodType47.withMinutesRemoved();
        org.joda.time.PeriodType periodType49 = periodType48.withHoursRemoved();
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant38, readableInstant39, periodType48);
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant37, periodType48);
        org.joda.time.PeriodType periodType52 = periodType48.withMonthsRemoved();
        org.joda.time.PeriodType periodType53 = periodType48.withMillisRemoved();
        org.joda.time.PeriodType periodType54 = periodType48.withYearsRemoved();
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType54);
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration57 = minutes56.toStandardDuration();
        org.joda.time.Duration duration58 = duration57.toDuration();
        org.joda.time.Period period61 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period63 = period61.minusMonths(0);
        org.joda.time.Minutes minutes64 = period63.toStandardMinutes();
        org.joda.time.Duration duration65 = minutes64.toStandardDuration();
        org.joda.time.Minutes minutes67 = minutes64.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration68 = minutes64.toStandardDuration();
        org.joda.time.Period period71 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period73 = period71.minusMonths(0);
        org.joda.time.Minutes minutes74 = period73.toStandardMinutes();
        org.joda.time.Duration duration75 = minutes74.toStandardDuration();
        org.joda.time.Period period76 = duration75.toPeriod();
        boolean boolean77 = duration68.isLongerThan((org.joda.time.ReadableDuration) duration75);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.PeriodType periodType79 = org.joda.time.PeriodType.days();
        org.joda.time.Period period80 = duration68.toPeriodTo(readableInstant78, periodType79);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Period period82 = duration68.toPeriodFrom(readableInstant81);
        org.joda.time.Period period83 = period82.negated();
        int int84 = period83.getWeeks();
        org.joda.time.Period period86 = period83.minusHours((int) (byte) 0);
        int int87 = period86.getMillis();
        org.joda.time.Duration duration88 = period86.toStandardDuration();
        boolean boolean89 = duration57.isLongerThan((org.joda.time.ReadableDuration) duration88);
        java.lang.String str90 = duration57.toString();
        boolean boolean91 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Duration duration93 = duration2.minus(0L);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "PT-128849018880S" + "'", str90, "PT-128849018880S");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(duration93);
    }

    @Test
    public void test17591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17591");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration4 = duration2.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalFrom(readableInstant7);
        org.joda.time.Days days9 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval8);
        org.joda.time.Days days11 = days9.minus((int) '4');
        org.joda.time.Days days13 = days9.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod14 = days13.toMutablePeriod();
        org.joda.time.Days days16 = days13.plus((-97));
        org.joda.time.Days days18 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days20 = days18.multipliedBy((int) (short) 100);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType22 = days21.getPeriodType();
        org.joda.time.Days days24 = days21.minus(0);
        org.joda.time.Days days25 = days18.minus(days24);
        org.joda.time.Days days27 = days18.minus(35);
        org.joda.time.Days days29 = days18.plus(14400);
        org.joda.time.Days days31 = days18.plus((int) (short) 1);
        org.joda.time.Days days33 = days18.minus((-4083));
        org.joda.time.MutablePeriod mutablePeriod34 = days33.toMutablePeriod();
        org.joda.time.Days days35 = days13.minus(days33);
        org.joda.time.Days days36 = org.joda.time.Days.ONE;
        org.joda.time.Days days37 = org.joda.time.Days.ONE;
        int int38 = days36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days37);
        org.joda.time.Days days40 = days37.multipliedBy((int) '#');
        org.joda.time.Days days41 = org.joda.time.Days.SIX;
        org.joda.time.Days days42 = days40.minus(days41);
        org.joda.time.Days days44 = days40.dividedBy((int) (byte) 100);
        org.joda.time.Days days46 = days40.minus(1);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Days days49 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType50 = days49.getPeriodType();
        org.joda.time.PeriodType periodType51 = periodType50.withSecondsRemoved();
        java.lang.String str52 = periodType50.toString();
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant47, readableInstant48, periodType50);
        org.joda.time.Days days54 = period53.toStandardDays();
        org.joda.time.Duration duration55 = days54.toStandardDuration();
        boolean boolean56 = days46.isLessThan(days54);
        boolean boolean57 = days33.isGreaterThan(days54);
        int int58 = days33.getDays();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PeriodType[Days]" + "'", str52, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 4088 + "'", int58 == 4088);
    }

    @Test
    public void test17592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17592");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ZERO;
        java.lang.String str1 = weeks0.toString();
        int int2 = weeks0.size();
        org.joda.time.PeriodType periodType3 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks4 = null;
        org.joda.time.Weeks weeks5 = weeks0.minus(weeks4);
        org.joda.time.Weeks weeks7 = weeks5.plus(2);
        org.joda.time.Weeks weeks9 = weeks5.multipliedBy(11);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks12 = weeks10.dividedBy(1);
        org.joda.time.Weeks weeks14 = weeks10.dividedBy(8);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = weeks14.minus(weeks17);
        org.joda.time.Weeks weeks20 = weeks9.minus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((-612));
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeksIn(readableInterval29);
        boolean boolean31 = weeks28.isLessThan(weeks30);
        boolean boolean32 = weeks27.isGreaterThan(weeks30);
        org.joda.time.Weeks weeks34 = weeks30.plus((int) (short) 100);
        org.joda.time.Weeks weeks35 = weeks23.minus(weeks34);
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.weeks((int) '#');
        org.joda.time.Weeks weeks40 = weeks36.minus(weeks39);
        org.joda.time.Weeks weeks42 = weeks40.dividedBy(35);
        boolean boolean43 = weeks19.isGreaterThan(weeks40);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "P0W" + "'", str1, "P0W");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P268435455W" + "'", str15, "P268435455W");
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test17593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17593");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType1 = days0.getPeriodType();
        org.joda.time.PeriodType periodType2 = periodType1.withHoursRemoved();
        org.joda.time.PeriodType periodType3 = periodType1.withYearsRemoved();
        org.joda.time.PeriodType periodType4 = periodType1.withSecondsRemoved();
        org.joda.time.PeriodType periodType5 = periodType1.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType5.withYearsRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withHoursRemoved();
        org.joda.time.PeriodType periodType8 = periodType6.withHoursRemoved();
        org.joda.time.PeriodType periodType9 = periodType6.withSecondsRemoved();
        org.joda.time.PeriodType periodType10 = periodType6.withDaysRemoved();
        org.joda.time.PeriodType periodType11 = periodType10.withMonthsRemoved();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
    }

    @Test
    public void test17594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17594");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        boolean boolean5 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period21 = period19.minusMonths(0);
        org.joda.time.Period period23 = period19.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType24 = period19.getPeriodType();
        org.joda.time.PeriodType periodType25 = periodType24.withMinutesRemoved();
        org.joda.time.PeriodType periodType26 = periodType25.withHoursRemoved();
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant15, readableInstant16, periodType25);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) (-1), periodType25, chronology28);
        org.joda.time.Period period30 = new org.joda.time.Period((int) '#', (int) (short) 10, 14400, 2, (int) (short) 1, 0, (int) (short) 1, (int) ' ', periodType25);
        java.lang.String str31 = periodType25.getName();
        org.joda.time.format.PeriodFormatter periodFormatter32 = periodFormatter2.withParseType(periodType25);
        boolean boolean33 = periodFormatter2.isParser();
        java.util.Locale locale34 = null;
        org.joda.time.format.PeriodFormatter periodFormatter35 = periodFormatter2.withLocale(locale34);
        java.util.Locale locale36 = null;
        org.joda.time.format.PeriodFormatter periodFormatter37 = periodFormatter35.withLocale(locale36);
        boolean boolean38 = periodFormatter35.isPrinter();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours(240000L);
        org.joda.time.Duration duration41 = duration40.toDuration();
        org.joda.time.Period period42 = duration41.toPeriod();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Interval interval44 = duration41.toIntervalTo(readableInstant43);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval44);
        org.joda.time.MutablePeriod mutablePeriod46 = minutes45.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int49 = periodFormatter35.parseInto((org.joda.time.ReadWritablePeriod) mutablePeriod46, "PeriodType[Days]", 1491308);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StandardNoMinutes" + "'", str31, "StandardNoMinutes");
        org.junit.Assert.assertNotNull(periodFormatter32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(periodFormatter35);
        org.junit.Assert.assertNotNull(periodFormatter37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
    }

    @Test
    public void test17595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17595");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = hours0.getFieldType();
        int int2 = hours0.size();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        int int4 = hours3.getHours();
        org.joda.time.Hours hours5 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours6.size();
        org.joda.time.Hours hours9 = org.joda.time.Hours.hours((int) (byte) 100);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours12 = hours10.multipliedBy((int) 'a');
        boolean boolean13 = hours9.isGreaterThan(hours10);
        org.joda.time.Hours hours15 = hours9.plus((int) 'a');
        org.joda.time.Hours hours17 = hours15.minus(13);
        boolean boolean18 = hours6.isLessThan(hours17);
        boolean boolean19 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours20 = hours6.negated();
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours23 = hours21.multipliedBy((int) 'a');
        org.joda.time.Hours hours25 = hours23.minus((int) (short) 10);
        int int26 = hours25.getHours();
        org.joda.time.Hours hours27 = hours6.plus(hours25);
        org.joda.time.Hours hours29 = hours6.dividedBy(776);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 87 + "'", int26 == 87);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
    }

    @Test
    public void test17596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17596");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period2.minusSeconds(100);
        org.joda.time.Period period8 = period2.withMillis((int) '#');
        org.joda.time.Seconds seconds9 = period2.toStandardSeconds();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(seconds9);
    }

    @Test
    public void test17597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17597");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        java.lang.String str10 = duration9.toString();
        org.joda.time.Period period11 = duration9.toPeriod();
        long long12 = duration9.getStandardSeconds();
        org.joda.time.Duration duration13 = duration9.toDuration();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = duration9.toPeriodTo(readableInstant14);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0S" + "'", str10, "PT0S");
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test17598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17598");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.THREE;
        org.joda.time.Duration duration2 = seconds1.toStandardDuration();
        org.joda.time.Duration duration4 = org.joda.time.Duration.millis((long) ' ');
        boolean boolean5 = duration2.isEqual((org.joda.time.ReadableDuration) duration4);
        long long6 = duration2.getMillis();
        org.joda.time.format.PeriodPrinter periodPrinter7 = null;
        org.joda.time.format.PeriodParser periodParser8 = null;
        org.joda.time.format.PeriodFormatter periodFormatter9 = new org.joda.time.format.PeriodFormatter(periodPrinter7, periodParser8);
        boolean boolean10 = periodFormatter9.isParser();
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds14 = seconds12.plus(seconds13);
        org.joda.time.PeriodType periodType15 = seconds12.getPeriodType();
        org.joda.time.Period period18 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period19 = period18.negated();
        org.joda.time.DurationFieldType durationFieldType21 = period18.getFieldType((int) (short) 1);
        int int22 = periodType15.indexOf(durationFieldType21);
        org.joda.time.Period period23 = new org.joda.time.Period((long) ' ', periodType15);
        org.joda.time.format.PeriodFormatter periodFormatter24 = periodFormatter9.withParseType(periodType15);
        org.joda.time.PeriodType periodType25 = periodType15.withDaysRemoved();
        org.joda.time.PeriodType periodType26 = periodType25.withSecondsRemoved();
        org.joda.time.PeriodType periodType27 = periodType25.withHoursRemoved();
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType27);
        long long29 = duration2.getStandardSeconds();
        java.lang.String str30 = duration2.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 3000L + "'", long6 == 3000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(periodFormatter24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 3L + "'", long29 == 3L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT3S" + "'", str30, "PT3S");
    }

    @Test
    public void test17599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17599");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType4 = days3.getPeriodType();
        org.joda.time.PeriodType periodType5 = periodType4.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType4.withSecondsRemoved();
        org.joda.time.Period period7 = duration1.toPeriodFrom(readableInstant2, periodType4);
        long long8 = duration1.getStandardHours();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration1.toIntervalFrom(readableInstant9);
        org.joda.time.Duration duration13 = new org.joda.time.Duration(0L, (long) (-116));
        boolean boolean14 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration17 = duration1.withDurationAdded(10000L, (-15));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(duration17);
    }

    @Test
    public void test17600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17600");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days3 = days1.multipliedBy((int) (short) 100);
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.weekyears();
        int int5 = days3.get(durationFieldType4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant6, readableDuration7);
        org.joda.time.Days days9 = period8.toStandardDays();
        org.joda.time.Days days11 = days9.minus(7);
        org.joda.time.MutablePeriod mutablePeriod12 = days9.toMutablePeriod();
        org.joda.time.Days days13 = org.joda.time.Days.FIVE;
        boolean boolean14 = days9.isLessThan(days13);
        org.joda.time.Days days15 = days3.plus(days13);
        org.joda.time.Days days17 = org.joda.time.Days.parseDays("P10D");
        org.joda.time.Days days18 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType19 = days18.getPeriodType();
        org.joda.time.Days days21 = days18.plus((int) (byte) 100);
        boolean boolean22 = days17.isLessThan(days21);
        org.joda.time.Days days23 = org.joda.time.Days.FIVE;
        java.lang.String str24 = days23.toString();
        org.joda.time.Days days26 = days23.minus(8);
        org.joda.time.Days days28 = days26.minus((-10));
        org.joda.time.Days days29 = days17.plus(days28);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        java.lang.String str31 = days30.toString();
        org.joda.time.Days days32 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType33 = days32.getPeriodType();
        org.joda.time.Days days35 = days32.minus(0);
        boolean boolean36 = days30.isLessThan(days35);
        boolean boolean37 = days28.isGreaterThan(days30);
        org.joda.time.Days days39 = org.joda.time.Days.days(1);
        org.joda.time.Duration duration40 = days39.toStandardDuration();
        org.joda.time.Days days41 = duration40.toStandardDays();
        org.joda.time.Days days42 = org.joda.time.Days.ONE;
        org.joda.time.Days days43 = org.joda.time.Days.ONE;
        int int44 = days42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days43);
        org.joda.time.Days days46 = days42.multipliedBy(8);
        boolean boolean47 = days41.isGreaterThan(days46);
        boolean boolean48 = days28.isLessThan(days41);
        org.joda.time.Days days49 = days15.plus(days28);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P5D" + "'", str24, "P5D");
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P5D" + "'", str31, "P5D");
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(days49);
    }

    @Test
    public void test17601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17601");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Days days2 = org.joda.time.Days.FIVE;
        java.lang.String str3 = days2.toString();
        org.joda.time.Days days5 = days2.multipliedBy((int) (byte) -1);
        org.joda.time.Days days6 = days2.negated();
        org.joda.time.Days days7 = org.joda.time.Days.ONE;
        org.joda.time.Days days8 = org.joda.time.Days.ONE;
        int int9 = days7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days8);
        org.joda.time.Days days11 = days8.multipliedBy((int) '#');
        org.joda.time.Days days12 = days6.minus(days8);
        org.joda.time.DurationFieldType durationFieldType13 = days12.getFieldType();
        org.joda.time.Duration duration14 = days12.toStandardDuration();
        org.joda.time.Days days15 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days12);
        org.joda.time.PeriodType periodType16 = days12.getPeriodType();
        org.joda.time.PeriodType periodType17 = periodType16.withSecondsRemoved();
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType17);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType20 = periodType17.getFieldType(95);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 95");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "P5D" + "'", str3, "P5D");
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
    }

    @Test
    public void test17602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17602");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period4.minusSeconds(0);
        org.joda.time.Period period7 = period6.normalizedStandard();
        org.joda.time.Hours hours8 = period7.toStandardHours();
        org.joda.time.Hours hours10 = hours8.plus((int) (byte) -1);
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours11.dividedBy(100);
        org.joda.time.Period period16 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period18 = period16.minusMonths(0);
        org.joda.time.Period period20 = period18.minusSeconds(0);
        org.joda.time.Period period21 = period20.normalizedStandard();
        org.joda.time.Hours hours22 = period21.toStandardHours();
        boolean boolean23 = hours13.isLessThan(hours22);
        org.joda.time.Period period25 = org.joda.time.Period.millis((int) '#');
        int int26 = period25.getYears();
        org.joda.time.Hours hours27 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period25);
        org.joda.time.Period period29 = period25.multipliedBy((int) (byte) 0);
        org.joda.time.Hours hours30 = period29.toStandardHours();
        org.joda.time.Hours hours31 = hours13.minus(hours30);
        org.joda.time.Hours hours33 = hours31.dividedBy(59);
        org.joda.time.Hours hours35 = org.joda.time.Hours.hours(2);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours37 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours38 = hours36.minus(hours37);
        boolean boolean39 = hours35.isLessThan(hours36);
        org.joda.time.Hours hours40 = org.joda.time.Hours.ZERO;
        org.joda.time.Duration duration41 = hours40.toStandardDuration();
        org.joda.time.Hours hours42 = hours36.plus(hours40);
        org.joda.time.Period period44 = org.joda.time.Period.millis((int) '#');
        int int45 = period44.getYears();
        org.joda.time.Hours hours46 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period44);
        int int47 = hours46.getHours();
        org.joda.time.Hours hours49 = hours46.multipliedBy((int) (short) 1);
        org.joda.time.Hours hours50 = hours42.minus(hours46);
        org.joda.time.Hours hours51 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType52 = hours51.getFieldType();
        org.joda.time.Period period55 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period56 = period55.negated();
        int int57 = period55.getHours();
        org.joda.time.Period period59 = org.joda.time.Period.days(10);
        org.joda.time.Period period61 = period59.plusMonths((int) 'a');
        org.joda.time.Period period63 = period59.plusSeconds((int) (short) 100);
        org.joda.time.Period period65 = period63.minusMonths((int) 'a');
        org.joda.time.Period period66 = period55.withFields((org.joda.time.ReadablePeriod) period65);
        org.joda.time.Hours hours67 = period55.toStandardHours();
        int int68 = hours67.getHours();
        org.joda.time.Hours hours69 = hours51.plus(hours67);
        org.joda.time.Hours hours70 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours72 = hours70.dividedBy(100);
        org.joda.time.Period period75 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period77 = period75.minusMonths(0);
        org.joda.time.Period period79 = period77.minusSeconds(0);
        org.joda.time.Period period80 = period79.normalizedStandard();
        org.joda.time.Hours hours81 = period80.toStandardHours();
        boolean boolean82 = hours72.isLessThan(hours81);
        org.joda.time.Period period84 = org.joda.time.Period.millis((int) '#');
        int int85 = period84.getYears();
        org.joda.time.Hours hours86 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period84);
        org.joda.time.Period period88 = period84.multipliedBy((int) (byte) 0);
        org.joda.time.Hours hours89 = period88.toStandardHours();
        org.joda.time.Hours hours90 = hours72.minus(hours89);
        boolean boolean91 = hours67.isLessThan(hours89);
        org.joda.time.Hours hours93 = hours89.dividedBy((int) (short) -1);
        org.joda.time.Hours hours94 = hours46.minus(hours89);
        org.joda.time.DurationFieldType durationFieldType95 = hours46.getFieldType();
        org.joda.time.Hours hours96 = hours46.negated();
        org.joda.time.Hours hours97 = hours33.plus(hours96);
        org.joda.time.Hours hours98 = hours8.minus(hours97);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(hours86);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertNotNull(hours90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(hours93);
        org.junit.Assert.assertNotNull(hours94);
        org.junit.Assert.assertNotNull(durationFieldType95);
        org.junit.Assert.assertNotNull(hours96);
        org.junit.Assert.assertNotNull(hours97);
        org.junit.Assert.assertNotNull(hours98);
    }

    @Test
    public void test17603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17603");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) '#');
        int int2 = period1.getYears();
        org.joda.time.Hours hours3 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Period period5 = period1.multipliedBy((int) (byte) 0);
        org.joda.time.Period period7 = period1.plusMonths((-10));
        org.joda.time.Period period9 = period7.plusDays((-49));
        org.joda.time.Period period10 = period9.normalizedStandard();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test17604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17604");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy(2);
        org.joda.time.Period period13 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period15 = period13.minusMonths(0);
        org.joda.time.Period period16 = period13.normalizedStandard();
        org.joda.time.Period period17 = period16.toPeriod();
        org.joda.time.Minutes minutes18 = period16.toStandardMinutes();
        org.joda.time.Period period21 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period23 = period21.minusMonths(0);
        org.joda.time.Minutes minutes24 = period23.toStandardMinutes();
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((java.lang.Object) minutes24, chronology27);
        org.joda.time.Period period29 = minutes24.toPeriod();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean31 = minutes24.isLessThan(minutes30);
        org.joda.time.Minutes minutes33 = minutes24.minus((int) (short) 0);
        boolean boolean34 = minutes18.isGreaterThan(minutes33);
        int int35 = minutes18.size();
        org.joda.time.Minutes minutes36 = minutes8.minus(minutes18);
        org.joda.time.PeriodType periodType37 = minutes8.getPeriodType();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(periodType37);
    }

    @Test
    public void test17605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17605");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds3 = seconds1.plus(seconds2);
        org.joda.time.PeriodType periodType4 = seconds1.getPeriodType();
        org.joda.time.Period period5 = new org.joda.time.Period((long) 'a', periodType4);
        org.joda.time.Period period6 = period5.normalizedStandard();
        org.joda.time.Seconds seconds7 = period6.toStandardSeconds();
        java.lang.Object obj8 = null;
        boolean boolean9 = seconds7.equals(obj8);
        org.joda.time.Seconds seconds11 = seconds7.dividedBy(36);
        org.joda.time.Seconds seconds13 = seconds7.plus((-6));
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
    }

    @Test
    public void test17606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17606");
        org.joda.time.Period period1 = org.joda.time.Period.parse("PT0M");
        int int2 = period1.getSeconds();
        int int3 = period1.getSeconds();
        org.joda.time.Period period5 = period1.plusWeeks(2147483645);
        org.joda.time.Period period7 = period1.withYears(999);
        org.joda.time.Period period9 = period7.plusMinutes(0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds10 = period7.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Seconds as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test17607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17607");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        boolean boolean14 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(readableInstant15, readableInstant16);
        org.joda.time.Duration duration18 = duration6.minus((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant19);
        org.joda.time.Period period21 = duration6.toPeriod();
        org.joda.time.Period period23 = period21.withHours(13);
        org.joda.time.Period period26 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period28 = period26.minusMonths(0);
        org.joda.time.Minutes minutes29 = period28.toStandardMinutes();
        org.joda.time.Duration duration30 = minutes29.toStandardDuration();
        org.joda.time.Period period33 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period35 = period33.minusMonths(0);
        org.joda.time.Minutes minutes36 = period35.toStandardMinutes();
        org.joda.time.Duration duration37 = minutes36.toStandardDuration();
        boolean boolean38 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Period period39 = duration30.toPeriod();
        org.joda.time.Period period41 = period39.minusHours((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType43 = period39.getFieldType(6);
        org.joda.time.Period period45 = period23.withFieldAdded(durationFieldType43, (int) ' ');
        org.joda.time.Duration duration46 = period23.toStandardDuration();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration46);
    }

    @Test
    public void test17608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17608");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (byte) 1);
        org.joda.time.Duration duration8 = minutes7.toStandardDuration();
        org.joda.time.Minutes minutes9 = minutes7.negated();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Minutes minutes17 = minutes15.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((java.lang.Object) minutes15, chronology18);
        org.joda.time.Period period20 = minutes15.toPeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean22 = minutes15.isLessThan(minutes21);
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 0);
        org.joda.time.Minutes minutes25 = minutes15.negated();
        org.joda.time.Period period30 = new org.joda.time.Period(7, (int) 'a', (-2147483646), 0);
        org.joda.time.Period period32 = period30.minusHours(35);
        org.joda.time.Period period35 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period37 = period35.minusMonths(0);
        org.joda.time.Minutes minutes38 = period37.toStandardMinutes();
        org.joda.time.Duration duration39 = minutes38.toStandardDuration();
        org.joda.time.Minutes minutes41 = minutes38.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration42 = minutes38.toStandardDuration();
        org.joda.time.Period period45 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period47 = period45.minusMonths(0);
        org.joda.time.Minutes minutes48 = period47.toStandardMinutes();
        org.joda.time.Minutes minutes50 = minutes48.dividedBy((int) (byte) 100);
        boolean boolean51 = minutes38.isLessThan(minutes50);
        int int52 = minutes38.getMinutes();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.minutes((int) (byte) -1);
        org.joda.time.Minutes minutes55 = minutes38.plus(minutes54);
        org.joda.time.Minutes minutes56 = null;
        org.joda.time.Minutes minutes57 = minutes54.plus(minutes56);
        org.joda.time.Period period58 = period30.plus((org.joda.time.ReadablePeriod) minutes54);
        boolean boolean59 = minutes15.isGreaterThan(minutes54);
        boolean boolean60 = minutes7.isGreaterThan(minutes54);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test17609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17609");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeksIn(readableInterval4);
        boolean boolean6 = weeks3.isLessThan(weeks5);
        boolean boolean7 = weeks2.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks8 = null;
        org.joda.time.Weeks weeks9 = weeks5.minus(weeks8);
        org.joda.time.Weeks weeks11 = weeks9.minus(35);
        java.lang.String str12 = weeks11.toString();
        java.lang.String str13 = weeks11.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeksIn(readableInterval15);
        boolean boolean17 = weeks14.isLessThan(weeks16);
        org.joda.time.Weeks weeks19 = weeks16.multipliedBy(10);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ZERO;
        java.lang.String str21 = weeks20.toString();
        int int22 = weeks20.size();
        org.joda.time.PeriodType periodType23 = weeks20.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod24 = weeks20.toMutablePeriod();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeksIn(readableInterval29);
        boolean boolean31 = weeks28.isLessThan(weeks30);
        boolean boolean32 = weeks27.isGreaterThan(weeks30);
        org.joda.time.Weeks weeks33 = null;
        org.joda.time.Weeks weeks34 = weeks30.minus(weeks33);
        org.joda.time.DurationFieldType durationFieldType35 = weeks34.getFieldType();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.weeksIn(readableInterval41);
        boolean boolean43 = weeks40.isLessThan(weeks42);
        boolean boolean44 = weeks39.isGreaterThan(weeks42);
        boolean boolean45 = weeks36.isLessThan(weeks39);
        org.joda.time.Weeks weeks46 = weeks34.plus(weeks39);
        org.joda.time.Weeks weeks48 = weeks39.minus(2);
        org.joda.time.Weeks weeks50 = weeks48.dividedBy((-10));
        org.joda.time.Weeks weeks51 = weeks50.negated();
        boolean boolean52 = weeks20.isLessThan(weeks51);
        org.joda.time.Weeks weeks53 = weeks16.minus(weeks51);
        int int54 = weeks51.getWeeks();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval59 = null;
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.weeksIn(readableInterval59);
        boolean boolean61 = weeks58.isLessThan(weeks60);
        boolean boolean62 = weeks57.isGreaterThan(weeks60);
        org.joda.time.Weeks weeks63 = weeks51.minus(weeks60);
        int int64 = weeks60.getWeeks();
        org.joda.time.Weeks weeks65 = weeks11.plus(weeks60);
        org.joda.time.Weeks weeks67 = weeks11.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval69 = null;
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.weeksIn(readableInterval69);
        boolean boolean71 = weeks68.isLessThan(weeks70);
        org.joda.time.Weeks weeks72 = weeks11.minus(weeks70);
        org.joda.time.Weeks weeks74 = weeks70.dividedBy(999);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-35W" + "'", str12, "P-35W");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-35W" + "'", str13, "P-35W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P0W" + "'", str21, "P0W");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks74);
    }

    @Test
    public void test17610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17610");
        org.joda.time.Period period2 = new org.joda.time.Period(1862400L, 151200L);
    }

    @Test
    public void test17611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17611");
        org.joda.time.Period period1 = org.joda.time.Period.hours((int) '4');
        int int2 = period1.getSeconds();
        org.joda.time.Period period4 = period1.minusMonths(35);
        int int5 = period4.getYears();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks6 = period4.toStandardWeeks();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Weeks as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test17612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17612");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P0W");
        org.joda.time.Weeks weeks3 = weeks1.plus((-10));
        org.joda.time.Period period4 = weeks1.toPeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test17613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17613");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Minutes minutes6 = period5.toStandardMinutes();
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes9 = minutes0.minus(minutes6);
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Minutes minutes17 = minutes15.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((java.lang.Object) minutes15, chronology18);
        org.joda.time.Minutes minutes20 = minutes0.minus(minutes15);
        org.joda.time.Duration duration21 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes23 = minutes0.minus(36);
        org.joda.time.MutablePeriod mutablePeriod24 = minutes0.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
    }

    @Test
    public void test17614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17614");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.parse("PT0S");
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withHoursRemoved();
        org.joda.time.PeriodType periodType8 = periodType6.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.days();
        boolean boolean10 = periodType8.isSupported(durationFieldType9);
        org.joda.time.PeriodType periodType11 = periodType8.withMinutesRemoved();
        int int12 = periodType8.size();
        org.joda.time.Period period13 = duration3.toPeriodFrom(readableInstant4, periodType8);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType16 = days15.getPeriodType();
        org.joda.time.PeriodType periodType17 = periodType16.withSecondsRemoved();
        org.joda.time.PeriodType periodType18 = periodType16.withYearsRemoved();
        java.lang.String str19 = periodType18.toString();
        org.joda.time.PeriodType periodType20 = periodType18.withHoursRemoved();
        java.lang.String str21 = periodType20.toString();
        org.joda.time.Period period22 = duration3.toPeriodTo(readableInstant14, periodType20);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType20);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period25 = period23.minusWeeks((-12));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PeriodType[Days]" + "'", str19, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PeriodType[Days]" + "'", str21, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(period22);
    }

    @Test
    public void test17615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17615");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds2 = seconds0.plus(seconds1);
        org.joda.time.Seconds seconds4 = seconds1.plus((int) (byte) 0);
        org.joda.time.Seconds seconds6 = seconds1.minus(8);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds11 = seconds9.multipliedBy(10);
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds9);
        org.joda.time.Seconds seconds13 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds16 = seconds14.plus(seconds15);
        java.lang.String str17 = seconds14.toString();
        org.joda.time.DurationFieldType durationFieldType18 = seconds14.getFieldType();
        java.lang.String str19 = seconds14.toString();
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds22 = seconds20.multipliedBy(10);
        org.joda.time.Duration duration23 = seconds20.toStandardDuration();
        boolean boolean24 = seconds14.isLessThan(seconds20);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.parseSeconds("PT0S");
        java.lang.String str27 = seconds26.toString();
        org.joda.time.Period period30 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period32 = period30.minusMonths(0);
        int int33 = period32.getYears();
        org.joda.time.Period period34 = period32.toPeriod();
        org.joda.time.Seconds seconds35 = period32.toStandardSeconds();
        boolean boolean36 = seconds26.isLessThan(seconds35);
        org.joda.time.Seconds seconds38 = seconds35.minus(0);
        boolean boolean39 = seconds14.isLessThan(seconds35);
        boolean boolean40 = seconds6.isLessThan(seconds35);
        org.joda.time.Seconds seconds42 = seconds6.multipliedBy((int) (byte) 0);
        int int43 = seconds6.getSeconds();
        org.joda.time.PeriodType periodType44 = seconds6.getPeriodType();
        org.joda.time.PeriodType periodType45 = periodType44.withHoursRemoved();
        org.joda.time.Days days46 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType47 = days46.getPeriodType();
        org.joda.time.PeriodType periodType48 = periodType47.withWeeksRemoved();
        java.lang.String str49 = periodType47.getName();
        int int50 = periodType47.size();
        org.joda.time.PeriodType periodType51 = periodType47.withMinutesRemoved();
        org.joda.time.PeriodType periodType52 = periodType51.withWeeksRemoved();
        org.joda.time.PeriodType periodType53 = periodType51.withMonthsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period54 = new org.joda.time.Period((java.lang.Object) periodType44, periodType53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2S" + "'", str17, "PT2S");
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT2S" + "'", str19, "PT2S");
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT0S" + "'", str27, "PT0S");
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-6) + "'", int43 == (-6));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Days" + "'", str49, "Days");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(periodType53);
    }

    @Test
    public void test17616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17616");
        org.joda.time.Period period1 = new org.joda.time.Period(100L);
        org.joda.time.Period period3 = period1.withMillis(6);
        int int4 = period3.getMonths();
        org.joda.time.Period period6 = period3.plusYears((-2147483596));
        org.joda.time.Period period8 = period6.plusHours((int) (byte) 1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test17617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17617");
        org.joda.time.Days days1 = org.joda.time.Days.days((-100));
        org.joda.time.Days days3 = days1.dividedBy((-97));
        org.joda.time.Days days5 = days1.minus((-200));
        org.joda.time.Days days7 = days1.dividedBy(8);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
    }

    @Test
    public void test17618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17618");
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.DurationFieldType durationFieldType3 = hours1.getFieldType();
        int int4 = hours1.getHours();
        org.joda.time.PeriodType periodType5 = hours1.getPeriodType();
        org.joda.time.Hours hours7 = org.joda.time.Hours.hours(2147483647);
        boolean boolean8 = hours1.isGreaterThan(hours7);
        org.joda.time.PeriodType periodType9 = hours7.getPeriodType();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours12 = hours10.minus(hours11);
        int int13 = hours11.getHours();
        boolean boolean14 = periodType9.equals((java.lang.Object) int13);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 20, periodType9, chronology15);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483647 + "'", int4 == 2147483647);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 6 + "'", int13 == 6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test17619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17619");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(0L, (long) 'a', chronology2);
        org.joda.time.Period period6 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period8 = period6.minusMonths(0);
        org.joda.time.Period period10 = period6.minusSeconds((int) (byte) 100);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType12 = days11.getPeriodType();
        org.joda.time.PeriodType periodType13 = periodType12.withHoursRemoved();
        org.joda.time.PeriodType periodType14 = periodType12.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.days();
        boolean boolean16 = periodType14.isSupported(durationFieldType15);
        int int17 = period6.get(durationFieldType15);
        int int18 = period6.getDays();
        org.joda.time.Period period20 = period6.plusHours((int) '#');
        org.joda.time.Period period22 = period20.plusMonths((int) (short) 1);
        org.joda.time.Period period24 = period22.minusWeeks((int) (short) 1);
        org.joda.time.Days days26 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days28 = days26.multipliedBy((int) (short) 100);
        org.joda.time.Days days29 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType30 = days29.getPeriodType();
        org.joda.time.Days days32 = days29.minus(0);
        org.joda.time.Days days33 = days26.minus(days32);
        org.joda.time.Days days34 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days33);
        org.joda.time.Duration duration37 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration39 = duration37.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalFrom(readableInstant42);
        org.joda.time.Days days44 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval43);
        org.joda.time.Days days46 = days44.minus((int) '4');
        org.joda.time.Days days47 = days34.minus(days46);
        org.joda.time.Period period49 = org.joda.time.Period.millis(0);
        org.joda.time.DurationFieldType durationFieldType50 = org.joda.time.DurationFieldType.months();
        boolean boolean51 = period49.isSupported(durationFieldType50);
        java.lang.String str52 = durationFieldType50.getName();
        int int53 = days34.get(durationFieldType50);
        org.joda.time.Period period55 = period22.withFieldAdded(durationFieldType50, (int) (short) 0);
        int int56 = period3.get(durationFieldType50);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Duration duration58 = period3.toDurationFrom(readableInstant57);
        int int59 = period3.getMonths();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period61 = period3.minusMillis((-2147483552));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 97 + 2147483552");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "months" + "'", str52, "months");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test17620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17620");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withParseType(periodType5);
        boolean boolean8 = periodFormatter7.isPrinter();
        boolean boolean9 = periodFormatter7.isParser();
        org.joda.time.PeriodType periodType10 = periodFormatter7.getParseType();
        boolean boolean11 = periodFormatter7.isParser();
        org.joda.time.format.PeriodPrinter periodPrinter12 = periodFormatter7.getPrinter();
        org.joda.time.format.PeriodParser periodParser13 = periodFormatter7.getParser();
        org.joda.time.format.PeriodPrinter periodPrinter14 = periodFormatter7.getPrinter();
        org.joda.time.PeriodType periodType15 = periodFormatter7.getParseType();
        java.lang.StringBuffer stringBuffer16 = null;
        org.joda.time.Period period18 = org.joda.time.Period.days(10);
        org.joda.time.Period period20 = period18.plusMonths((int) 'a');
        org.joda.time.Period period22 = period18.plusSeconds((int) (short) 100);
        org.joda.time.Period period24 = period22.plusMinutes(3);
        org.joda.time.Period period26 = period24.minusHours(2);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter7.printTo(stringBuffer16, (org.joda.time.ReadablePeriod) period24);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(periodPrinter12);
        org.junit.Assert.assertNull(periodParser13);
        org.junit.Assert.assertNull(periodPrinter14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
    }

    @Test
    public void test17621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17621");
        org.joda.time.Days days1 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType2 = days1.getPeriodType();
        org.joda.time.PeriodType periodType3 = periodType2.withHoursRemoved();
        org.joda.time.PeriodType periodType4 = periodType2.withYearsRemoved();
        org.joda.time.PeriodType periodType5 = periodType2.withSecondsRemoved();
        org.joda.time.Period period6 = new org.joda.time.Period((long) (short) 10, periodType2);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period8 = period6.plusSeconds((-24));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test17622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17622");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withHoursRemoved();
        org.joda.time.PeriodType periodType8 = periodType6.withSecondsRemoved();
        org.joda.time.Period period9 = duration3.toPeriodFrom(readableInstant4, periodType6);
        long long10 = duration3.getStandardHours();
        org.joda.time.Duration duration13 = duration3.withDurationAdded(10L, (-36));
        org.joda.time.Period period14 = duration13.toPeriod();
        org.joda.time.Duration duration17 = duration13.withDurationAdded((long) ' ', (int) (byte) 0);
        org.joda.time.Period period20 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period22 = period20.minusMonths(0);
        org.joda.time.Period period24 = period20.minusSeconds((int) (byte) 100);
        org.joda.time.Days days25 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType26 = days25.getPeriodType();
        org.joda.time.PeriodType periodType27 = periodType26.withHoursRemoved();
        org.joda.time.PeriodType periodType28 = periodType26.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.days();
        boolean boolean30 = periodType28.isSupported(durationFieldType29);
        int int31 = period20.get(durationFieldType29);
        org.joda.time.Period period33 = period20.withHours(1);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration35 = period20.toDurationTo(readableInstant34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration35.toPeriodTo(readableInstant36);
        int int38 = duration17.compareTo((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Days days43 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType44 = days43.getPeriodType();
        org.joda.time.PeriodType periodType45 = periodType44.withHoursRemoved();
        org.joda.time.PeriodType periodType46 = periodType44.withSecondsRemoved();
        org.joda.time.PeriodType periodType47 = periodType44.withMinutesRemoved();
        org.joda.time.PeriodType periodType48 = periodType47.withWeeksRemoved();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period(10L, (long) (byte) -1, periodType48, chronology49);
        org.joda.time.PeriodType periodType51 = periodType48.withYearsRemoved();
        boolean boolean52 = periodType40.equals((java.lang.Object) periodType48);
        org.joda.time.Period period53 = duration35.toPeriodTo(readableInstant39, periodType48);
        org.joda.time.PeriodType periodType54 = periodType48.withDaysRemoved();
        org.joda.time.PeriodType periodType55 = periodType48.withYearsRemoved();
        org.joda.time.Period period56 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType55);
        int int57 = period56.getSeconds();
        int[] intArray58 = period56.getValues();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0]");
    }

    @Test
    public void test17623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17623");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) 36);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (-1));
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration9 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration11 = duration9.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Interval interval15 = duration11.toIntervalFrom(readableInstant14);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval15);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval15);
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes20 = minutes18.minus((-97));
        org.joda.time.PeriodType periodType21 = minutes20.getPeriodType();
        org.joda.time.Period period22 = duration4.toPeriodTo(readableInstant6, periodType21);
        org.joda.time.Duration duration23 = duration1.plus((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration4.toPeriod(chronology24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = duration4.toPeriodFrom(readableInstant26);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
    }

    @Test
    public void test17624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17624");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        boolean boolean14 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(readableInstant15, readableInstant16);
        org.joda.time.Duration duration18 = duration6.minus((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant19);
        org.joda.time.Period period22 = period20.withYears((int) (byte) 1);
        int int23 = period22.getMonths();
        org.joda.time.Period period25 = period22.withWeeks((-4083));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test17625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17625");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds2 = seconds0.dividedBy((-4083));
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds7 = seconds5.plus(seconds6);
        org.joda.time.Seconds seconds9 = seconds5.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds10 = seconds4.plus(seconds5);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds13 = seconds11.multipliedBy(10);
        org.joda.time.DurationFieldType durationFieldType14 = seconds11.getFieldType();
        int int15 = seconds11.getSeconds();
        org.joda.time.Seconds seconds16 = seconds11.negated();
        org.joda.time.Seconds seconds17 = seconds4.plus(seconds16);
        org.joda.time.Seconds seconds19 = seconds4.minus(97);
        boolean boolean20 = seconds0.isGreaterThan(seconds19);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test17626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17626");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType4 = days3.getPeriodType();
        org.joda.time.PeriodType periodType5 = periodType4.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType4.withSecondsRemoved();
        org.joda.time.Period period7 = duration1.toPeriodFrom(readableInstant2, periodType4);
        java.lang.String str8 = duration1.toString();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = duration1.toPeriodTo(readableInstant9);
        long long11 = duration1.getStandardDays();
        org.joda.time.Duration duration12 = new org.joda.time.Duration((java.lang.Object) long11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant13);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT100S" + "'", str8, "PT100S");
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test17627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17627");
        org.joda.time.Period period8 = new org.joda.time.Period(65, 35, (-1680), (int) (short) 100, (-1680), 0, (-36), 6);
        org.joda.time.Period period10 = period8.plusSeconds(103);
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(7);
        org.joda.time.Hours hours14 = hours12.plus((int) (byte) 1);
        org.joda.time.Hours hours15 = hours12.negated();
        org.joda.time.Period period16 = period8.withFields((org.joda.time.ReadablePeriod) hours15);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test17628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17628");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(1);
        java.lang.String str2 = weeks1.toString();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeksIn(readableInterval7);
        boolean boolean9 = weeks6.isLessThan(weeks8);
        boolean boolean10 = weeks5.isGreaterThan(weeks8);
        org.joda.time.Weeks weeks11 = null;
        org.joda.time.Weeks weeks12 = weeks8.minus(weeks11);
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration17 = duration15.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalFrom(readableInstant20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval21);
        int int24 = weeks23.getWeeks();
        org.joda.time.Weeks weeks25 = weeks8.plus(weeks23);
        boolean boolean26 = weeks1.isGreaterThan(weeks25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeksIn(readableInterval27);
        org.joda.time.Weeks weeks30 = weeks28.plus((-97));
        org.joda.time.Weeks weeks32 = weeks30.minus(5);
        org.joda.time.Weeks weeks33 = weeks1.minus(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.dividedBy(8);
        org.joda.time.Duration duration36 = weeks32.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "P1W" + "'", str2, "P1W");
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(duration36);
    }

    @Test
    public void test17629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17629");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Minutes minutes6 = period5.toStandardMinutes();
        org.joda.time.Duration duration7 = minutes6.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Interval interval9 = duration7.toIntervalFrom(readableInstant8);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration7);
        long long11 = duration7.getStandardDays();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test17630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17630");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((-37), 126064, (-2147483645), (int) (short) 1, (int) ' ', (-107), (-2697), (-2147483552), periodType8);
    }

    @Test
    public void test17631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17631");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.Seconds seconds2 = seconds0.multipliedBy((int) (byte) 100);
        org.joda.time.Seconds seconds4 = seconds0.dividedBy((-95));
        int int5 = seconds0.getSeconds();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((-10));
        org.joda.time.PeriodType periodType8 = seconds0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = seconds0.getFieldType();
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.ZERO;
        org.joda.time.Seconds seconds12 = seconds10.multipliedBy((int) (byte) 100);
        org.joda.time.Seconds seconds14 = seconds10.dividedBy((-95));
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds19 = seconds17.plus(seconds18);
        org.joda.time.Seconds seconds21 = seconds17.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds22 = seconds16.plus(seconds17);
        org.joda.time.Duration duration23 = seconds17.toStandardDuration();
        org.joda.time.Period period25 = org.joda.time.Period.hours((int) '#');
        org.joda.time.Seconds seconds26 = period25.toStandardSeconds();
        boolean boolean27 = seconds17.isLessThan(seconds26);
        org.joda.time.Period period30 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period32 = period30.minusMonths(0);
        org.joda.time.Period period34 = period30.withMillis((int) (short) 0);
        int int35 = period34.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod36 = period34.toMutablePeriod();
        org.joda.time.Duration duration37 = period34.toStandardDuration();
        org.joda.time.Seconds seconds38 = duration37.toStandardSeconds();
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds41 = seconds39.plus(seconds40);
        org.joda.time.Seconds seconds43 = seconds39.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds44 = seconds38.minus(seconds43);
        int int45 = seconds44.size();
        org.joda.time.Seconds seconds46 = seconds26.minus(seconds44);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds49 = seconds47.plus(seconds48);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.ONE;
        boolean boolean51 = seconds48.isGreaterThan(seconds50);
        org.joda.time.Duration duration52 = seconds50.toStandardDuration();
        org.joda.time.Seconds seconds53 = seconds50.negated();
        org.joda.time.Seconds seconds55 = seconds53.multipliedBy((int) '#');
        boolean boolean56 = seconds46.isLessThan(seconds53);
        boolean boolean57 = seconds14.isLessThan(seconds53);
        org.joda.time.Seconds seconds59 = seconds14.multipliedBy(118);
        org.joda.time.Seconds seconds61 = seconds14.minus(400);
        boolean boolean62 = seconds0.isGreaterThan(seconds14);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test17632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17632");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.plus((int) (short) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.ZERO;
        org.joda.time.Minutes minutes4 = duration3.toStandardMinutes();
        org.joda.time.Minutes minutes6 = minutes4.plus(3);
        java.lang.Object obj7 = null;
        boolean boolean8 = minutes6.equals(obj7);
        org.joda.time.Minutes minutes9 = minutes2.plus(minutes6);
        org.joda.time.PeriodType periodType10 = minutes2.getPeriodType();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Duration duration13 = duration12.toDuration();
        org.joda.time.Minutes minutes14 = duration12.toStandardMinutes();
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.Period period18 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period20 = period18.minusMonths(0);
        org.joda.time.Minutes minutes21 = period20.toStandardMinutes();
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (byte) 1);
        org.joda.time.Minutes minutes24 = minutes23.negated();
        boolean boolean25 = minutes15.isGreaterThan(minutes24);
        org.joda.time.PeriodType periodType26 = minutes24.getPeriodType();
        org.joda.time.Minutes minutes27 = minutes24.negated();
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes27);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
    }

    @Test
    public void test17633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17633");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds2 = seconds0.plus(seconds1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.ONE;
        boolean boolean4 = seconds1.isGreaterThan(seconds3);
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds6 = seconds3.negated();
        org.joda.time.Seconds seconds8 = seconds6.multipliedBy((int) '#');
        org.joda.time.PeriodType periodType9 = seconds8.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withYearsRemoved();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test17634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17634");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) 26);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test17635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17635");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Minutes minutes6 = period5.toStandardMinutes();
        org.joda.time.Duration duration7 = minutes6.toStandardDuration();
        org.joda.time.Period period8 = duration7.toPeriod();
        org.joda.time.Duration duration10 = duration7.plus((long) (byte) 0);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration12 = period11.toStandardDuration();
        org.joda.time.Period period13 = period11.toPeriod();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test17636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17636");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period2.withMillis((int) (short) 0);
        int int7 = period6.getSeconds();
        java.lang.Object obj8 = null;
        boolean boolean9 = period6.equals(obj8);
        org.joda.time.Period period11 = period6.withWeeks((int) '#');
        org.joda.time.Period period13 = period11.plusMillis((-1));
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-95));
        int int16 = weeks15.getWeeks();
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.hours();
        int int18 = weeks15.get(durationFieldType17);
        boolean boolean19 = period11.isSupported(durationFieldType17);
        org.joda.time.Period period20 = period11.toPeriod();
        int[] intArray21 = period11.getValues();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-95) + "'", int16 == (-95));
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0, 35, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test17637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17637");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period2.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType7 = period2.getPeriodType();
        org.joda.time.PeriodType periodType8 = period2.getPeriodType();
        org.joda.time.Weeks weeks9 = period2.toStandardWeeks();
        org.joda.time.Hours hours10 = weeks9.toStandardHours();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(hours10);
    }

    @Test
    public void test17638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17638");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds2 = seconds0.multipliedBy(10);
        org.joda.time.Duration duration3 = seconds0.toStandardDuration();
        org.joda.time.Duration duration5 = duration3.withMillis((long) (-63));
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Interval interval7 = duration3.toIntervalTo(readableInstant6);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(interval7);
    }

    @Test
    public void test17639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17639");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        int int6 = period4.getHours();
        org.joda.time.Period period8 = period4.plusSeconds(2147483639);
        int int9 = period8.getMinutes();
        org.joda.time.Period period11 = period8.minusMillis(65);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test17640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17640");
        org.joda.time.Period period10 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period12 = period10.minusMonths(0);
        org.joda.time.Minutes minutes13 = period12.toStandardMinutes();
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Period period15 = duration14.toPeriod();
        org.joda.time.Period period18 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period20 = period18.minusMonths(0);
        org.joda.time.Minutes minutes21 = period20.toStandardMinutes();
        org.joda.time.Duration duration22 = minutes21.toStandardDuration();
        org.joda.time.Minutes minutes24 = minutes21.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration25 = minutes21.toStandardDuration();
        org.joda.time.Period period28 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period30 = period28.minusMonths(0);
        org.joda.time.Minutes minutes31 = period30.toStandardMinutes();
        org.joda.time.Duration duration32 = minutes31.toStandardDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        boolean boolean34 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration32);
        boolean boolean35 = duration14.isEqual((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Period period36 = org.joda.time.Period.ZERO;
        boolean boolean37 = duration14.equals((java.lang.Object) period36);
        org.joda.time.Period period38 = new org.joda.time.Period((java.lang.Object) duration14);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.PeriodType periodType40 = periodType39.withWeeksRemoved();
        org.joda.time.Period period41 = period38.withPeriodType(periodType40);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period42 = new org.joda.time.Period(1, (-2147483648), (-3), (-11), (-38), 0, 3, 168, periodType40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period41);
    }

    @Test
    public void test17641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17641");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        boolean boolean14 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration16 = duration6.plus((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.yearMonthDay();
        java.lang.String str19 = periodType18.getName();
        org.joda.time.Period period20 = duration6.toPeriodTo(readableInstant17, periodType18);
        org.joda.time.Period period23 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period25 = period23.minusMonths(0);
        org.joda.time.Minutes minutes26 = period25.toStandardMinutes();
        org.joda.time.Duration duration27 = minutes26.toStandardDuration();
        org.joda.time.Minutes minutes29 = minutes26.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration30 = minutes26.toStandardDuration();
        org.joda.time.Period period33 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period34 = period33.negated();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration36 = period34.toDurationTo(readableInstant35);
        boolean boolean37 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration40 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration41 = duration36.plus((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration40.toIntervalTo(readableInstant42);
        boolean boolean44 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Period period47 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period49 = period47.minusMonths(0);
        org.joda.time.Minutes minutes50 = period49.toStandardMinutes();
        org.joda.time.Duration duration51 = minutes50.toStandardDuration();
        org.joda.time.Period period54 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period56 = period54.minusMonths(0);
        org.joda.time.Minutes minutes57 = period56.toStandardMinutes();
        org.joda.time.Duration duration58 = minutes57.toStandardDuration();
        org.joda.time.Duration duration60 = duration51.withDurationAdded((org.joda.time.ReadableDuration) duration58, (int) (short) 100);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = duration60.toPeriod(chronology61);
        long long63 = duration60.getMillis();
        org.joda.time.Duration duration65 = duration40.withDurationAdded((org.joda.time.ReadableDuration) duration60, (-2));
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Interval interval67 = duration40.toIntervalFrom(readableInstant66);
        org.joda.time.Minutes minutes68 = duration40.toStandardMinutes();
        org.joda.time.Period period70 = org.joda.time.Period.seconds((int) (short) 0);
        org.joda.time.Period period72 = period70.plusHours((-5));
        java.lang.String str73 = period70.toString();
        int int74 = period70.getMinutes();
        boolean boolean75 = duration40.equals((java.lang.Object) period70);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "YearMonthDay" + "'", str19, "YearMonthDay");
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(interval67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "PT0S" + "'", str73, "PT0S");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test17642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17642");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType9 = days8.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withHoursRemoved();
        org.joda.time.PeriodType periodType11 = periodType9.withSecondsRemoved();
        org.joda.time.Period period12 = duration6.toPeriodFrom(readableInstant7, periodType9);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) (short) 1, periodType9, chronology13);
        org.joda.time.format.PeriodFormatter periodFormatter15 = periodFormatter2.withParseType(periodType9);
        java.util.Locale locale16 = null;
        org.joda.time.format.PeriodFormatter periodFormatter17 = periodFormatter2.withLocale(locale16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period24 = period22.minusMonths(0);
        org.joda.time.Period period26 = period22.minusSeconds((int) (byte) 100);
        org.joda.time.Days days27 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType28 = days27.getPeriodType();
        org.joda.time.PeriodType periodType29 = periodType28.withHoursRemoved();
        org.joda.time.PeriodType periodType30 = periodType28.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType31 = org.joda.time.DurationFieldType.days();
        boolean boolean32 = periodType30.isSupported(durationFieldType31);
        int int33 = period22.get(durationFieldType31);
        org.joda.time.Period period35 = period22.withHours(1);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.yearDay();
        boolean boolean37 = period35.equals((java.lang.Object) periodType36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant18, readableInstant19, periodType36);
        org.joda.time.PeriodType periodType39 = period38.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter40 = periodFormatter17.withParseType(periodType39);
        org.joda.time.format.PeriodParser periodParser41 = periodFormatter40.getParser();
        java.util.Locale locale42 = periodFormatter40.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period44 = periodFormatter40.parsePeriod("PT5H");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodFormatter15);
        org.junit.Assert.assertNotNull(periodFormatter17);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodFormatter40);
        org.junit.Assert.assertNull(periodParser41);
        org.junit.Assert.assertNull(locale42);
    }

    @Test
    public void test17643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17643");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period8 = period6.minusMonths(0);
        org.joda.time.Period period10 = period6.minusSeconds((int) (byte) 100);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType12 = days11.getPeriodType();
        org.joda.time.PeriodType periodType13 = periodType12.withHoursRemoved();
        org.joda.time.PeriodType periodType14 = periodType12.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.days();
        boolean boolean16 = periodType14.isSupported(durationFieldType15);
        int int17 = period6.get(durationFieldType15);
        org.joda.time.Period period19 = period6.withHours(1);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.yearDay();
        boolean boolean21 = period19.equals((java.lang.Object) periodType20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant2, readableInstant3, periodType20);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType20);
        int int24 = periodType20.size();
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
    }

    @Test
    public void test17644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17644");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (-612));
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withWeeksRemoved();
        org.joda.time.Period period8 = new org.joda.time.Period((long) (-1), (long) (byte) -1, periodType7);
        org.joda.time.PeriodType periodType9 = periodType7.withMinutesRemoved();
        org.joda.time.PeriodType periodType10 = periodType9.withMonthsRemoved();
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType10);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test17645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17645");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period4.minusSeconds(0);
        org.joda.time.Period period7 = period6.normalizedStandard();
        org.joda.time.Hours hours8 = period7.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType9 = hours8.getFieldType();
        org.joda.time.Seconds seconds10 = hours8.toStandardSeconds();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds10);
    }

    @Test
    public void test17646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17646");
        org.joda.time.Period period1 = org.joda.time.Period.hours((-3));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17647");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(36000000L, 0L);
    }

    @Test
    public void test17648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17648");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds2 = seconds0.plus(seconds1);
        org.joda.time.Seconds seconds4 = seconds1.plus((int) (byte) 0);
        org.joda.time.Seconds seconds6 = seconds1.minus(8);
        org.joda.time.DurationFieldType durationFieldType7 = seconds1.getFieldType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds11 = seconds9.multipliedBy(10);
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds9);
        org.joda.time.Seconds seconds13 = seconds1.plus(seconds12);
        org.joda.time.Seconds seconds15 = seconds13.plus(0);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.parseSeconds("PT0S");
        java.lang.String str18 = seconds17.toString();
        org.joda.time.Period period21 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period23 = period21.minusMonths(0);
        int int24 = period23.getYears();
        org.joda.time.Period period25 = period23.toPeriod();
        org.joda.time.Seconds seconds26 = period23.toStandardSeconds();
        boolean boolean27 = seconds17.isLessThan(seconds26);
        java.lang.String str28 = seconds26.toString();
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds31 = seconds29.plus(seconds30);
        java.lang.String str32 = seconds29.toString();
        org.joda.time.DurationFieldType durationFieldType33 = seconds29.getFieldType();
        org.joda.time.Seconds seconds35 = seconds29.multipliedBy(0);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Duration duration37 = seconds36.toStandardDuration();
        boolean boolean38 = seconds35.isGreaterThan(seconds36);
        org.joda.time.Seconds seconds39 = seconds26.plus(seconds36);
        org.joda.time.Period period41 = org.joda.time.Period.days(10);
        org.joda.time.Period period43 = period41.plusMonths((int) 'a');
        org.joda.time.Period period45 = period41.plusSeconds((int) (short) 100);
        org.joda.time.Period period47 = period41.withMinutes(1);
        boolean boolean48 = seconds39.equals((java.lang.Object) 1);
        org.joda.time.Seconds seconds49 = seconds15.minus(seconds39);
        org.joda.time.Duration duration52 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration54 = duration52.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Interval interval58 = duration54.toIntervalFrom(readableInstant57);
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval58);
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.seconds(7);
        org.joda.time.Seconds seconds62 = seconds59.plus(seconds61);
        org.joda.time.Period period63 = seconds62.toPeriod();
        org.joda.time.Seconds seconds64 = seconds62.negated();
        org.joda.time.Seconds seconds65 = seconds39.minus(seconds64);
        org.joda.time.Seconds seconds66 = seconds39.negated();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT0S" + "'", str18, "PT0S");
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT0S" + "'", str28, "PT0S");
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT2S" + "'", str32, "PT2S");
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
    }

    @Test
    public void test17649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17649");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours2 = hours0.minus(hours1);
        org.joda.time.Hours hours4 = hours1.minus((-10));
        org.joda.time.PeriodType periodType5 = hours1.getPeriodType();
        org.joda.time.Hours hours6 = hours1.negated();
        org.joda.time.Hours hours8 = org.joda.time.Hours.hours((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = hours1.minus(hours8);
        org.joda.time.Hours hours12 = hours8.dividedBy((-1491308));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
    }

    @Test
    public void test17650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17650");
        org.joda.time.Period period1 = org.joda.time.Period.days(3);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Minutes minutes3 = weeks2.toStandardMinutes();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(minutes3);
    }

    @Test
    public void test17651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17651");
        org.joda.time.Period period1 = org.joda.time.Period.days((int) '#');
        org.joda.time.Period period3 = period1.withWeeks((int) (byte) 0);
        org.joda.time.Period period5 = period1.plusMillis(0);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration7 = period1.toDurationTo(readableInstant6);
        org.joda.time.Period period9 = org.joda.time.Period.hours((int) '4');
        int int10 = period9.getSeconds();
        org.joda.time.Period period11 = period9.toPeriod();
        int int12 = period11.getMonths();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration14 = period11.toDurationTo(readableInstant13);
        boolean boolean15 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test17652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17652");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period7 = duration6.toPeriod();
        org.joda.time.Period period8 = period7.normalizedStandard();
        org.joda.time.Period period9 = period8.negated();
        org.joda.time.Period period11 = period9.minusMillis(56);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = period11.toDurationFrom(readableInstant12);
        org.joda.time.PeriodType periodType14 = period11.getPeriodType();
        int int15 = period11.size();
        org.joda.time.Period period17 = period11.plusHours(16);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test17653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17653");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeksIn(readableInterval4);
        boolean boolean6 = weeks3.isLessThan(weeks5);
        boolean boolean7 = weeks2.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks8 = null;
        org.joda.time.Weeks weeks9 = weeks5.minus(weeks8);
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Duration duration11 = weeks5.toStandardDuration();
        long long12 = duration11.getStandardDays();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period(6000000L, (long) 59, chronology15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration18 = period16.toDurationFrom(readableInstant17);
        boolean boolean19 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test17654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17654");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds5 = seconds3.plus(seconds4);
        org.joda.time.Seconds seconds7 = seconds3.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds8 = seconds2.plus(seconds3);
        org.joda.time.Seconds seconds10 = seconds2.plus((int) '4');
        org.joda.time.Duration duration11 = seconds10.toStandardDuration();
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds16 = seconds14.plus(seconds15);
        org.joda.time.Seconds seconds18 = seconds14.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds19 = seconds13.plus(seconds14);
        org.joda.time.Seconds seconds21 = seconds13.plus((int) '4');
        org.joda.time.Duration duration22 = seconds21.toStandardDuration();
        boolean boolean23 = seconds10.isLessThan(seconds21);
        boolean boolean24 = seconds0.isGreaterThan(seconds10);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds29 = seconds27.plus(seconds28);
        org.joda.time.Seconds seconds31 = seconds27.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds32 = seconds26.plus(seconds27);
        org.joda.time.PeriodType periodType33 = seconds26.getPeriodType();
        org.joda.time.Seconds seconds34 = seconds0.plus(seconds26);
        org.joda.time.Seconds seconds36 = seconds0.plus(2);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.parseSeconds("PT100S");
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration43 = duration41.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, readableInstant44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration43.toIntervalFrom(readableInstant46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval47);
        org.joda.time.Seconds seconds50 = seconds48.plus(0);
        org.joda.time.Seconds seconds51 = seconds38.plus(seconds50);
        org.joda.time.MutablePeriod mutablePeriod52 = seconds38.toMutablePeriod();
        org.joda.time.Seconds seconds53 = seconds0.minus(seconds38);
        org.joda.time.Duration duration54 = seconds0.toStandardDuration();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds57 = seconds55.plus(seconds56);
        org.joda.time.Seconds seconds59 = seconds56.plus((int) (byte) 0);
        org.joda.time.Seconds seconds61 = seconds56.minus(8);
        org.joda.time.DurationFieldType durationFieldType62 = seconds61.getFieldType();
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds66 = seconds64.multipliedBy(10);
        org.joda.time.Seconds seconds67 = seconds63.minus(seconds64);
        org.joda.time.Seconds seconds68 = seconds61.minus(seconds64);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds71 = seconds69.plus(seconds70);
        java.lang.String str72 = seconds69.toString();
        org.joda.time.DurationFieldType durationFieldType73 = seconds69.getFieldType();
        java.lang.String str74 = seconds69.toString();
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds77 = seconds75.multipliedBy(10);
        org.joda.time.Duration duration78 = seconds75.toStandardDuration();
        boolean boolean79 = seconds69.isLessThan(seconds75);
        org.joda.time.Seconds seconds81 = org.joda.time.Seconds.parseSeconds("PT0S");
        java.lang.String str82 = seconds81.toString();
        org.joda.time.Period period85 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period87 = period85.minusMonths(0);
        int int88 = period87.getYears();
        org.joda.time.Period period89 = period87.toPeriod();
        org.joda.time.Seconds seconds90 = period87.toStandardSeconds();
        boolean boolean91 = seconds81.isLessThan(seconds90);
        org.joda.time.Seconds seconds93 = seconds90.minus(0);
        boolean boolean94 = seconds69.isLessThan(seconds90);
        boolean boolean95 = seconds61.isLessThan(seconds90);
        org.joda.time.PeriodType periodType96 = seconds61.getPeriodType();
        org.joda.time.PeriodType periodType97 = periodType96.withSecondsRemoved();
        org.joda.time.Chronology chronology98 = null;
        org.joda.time.Period period99 = duration54.toPeriod(periodType97, chronology98);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "PT2S" + "'", str72, "PT2S");
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "PT2S" + "'", str74, "PT2S");
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "PT0S" + "'", str82, "PT0S");
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(seconds90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(seconds93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(periodType96);
        org.junit.Assert.assertNotNull(periodType97);
        org.junit.Assert.assertNotNull(period99);
    }

    @Test
    public void test17655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17655");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Minutes minutes6 = period5.toStandardMinutes();
        org.joda.time.Duration duration7 = minutes6.toStandardDuration();
        org.joda.time.Period period8 = duration7.toPeriod();
        org.joda.time.Duration duration10 = duration7.plus((long) (byte) 0);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = period11.minusMillis((-5));
        org.joda.time.MutablePeriod mutablePeriod14 = period11.toMutablePeriod();
        org.joda.time.Period period16 = period11.minusMonths((-10));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test17656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17656");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        boolean boolean14 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(readableInstant15, readableInstant16);
        org.joda.time.Duration duration18 = duration6.minus((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant19);
        org.joda.time.Period period21 = duration6.toPeriod();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = duration6.toPeriodTo(readableInstant22);
        org.joda.time.Period period24 = period23.normalizedStandard();
        org.joda.time.Period period26 = period23.withHours((int) (short) 0);
        org.joda.time.Period period28 = period26.minusWeeks(4);
        org.joda.time.Period period30 = period26.minusDays(87);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType32 = period30.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
    }

    @Test
    public void test17657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17657");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period2.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType7 = period2.getPeriodType();
        org.joda.time.PeriodType periodType8 = period2.getPeriodType();
        org.joda.time.Weeks weeks9 = period2.toStandardWeeks();
        org.joda.time.Period period11 = period2.withWeeks(0);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = period11.normalizedStandard(periodType12);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test17658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17658");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        java.util.Locale locale4 = null;
        org.joda.time.format.PeriodFormatter periodFormatter5 = periodFormatter2.withLocale(locale4);
        boolean boolean6 = periodFormatter2.isPrinter();
        org.joda.time.Duration duration9 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration11 = duration9.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds16 = seconds14.plus(seconds15);
        org.joda.time.PeriodType periodType17 = seconds14.getPeriodType();
        org.joda.time.Period period20 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period21 = period20.negated();
        org.joda.time.DurationFieldType durationFieldType23 = period20.getFieldType((int) (short) 1);
        int int24 = periodType17.indexOf(durationFieldType23);
        org.joda.time.Period period25 = new org.joda.time.Period((long) ' ', periodType17);
        org.joda.time.Period period26 = duration9.toPeriodTo(readableInstant12, periodType17);
        org.joda.time.PeriodType periodType27 = periodType17.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter28 = periodFormatter2.withParseType(periodType17);
        boolean boolean29 = periodFormatter2.isParser();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(periodFormatter5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodFormatter28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test17659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17659");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (-36));
        org.joda.time.Period period5 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period7 = period5.minusMonths(0);
        org.joda.time.Period period8 = period5.normalizedStandard();
        org.joda.time.MutablePeriod mutablePeriod9 = period8.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration11 = period8.toDurationFrom(readableInstant10);
        org.joda.time.Period period14 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period16 = period14.minusMonths(0);
        org.joda.time.Minutes minutes17 = period16.toStandardMinutes();
        org.joda.time.Duration duration18 = minutes17.toStandardDuration();
        org.joda.time.Period period21 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period23 = period21.minusMonths(0);
        org.joda.time.Minutes minutes24 = period23.toStandardMinutes();
        org.joda.time.Duration duration25 = minutes24.toStandardDuration();
        org.joda.time.Duration duration27 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration25, (int) (short) 100);
        org.joda.time.Duration duration29 = duration11.withDurationAdded((org.joda.time.ReadableDuration) duration27, 3);
        org.joda.time.Duration duration30 = duration2.minus((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Duration duration33 = period31.toDurationFrom(readableInstant32);
        org.joda.time.Duration duration34 = duration33.toDuration();
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration34);
    }

    @Test
    public void test17660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17660");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration4 = duration2.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.parse("PT0S");
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Duration duration11 = duration8.plus((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration13 = duration4.withDurationAdded((org.joda.time.ReadableDuration) duration11, (int) (byte) 0);
        org.joda.time.Period period14 = duration13.toPeriod();
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds20 = seconds18.plus(seconds19);
        org.joda.time.Seconds seconds22 = seconds18.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds23 = seconds17.plus(seconds18);
        org.joda.time.Seconds seconds25 = seconds17.plus((int) '4');
        org.joda.time.Duration duration26 = seconds25.toStandardDuration();
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds31 = seconds29.plus(seconds30);
        org.joda.time.Seconds seconds33 = seconds29.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds34 = seconds28.plus(seconds29);
        org.joda.time.Seconds seconds36 = seconds28.plus((int) '4');
        org.joda.time.Duration duration37 = seconds36.toStandardDuration();
        boolean boolean38 = seconds25.isLessThan(seconds36);
        boolean boolean39 = seconds15.isGreaterThan(seconds25);
        boolean boolean40 = duration13.equals((java.lang.Object) seconds25);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardSeconds(7730941129200000L);
        boolean boolean43 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = duration13.toPeriodFrom(readableInstant44);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(period45);
    }

    @Test
    public void test17661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17661");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT0S");
        java.lang.String str2 = seconds1.toString();
        org.joda.time.DurationFieldType durationFieldType3 = seconds1.getFieldType();
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        java.lang.String str5 = seconds1.toString();
        org.joda.time.PeriodType periodType6 = seconds1.getPeriodType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds11 = seconds9.plus(seconds10);
        org.joda.time.Seconds seconds13 = seconds9.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds14 = seconds8.plus(seconds9);
        org.joda.time.Seconds seconds16 = seconds9.multipliedBy((int) (short) 1);
        org.joda.time.Seconds seconds18 = seconds16.multipliedBy((int) '4');
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds21 = seconds19.multipliedBy(10);
        org.joda.time.DurationFieldType durationFieldType22 = seconds19.getFieldType();
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds25 = seconds23.plus(seconds24);
        org.joda.time.Seconds seconds27 = seconds23.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds28 = seconds19.plus(seconds23);
        org.joda.time.Seconds seconds29 = seconds18.plus(seconds23);
        boolean boolean30 = seconds1.isLessThan(seconds23);
        org.joda.time.Seconds seconds32 = seconds23.plus((-95));
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds35 = seconds33.plus(seconds34);
        org.joda.time.PeriodType periodType36 = seconds33.getPeriodType();
        int int37 = seconds33.size();
        org.joda.time.PeriodType periodType38 = seconds33.getPeriodType();
        org.joda.time.Seconds seconds40 = seconds33.minus((int) (byte) -1);
        org.joda.time.Seconds seconds42 = seconds40.dividedBy((int) (byte) 100);
        org.joda.time.Seconds seconds44 = seconds42.multipliedBy((-2147483648));
        org.joda.time.Seconds seconds45 = seconds44.negated();
        org.joda.time.Seconds seconds47 = seconds45.dividedBy(8);
        org.joda.time.Seconds seconds48 = seconds32.minus(seconds45);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0S" + "'", str2, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT0S" + "'", str5, "PT0S");
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
    }

    @Test
    public void test17662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17662");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withHoursRemoved();
        org.joda.time.PeriodType periodType8 = periodType6.withSecondsRemoved();
        org.joda.time.Period period9 = duration3.toPeriodFrom(readableInstant4, periodType6);
        long long10 = duration3.getMillis();
        org.joda.time.Days days13 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType14 = days13.getPeriodType();
        org.joda.time.PeriodType periodType15 = periodType14.withHoursRemoved();
        org.joda.time.PeriodType periodType16 = periodType14.withSecondsRemoved();
        org.joda.time.PeriodType periodType17 = periodType14.withMinutesRemoved();
        org.joda.time.PeriodType periodType18 = periodType17.withWeeksRemoved();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period(10L, (long) (byte) -1, periodType18, chronology19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration3, periodType18);
        org.joda.time.Period period22 = duration3.toPeriod();
        org.joda.time.Period period26 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period28 = period26.minusMonths(0);
        org.joda.time.Period period30 = period26.minusSeconds((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray31 = period26.getFieldTypes();
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.forFields(durationFieldTypeArray31);
        org.joda.time.PeriodType periodType33 = periodType32.withMillisRemoved();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((long) (byte) 10, periodType33, chronology34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration3, periodType33);
        org.joda.time.PeriodType periodType37 = periodType33.withHoursRemoved();
        java.lang.Object obj38 = null;
        boolean boolean39 = periodType33.equals(obj38);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 100000L + "'", long10 == 100000L);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(durationFieldTypeArray31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test17663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17663");
        org.joda.time.Period period1 = new org.joda.time.Period(100000L);
        org.joda.time.Period period3 = period1.minusYears(100);
        org.joda.time.Period period5 = period1.withHours((-2));
        org.joda.time.Period period7 = period1.withSeconds((-2147483648));
        int int8 = period7.getMillis();
        org.joda.time.Period period10 = period7.withWeeks((-107));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test17664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17664");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period6 = period4.minusMonths(0);
        org.joda.time.Minutes minutes7 = period6.toStandardMinutes();
        org.joda.time.Minutes minutes9 = minutes7.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((java.lang.Object) minutes7, chronology10);
        org.joda.time.Period period12 = minutes7.toPeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean14 = minutes7.isLessThan(minutes13);
        org.joda.time.PeriodType periodType15 = minutes13.getPeriodType();
        org.joda.time.Period period18 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period20 = period18.minusMonths(0);
        org.joda.time.Minutes minutes21 = period20.toStandardMinutes();
        org.joda.time.Duration duration22 = minutes21.toStandardDuration();
        org.joda.time.Period period25 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period27 = period25.minusMonths(0);
        org.joda.time.Minutes minutes28 = period27.toStandardMinutes();
        org.joda.time.Duration duration29 = minutes28.toStandardDuration();
        boolean boolean30 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(readableInstant31, readableInstant32);
        org.joda.time.Duration duration34 = duration22.minus((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant35);
        org.joda.time.Period period38 = period36.plusMonths((int) 'a');
        boolean boolean39 = periodType15.equals((java.lang.Object) 'a');
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType15);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test17665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17665");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) 69);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test17666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17666");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration4 = duration2.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant5);
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        org.joda.time.Period period16 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period18 = period16.minusMonths(0);
        org.joda.time.Minutes minutes19 = period18.toStandardMinutes();
        org.joda.time.Duration duration20 = minutes19.toStandardDuration();
        boolean boolean21 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(readableInstant22, readableInstant23);
        org.joda.time.Duration duration25 = duration13.minus((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration26 = duration13.toDuration();
        boolean boolean27 = duration4.isEqual((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Period period30 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period32 = period30.minusMonths(0);
        org.joda.time.Minutes minutes33 = period32.toStandardMinutes();
        org.joda.time.Duration duration34 = minutes33.toStandardDuration();
        org.joda.time.Period period35 = duration34.toPeriod();
        org.joda.time.Duration duration37 = duration34.plus((long) (byte) 0);
        org.joda.time.Duration duration39 = duration34.withMillis((long) 1);
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Period period43 = new org.joda.time.Period((-128849018880000L), (-1L));
        org.joda.time.DurationFieldType[] durationFieldTypeArray44 = period43.getFieldTypes();
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.forFields(durationFieldTypeArray44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.forFields(durationFieldTypeArray44);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((java.lang.Object) duration39, periodType46, chronology47);
        org.joda.time.Duration duration49 = duration39.toDuration();
        org.joda.time.Period period50 = new org.joda.time.Period((java.lang.Object) duration39);
        org.joda.time.Period period52 = period50.minusWeeks(18);
        org.joda.time.Period period54 = period50.plusHours((-612));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(durationFieldTypeArray44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
    }

    @Test
    public void test17667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17667");
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Period period7 = period3.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType8 = period3.getPeriodType();
        org.joda.time.PeriodType periodType9 = periodType8.withMinutesRemoved();
        org.joda.time.PeriodType periodType10 = periodType9.withHoursRemoved();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) (short) -1, periodType10, chronology11);
        org.joda.time.Period period14 = period12.plusSeconds(14400);
        java.lang.String str15 = period12.toString();
        org.joda.time.Hours hours16 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period12);
        org.joda.time.Hours hours17 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period12);
        java.lang.String str18 = hours17.toString();
        java.lang.String str19 = hours17.toString();
        org.joda.time.Hours hours21 = hours17.multipliedBy((-14400));
        int int22 = hours17.getHours();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT0.001S" + "'", str15, "PT0.001S");
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT0H" + "'", str18, "PT0H");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT0H" + "'", str19, "PT0H");
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test17668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17668");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ZERO;
        java.lang.String str1 = weeks0.toString();
        org.joda.time.Duration duration2 = weeks0.toStandardDuration();
        org.joda.time.Duration duration4 = duration2.plus((long) (-95));
        org.joda.time.Period period6 = org.joda.time.Period.millis((int) (short) 0);
        org.joda.time.Period period7 = period6.toPeriod();
        org.joda.time.Period period9 = period6.withWeeks((-1));
        int int10 = period9.size();
        org.joda.time.Period period12 = period9.plusYears((-35));
        boolean boolean13 = duration4.equals((java.lang.Object) period12);
        org.joda.time.Duration duration15 = duration4.minus(2400L);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "P0W" + "'", str1, "P0W");
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8 + "'", int10 == 8);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration15);
    }

    @Test
    public void test17669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17669");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration4 = duration2.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalFrom(readableInstant7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval8);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.seconds(7);
        org.joda.time.Seconds seconds12 = seconds9.plus(seconds11);
        org.joda.time.Period period13 = seconds12.toPeriod();
        org.joda.time.Seconds seconds14 = seconds12.negated();
        org.joda.time.Duration duration15 = seconds12.toStandardDuration();
        org.joda.time.Seconds seconds17 = seconds12.minus((-4083));
        org.joda.time.Duration duration18 = seconds12.toStandardDuration();
        org.joda.time.Duration duration21 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration23 = duration21.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalFrom(readableInstant26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval27);
        org.joda.time.Seconds seconds30 = seconds28.plus(0);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.minus(13);
        org.joda.time.Seconds seconds34 = seconds12.plus(seconds30);
        org.joda.time.DurationFieldType durationFieldType35 = seconds30.getFieldType();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(durationFieldType35);
    }

    @Test
    public void test17670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17670");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) 100);
        org.joda.time.Days days2 = duration1.toStandardDays();
        org.joda.time.Duration duration3 = days2.toStandardDuration();
        org.joda.time.Days days4 = days2.negated();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(days4);
    }

    @Test
    public void test17671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17671");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType1 = days0.getPeriodType();
        org.joda.time.Days days3 = days0.plus((int) (byte) 100);
        org.joda.time.Days days5 = days3.plus(0);
        org.joda.time.Days days6 = days5.negated();
        org.joda.time.DurationFieldType durationFieldType7 = days5.getFieldType();
        org.joda.time.Duration duration8 = days5.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration8.toIntervalFrom(readableInstant9);
        org.joda.time.Period period11 = duration8.toPeriod();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test17672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17672");
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period3.negated();
        int int5 = period3.getHours();
        int int6 = period3.getWeeks();
        org.joda.time.Days days8 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days10 = days8.multipliedBy((int) (short) 100);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType12 = days11.getPeriodType();
        org.joda.time.Days days14 = days11.minus(0);
        org.joda.time.Days days15 = days8.minus(days14);
        org.joda.time.Days days16 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days15);
        boolean boolean17 = period3.equals((java.lang.Object) days15);
        org.joda.time.PeriodType periodType18 = days15.getPeriodType();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period(60L, periodType18, chronology19);
        org.joda.time.PeriodType periodType21 = periodType18.withMinutesRemoved();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType21);
    }

    @Test
    public void test17673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17673");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) 999, chronology1);
        org.joda.time.Period period4 = period2.minusSeconds((-10));
        org.joda.time.Period period6 = period2.plusYears((-103));
        org.joda.time.DurationFieldType[] durationFieldTypeArray7 = period6.getFieldTypes();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldTypeArray7);
    }

    @Test
    public void test17674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17674");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.yearMonthDay();
        java.lang.String str2 = periodType1.getName();
        boolean boolean4 = periodType1.equals((java.lang.Object) true);
        org.joda.time.PeriodType periodType5 = periodType1.withMinutesRemoved();
        org.joda.time.PeriodType periodType6 = periodType1.withMonthsRemoved();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((long) (-5), periodType6, chronology7);
        int int9 = period8.getHours();
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YearMonthDay" + "'", str2, "YearMonthDay");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test17675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17675");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds7 = seconds5.plus(seconds6);
        org.joda.time.PeriodType periodType8 = seconds5.getPeriodType();
        org.joda.time.Period period11 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period12 = period11.negated();
        org.joda.time.DurationFieldType durationFieldType14 = period11.getFieldType((int) (short) 1);
        int int15 = periodType8.indexOf(durationFieldType14);
        org.joda.time.Period period16 = new org.joda.time.Period((long) ' ', periodType8);
        org.joda.time.format.PeriodFormatter periodFormatter17 = periodFormatter2.withParseType(periodType8);
        java.util.Locale locale18 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.yearMonthDay();
        java.lang.String str20 = periodType19.getName();
        org.joda.time.PeriodType periodType21 = periodType19.withHoursRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter22 = periodFormatter2.withParseType(periodType19);
        java.util.Locale locale23 = periodFormatter22.getLocale();
        boolean boolean24 = periodFormatter22.isPrinter();
        java.io.Writer writer25 = null;
        org.joda.time.ReadablePeriod readablePeriod26 = null;
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter22.printTo(writer25, readablePeriod26);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(periodFormatter17);
        org.junit.Assert.assertNull(locale18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "YearMonthDay" + "'", str20, "YearMonthDay");
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodFormatter22);
        org.junit.Assert.assertNull(locale23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test17676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17676");
        org.joda.time.Period period1 = org.joda.time.Period.hours((-1));
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration6 = duration4.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType13 = days12.getPeriodType();
        org.joda.time.PeriodType periodType14 = periodType13.withHoursRemoved();
        org.joda.time.PeriodType periodType15 = periodType13.withSecondsRemoved();
        org.joda.time.Period period16 = duration10.toPeriodFrom(readableInstant11, periodType13);
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.minutes();
        boolean boolean18 = periodType13.equals((java.lang.Object) durationFieldType17);
        java.lang.String str19 = durationFieldType17.getName();
        org.joda.time.Period period21 = period8.withFieldAdded(durationFieldType17, 8);
        boolean boolean22 = period1.isSupported(durationFieldType17);
        java.lang.String str23 = durationFieldType17.getName();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "minutes" + "'", str19, "minutes");
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "minutes" + "'", str23, "minutes");
    }

    @Test
    public void test17677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17677");
        org.joda.time.Period period0 = new org.joda.time.Period();
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration2 = period0.toDurationFrom(readableInstant1);
        org.joda.time.Duration duration3 = duration2.toDuration();
        long long4 = duration2.getStandardSeconds();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.multipliedBy(44);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test17678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17678");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ZERO;
        java.lang.String str1 = weeks0.toString();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeksIn(readableInterval6);
        boolean boolean8 = weeks5.isLessThan(weeks7);
        boolean boolean9 = weeks4.isGreaterThan(weeks7);
        org.joda.time.Weeks weeks11 = weeks7.plus((int) (short) 100);
        org.joda.time.Weeks weeks12 = weeks0.plus(weeks11);
        org.joda.time.Weeks weeks14 = weeks12.plus((-4083));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "P0W" + "'", str1, "P0W");
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
    }

    @Test
    public void test17679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17679");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.PeriodType periodType2 = hours0.getPeriodType();
        org.joda.time.PeriodType periodType3 = hours0.getPeriodType();
        org.joda.time.Hours hours4 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = hours4.getFieldType();
        org.joda.time.Period period8 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period9 = period8.negated();
        int int10 = period8.getHours();
        org.joda.time.Period period12 = org.joda.time.Period.days(10);
        org.joda.time.Period period14 = period12.plusMonths((int) 'a');
        org.joda.time.Period period16 = period12.plusSeconds((int) (short) 100);
        org.joda.time.Period period18 = period16.minusMonths((int) 'a');
        org.joda.time.Period period19 = period8.withFields((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Hours hours20 = period8.toStandardHours();
        int int21 = hours20.getHours();
        org.joda.time.Hours hours22 = hours4.plus(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = hours23.getFieldType();
        org.joda.time.Period period27 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period28 = period27.negated();
        int int29 = period27.getHours();
        org.joda.time.Period period31 = org.joda.time.Period.days(10);
        org.joda.time.Period period33 = period31.plusMonths((int) 'a');
        org.joda.time.Period period35 = period31.plusSeconds((int) (short) 100);
        org.joda.time.Period period37 = period35.minusMonths((int) 'a');
        org.joda.time.Period period38 = period27.withFields((org.joda.time.ReadablePeriod) period37);
        org.joda.time.Hours hours39 = period27.toStandardHours();
        int int40 = hours39.getHours();
        org.joda.time.Hours hours41 = hours23.plus(hours39);
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours42.dividedBy(100);
        org.joda.time.Period period47 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period49 = period47.minusMonths(0);
        org.joda.time.Period period51 = period49.minusSeconds(0);
        org.joda.time.Period period52 = period51.normalizedStandard();
        org.joda.time.Hours hours53 = period52.toStandardHours();
        boolean boolean54 = hours44.isLessThan(hours53);
        org.joda.time.Period period56 = org.joda.time.Period.millis((int) '#');
        int int57 = period56.getYears();
        org.joda.time.Hours hours58 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period56);
        org.joda.time.Period period60 = period56.multipliedBy((int) (byte) 0);
        org.joda.time.Hours hours61 = period60.toStandardHours();
        org.joda.time.Hours hours62 = hours44.minus(hours61);
        boolean boolean63 = hours39.isLessThan(hours61);
        org.joda.time.Hours hours64 = hours4.minus(hours61);
        org.joda.time.Hours hours66 = hours64.minus(3);
        org.joda.time.Hours hours67 = hours0.plus(hours66);
        org.joda.time.Duration duration70 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration72 = duration70.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration72, readableInstant73);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Interval interval76 = duration72.toIntervalFrom(readableInstant75);
        org.joda.time.Hours hours77 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval76);
        org.joda.time.Hours hours78 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval76);
        boolean boolean79 = hours67.isLessThan(hours78);
        org.joda.time.Hours hours81 = hours67.multipliedBy(0);
        int int82 = hours81.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test17680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17680");
        org.joda.time.Period period1 = org.joda.time.Period.hours((-1));
        org.joda.time.Period period3 = period1.minusDays(87);
        org.joda.time.Duration duration6 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration8 = duration6.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant9);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType15 = days14.getPeriodType();
        org.joda.time.PeriodType periodType16 = periodType15.withHoursRemoved();
        org.joda.time.PeriodType periodType17 = periodType15.withSecondsRemoved();
        org.joda.time.Period period18 = duration12.toPeriodFrom(readableInstant13, periodType15);
        org.joda.time.DurationFieldType durationFieldType19 = org.joda.time.DurationFieldType.minutes();
        boolean boolean20 = periodType15.equals((java.lang.Object) durationFieldType19);
        java.lang.String str21 = durationFieldType19.getName();
        org.joda.time.Period period23 = period10.withFieldAdded(durationFieldType19, 8);
        org.joda.time.Days days24 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Days days26 = org.joda.time.Days.days(8);
        org.joda.time.Days days27 = days24.plus(days26);
        org.joda.time.Period period28 = period3.minus((org.joda.time.ReadablePeriod) days24);
        org.joda.time.Days days30 = days24.minus(32);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "minutes" + "'", str21, "minutes");
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(days30);
    }

    @Test
    public void test17681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17681");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks2 = weeks0.dividedBy(1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeksIn(readableInterval5);
        boolean boolean7 = weeks4.isLessThan(weeks6);
        boolean boolean8 = weeks2.isLessThan(weeks6);
        java.lang.String str9 = weeks6.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P0W" + "'", str9, "P0W");
    }

    @Test
    public void test17682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17682");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((-7730941132800000000L));
    }

    @Test
    public void test17683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17683");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        boolean boolean14 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(readableInstant15, readableInstant16);
        org.joda.time.Duration duration18 = duration6.minus((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant19);
        org.joda.time.Period period22 = period20.plusMonths((int) 'a');
        org.joda.time.PeriodType periodType23 = period20.getPeriodType();
        org.joda.time.Period period24 = period20.normalizedStandard();
        org.joda.time.Period period25 = period24.toPeriod();
        org.joda.time.Period period27 = period24.withHours(0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
    }

    @Test
    public void test17684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17684");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Period period4 = org.joda.time.Period.weeks((int) (byte) 10);
        org.joda.time.Hours hours5 = period4.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType6 = hours5.getFieldType();
        org.joda.time.Hours hours8 = hours5.plus(59);
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        boolean boolean10 = hours8.isLessThan(hours9);
        org.joda.time.Hours hours11 = hours1.minus(hours9);
        org.joda.time.Period period14 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period15 = period14.negated();
        int int16 = period14.getHours();
        org.joda.time.Period period18 = org.joda.time.Period.days(10);
        org.joda.time.Period period20 = period18.plusMonths((int) 'a');
        org.joda.time.Period period22 = period18.plusSeconds((int) (short) 100);
        org.joda.time.Period period24 = period22.minusMonths((int) 'a');
        org.joda.time.Period period25 = period14.withFields((org.joda.time.ReadablePeriod) period24);
        org.joda.time.Hours hours26 = period14.toStandardHours();
        org.joda.time.Hours hours28 = hours26.minus((int) '#');
        org.joda.time.Hours hours30 = hours26.multipliedBy((int) (short) 100);
        boolean boolean31 = hours11.isGreaterThan(hours26);
        org.joda.time.Duration duration32 = hours11.toStandardDuration();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(duration32);
    }

    @Test
    public void test17685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17685");
        org.joda.time.Period period1 = new org.joda.time.Period((long) 0);
        org.joda.time.Period period3 = period1.plusMonths((int) '4');
        org.joda.time.Period period5 = period3.withWeeks(14400);
        org.joda.time.Period period6 = period5.toPeriod();
        org.joda.time.Period period8 = period5.plusMillis((-5));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test17686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17686");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(286859L, (long) (-10), chronology2);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        java.lang.String str5 = days4.toString();
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType7 = days6.getPeriodType();
        org.joda.time.Days days9 = days6.minus(0);
        boolean boolean10 = days4.isLessThan(days9);
        java.lang.String str11 = days4.toString();
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType13 = days12.getPeriodType();
        org.joda.time.Days days14 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType15 = days14.getPeriodType();
        org.joda.time.Days days17 = days14.minus(0);
        org.joda.time.Days days18 = days17.negated();
        boolean boolean19 = days12.isGreaterThan(days17);
        org.joda.time.Days days20 = days4.minus(days12);
        org.joda.time.Days days22 = days20.minus(14405);
        org.joda.time.Days days24 = days22.plus(35);
        org.joda.time.Days days25 = org.joda.time.Days.FIVE;
        java.lang.String str26 = days25.toString();
        org.joda.time.Days days28 = days25.multipliedBy((int) (byte) -1);
        java.lang.String str29 = days25.toString();
        org.joda.time.Days days31 = days25.plus((-10));
        org.joda.time.Days days33 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days35 = days33.multipliedBy((int) (short) 100);
        org.joda.time.Days days36 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType37 = days36.getPeriodType();
        org.joda.time.Days days39 = days36.minus(0);
        org.joda.time.Days days40 = days33.minus(days39);
        java.lang.String str41 = days40.toString();
        org.joda.time.Days days42 = org.joda.time.Days.ONE;
        boolean boolean43 = days40.isLessThan(days42);
        org.joda.time.Days days44 = days40.negated();
        boolean boolean45 = days25.isGreaterThan(days40);
        boolean boolean46 = days24.isGreaterThan(days25);
        int int47 = days24.getDays();
        org.joda.time.DurationFieldType durationFieldType48 = days24.getFieldType();
        boolean boolean49 = period3.isSupported(durationFieldType48);
        org.joda.time.Period period51 = period3.withMonths(6);
        org.joda.time.MutablePeriod mutablePeriod52 = period51.toMutablePeriod();
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P5D" + "'", str5, "P5D");
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P5D" + "'", str11, "P5D");
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P5D" + "'", str26, "P5D");
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P5D" + "'", str29, "P5D");
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P0D" + "'", str41, "P0D");
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-14370) + "'", int47 == (-14370));
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
    }

    @Test
    public void test17687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17687");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = hours0.getFieldType();
        org.joda.time.Period period4 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period4.negated();
        int int6 = period4.getHours();
        org.joda.time.Period period8 = org.joda.time.Period.days(10);
        org.joda.time.Period period10 = period8.plusMonths((int) 'a');
        org.joda.time.Period period12 = period8.plusSeconds((int) (short) 100);
        org.joda.time.Period period14 = period12.minusMonths((int) 'a');
        org.joda.time.Period period15 = period4.withFields((org.joda.time.ReadablePeriod) period14);
        org.joda.time.Hours hours16 = period4.toStandardHours();
        int int17 = hours16.getHours();
        org.joda.time.Hours hours18 = hours0.plus(hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours19.dividedBy(100);
        org.joda.time.Period period24 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period26 = period24.minusMonths(0);
        org.joda.time.Period period28 = period26.minusSeconds(0);
        org.joda.time.Period period29 = period28.normalizedStandard();
        org.joda.time.Hours hours30 = period29.toStandardHours();
        boolean boolean31 = hours21.isLessThan(hours30);
        org.joda.time.Period period33 = org.joda.time.Period.millis((int) '#');
        int int34 = period33.getYears();
        org.joda.time.Hours hours35 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period33);
        org.joda.time.Period period37 = period33.multipliedBy((int) (byte) 0);
        org.joda.time.Hours hours38 = period37.toStandardHours();
        org.joda.time.Hours hours39 = hours21.minus(hours38);
        boolean boolean40 = hours16.isLessThan(hours38);
        org.joda.time.Hours hours41 = org.joda.time.Hours.ONE;
        java.lang.String str42 = hours41.toString();
        org.joda.time.Hours hours43 = hours41.negated();
        org.joda.time.Hours hours44 = hours38.plus(hours41);
        org.joda.time.Hours hours45 = org.joda.time.Hours.THREE;
        boolean boolean46 = hours38.isLessThan(hours45);
        org.joda.time.Hours hours48 = hours45.plus((int) ' ');
        org.joda.time.Period period49 = new org.joda.time.Period((java.lang.Object) hours45);
        org.joda.time.Period period50 = hours45.toPeriod();
        org.joda.time.Hours hours51 = hours45.negated();
        org.joda.time.Hours hours53 = org.joda.time.Hours.hours((-10));
        org.joda.time.Hours hours54 = org.joda.time.Hours.MIN_VALUE;
        boolean boolean55 = hours53.isLessThan(hours54);
        org.joda.time.Hours hours57 = hours53.multipliedBy(52);
        org.joda.time.Period period60 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period62 = period60.minusMonths(0);
        org.joda.time.Period period64 = period60.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType65 = period60.getPeriodType();
        org.joda.time.Hours hours66 = period60.toStandardHours();
        org.joda.time.Hours hours67 = hours53.minus(hours66);
        org.joda.time.Hours hours68 = hours51.plus(hours53);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT1H" + "'", str42, "PT1H");
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
    }

    @Test
    public void test17688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17688");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        long long2 = duration1.getStandardSeconds();
        org.joda.time.Period period5 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period7 = period5.minusMonths(0);
        org.joda.time.Minutes minutes8 = period7.toStandardMinutes();
        org.joda.time.Duration duration9 = minutes8.toStandardDuration();
        org.joda.time.Minutes minutes11 = minutes8.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration12 = minutes8.toStandardDuration();
        org.joda.time.Period period15 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period17 = period15.minusMonths(0);
        org.joda.time.Minutes minutes18 = period17.toStandardMinutes();
        org.joda.time.Duration duration19 = minutes18.toStandardDuration();
        org.joda.time.Period period20 = duration19.toPeriod();
        boolean boolean21 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Period period24 = duration12.toPeriodTo(readableInstant22, periodType23);
        org.joda.time.Duration duration25 = duration1.plus((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period28 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period30 = period28.minusMonths(0);
        org.joda.time.Minutes minutes31 = period30.toStandardMinutes();
        org.joda.time.Duration duration32 = minutes31.toStandardDuration();
        org.joda.time.Period period35 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period37 = period35.minusMonths(0);
        org.joda.time.Minutes minutes38 = period37.toStandardMinutes();
        org.joda.time.Duration duration39 = minutes38.toStandardDuration();
        boolean boolean40 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Minutes minutes42 = duration32.toStandardMinutes();
        org.joda.time.Period period45 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period47 = period45.minusMonths(0);
        org.joda.time.Minutes minutes48 = period47.toStandardMinutes();
        org.joda.time.Minutes minutes50 = minutes48.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes52 = minutes48.plus(8);
        org.joda.time.Minutes minutes54 = minutes52.dividedBy((int) (short) 1);
        org.joda.time.Period period56 = org.joda.time.Period.days(10);
        org.joda.time.Minutes minutes57 = period56.toStandardMinutes();
        org.joda.time.DurationFieldType durationFieldType58 = minutes57.getFieldType();
        int int59 = minutes57.getMinutes();
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period63 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period65 = period63.minusMonths(0);
        org.joda.time.Minutes minutes66 = period65.toStandardMinutes();
        org.joda.time.Minutes minutes68 = minutes66.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes69 = minutes60.minus(minutes66);
        org.joda.time.Period period72 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period74 = period72.minusMonths(0);
        org.joda.time.Minutes minutes75 = period74.toStandardMinutes();
        org.joda.time.Minutes minutes77 = minutes75.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.Period period79 = new org.joda.time.Period((java.lang.Object) minutes75, chronology78);
        org.joda.time.Minutes minutes80 = minutes60.minus(minutes75);
        org.joda.time.DurationFieldType durationFieldType82 = minutes80.getFieldType((int) (short) 0);
        org.joda.time.PeriodType periodType83 = minutes80.getPeriodType();
        org.joda.time.Minutes minutes84 = minutes80.negated();
        org.joda.time.Minutes minutes85 = minutes57.minus(minutes84);
        org.joda.time.Minutes minutes86 = minutes85.negated();
        org.joda.time.Minutes minutes87 = minutes52.plus(minutes86);
        org.joda.time.Minutes minutes88 = minutes42.plus(minutes87);
        org.joda.time.Duration duration89 = minutes87.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-128849018880L) + "'", long2 == (-128849018880L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 14400 + "'", int59 == 14400);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(minutes85);
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertNotNull(minutes87);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(duration89);
    }

    @Test
    public void test17689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17689");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period6 = period4.minusMonths(0);
        org.joda.time.Minutes minutes7 = period6.toStandardMinutes();
        org.joda.time.Duration duration8 = minutes7.toStandardDuration();
        org.joda.time.Period period11 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period13 = period11.minusMonths(0);
        org.joda.time.Minutes minutes14 = period13.toStandardMinutes();
        org.joda.time.Duration duration15 = minutes14.toStandardDuration();
        boolean boolean16 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Period period17 = duration15.toPeriod();
        long long18 = duration15.getStandardSeconds();
        org.joda.time.Duration duration19 = duration15.toDuration();
        org.joda.time.Duration duration21 = org.joda.time.Duration.parse("PT0S");
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Duration duration24 = duration21.plus((org.joda.time.ReadableDuration) duration23);
        long long25 = duration23.getMillis();
        int int26 = duration15.compareTo((org.joda.time.ReadableDuration) duration23);
        long long27 = duration23.getStandardDays();
        org.joda.time.Duration duration30 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration32 = duration30.plus((long) (-1));
        org.joda.time.Duration duration33 = duration23.plus((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration34 = duration33.toDuration();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.yearMonthDay();
        java.lang.String str38 = periodType37.getName();
        org.joda.time.PeriodType periodType39 = periodType37.withHoursRemoved();
        org.joda.time.PeriodType periodType40 = periodType37.withWeeksRemoved();
        org.joda.time.Period period41 = new org.joda.time.Period((long) 20, periodType40);
        org.joda.time.Period period42 = duration33.toPeriodTo(readableInstant35, periodType40);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period43 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 6000000L + "'", long25 == 6000000L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "YearMonthDay" + "'", str38, "YearMonthDay");
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
    }

    @Test
    public void test17690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17690");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(120L, (long) (-2147483648), chronology2);
        org.joda.time.Period period6 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period8 = period6.minusMonths(0);
        org.joda.time.Period period9 = period6.normalizedStandard();
        org.joda.time.MutablePeriod mutablePeriod10 = period9.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Duration duration12 = period9.toDurationFrom(readableInstant11);
        org.joda.time.Period period13 = period9.normalizedStandard();
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds16 = seconds14.plus(seconds15);
        java.lang.String str17 = seconds14.toString();
        org.joda.time.DurationFieldType durationFieldType18 = seconds14.getFieldType();
        org.joda.time.Period period20 = period13.withField(durationFieldType18, (int) (short) 100);
        org.joda.time.Period period21 = period3.plus((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Period period23 = period21.withDays(268435465);
        int int24 = period21.getDays();
        int int25 = period21.getMinutes();
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2S" + "'", str17, "PT2S");
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-3) + "'", int24 == (-3));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-31) + "'", int25 == (-31));
    }

    @Test
    public void test17691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17691");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeksIn(readableInterval4);
        boolean boolean6 = weeks3.isLessThan(weeks5);
        boolean boolean7 = weeks2.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks8 = null;
        org.joda.time.Weeks weeks9 = weeks5.minus(weeks8);
        org.joda.time.Weeks weeks11 = weeks9.minus(35);
        java.lang.String str12 = weeks11.toString();
        java.lang.String str13 = weeks11.toString();
        int int14 = weeks11.getWeeks();
        org.joda.time.Weeks weeks16 = weeks11.plus((-6));
        org.joda.time.Weeks weeks17 = weeks16.negated();
        int int18 = weeks17.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-35W" + "'", str12, "P-35W");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-35W" + "'", str13, "P-35W");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-35) + "'", int14 == (-35));
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 41 + "'", int18 == 41);
    }

    @Test
    public void test17692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17692");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(11L);
        org.joda.time.Minutes minutes2 = duration1.toStandardMinutes();
        org.joda.time.Duration duration3 = minutes2.toStandardDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration3);
    }

    @Test
    public void test17693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17693");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        long long2 = duration1.getStandardSeconds();
        org.joda.time.Period period5 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period7 = period5.minusMonths(0);
        org.joda.time.Minutes minutes8 = period7.toStandardMinutes();
        org.joda.time.Duration duration9 = minutes8.toStandardDuration();
        org.joda.time.Minutes minutes11 = minutes8.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration12 = minutes8.toStandardDuration();
        org.joda.time.Period period15 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period17 = period15.minusMonths(0);
        org.joda.time.Minutes minutes18 = period17.toStandardMinutes();
        org.joda.time.Duration duration19 = minutes18.toStandardDuration();
        org.joda.time.Period period20 = duration19.toPeriod();
        boolean boolean21 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Period period24 = duration12.toPeriodTo(readableInstant22, periodType23);
        org.joda.time.Duration duration25 = duration1.plus((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = duration1.toPeriodFrom(readableInstant26);
        org.joda.time.DurationFieldType durationFieldType28 = org.joda.time.DurationFieldType.eras();
        int int29 = period27.indexOf(durationFieldType28);
        org.joda.time.Period period31 = period27.withDays((int) (short) 1);
        int int32 = period27.getDays();
        org.joda.time.Period period34 = period27.minusDays((-97));
        org.joda.time.Period period36 = period27.minusMinutes((-3));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-128849018880L) + "'", long2 == (-128849018880L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
    }

    @Test
    public void test17694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17694");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withParseType(periodType5);
        org.joda.time.PeriodType periodType8 = periodFormatter2.getParseType();
        org.joda.time.format.PeriodPrinter periodPrinter9 = periodFormatter2.getPrinter();
        java.util.Locale locale10 = null;
        org.joda.time.format.PeriodFormatter periodFormatter11 = periodFormatter2.withLocale(locale10);
        boolean boolean12 = periodFormatter11.isPrinter();
        boolean boolean13 = periodFormatter11.isPrinter();
        java.util.Locale locale14 = null;
        org.joda.time.format.PeriodFormatter periodFormatter15 = periodFormatter11.withLocale(locale14);
        org.joda.time.PeriodType periodType16 = periodFormatter11.getParseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNull(periodType8);
        org.junit.Assert.assertNull(periodPrinter9);
        org.junit.Assert.assertNotNull(periodFormatter11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(periodFormatter15);
        org.junit.Assert.assertNull(periodType16);
    }

    @Test
    public void test17695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17695");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days3 = days1.multipliedBy((int) (short) 100);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.Days days7 = days4.minus(0);
        org.joda.time.Days days8 = days1.minus(days7);
        org.joda.time.Days days10 = days1.minus(35);
        org.joda.time.Days days12 = days1.plus(14400);
        org.joda.time.Days days14 = days12.dividedBy((-36));
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType16 = days15.getPeriodType();
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType18 = days17.getPeriodType();
        org.joda.time.Days days20 = days17.minus(0);
        org.joda.time.Days days21 = days20.negated();
        boolean boolean22 = days15.isGreaterThan(days20);
        org.joda.time.Days days23 = days12.minus(days20);
        org.joda.time.Duration duration24 = days23.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType25 = days23.getFieldType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(durationFieldType25);
    }

    @Test
    public void test17696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17696");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours(0L);
        org.joda.time.Period period4 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period6 = period4.minusMonths(0);
        org.joda.time.Period period7 = period4.normalizedStandard();
        org.joda.time.MutablePeriod mutablePeriod8 = period7.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration10 = period7.toDurationFrom(readableInstant9);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration10.toPeriod(chronology11);
        org.joda.time.Duration duration14 = new org.joda.time.Duration((long) 100);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType17 = days16.getPeriodType();
        org.joda.time.PeriodType periodType18 = periodType17.withHoursRemoved();
        org.joda.time.PeriodType periodType19 = periodType17.withSecondsRemoved();
        org.joda.time.PeriodType periodType20 = periodType17.withMinutesRemoved();
        org.joda.time.PeriodType periodType21 = periodType20.withWeeksRemoved();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant15, periodType21);
        org.joda.time.Duration duration23 = duration10.minus((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant24, periodType25);
        org.joda.time.Duration duration27 = duration1.minus((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration29 = duration27.plus((long) 100);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.format.PeriodPrinter periodPrinter31 = null;
        org.joda.time.format.PeriodParser periodParser32 = null;
        org.joda.time.format.PeriodFormatter periodFormatter33 = new org.joda.time.format.PeriodFormatter(periodPrinter31, periodParser32);
        boolean boolean34 = periodFormatter33.isParser();
        org.joda.time.Days days35 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType36 = days35.getPeriodType();
        org.joda.time.PeriodType periodType37 = periodType36.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter38 = periodFormatter33.withParseType(periodType36);
        org.joda.time.Days days39 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType40 = days39.getPeriodType();
        org.joda.time.PeriodType periodType41 = periodType40.withSecondsRemoved();
        org.joda.time.PeriodType periodType42 = periodType40.withYearsRemoved();
        java.lang.String str43 = periodType42.toString();
        org.joda.time.format.PeriodFormatter periodFormatter44 = periodFormatter38.withParseType(periodType42);
        org.joda.time.PeriodType periodType45 = periodFormatter44.getParseType();
        org.joda.time.PeriodType periodType46 = periodType45.withMonthsRemoved();
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant30, periodType45);
        org.joda.time.Period period48 = period47.toPeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodFormatter38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PeriodType[Days]" + "'", str43, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodFormatter44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
    }

    @Test
    public void test17697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17697");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(35);
        org.joda.time.Weeks weeks3 = weeks1.multipliedBy(5);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Duration duration5 = weeks4.toStandardDuration();
        boolean boolean6 = weeks3.isGreaterThan(weeks4);
        int int7 = weeks4.getWeeks();
        org.joda.time.Weeks weeks9 = weeks4.plus((-95));
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertNotNull(weeks9);
    }

    @Test
    public void test17698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17698");
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Period period7 = period3.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType8 = period3.getPeriodType();
        org.joda.time.PeriodType periodType9 = periodType8.withMinutesRemoved();
        org.joda.time.PeriodType periodType10 = periodType9.withHoursRemoved();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) (short) -1, periodType10, chronology11);
        org.joda.time.Period period14 = period12.plusSeconds(14400);
        java.lang.String str15 = period12.toString();
        org.joda.time.Hours hours16 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period12);
        org.joda.time.Period period18 = period12.plusYears((int) (byte) 1);
        int int19 = period12.getMillis();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT0.001S" + "'", str15, "PT0.001S");
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test17699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17699");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period2.minusSeconds((int) (byte) 100);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType8 = days7.getPeriodType();
        org.joda.time.PeriodType periodType9 = periodType8.withHoursRemoved();
        org.joda.time.PeriodType periodType10 = periodType8.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.days();
        boolean boolean12 = periodType10.isSupported(durationFieldType11);
        int int13 = period2.get(durationFieldType11);
        int int14 = period2.getDays();
        org.joda.time.Period period16 = period2.plusHours((int) '#');
        org.joda.time.Period period18 = period2.plusMonths((int) (byte) 0);
        org.joda.time.Period period19 = period2.toPeriod();
        org.joda.time.Period period21 = period2.plusMinutes((int) 'a');
        int int22 = period2.getHours();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test17700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17700");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration4 = duration2.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = duration4.toPeriodFrom(readableInstant7);
        long long9 = duration4.getStandardHours();
        org.joda.time.Seconds seconds10 = duration4.toStandardSeconds();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(seconds10);
    }

    @Test
    public void test17701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17701");
        org.joda.time.Period period2 = new org.joda.time.Period(200L, (long) '#');
        org.joda.time.Period period5 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period7 = period5.minusMonths(0);
        int int8 = period7.getYears();
        org.joda.time.Period period9 = period7.toPeriod();
        org.joda.time.Period period11 = period9.minusMonths((int) (byte) 1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray12 = period11.getFieldTypes();
        org.joda.time.Period period14 = period11.minusDays((-2));
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds17 = seconds15.plus(seconds16);
        org.joda.time.PeriodType periodType18 = seconds15.getPeriodType();
        org.joda.time.Period period21 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period22 = period21.negated();
        org.joda.time.DurationFieldType durationFieldType24 = period21.getFieldType((int) (short) 1);
        int int25 = periodType18.indexOf(durationFieldType24);
        org.joda.time.Period period27 = period11.withField(durationFieldType24, (-268435465));
        org.joda.time.Period period28 = period2.minus((org.joda.time.ReadablePeriod) period11);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldTypeArray12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test17702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17702");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days1 = org.joda.time.Days.parseDays("PeriodType[StandardNoMinutesNoMillis]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"PeriodType[StandardNoMinutesNoMil...\" is malformed at \"eriodType[StandardNoMinutesNoMil...\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test17703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17703");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds2 = seconds0.plus(seconds1);
        org.joda.time.Seconds seconds4 = seconds1.plus((int) (byte) 0);
        org.joda.time.Seconds seconds6 = seconds4.minus((int) (byte) -1);
        java.lang.String str7 = seconds4.toString();
        org.joda.time.Seconds seconds8 = seconds4.negated();
        org.joda.time.Seconds seconds10 = seconds4.minus(2);
        org.joda.time.Seconds seconds12 = seconds4.dividedBy(52);
        int int13 = seconds4.size();
        org.joda.time.Seconds seconds15 = seconds4.plus((int) (short) 1);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2S" + "'", str7, "PT2S");
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(seconds15);
    }

    @Test
    public void test17704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17704");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days3 = days1.multipliedBy((int) (short) 100);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.Days days7 = days4.minus(0);
        org.joda.time.Days days8 = days1.minus(days7);
        java.lang.String str9 = days8.toString();
        org.joda.time.DurationFieldType durationFieldType10 = days8.getFieldType();
        org.joda.time.Days days12 = days8.plus(14400);
        org.joda.time.Days days14 = days8.minus((-10));
        org.joda.time.Days days16 = days8.plus((-10));
        org.joda.time.Days days18 = days16.multipliedBy((-100));
        org.joda.time.PeriodType periodType19 = days18.getPeriodType();
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P0D" + "'", str9, "P0D");
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(periodType19);
    }

    @Test
    public void test17705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17705");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeksIn(readableInterval6);
        boolean boolean8 = weeks5.isLessThan(weeks7);
        boolean boolean9 = weeks4.isGreaterThan(weeks7);
        org.joda.time.Weeks weeks11 = weeks7.plus((int) (short) 100);
        org.joda.time.Weeks weeks12 = weeks0.minus(weeks11);
        int int13 = weeks11.getWeeks();
        java.lang.String str14 = weeks11.toString();
        org.joda.time.DurationFieldType durationFieldType15 = weeks11.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P100W" + "'", str14, "P100W");
        org.junit.Assert.assertNotNull(durationFieldType15);
    }

    @Test
    public void test17706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17706");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardSeconds((long) 10);
        org.joda.time.Period period5 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period7 = period5.minusMonths(0);
        org.joda.time.Minutes minutes8 = period7.toStandardMinutes();
        org.joda.time.Duration duration9 = minutes8.toStandardDuration();
        org.joda.time.Period period10 = duration9.toPeriod();
        org.joda.time.Period period13 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period15 = period13.minusMonths(0);
        org.joda.time.Minutes minutes16 = period15.toStandardMinutes();
        org.joda.time.Duration duration17 = minutes16.toStandardDuration();
        org.joda.time.Minutes minutes19 = minutes16.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration20 = minutes16.toStandardDuration();
        org.joda.time.Period period23 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period25 = period23.minusMonths(0);
        org.joda.time.Minutes minutes26 = period25.toStandardMinutes();
        org.joda.time.Duration duration27 = minutes26.toStandardDuration();
        org.joda.time.Period period28 = duration27.toPeriod();
        boolean boolean29 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean30 = duration9.isEqual((org.joda.time.ReadableDuration) duration20);
        long long31 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant32, periodType33);
        boolean boolean35 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration9);
        long long36 = duration9.getStandardHours();
        org.joda.time.Period period38 = org.joda.time.Period.millis((int) '4');
        boolean boolean39 = duration9.equals((java.lang.Object) '4');
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration9);
        long long41 = duration9.getStandardMinutes();
        org.joda.time.Duration duration44 = new org.joda.time.Duration((long) 10, 12000L);
        org.joda.time.Period period45 = duration44.toPeriod();
        boolean boolean46 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration48 = duration44.withMillis(0L);
        org.joda.time.Duration duration50 = org.joda.time.Duration.parse("PT3120S");
        org.joda.time.Duration duration51 = duration44.plus((org.joda.time.ReadableDuration) duration50);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration51);
    }

    @Test
    public void test17707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17707");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks3 = weeks1.plus(11);
        org.joda.time.Weeks weeks5 = weeks1.plus((int) (short) 100);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) (short) 10);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.weeks(35);
        org.joda.time.Weeks weeks11 = weeks9.multipliedBy(5);
        org.joda.time.Weeks weeks13 = weeks9.dividedBy((-36));
        int int14 = weeks9.getWeeks();
        org.joda.time.Weeks weeks15 = weeks5.minus(weeks9);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        boolean boolean22 = weeks19.isLessThan(weeks21);
        boolean boolean23 = weeks18.isGreaterThan(weeks21);
        org.joda.time.Weeks weeks24 = null;
        org.joda.time.Weeks weeks25 = weeks21.minus(weeks24);
        org.joda.time.Duration duration26 = weeks25.toStandardDuration();
        boolean boolean27 = weeks5.isLessThan(weeks25);
        org.joda.time.Duration duration28 = weeks25.toStandardDuration();
        long long29 = duration28.getMillis();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 35 + "'", int14 == 35);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
    }

    @Test
    public void test17708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17708");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period8 = period6.minusMonths(0);
        org.joda.time.Period period10 = period6.minusSeconds((int) (byte) 100);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType12 = days11.getPeriodType();
        org.joda.time.PeriodType periodType13 = periodType12.withHoursRemoved();
        org.joda.time.PeriodType periodType14 = periodType12.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.days();
        boolean boolean16 = periodType14.isSupported(durationFieldType15);
        int int17 = period6.get(durationFieldType15);
        org.joda.time.Period period19 = period6.withHours(1);
        org.joda.time.Period period22 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period24 = period22.minusMonths(0);
        org.joda.time.Period period26 = period22.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType27 = period22.getPeriodType();
        org.joda.time.PeriodType periodType28 = periodType27.withMinutesRemoved();
        java.lang.String str29 = periodType28.toString();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((java.lang.Object) period6, periodType28, chronology30);
        org.joda.time.PeriodType periodType32 = periodType28.withHoursRemoved();
        org.joda.time.PeriodType periodType33 = periodType28.withSecondsRemoved();
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant2, readableInstant3, periodType33);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period(200L, (long) 90, periodType33, chronology35);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PeriodType[StandardNoMinutes]" + "'", str29, "PeriodType[StandardNoMinutes]");
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType33);
    }

    @Test
    public void test17709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17709");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration4 = duration2.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant5);
        org.joda.time.Period period8 = period6.withYears((int) (short) 100);
        org.joda.time.Period period11 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period13 = period11.minusMonths(0);
        org.joda.time.Minutes minutes14 = period13.toStandardMinutes();
        org.joda.time.Period period16 = period13.withYears((int) '#');
        org.joda.time.Period period18 = period13.withMillis((-1));
        org.joda.time.Period period19 = period8.minus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Period period21 = period19.plusDays((int) (byte) 1);
        org.joda.time.Period period23 = period19.minusYears((-10));
        org.joda.time.Period period25 = period23.minusMillis(87);
        java.lang.String str26 = period25.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = period25.toMutablePeriod();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P110YT0.076S" + "'", str26, "P110YT0.076S");
        org.junit.Assert.assertNotNull(mutablePeriod27);
    }

    @Test
    public void test17710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17710");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds4 = seconds2.plus(seconds3);
        org.joda.time.Seconds seconds6 = seconds2.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds7 = seconds1.plus(seconds2);
        org.joda.time.PeriodType periodType8 = seconds2.getPeriodType();
        org.joda.time.Seconds seconds9 = seconds2.negated();
        org.joda.time.Seconds seconds10 = seconds2.negated();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
    }

    @Test
    public void test17711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17711");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = org.joda.time.Days.ONE;
        int int2 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days1);
        org.joda.time.Days days4 = days1.multipliedBy((int) '#');
        org.joda.time.Days days6 = org.joda.time.Days.days(1);
        org.joda.time.Duration duration7 = days6.toStandardDuration();
        boolean boolean8 = days4.equals((java.lang.Object) duration7);
        org.joda.time.Days days10 = days4.minus((int) (byte) 0);
        org.joda.time.Days days11 = org.joda.time.Days.TWO;
        org.joda.time.Days days13 = days11.minus((int) (short) 0);
        boolean boolean14 = days10.isGreaterThan(days13);
        org.joda.time.Days days15 = days10.negated();
        org.joda.time.Days days17 = days15.plus((-36));
        org.joda.time.Days days19 = days17.plus(19);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
    }

    @Test
    public void test17712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17712");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType4 = days3.getPeriodType();
        org.joda.time.PeriodType periodType5 = periodType4.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType4.withSecondsRemoved();
        org.joda.time.Period period7 = duration1.toPeriodFrom(readableInstant2, periodType4);
        long long8 = duration1.getStandardHours();
        org.joda.time.Duration duration11 = duration1.withDurationAdded(10L, (-36));
        org.joda.time.Period period12 = duration11.toPeriod();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = duration11.toPeriodTo(readableInstant13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardSeconds((long) '4');
        int int17 = duration11.compareTo((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) (-1), chronology19);
        org.joda.time.Period period22 = period20.minusMonths((int) (byte) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration24 = period22.toDurationFrom(readableInstant23);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((java.lang.Object) readableInstant23);
        boolean boolean26 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration28 = duration25.minus(0L);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
    }

    @Test
    public void test17713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17713");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period5 = period2.normalizedStandard();
        org.joda.time.MutablePeriod mutablePeriod6 = period5.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration8 = period5.toDurationFrom(readableInstant7);
        org.joda.time.Period period10 = period5.minusDays((-36));
        org.joda.time.Period period12 = period5.minusMonths((int) 'a');
        org.joda.time.Period period13 = period12.negated();
        int int14 = period12.getYears();
        org.joda.time.Period period16 = period12.minusSeconds(100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days17 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot convert period to duration as months is not precise in the period P-97MT-100.036S");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test17714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17714");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 100);
        org.joda.time.Duration duration3 = duration1.plus(100L);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Interval interval5 = duration3.toIntervalFrom(readableInstant4);
        org.joda.time.Period period8 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period10 = period8.minusMonths(0);
        org.joda.time.Minutes minutes11 = period10.toStandardMinutes();
        org.joda.time.Duration duration12 = minutes11.toStandardDuration();
        org.joda.time.Period period15 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period17 = period15.minusMonths(0);
        org.joda.time.Minutes minutes18 = period17.toStandardMinutes();
        org.joda.time.Duration duration19 = minutes18.toStandardDuration();
        org.joda.time.Duration duration21 = duration12.withDurationAdded((org.joda.time.ReadableDuration) duration19, (int) (short) 100);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardSeconds((long) 0);
        java.lang.String str24 = duration23.toString();
        org.joda.time.Duration duration26 = duration23.minus((long) 10);
        boolean boolean27 = duration19.isEqual((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Period period30 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period32 = period30.minusMonths(0);
        org.joda.time.Minutes minutes33 = period32.toStandardMinutes();
        org.joda.time.Duration duration34 = minutes33.toStandardDuration();
        org.joda.time.Period period37 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period39 = period37.minusMonths(0);
        org.joda.time.Minutes minutes40 = period39.toStandardMinutes();
        org.joda.time.Duration duration41 = minutes40.toStandardDuration();
        boolean boolean42 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration44 = duration34.plus((long) (short) 10);
        long long45 = duration44.getStandardSeconds();
        org.joda.time.Duration duration46 = duration44.toDuration();
        java.lang.String str47 = duration44.toString();
        org.joda.time.Period period50 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period52 = period50.minusMonths(0);
        org.joda.time.Period period54 = period50.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType55 = period50.getPeriodType();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Duration duration57 = period50.toDurationTo(readableInstant56);
        long long58 = duration57.getStandardSeconds();
        boolean boolean59 = duration44.equals((java.lang.Object) long58);
        boolean boolean60 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration62 = duration3.withDurationAdded((org.joda.time.ReadableDuration) duration23, 69);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(interval5);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT0S" + "'", str24, "PT0S");
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT0.010S" + "'", str47, "PT0.010S");
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(duration62);
    }

    @Test
    public void test17715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17715");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((-2147483638));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17716");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withParseType(periodType5);
        java.util.Locale locale8 = null;
        org.joda.time.format.PeriodFormatter periodFormatter9 = periodFormatter7.withLocale(locale8);
        java.util.Locale locale10 = periodFormatter7.getLocale();
        org.joda.time.format.PeriodPrinter periodPrinter12 = null;
        org.joda.time.format.PeriodParser periodParser13 = null;
        org.joda.time.format.PeriodFormatter periodFormatter14 = new org.joda.time.format.PeriodFormatter(periodPrinter12, periodParser13);
        boolean boolean15 = periodFormatter14.isParser();
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType17 = days16.getPeriodType();
        org.joda.time.PeriodType periodType18 = periodType17.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter19 = periodFormatter14.withParseType(periodType17);
        boolean boolean20 = periodFormatter19.isPrinter();
        boolean boolean21 = periodFormatter19.isParser();
        org.joda.time.PeriodType periodType22 = periodFormatter19.getParseType();
        org.joda.time.PeriodType periodType23 = periodType22.withSecondsRemoved();
        org.joda.time.PeriodType periodType24 = periodType22.withDaysRemoved();
        org.joda.time.PeriodType periodType25 = periodType24.withWeeksRemoved();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((-2147483648L), periodType24, chronology26);
        org.joda.time.format.PeriodFormatter periodFormatter28 = periodFormatter7.withParseType(periodType24);
        org.joda.time.format.PeriodParser periodParser29 = periodFormatter7.getParser();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.format.PeriodPrinter periodPrinter34 = null;
        org.joda.time.format.PeriodParser periodParser35 = null;
        org.joda.time.format.PeriodFormatter periodFormatter36 = new org.joda.time.format.PeriodFormatter(periodPrinter34, periodParser35);
        boolean boolean37 = periodFormatter36.isParser();
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds41 = seconds39.plus(seconds40);
        org.joda.time.PeriodType periodType42 = seconds39.getPeriodType();
        org.joda.time.Period period45 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period46 = period45.negated();
        org.joda.time.DurationFieldType durationFieldType48 = period45.getFieldType((int) (short) 1);
        int int49 = periodType42.indexOf(durationFieldType48);
        org.joda.time.Period period50 = new org.joda.time.Period((long) ' ', periodType42);
        org.joda.time.format.PeriodFormatter periodFormatter51 = periodFormatter36.withParseType(periodType42);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.time();
        org.joda.time.PeriodType periodType53 = periodType52.withDaysRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter54 = periodFormatter36.withParseType(periodType53);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant32, readableInstant33, periodType53);
        org.joda.time.Period period56 = new org.joda.time.Period(readableInstant30, readableInstant31, periodType53);
        org.joda.time.Period period58 = period56.plusSeconds(11);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds63 = seconds61.plus(seconds62);
        org.joda.time.Seconds seconds65 = seconds61.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds66 = seconds60.plus(seconds61);
        org.joda.time.DurationFieldType durationFieldType67 = seconds61.getFieldType();
        int int68 = period58.indexOf(durationFieldType67);
        org.joda.time.MutablePeriod mutablePeriod69 = period58.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int72 = periodFormatter7.parseInto((org.joda.time.ReadWritablePeriod) mutablePeriod69, "PT197H", 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(periodFormatter9);
        org.junit.Assert.assertNull(locale10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodFormatter19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodFormatter28);
        org.junit.Assert.assertNull(periodParser29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(periodFormatter51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodFormatter54);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertNotNull(mutablePeriod69);
    }

    @Test
    public void test17717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17717");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period7 = duration6.toPeriod();
        org.joda.time.Period period10 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period12 = period10.minusMonths(0);
        org.joda.time.Minutes minutes13 = period12.toStandardMinutes();
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes16 = minutes13.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration17 = minutes13.toStandardDuration();
        org.joda.time.Period period20 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period22 = period20.minusMonths(0);
        org.joda.time.Minutes minutes23 = period22.toStandardMinutes();
        org.joda.time.Duration duration24 = minutes23.toStandardDuration();
        org.joda.time.Period period25 = duration24.toPeriod();
        boolean boolean26 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean27 = duration6.isEqual((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period28 = org.joda.time.Period.ZERO;
        boolean boolean29 = duration6.equals((java.lang.Object) period28);
        org.joda.time.Period period32 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period34 = period32.minusMonths(0);
        org.joda.time.Minutes minutes35 = period34.toStandardMinutes();
        org.joda.time.Duration duration36 = minutes35.toStandardDuration();
        org.joda.time.Period period39 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period41 = period39.minusMonths(0);
        org.joda.time.Minutes minutes42 = period41.toStandardMinutes();
        org.joda.time.Duration duration43 = minutes42.toStandardDuration();
        boolean boolean44 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Duration duration47 = new org.joda.time.Duration(readableInstant45, readableInstant46);
        org.joda.time.Duration duration48 = duration36.minus((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration49 = duration36.toDuration();
        org.joda.time.Period period52 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period54 = period52.minusMonths(0);
        org.joda.time.Minutes minutes55 = period54.toStandardMinutes();
        org.joda.time.Duration duration56 = minutes55.toStandardDuration();
        org.joda.time.Minutes minutes58 = minutes55.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration59 = minutes55.toStandardDuration();
        org.joda.time.Period period62 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period64 = period62.minusMonths(0);
        org.joda.time.Minutes minutes65 = period64.toStandardMinutes();
        org.joda.time.Duration duration66 = minutes65.toStandardDuration();
        org.joda.time.Period period67 = duration66.toPeriod();
        boolean boolean68 = duration59.isLongerThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.days();
        org.joda.time.Period period71 = duration59.toPeriodTo(readableInstant69, periodType70);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration59, readableInstant72);
        boolean boolean74 = duration49.isLongerThan((org.joda.time.ReadableDuration) duration59);
        long long75 = duration49.getMillis();
        long long76 = duration49.getStandardDays();
        int int77 = duration6.compareTo((org.joda.time.ReadableDuration) duration49);
        java.lang.String str78 = duration6.toString();
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.PeriodType periodType80 = null;
        org.joda.time.Period period81 = duration6.toPeriodFrom(readableInstant79, periodType80);
        org.joda.time.Duration duration84 = new org.joda.time.Duration((long) 65, (long) (-1));
        org.joda.time.Duration duration86 = duration84.minus((long) 97);
        boolean boolean87 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration84);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "PT0S" + "'", str78, "PT0S");
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test17718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17718");
        org.joda.time.Period period1 = org.joda.time.Period.millis((-101));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17719");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period2.withMillis((int) (short) 0);
        int int7 = period6.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod8 = period6.toMutablePeriod();
        org.joda.time.Duration duration9 = period6.toStandardDuration();
        org.joda.time.Seconds seconds10 = duration9.toStandardSeconds();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds13 = seconds11.plus(seconds12);
        org.joda.time.Seconds seconds15 = seconds11.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds16 = seconds10.minus(seconds15);
        java.lang.String str17 = seconds10.toString();
        org.joda.time.Seconds seconds19 = seconds10.plus(2147483647);
        org.joda.time.PeriodType periodType20 = seconds10.getPeriodType();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT0S" + "'", str17, "PT0S");
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(periodType20);
    }

    @Test
    public void test17720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17720");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        org.joda.time.Duration duration15 = duration6.withDurationAdded((org.joda.time.ReadableDuration) duration13, (int) (short) 100);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration6.toPeriod(chronology16);
        org.joda.time.Period period19 = period17.plusMinutes(6);
        org.joda.time.Duration duration20 = period19.toStandardDuration();
        int int21 = period19.getMonths();
        org.joda.time.Minutes minutes22 = period19.toStandardMinutes();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(minutes22);
    }

    @Test
    public void test17721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17721");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (byte) 0);
        org.joda.time.PeriodType periodType2 = period1.getPeriodType();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(periodType2);
    }

    @Test
    public void test17722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17722");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period6 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period8 = period6.minusMonths(0);
        org.joda.time.Minutes minutes9 = period8.toStandardMinutes();
        org.joda.time.Minutes minutes11 = minutes9.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes12 = minutes3.minus(minutes9);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period16 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period18 = period16.minusMonths(0);
        org.joda.time.Minutes minutes19 = period18.toStandardMinutes();
        org.joda.time.Minutes minutes21 = minutes19.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes22 = minutes13.minus(minutes19);
        org.joda.time.Period period25 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period27 = period25.minusMonths(0);
        org.joda.time.Minutes minutes28 = period27.toStandardMinutes();
        org.joda.time.Duration duration29 = minutes28.toStandardDuration();
        org.joda.time.Minutes minutes31 = minutes28.multipliedBy((int) (short) 1);
        int int32 = minutes13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes31);
        org.joda.time.Minutes minutes33 = minutes12.plus(minutes31);
        org.joda.time.Period period36 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period38 = period36.minusMonths(0);
        org.joda.time.Minutes minutes39 = period38.toStandardMinutes();
        org.joda.time.Duration duration40 = minutes39.toStandardDuration();
        org.joda.time.Minutes minutes42 = minutes39.multipliedBy((int) (short) 1);
        java.lang.String str43 = minutes42.toString();
        org.joda.time.Minutes minutes44 = minutes33.minus(minutes42);
        int int45 = minutes42.getMinutes();
        org.joda.time.Minutes minutes47 = minutes42.plus((-36));
        org.joda.time.Minutes minutes48 = minutes2.plus(minutes42);
        org.joda.time.Minutes minutes50 = minutes2.dividedBy(59);
        org.joda.time.Minutes minutes52 = minutes50.dividedBy(11);
        org.joda.time.Period period54 = org.joda.time.Period.days(10);
        org.joda.time.Minutes minutes55 = period54.toStandardMinutes();
        org.joda.time.Minutes minutes57 = minutes55.multipliedBy(1);
        org.joda.time.DurationFieldType durationFieldType58 = minutes57.getFieldType();
        org.joda.time.Minutes minutes59 = minutes52.minus(minutes57);
        org.joda.time.PeriodType periodType60 = minutes52.getPeriodType();
        java.lang.String str61 = minutes52.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PT0M" + "'", str43, "PT0M");
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT0M" + "'", str61, "PT0M");
    }

    @Test
    public void test17723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17723");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) '#');
        int int2 = period1.getYears();
        org.joda.time.Hours hours3 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period1);
        int int4 = hours3.getHours();
        org.joda.time.Hours hours6 = hours3.multipliedBy((int) (short) 1);
        org.joda.time.Hours hours8 = hours3.multipliedBy((int) (short) 100);
        org.joda.time.DurationFieldType durationFieldType9 = hours3.getFieldType();
        org.joda.time.Hours hours11 = hours3.multipliedBy(1);
        org.joda.time.Hours hours12 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours11);
        java.lang.String str13 = hours11.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType15 = hours11.getFieldType((-23));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -23");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT0H" + "'", str13, "PT0H");
    }

    @Test
    public void test17724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17724");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((-2));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17725");
        org.joda.time.Period period1 = org.joda.time.Period.hours((int) '#');
        org.joda.time.Period period3 = period1.withMinutes(52);
        org.joda.time.Period period5 = period1.plusMillis((-63));
        org.joda.time.Seconds seconds6 = period5.toStandardSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(seconds6);
    }

    @Test
    public void test17726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17726");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.PeriodType periodType2 = hours0.getPeriodType();
        org.joda.time.PeriodType periodType3 = hours0.getPeriodType();
        org.joda.time.Hours hours4 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = hours4.getFieldType();
        org.joda.time.Period period8 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period9 = period8.negated();
        int int10 = period8.getHours();
        org.joda.time.Period period12 = org.joda.time.Period.days(10);
        org.joda.time.Period period14 = period12.plusMonths((int) 'a');
        org.joda.time.Period period16 = period12.plusSeconds((int) (short) 100);
        org.joda.time.Period period18 = period16.minusMonths((int) 'a');
        org.joda.time.Period period19 = period8.withFields((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Hours hours20 = period8.toStandardHours();
        int int21 = hours20.getHours();
        org.joda.time.Hours hours22 = hours4.plus(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = hours23.getFieldType();
        org.joda.time.Period period27 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period28 = period27.negated();
        int int29 = period27.getHours();
        org.joda.time.Period period31 = org.joda.time.Period.days(10);
        org.joda.time.Period period33 = period31.plusMonths((int) 'a');
        org.joda.time.Period period35 = period31.plusSeconds((int) (short) 100);
        org.joda.time.Period period37 = period35.minusMonths((int) 'a');
        org.joda.time.Period period38 = period27.withFields((org.joda.time.ReadablePeriod) period37);
        org.joda.time.Hours hours39 = period27.toStandardHours();
        int int40 = hours39.getHours();
        org.joda.time.Hours hours41 = hours23.plus(hours39);
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours42.dividedBy(100);
        org.joda.time.Period period47 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period49 = period47.minusMonths(0);
        org.joda.time.Period period51 = period49.minusSeconds(0);
        org.joda.time.Period period52 = period51.normalizedStandard();
        org.joda.time.Hours hours53 = period52.toStandardHours();
        boolean boolean54 = hours44.isLessThan(hours53);
        org.joda.time.Period period56 = org.joda.time.Period.millis((int) '#');
        int int57 = period56.getYears();
        org.joda.time.Hours hours58 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period56);
        org.joda.time.Period period60 = period56.multipliedBy((int) (byte) 0);
        org.joda.time.Hours hours61 = period60.toStandardHours();
        org.joda.time.Hours hours62 = hours44.minus(hours61);
        boolean boolean63 = hours39.isLessThan(hours61);
        org.joda.time.Hours hours64 = hours4.minus(hours61);
        org.joda.time.Hours hours66 = hours64.minus(3);
        org.joda.time.Hours hours67 = hours0.plus(hours66);
        org.joda.time.Duration duration70 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration72 = duration70.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration72, readableInstant73);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Interval interval76 = duration72.toIntervalFrom(readableInstant75);
        org.joda.time.Hours hours77 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval76);
        org.joda.time.Hours hours78 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval76);
        boolean boolean79 = hours67.isLessThan(hours78);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours81 = hours67.multipliedBy((-268435455));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483645 * -268435455");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test17727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17727");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P-35Y-1W");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test17728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17728");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType1 = days0.getPeriodType();
        org.joda.time.Days days2 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        org.joda.time.Days days5 = days2.minus(0);
        org.joda.time.Days days6 = days5.negated();
        boolean boolean7 = days0.isGreaterThan(days5);
        org.joda.time.Days days9 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days11 = days9.multipliedBy((int) (short) 100);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType13 = days12.getPeriodType();
        org.joda.time.Days days15 = days12.minus(0);
        org.joda.time.Days days16 = days9.minus(days15);
        org.joda.time.Days days17 = days5.minus(days9);
        org.joda.time.Days days18 = org.joda.time.Days.FOUR;
        org.joda.time.Period period21 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period22 = period21.negated();
        int int23 = period21.getHours();
        int int24 = period21.getWeeks();
        org.joda.time.Days days26 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days28 = days26.multipliedBy((int) (short) 100);
        org.joda.time.Days days29 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType30 = days29.getPeriodType();
        org.joda.time.Days days32 = days29.minus(0);
        org.joda.time.Days days33 = days26.minus(days32);
        org.joda.time.Days days34 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days33);
        boolean boolean35 = period21.equals((java.lang.Object) days33);
        boolean boolean36 = days18.isGreaterThan(days33);
        org.joda.time.Days days38 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days40 = days38.multipliedBy((int) (short) 100);
        org.joda.time.Duration duration41 = days38.toStandardDuration();
        org.joda.time.Days days42 = org.joda.time.Days.FOUR;
        org.joda.time.Period period45 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period46 = period45.negated();
        int int47 = period45.getHours();
        int int48 = period45.getWeeks();
        org.joda.time.Days days50 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days52 = days50.multipliedBy((int) (short) 100);
        org.joda.time.Days days53 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType54 = days53.getPeriodType();
        org.joda.time.Days days56 = days53.minus(0);
        org.joda.time.Days days57 = days50.minus(days56);
        org.joda.time.Days days58 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days57);
        boolean boolean59 = period45.equals((java.lang.Object) days57);
        boolean boolean60 = days42.isGreaterThan(days57);
        org.joda.time.Days days61 = days38.minus(days57);
        org.joda.time.Days days62 = days33.plus(days57);
        boolean boolean63 = days9.isGreaterThan(days33);
        org.joda.time.PeriodType periodType64 = days9.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType65 = days9.getFieldType();
        org.joda.time.Days days67 = days9.multipliedBy(2400);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(days67);
    }

    @Test
    public void test17729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17729");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Period period7 = period3.minusSeconds((int) (byte) 100);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType9 = days8.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withHoursRemoved();
        org.joda.time.PeriodType periodType11 = periodType9.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.days();
        boolean boolean13 = periodType11.isSupported(durationFieldType12);
        int int14 = period3.get(durationFieldType12);
        org.joda.time.Period period16 = period3.withHours(1);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration18 = period3.toDurationTo(readableInstant17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration18);
        org.joda.time.Period period20 = duration18.toPeriod();
        long long21 = duration18.getStandardMinutes();
        java.lang.String str22 = duration18.toString();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT-0.036S" + "'", str22, "PT-0.036S");
    }

    @Test
    public void test17730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17730");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        boolean boolean14 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(readableInstant15, readableInstant16);
        org.joda.time.Duration duration18 = duration6.minus((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant19);
        org.joda.time.Duration duration22 = duration6.plus((long) 8);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardSeconds((long) 10);
        org.joda.time.Period period27 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period29 = period27.minusMonths(0);
        org.joda.time.Minutes minutes30 = period29.toStandardMinutes();
        org.joda.time.Duration duration31 = minutes30.toStandardDuration();
        org.joda.time.Minutes minutes33 = minutes30.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration34 = minutes30.toStandardDuration();
        org.joda.time.Period period37 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period39 = period37.minusMonths(0);
        org.joda.time.Minutes minutes40 = period39.toStandardMinutes();
        org.joda.time.Duration duration41 = minutes40.toStandardDuration();
        org.joda.time.Period period42 = duration41.toPeriod();
        boolean boolean43 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        boolean boolean46 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration41);
        int int47 = duration6.compareTo((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Period period50 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period50);
        org.joda.time.PeriodType periodType52 = period50.getPeriodType();
        org.joda.time.Period period53 = duration24.toPeriod(periodType52);
        org.joda.time.Period period55 = period53.minusYears(97);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks56 = period55.toStandardWeeks();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Weeks as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period55);
    }

    @Test
    public void test17731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17731");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = hours0.getFieldType();
        org.joda.time.PeriodType periodType2 = hours0.getPeriodType();
        org.joda.time.PeriodType periodType3 = periodType2.withMonthsRemoved();
        java.lang.String str4 = periodType3.getName();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Hours" + "'", str4, "Hours");
    }

    @Test
    public void test17732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17732");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withParseType(periodType5);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType9 = days8.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withSecondsRemoved();
        org.joda.time.PeriodType periodType11 = periodType9.withYearsRemoved();
        java.lang.String str12 = periodType11.toString();
        org.joda.time.format.PeriodFormatter periodFormatter13 = periodFormatter7.withParseType(periodType11);
        org.joda.time.PeriodType periodType14 = periodFormatter13.getParseType();
        java.util.Locale locale15 = periodFormatter13.getLocale();
        java.util.Locale locale16 = periodFormatter13.getLocale();
        boolean boolean17 = periodFormatter13.isPrinter();
        java.util.Locale locale18 = null;
        org.joda.time.format.PeriodFormatter periodFormatter19 = periodFormatter13.withLocale(locale18);
        boolean boolean20 = periodFormatter13.isPrinter();
        java.util.Locale locale21 = null;
        org.joda.time.format.PeriodFormatter periodFormatter22 = periodFormatter13.withLocale(locale21);
        java.util.Locale locale23 = null;
        org.joda.time.format.PeriodFormatter periodFormatter24 = periodFormatter22.withLocale(locale23);
        java.util.Locale locale25 = null;
        org.joda.time.format.PeriodFormatter periodFormatter26 = periodFormatter22.withLocale(locale25);
        java.lang.StringBuffer stringBuffer27 = null;
        org.joda.time.Hours hours28 = org.joda.time.Hours.ONE;
        int int29 = hours28.getHours();
        org.joda.time.Hours hours31 = hours28.multipliedBy((-95));
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours34 = hours32.minus(hours33);
        int int35 = hours33.getHours();
        int int36 = hours28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        org.joda.time.Period period39 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period41 = period39.minusMonths(0);
        org.joda.time.Period period43 = period41.minusSeconds(0);
        org.joda.time.Period period45 = period43.minusWeeks(10);
        org.joda.time.Hours hours46 = org.joda.time.Hours.ZERO;
        org.joda.time.Duration duration47 = hours46.toStandardDuration();
        org.joda.time.Period period48 = period45.minus((org.joda.time.ReadablePeriod) hours46);
        org.joda.time.Hours hours49 = hours33.plus(hours46);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter26.printTo(stringBuffer27, (org.joda.time.ReadablePeriod) hours49);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PeriodType[Days]" + "'", str12, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodFormatter13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNull(locale15);
        org.junit.Assert.assertNull(locale16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodFormatter19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(periodFormatter22);
        org.junit.Assert.assertNotNull(periodFormatter24);
        org.junit.Assert.assertNotNull(periodFormatter26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 6 + "'", int35 == 6);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(hours49);
    }

    @Test
    public void test17733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17733");
        org.joda.time.Period period1 = org.joda.time.Period.days(10);
        org.joda.time.Period period3 = period1.plusMonths((int) 'a');
        org.joda.time.Period period5 = period1.plusSeconds((int) (short) 100);
        org.joda.time.Period period7 = period5.plusMinutes(3);
        org.joda.time.Seconds seconds8 = period7.toStandardSeconds();
        int int9 = period7.size();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
    }

    @Test
    public void test17734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17734");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withParseType(periodType5);
        boolean boolean8 = periodFormatter7.isPrinter();
        boolean boolean9 = periodFormatter7.isParser();
        org.joda.time.format.PeriodParser periodParser10 = periodFormatter7.getParser();
        org.joda.time.format.PeriodPrinter periodPrinter11 = periodFormatter7.getPrinter();
        java.util.Locale locale12 = periodFormatter7.getLocale();
        boolean boolean13 = periodFormatter7.isPrinter();
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType18 = days17.getPeriodType();
        org.joda.time.PeriodType periodType19 = periodType18.withHoursRemoved();
        org.joda.time.PeriodType periodType20 = periodType18.withSecondsRemoved();
        org.joda.time.PeriodType periodType21 = periodType18.withMinutesRemoved();
        org.joda.time.PeriodType periodType22 = periodType21.withWeeksRemoved();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period(10L, (long) (byte) -1, periodType22, chronology23);
        org.joda.time.PeriodType periodType25 = periodType22.withYearsRemoved();
        boolean boolean26 = periodType14.equals((java.lang.Object) periodType22);
        java.lang.String str27 = periodType14.toString();
        org.joda.time.format.PeriodFormatter periodFormatter28 = periodFormatter7.withParseType(periodType14);
        org.joda.time.PeriodType periodType29 = periodFormatter28.getParseType();
        boolean boolean30 = periodFormatter28.isParser();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(periodParser10);
        org.junit.Assert.assertNull(periodPrinter11);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PeriodType[YearDay]" + "'", str27, "PeriodType[YearDay]");
        org.junit.Assert.assertNotNull(periodFormatter28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test17735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17735");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withParseType(periodType5);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType9 = days8.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withSecondsRemoved();
        org.joda.time.PeriodType periodType11 = periodType9.withYearsRemoved();
        java.lang.String str12 = periodType11.toString();
        org.joda.time.format.PeriodFormatter periodFormatter13 = periodFormatter7.withParseType(periodType11);
        org.joda.time.PeriodType periodType14 = periodFormatter13.getParseType();
        java.util.Locale locale15 = periodFormatter13.getLocale();
        java.util.Locale locale16 = periodFormatter13.getLocale();
        org.joda.time.format.PeriodParser periodParser17 = periodFormatter13.getParser();
        boolean boolean18 = periodFormatter13.isParser();
        java.util.Locale locale19 = null;
        org.joda.time.format.PeriodFormatter periodFormatter20 = periodFormatter13.withLocale(locale19);
        org.joda.time.PeriodType periodType21 = periodFormatter20.getParseType();
        java.util.Locale locale22 = periodFormatter20.getLocale();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PeriodType[Days]" + "'", str12, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodFormatter13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNull(locale15);
        org.junit.Assert.assertNull(locale16);
        org.junit.Assert.assertNull(periodParser17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodFormatter20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNull(locale22);
    }

    @Test
    public void test17736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17736");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks3 = weeks1.plus(11);
        org.joda.time.Weeks weeks5 = weeks1.plus((int) (short) 100);
        java.lang.String str6 = weeks5.toString();
        org.joda.time.Weeks weeks8 = weeks5.multipliedBy((-95));
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks11 = weeks9.dividedBy(1);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.MIN_VALUE;
        boolean boolean13 = weeks11.isGreaterThan(weeks12);
        org.joda.time.Duration duration14 = weeks11.toStandardDuration();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.ZERO;
        java.lang.String str16 = weeks15.toString();
        int int17 = weeks15.size();
        org.joda.time.PeriodType periodType18 = weeks15.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod19 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks20 = weeks11.minus(weeks15);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeks(10);
        org.joda.time.Weeks weeks24 = weeks23.negated();
        java.lang.String str25 = weeks23.toString();
        boolean boolean26 = weeks21.isLessThan(weeks23);
        boolean boolean27 = weeks15.isLessThan(weeks23);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeksIn(readableInterval32);
        boolean boolean34 = weeks31.isLessThan(weeks33);
        boolean boolean35 = weeks30.isGreaterThan(weeks33);
        org.joda.time.Weeks weeks36 = null;
        org.joda.time.Weeks weeks37 = weeks33.minus(weeks36);
        org.joda.time.DurationFieldType durationFieldType38 = weeks33.getFieldType();
        org.joda.time.Weeks weeks40 = weeks33.plus(52);
        org.joda.time.Weeks weeks41 = weeks33.negated();
        org.joda.time.Weeks weeks42 = weeks23.minus(weeks33);
        org.joda.time.Weeks weeks43 = weeks5.plus(weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks46 = weeks44.dividedBy(1);
        org.joda.time.Weeks weeks48 = weeks44.dividedBy(8);
        java.lang.String str49 = weeks48.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.weeks((-10));
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.weeks(1);
        boolean boolean54 = weeks51.isGreaterThan(weeks53);
        org.joda.time.Weeks weeks55 = weeks48.minus(weeks51);
        int int56 = weeks55.getWeeks();
        boolean boolean57 = weeks42.isGreaterThan(weeks55);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks60 = weeks58.dividedBy(1);
        org.joda.time.Weeks weeks62 = weeks58.dividedBy(8);
        java.lang.String str63 = weeks62.toString();
        org.joda.time.Weeks weeks65 = weeks62.plus((int) (byte) 1);
        boolean boolean66 = weeks55.isGreaterThan(weeks65);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.ZERO;
        java.lang.String str68 = weeks67.toString();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks71 = weeks70.negated();
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval73 = null;
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.weeksIn(readableInterval73);
        boolean boolean75 = weeks72.isLessThan(weeks74);
        boolean boolean76 = weeks71.isGreaterThan(weeks74);
        org.joda.time.Weeks weeks78 = weeks74.plus((int) (short) 100);
        org.joda.time.Weeks weeks79 = weeks67.plus(weeks78);
        org.joda.time.Weeks weeks80 = weeks79.negated();
        java.lang.String str81 = weeks80.toString();
        java.lang.String str82 = weeks80.toString();
        org.joda.time.Weeks weeks84 = weeks80.multipliedBy((-35));
        boolean boolean85 = weeks65.isLessThan(weeks84);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P100W" + "'", str6, "P100W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P0W" + "'", str16, "P0W");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P10W" + "'", str25, "P10W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P268435455W" + "'", str49, "P268435455W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 268435465 + "'", int56 == 268435465);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "P268435455W" + "'", str63, "P268435455W");
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "P0W" + "'", str68, "P0W");
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "P-100W" + "'", str81, "P-100W");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "P-100W" + "'", str82, "P-100W");
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test17737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17737");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours2 = hours0.dividedBy(100);
        org.joda.time.Hours hours4 = hours2.multipliedBy((int) ' ');
        int int5 = hours2.getHours();
        org.joda.time.Hours hours6 = null;
        boolean boolean7 = hours2.isLessThan(hours6);
        org.joda.time.Hours hours8 = null;
        org.joda.time.Hours hours9 = hours2.plus(hours8);
        org.joda.time.Duration duration10 = hours2.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType11 = hours2.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(durationFieldType11);
    }

    @Test
    public void test17738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17738");
        org.joda.time.Days days1 = org.joda.time.Days.days(2);
        org.joda.time.Days days3 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days5 = days3.multipliedBy((int) (short) 100);
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType7 = days6.getPeriodType();
        org.joda.time.Days days9 = days6.minus(0);
        org.joda.time.Days days10 = days3.minus(days9);
        java.lang.String str11 = days10.toString();
        org.joda.time.Days days12 = days10.negated();
        org.joda.time.Days days13 = org.joda.time.Days.FIVE;
        java.lang.String str14 = days13.toString();
        org.joda.time.Days days16 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days17 = days13.minus(days16);
        org.joda.time.DurationFieldType durationFieldType18 = days13.getFieldType();
        boolean boolean19 = days12.isLessThan(days13);
        org.joda.time.Days days21 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days23 = days21.multipliedBy((int) (short) 100);
        org.joda.time.Days days24 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType25 = days24.getPeriodType();
        org.joda.time.Days days27 = days24.minus(0);
        org.joda.time.Days days28 = days21.minus(days27);
        org.joda.time.Days days29 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days28);
        org.joda.time.Duration duration32 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration34 = duration32.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalFrom(readableInstant37);
        org.joda.time.Days days39 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval38);
        org.joda.time.Days days41 = days39.minus((int) '4');
        org.joda.time.Days days42 = days29.minus(days41);
        org.joda.time.Duration duration43 = days41.toStandardDuration();
        org.joda.time.Days days44 = days12.minus(days41);
        org.joda.time.Days days46 = days41.plus(776);
        org.joda.time.Days days48 = days46.dividedBy(244983);
        org.joda.time.Days days49 = days1.plus(days48);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0D" + "'", str11, "P0D");
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P5D" + "'", str14, "P5D");
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
    }

    @Test
    public void test17739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17739");
        org.joda.time.Period period1 = org.joda.time.Period.millis(20);
        org.joda.time.Period period3 = period1.minusDays(105);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test17740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17740");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(94);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17741");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (-10), 15032385529L, chronology2);
        java.lang.String str4 = period3.toString();
        org.joda.time.Period period7 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period9 = period7.minusMonths(0);
        org.joda.time.Period period11 = period7.withMillis((int) (short) 0);
        int int12 = period11.getSeconds();
        org.joda.time.Period period14 = period11.withMinutes((-97));
        org.joda.time.Period period16 = org.joda.time.Period.months(87);
        int int17 = period16.getHours();
        org.joda.time.Period period20 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period22 = period20.minusMonths(0);
        org.joda.time.Minutes minutes23 = period22.toStandardMinutes();
        org.joda.time.Duration duration24 = minutes23.toStandardDuration();
        org.joda.time.Period period27 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period29 = period27.minusMonths(0);
        org.joda.time.Minutes minutes30 = period29.toStandardMinutes();
        org.joda.time.Duration duration31 = minutes30.toStandardDuration();
        boolean boolean32 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(readableInstant33, readableInstant34);
        org.joda.time.Duration duration36 = duration24.minus((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant37);
        org.joda.time.Duration duration40 = duration24.plus((long) 8);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = duration24.toPeriodFrom(readableInstant41);
        org.joda.time.Period period45 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period46 = period45.negated();
        org.joda.time.DurationFieldType durationFieldType48 = period45.getFieldType((int) (short) 1);
        int int49 = period42.get(durationFieldType48);
        int int50 = period16.indexOf(durationFieldType48);
        boolean boolean51 = period14.isSupported(durationFieldType48);
        int int52 = period3.get(durationFieldType48);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P5M3W1DT23H39M45.539S" + "'", str4, "P5M3W1DT23H39M45.539S");
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
    }

    @Test
    public void test17742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17742");
        org.joda.time.Period period1 = org.joda.time.Period.days(87);
        int int2 = period1.size();
        org.joda.time.Period period4 = period1.minusMillis(5);
        org.joda.time.Period period6 = period1.withMillis((-2147483640));
        org.joda.time.Period period7 = period6.toPeriod();
        java.lang.String str8 = period7.toString();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P87DT-2147483.640S" + "'", str8, "P87DT-2147483.640S");
    }

    @Test
    public void test17743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17743");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT5H");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test17744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17744");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) '#');
        int int2 = period1.getYears();
        org.joda.time.Period period4 = period1.multipliedBy((int) (byte) 100);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = period4.withPeriodType(periodType5);
        org.joda.time.Period period8 = period6.withSeconds((-52));
        org.joda.time.Period period9 = period6.normalizedStandard();
        org.joda.time.Period period10 = period6.negated();
        org.joda.time.Period period12 = period10.withYears((-18));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test17745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17745");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeksIn(readableInterval4);
        boolean boolean6 = weeks3.isLessThan(weeks5);
        boolean boolean7 = weeks2.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks8 = null;
        org.joda.time.Weeks weeks9 = weeks5.minus(weeks8);
        org.joda.time.DurationFieldType durationFieldType10 = weeks9.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeksIn(readableInterval16);
        boolean boolean18 = weeks15.isLessThan(weeks17);
        boolean boolean19 = weeks14.isGreaterThan(weeks17);
        boolean boolean20 = weeks11.isLessThan(weeks14);
        org.joda.time.Weeks weeks21 = weeks9.plus(weeks14);
        int int22 = weeks21.getWeeks();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeksIn(readableInterval27);
        boolean boolean29 = weeks26.isLessThan(weeks28);
        boolean boolean30 = weeks25.isGreaterThan(weeks28);
        org.joda.time.Weeks weeks31 = null;
        org.joda.time.Weeks weeks32 = weeks28.minus(weeks31);
        org.joda.time.DurationFieldType durationFieldType33 = weeks32.getFieldType();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeksIn(readableInterval39);
        boolean boolean41 = weeks38.isLessThan(weeks40);
        boolean boolean42 = weeks37.isGreaterThan(weeks40);
        boolean boolean43 = weeks34.isLessThan(weeks37);
        org.joda.time.Weeks weeks44 = weeks32.plus(weeks37);
        org.joda.time.Duration duration45 = weeks32.toStandardDuration();
        boolean boolean46 = weeks21.isGreaterThan(weeks32);
        org.joda.time.Weeks weeks48 = weeks21.plus(1);
        org.joda.time.Weeks weeks50 = weeks48.minus((int) (short) 10);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
    }

    @Test
    public void test17746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17746");
        org.joda.time.Period period4 = new org.joda.time.Period((-213044), (-2704), 572, 59);
    }

    @Test
    public void test17747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17747");
        org.joda.time.Period period2 = new org.joda.time.Period((long) (-2), (long) (-64));
        org.joda.time.Period period4 = period2.withYears(97);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test17748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17748");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) (short) 1);
        int int2 = period1.getMillis();
        org.joda.time.MutablePeriod mutablePeriod3 = period1.toMutablePeriod();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
    }

    @Test
    public void test17749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17749");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        boolean boolean14 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration16 = duration6.plus((long) (short) 10);
        org.joda.time.Period period19 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period21 = period19.minusMonths(0);
        int int22 = period21.getYears();
        org.joda.time.Period period24 = period21.plusYears((int) ' ');
        boolean boolean25 = duration16.equals((java.lang.Object) period24);
        org.joda.time.Period period28 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period30 = period28.minusMonths(0);
        org.joda.time.Minutes minutes31 = period30.toStandardMinutes();
        org.joda.time.Duration duration32 = minutes31.toStandardDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration35 = duration32.plus((long) (byte) 0);
        org.joda.time.Duration duration37 = duration32.withMillis((long) 1);
        boolean boolean38 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration32);
        long long39 = duration32.getStandardHours();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.yearMonthDay();
        java.lang.String str46 = periodType45.getName();
        boolean boolean48 = periodType45.equals((java.lang.Object) true);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant43, readableInstant44, periodType45);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((long) 0, (long) (-10), periodType45, chronology50);
        org.joda.time.Period period52 = duration32.toPeriodFrom(readableInstant40, periodType45);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration32.toIntervalFrom(readableInstant53);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "YearMonthDay" + "'", str46, "YearMonthDay");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(interval54);
    }

    @Test
    public void test17750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17750");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Period period17 = duration16.toPeriod();
        boolean boolean18 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Period period21 = duration9.toPeriodTo(readableInstant19, periodType20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant22);
        long long24 = duration9.getStandardMinutes();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration9.toPeriod(chronology25);
        int int27 = period26.getSeconds();
        org.joda.time.Period period28 = period26.normalizedStandard();
        int int29 = period26.getHours();
        org.joda.time.Period period31 = period26.minusYears((-44));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(period31);
    }

    @Test
    public void test17751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17751");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.Period period3 = new org.joda.time.Period((long) (byte) 1, (long) (-36), periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withMillisRemoved();
        org.joda.time.PeriodType periodType5 = periodType4.withDaysRemoved();
        org.joda.time.PeriodType periodType6 = periodType5.withMonthsRemoved();
        org.joda.time.PeriodType periodType7 = periodType5.withSecondsRemoved();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test17752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17752");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-9500));
        org.joda.time.Hours hours2 = hours1.negated();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
    }

    @Test
    public void test17753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17753");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withParseType(periodType5);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType9 = days8.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withSecondsRemoved();
        org.joda.time.PeriodType periodType11 = periodType9.withYearsRemoved();
        java.lang.String str12 = periodType11.toString();
        org.joda.time.format.PeriodFormatter periodFormatter13 = periodFormatter7.withParseType(periodType11);
        org.joda.time.PeriodType periodType14 = periodFormatter13.getParseType();
        java.util.Locale locale15 = periodFormatter13.getLocale();
        java.util.Locale locale16 = periodFormatter13.getLocale();
        boolean boolean17 = periodFormatter13.isPrinter();
        java.util.Locale locale18 = null;
        org.joda.time.format.PeriodFormatter periodFormatter19 = periodFormatter13.withLocale(locale18);
        boolean boolean20 = periodFormatter13.isPrinter();
        java.util.Locale locale21 = null;
        org.joda.time.format.PeriodFormatter periodFormatter22 = periodFormatter13.withLocale(locale21);
        org.joda.time.format.PeriodPrinter periodPrinter23 = periodFormatter13.getPrinter();
        java.util.Locale locale24 = null;
        org.joda.time.format.PeriodFormatter periodFormatter25 = periodFormatter13.withLocale(locale24);
        org.joda.time.format.PeriodPrinter periodPrinter26 = periodFormatter13.getPrinter();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PeriodType[Days]" + "'", str12, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodFormatter13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNull(locale15);
        org.junit.Assert.assertNull(locale16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodFormatter19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(periodFormatter22);
        org.junit.Assert.assertNull(periodPrinter23);
        org.junit.Assert.assertNotNull(periodFormatter25);
        org.junit.Assert.assertNull(periodPrinter26);
    }

    @Test
    public void test17754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17754");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period13 = period12.negated();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration15 = period13.toDurationTo(readableInstant14);
        boolean boolean16 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration20 = duration15.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = duration20.toPeriodTo(readableInstant21);
        org.joda.time.Period period24 = period22.plusSeconds((int) 'a');
        int int25 = period24.getWeeks();
        org.joda.time.Period period26 = period24.normalizedStandard();
        org.joda.time.Period period28 = period24.plusHours(0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test17755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17755");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT-1.152S");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test17756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17756");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        boolean boolean14 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(readableInstant15, readableInstant16);
        org.joda.time.Duration duration18 = duration6.minus((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration6.toIntervalFrom(readableInstant19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(readableInstant21, readableInstant22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration25 = minutes24.toStandardDuration();
        long long26 = duration25.getStandardSeconds();
        org.joda.time.Period period29 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period31 = period29.minusMonths(0);
        org.joda.time.Minutes minutes32 = period31.toStandardMinutes();
        org.joda.time.Duration duration33 = minutes32.toStandardDuration();
        org.joda.time.Minutes minutes35 = minutes32.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration36 = minutes32.toStandardDuration();
        org.joda.time.Period period39 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period41 = period39.minusMonths(0);
        org.joda.time.Minutes minutes42 = period41.toStandardMinutes();
        org.joda.time.Duration duration43 = minutes42.toStandardDuration();
        org.joda.time.Period period44 = duration43.toPeriod();
        boolean boolean45 = duration36.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.days();
        org.joda.time.Period period48 = duration36.toPeriodTo(readableInstant46, periodType47);
        org.joda.time.Duration duration49 = duration25.plus((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Period period52 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period54 = period52.minusMonths(0);
        org.joda.time.Minutes minutes55 = period54.toStandardMinutes();
        org.joda.time.Duration duration56 = minutes55.toStandardDuration();
        org.joda.time.Period period59 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period61 = period59.minusMonths(0);
        org.joda.time.Minutes minutes62 = period61.toStandardMinutes();
        org.joda.time.Duration duration63 = minutes62.toStandardDuration();
        boolean boolean64 = duration56.isShorterThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, readableInstant65);
        long long67 = duration63.getStandardHours();
        org.joda.time.Duration duration68 = duration36.minus((org.joda.time.ReadableDuration) duration63);
        int int69 = duration23.compareTo((org.joda.time.ReadableDuration) duration63);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Period period71 = duration23.toPeriodFrom(readableInstant70);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.dayTime();
        org.joda.time.PeriodType periodType73 = periodType72.withMonthsRemoved();
        org.joda.time.Period period74 = duration23.toPeriod(periodType72);
        boolean boolean75 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Period period76 = duration6.toPeriod();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-128849018880L) + "'", long26 == (-128849018880L));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(period76);
    }

    @Test
    public void test17757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17757");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.hoursIn(readableInterval0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Hours hours3 = org.joda.time.Hours.hoursIn(readableInterval2);
        org.joda.time.Hours hours5 = hours3.multipliedBy(8);
        org.joda.time.Hours hours6 = hours1.plus(hours3);
        org.joda.time.Duration duration7 = hours6.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType8 = hours6.getFieldType();
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours11 = hours9.minus(hours10);
        org.joda.time.Hours hours13 = hours10.minus((-10));
        org.joda.time.PeriodType periodType14 = hours10.getPeriodType();
        org.joda.time.Hours hours16 = hours10.multipliedBy((int) (short) 100);
        org.joda.time.Hours hours17 = org.joda.time.Hours.ONE;
        int int18 = hours17.getHours();
        org.joda.time.Hours hours20 = hours17.dividedBy(8);
        org.joda.time.Hours hours22 = hours20.plus((int) 'a');
        boolean boolean23 = hours16.isLessThan(hours20);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours26 = hours24.minus(hours25);
        org.joda.time.PeriodType periodType27 = hours25.getPeriodType();
        org.joda.time.Hours hours29 = hours25.minus((int) '#');
        org.joda.time.Hours hours30 = hours16.minus(hours25);
        org.joda.time.Period period32 = org.joda.time.Period.millis((int) '#');
        int int33 = period32.getYears();
        org.joda.time.Hours hours34 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period32);
        int int35 = hours34.getHours();
        org.joda.time.Hours hours37 = hours34.multipliedBy((int) (short) 1);
        org.joda.time.Hours hours39 = hours34.multipliedBy((int) (short) 100);
        org.joda.time.DurationFieldType durationFieldType40 = hours34.getFieldType();
        org.joda.time.Hours hours42 = hours34.multipliedBy(1);
        org.joda.time.Hours hours43 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours42);
        org.joda.time.Hours hours44 = hours16.minus(hours42);
        org.joda.time.Duration duration45 = hours42.toStandardDuration();
        org.joda.time.Hours hours46 = hours6.plus(hours42);
        org.joda.time.Duration duration47 = hours46.toStandardDuration();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(duration47);
    }

    @Test
    public void test17758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17758");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withParseType(periodType5);
        java.util.Locale locale8 = null;
        org.joda.time.format.PeriodFormatter periodFormatter9 = periodFormatter7.withLocale(locale8);
        java.util.Locale locale10 = periodFormatter7.getLocale();
        java.util.Locale locale11 = periodFormatter7.getLocale();
        org.joda.time.format.PeriodParser periodParser12 = periodFormatter7.getParser();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period14 = periodFormatter7.parsePeriod("P65W");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(periodFormatter9);
        org.junit.Assert.assertNull(locale10);
        org.junit.Assert.assertNull(locale11);
        org.junit.Assert.assertNull(periodParser12);
    }

    @Test
    public void test17759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17759");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds((long) '4');
        org.joda.time.Period period6 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period8 = period6.minusMonths(0);
        org.joda.time.Minutes minutes9 = period8.toStandardMinutes();
        org.joda.time.Duration duration10 = minutes9.toStandardDuration();
        org.joda.time.Period period11 = duration10.toPeriod();
        org.joda.time.Period period14 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period16 = period14.minusMonths(0);
        org.joda.time.Minutes minutes17 = period16.toStandardMinutes();
        org.joda.time.Duration duration18 = minutes17.toStandardDuration();
        org.joda.time.Minutes minutes20 = minutes17.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration21 = minutes17.toStandardDuration();
        org.joda.time.Period period24 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period26 = period24.minusMonths(0);
        org.joda.time.Minutes minutes27 = period26.toStandardMinutes();
        org.joda.time.Duration duration28 = minutes27.toStandardDuration();
        org.joda.time.Period period29 = duration28.toPeriod();
        boolean boolean30 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration28);
        boolean boolean31 = duration10.isEqual((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Duration duration33 = duration10.plus((long) (short) 100);
        boolean boolean34 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration36 = new org.joda.time.Duration((long) 100);
        int int37 = duration10.compareTo((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Period period40 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period42 = period40.minusMonths(0);
        org.joda.time.Minutes minutes43 = period42.toStandardMinutes();
        org.joda.time.Duration duration44 = minutes43.toStandardDuration();
        org.joda.time.Period period47 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period49 = period47.minusMonths(0);
        org.joda.time.Minutes minutes50 = period49.toStandardMinutes();
        org.joda.time.Duration duration51 = minutes50.toStandardDuration();
        boolean boolean52 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.Duration duration54 = duration44.plus((long) (short) 10);
        long long55 = duration54.getStandardSeconds();
        org.joda.time.Duration duration56 = duration54.toDuration();
        java.lang.String str57 = duration54.toString();
        org.joda.time.Duration duration59 = duration10.withDurationAdded((org.joda.time.ReadableDuration) duration54, 87);
        org.joda.time.Duration duration61 = org.joda.time.Duration.parse("PT99.640S");
        org.joda.time.Period period64 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period66 = period64.minusMonths(0);
        org.joda.time.Period period68 = period64.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType69 = period64.getPeriodType();
        org.joda.time.PeriodType periodType70 = periodType69.withMinutesRemoved();
        org.joda.time.PeriodType periodType71 = periodType70.withMinutesRemoved();
        boolean boolean72 = duration61.equals((java.lang.Object) periodType71);
        long long73 = duration61.getMillis();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Period period75 = duration61.toPeriodTo(readableInstant74);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.format.PeriodPrinter periodPrinter77 = null;
        org.joda.time.format.PeriodParser periodParser78 = null;
        org.joda.time.format.PeriodFormatter periodFormatter79 = new org.joda.time.format.PeriodFormatter(periodPrinter77, periodParser78);
        boolean boolean80 = periodFormatter79.isParser();
        java.util.Locale locale81 = null;
        org.joda.time.format.PeriodFormatter periodFormatter82 = periodFormatter79.withLocale(locale81);
        boolean boolean83 = periodFormatter79.isPrinter();
        org.joda.time.PeriodType periodType84 = org.joda.time.PeriodType.yearMonthDay();
        java.lang.String str85 = periodType84.getName();
        org.joda.time.PeriodType periodType86 = periodType84.withHoursRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter87 = periodFormatter79.withParseType(periodType84);
        org.joda.time.Period period88 = duration61.toPeriodTo(readableInstant76, periodType84);
        org.joda.time.Period period89 = duration59.toPeriod(periodType84);
        org.joda.time.Chronology chronology90 = null;
        org.joda.time.Period period91 = new org.joda.time.Period((long) 52, (long) 102, periodType84, chronology90);
        java.lang.String str92 = periodType84.getName();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT0.010S" + "'", str57, "PT0.010S");
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 99640L + "'", long73 == 99640L);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(periodFormatter82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "YearMonthDay" + "'", str85, "YearMonthDay");
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(periodFormatter87);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "YearMonthDay" + "'", str92, "YearMonthDay");
    }

    @Test
    public void test17760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17760");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (short) 0);
        org.joda.time.Hours hours2 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = hours2.getFieldType();
        org.joda.time.DurationFieldType durationFieldType4 = hours2.getFieldType();
        org.joda.time.Period period5 = period1.plus((org.joda.time.ReadablePeriod) hours2);
        org.joda.time.PeriodType periodType6 = period1.getPeriodType();
        org.joda.time.Period period8 = period1.minusYears((int) (byte) 0);
        org.joda.time.Period period11 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period13 = period11.minusMonths(0);
        org.joda.time.Period period15 = period11.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType16 = period11.getPeriodType();
        org.joda.time.Hours hours17 = period11.toStandardHours();
        org.joda.time.Period period18 = period8.withFields((org.joda.time.ReadablePeriod) hours17);
        org.joda.time.Period period20 = period18.withMillis((-1680));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test17761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17761");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(56);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds7 = seconds5.plus(seconds6);
        org.joda.time.Seconds seconds9 = seconds5.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds10 = seconds4.plus(seconds5);
        org.joda.time.Seconds seconds12 = seconds4.plus((int) '4');
        org.joda.time.Duration duration13 = seconds12.toStandardDuration();
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds18 = seconds16.plus(seconds17);
        org.joda.time.Seconds seconds20 = seconds16.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds21 = seconds15.plus(seconds16);
        org.joda.time.Seconds seconds23 = seconds15.plus((int) '4');
        org.joda.time.Duration duration24 = seconds23.toStandardDuration();
        boolean boolean25 = seconds12.isLessThan(seconds23);
        org.joda.time.Seconds seconds26 = seconds12.negated();
        org.joda.time.Period period29 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period31 = period29.minusMonths(0);
        org.joda.time.Period period33 = period29.withMillis((int) (short) 0);
        int int34 = period33.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod35 = period33.toMutablePeriod();
        org.joda.time.Duration duration36 = period33.toStandardDuration();
        org.joda.time.Seconds seconds37 = duration36.toStandardSeconds();
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds40 = seconds38.plus(seconds39);
        org.joda.time.Seconds seconds42 = seconds38.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds43 = seconds37.minus(seconds42);
        int int44 = seconds43.size();
        org.joda.time.Seconds seconds45 = seconds26.plus(seconds43);
        org.joda.time.DurationFieldType durationFieldType46 = seconds45.getFieldType();
        org.joda.time.Seconds seconds48 = seconds45.minus(118);
        org.joda.time.DurationFieldType durationFieldType49 = seconds45.getFieldType();
        int int50 = seconds2.get(durationFieldType49);
        org.joda.time.Seconds seconds52 = seconds2.dividedBy((-1491203));
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 56 + "'", int50 == 56);
        org.junit.Assert.assertNotNull(seconds52);
    }

    @Test
    public void test17762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17762");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        java.lang.String str1 = days0.toString();
        org.joda.time.Days days2 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        org.joda.time.Days days5 = days2.minus(0);
        boolean boolean6 = days0.isLessThan(days5);
        org.joda.time.Days days7 = days0.negated();
        org.joda.time.Days days9 = days7.minus((-20));
        java.lang.String str10 = days7.toString();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "P5D" + "'", str1, "P5D");
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "P-5D" + "'", str10, "P-5D");
    }

    @Test
    public void test17763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17763");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        java.util.Locale locale4 = null;
        org.joda.time.format.PeriodFormatter periodFormatter5 = periodFormatter2.withLocale(locale4);
        org.joda.time.PeriodType periodType6 = periodFormatter5.getParseType();
        java.util.Locale locale7 = periodFormatter5.getLocale();
        boolean boolean8 = periodFormatter5.isParser();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType12 = days11.getPeriodType();
        org.joda.time.PeriodType periodType13 = periodType12.withHoursRemoved();
        org.joda.time.PeriodType periodType14 = periodType12.withSecondsRemoved();
        org.joda.time.PeriodType periodType15 = periodType12.withMinutesRemoved();
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant9, readableInstant10, periodType12);
        org.joda.time.format.PeriodFormatter periodFormatter17 = periodFormatter5.withParseType(periodType12);
        boolean boolean18 = periodFormatter5.isParser();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(periodFormatter5);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertNull(locale7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodFormatter17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test17764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17764");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.Period period3 = new org.joda.time.Period((long) (byte) 1, (long) (-36), periodType2);
        int int4 = period3.getSeconds();
        org.joda.time.PeriodType periodType5 = period3.getPeriodType();
        org.joda.time.Period period8 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period10 = period8.minusMonths(0);
        org.joda.time.Period period12 = period8.withMillis((int) (short) 0);
        int int13 = period12.getSeconds();
        java.lang.Object obj14 = null;
        boolean boolean15 = period12.equals(obj14);
        org.joda.time.Period period17 = period12.withWeeks((int) '#');
        org.joda.time.Period period19 = org.joda.time.Period.days(10);
        org.joda.time.Minutes minutes20 = period19.toStandardMinutes();
        org.joda.time.Period period22 = period19.minusMonths(100);
        org.joda.time.Period period24 = period22.minusYears((int) (short) 10);
        org.joda.time.Period period25 = period17.plus((org.joda.time.ReadablePeriod) period22);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period29 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period31 = period29.minusMonths(0);
        org.joda.time.Minutes minutes32 = period31.toStandardMinutes();
        org.joda.time.Minutes minutes34 = minutes32.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes35 = minutes26.minus(minutes32);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period39 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period41 = period39.minusMonths(0);
        org.joda.time.Minutes minutes42 = period41.toStandardMinutes();
        org.joda.time.Minutes minutes44 = minutes42.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes45 = minutes36.minus(minutes42);
        org.joda.time.Period period48 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period50 = period48.minusMonths(0);
        org.joda.time.Minutes minutes51 = period50.toStandardMinutes();
        org.joda.time.Duration duration52 = minutes51.toStandardDuration();
        org.joda.time.Minutes minutes54 = minutes51.multipliedBy((int) (short) 1);
        int int55 = minutes36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes54);
        org.joda.time.Minutes minutes56 = minutes35.plus(minutes54);
        org.joda.time.Period period59 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period61 = period59.minusMonths(0);
        org.joda.time.Minutes minutes62 = period61.toStandardMinutes();
        org.joda.time.Minutes minutes64 = minutes62.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((java.lang.Object) minutes62, chronology65);
        org.joda.time.Period period67 = minutes62.toPeriod();
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean69 = minutes62.isLessThan(minutes68);
        org.joda.time.Minutes minutes70 = minutes56.minus(minutes62);
        org.joda.time.DurationFieldType durationFieldType71 = minutes62.getFieldType();
        org.joda.time.Period period73 = period25.withFieldAdded(durationFieldType71, 10);
        int int74 = periodType5.indexOf(durationFieldType71);
        java.lang.String str75 = periodType5.getName();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "YearMonthDay" + "'", str75, "YearMonthDay");
    }

    @Test
    public void test17765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17765");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        java.lang.String str1 = days0.toString();
        org.joda.time.Days days3 = days0.minus(8);
        org.joda.time.Days days5 = days0.plus(8);
        java.lang.String str6 = days5.toString();
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        java.lang.String str8 = days7.toString();
        org.joda.time.Days days9 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType10 = days9.getPeriodType();
        org.joda.time.Days days12 = days9.minus(0);
        boolean boolean13 = days7.isLessThan(days12);
        java.lang.String str14 = days7.toString();
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType16 = days15.getPeriodType();
        org.joda.time.Days days17 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType18 = days17.getPeriodType();
        org.joda.time.Days days20 = days17.minus(0);
        org.joda.time.Days days21 = days20.negated();
        boolean boolean22 = days15.isGreaterThan(days20);
        org.joda.time.Days days23 = days7.minus(days15);
        boolean boolean24 = days5.isLessThan(days15);
        org.joda.time.Days days26 = org.joda.time.Days.days((int) '4');
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((java.lang.Object) days26, chronology27);
        org.joda.time.Days days29 = org.joda.time.Days.FIVE;
        java.lang.String str30 = days29.toString();
        org.joda.time.Days days32 = days29.multipliedBy((int) (byte) -1);
        org.joda.time.Days days33 = days29.negated();
        org.joda.time.Days days34 = org.joda.time.Days.ONE;
        org.joda.time.Days days35 = org.joda.time.Days.ONE;
        int int36 = days34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days35);
        org.joda.time.Days days38 = days35.multipliedBy((int) '#');
        org.joda.time.Days days39 = days33.minus(days35);
        org.joda.time.Days days41 = days33.minus((int) 'a');
        java.lang.String str42 = days41.toString();
        org.joda.time.Days days44 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days46 = days44.multipliedBy((int) (short) 100);
        org.joda.time.Days days47 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType48 = days47.getPeriodType();
        org.joda.time.Days days50 = days47.minus(0);
        org.joda.time.Days days51 = days44.minus(days50);
        boolean boolean52 = days41.isGreaterThan(days50);
        org.joda.time.Days days53 = days26.minus(days41);
        org.joda.time.Days days55 = days41.dividedBy(6);
        org.joda.time.Days days56 = days15.minus(days55);
        org.joda.time.Duration duration57 = days15.toStandardDuration();
        long long58 = duration57.getMillis();
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.minutes();
        org.joda.time.PeriodType periodType60 = periodType59.withWeeksRemoved();
        boolean boolean61 = duration57.equals((java.lang.Object) periodType59);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "P5D" + "'", str1, "P5D");
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P13D" + "'", str6, "P13D");
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P5D" + "'", str8, "P5D");
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P5D" + "'", str14, "P5D");
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "P5D" + "'", str30, "P5D");
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P-102D" + "'", str42, "P-102D");
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 432000000L + "'", long58 == 432000000L);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test17766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17766");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Minutes minutes6 = period5.toStandardMinutes();
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes9 = minutes0.minus(minutes6);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period13 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period15 = period13.minusMonths(0);
        org.joda.time.Minutes minutes16 = period15.toStandardMinutes();
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes19 = minutes10.minus(minutes16);
        org.joda.time.Period period22 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period24 = period22.minusMonths(0);
        org.joda.time.Minutes minutes25 = period24.toStandardMinutes();
        org.joda.time.Duration duration26 = minutes25.toStandardDuration();
        org.joda.time.Minutes minutes28 = minutes25.multipliedBy((int) (short) 1);
        int int29 = minutes10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes28);
        org.joda.time.Minutes minutes30 = minutes9.plus(minutes28);
        org.joda.time.Minutes minutes31 = minutes30.negated();
        org.joda.time.PeriodType periodType32 = minutes30.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(periodType32);
    }

    @Test
    public void test17767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17767");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Days days5 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days7 = days5.multipliedBy((int) (short) 100);
        org.joda.time.Duration duration8 = days5.toStandardDuration();
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) (byte) -1);
        long long11 = duration10.getMillis();
        int int12 = duration8.compareTo((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.plus((long) 59);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period20 = period18.minusMonths(0);
        org.joda.time.Period period22 = period20.minusSeconds(0);
        org.joda.time.Period period24 = period22.minusWeeks(10);
        org.joda.time.Period period25 = period22.negated();
        org.joda.time.Period period27 = period22.minusMillis((int) (short) 0);
        org.joda.time.DurationFieldType[] durationFieldTypeArray28 = period22.getFieldTypes();
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.forFields(durationFieldTypeArray28);
        org.joda.time.Period period30 = duration14.toPeriodTo(readableInstant15, periodType29);
        org.joda.time.format.PeriodFormatter periodFormatter31 = periodFormatter2.withParseType(periodType29);
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.format.PeriodFormatter periodFormatter33 = periodFormatter2.withParseType(periodType32);
        java.util.Locale locale34 = periodFormatter2.getLocale();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldTypeArray28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(periodFormatter31);
        org.junit.Assert.assertNotNull(periodFormatter33);
        org.junit.Assert.assertNull(locale34);
    }

    @Test
    public void test17768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17768");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days3 = days1.multipliedBy((int) (short) 100);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.Days days7 = days4.minus(0);
        org.joda.time.Days days8 = days1.minus(days7);
        java.lang.String str9 = days8.toString();
        org.joda.time.Days days10 = days8.negated();
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        java.lang.String str12 = days11.toString();
        org.joda.time.Days days14 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days15 = days11.minus(days14);
        org.joda.time.DurationFieldType durationFieldType16 = days11.getFieldType();
        boolean boolean17 = days10.isLessThan(days11);
        org.joda.time.Days days19 = days10.dividedBy(52);
        org.joda.time.Days days21 = days10.plus(268435465);
        org.joda.time.Days days23 = days21.plus((-63));
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P0D" + "'", str9, "P0D");
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P5D" + "'", str12, "P5D");
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
    }

    @Test
    public void test17769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17769");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = hours0.getFieldType();
        org.joda.time.Period period4 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period4.negated();
        int int6 = period4.getHours();
        org.joda.time.Period period8 = org.joda.time.Period.days(10);
        org.joda.time.Period period10 = period8.plusMonths((int) 'a');
        org.joda.time.Period period12 = period8.plusSeconds((int) (short) 100);
        org.joda.time.Period period14 = period12.minusMonths((int) 'a');
        org.joda.time.Period period15 = period4.withFields((org.joda.time.ReadablePeriod) period14);
        org.joda.time.Hours hours16 = period4.toStandardHours();
        int int17 = hours16.getHours();
        org.joda.time.Hours hours18 = hours0.plus(hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours19.dividedBy(100);
        org.joda.time.Period period24 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period26 = period24.minusMonths(0);
        org.joda.time.Period period28 = period26.minusSeconds(0);
        org.joda.time.Period period29 = period28.normalizedStandard();
        org.joda.time.Hours hours30 = period29.toStandardHours();
        boolean boolean31 = hours21.isLessThan(hours30);
        org.joda.time.Period period33 = org.joda.time.Period.millis((int) '#');
        int int34 = period33.getYears();
        org.joda.time.Hours hours35 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period33);
        org.joda.time.Period period37 = period33.multipliedBy((int) (byte) 0);
        org.joda.time.Hours hours38 = period37.toStandardHours();
        org.joda.time.Hours hours39 = hours21.minus(hours38);
        boolean boolean40 = hours16.isLessThan(hours38);
        org.joda.time.Hours hours41 = org.joda.time.Hours.ONE;
        java.lang.String str42 = hours41.toString();
        org.joda.time.Hours hours43 = hours41.negated();
        org.joda.time.Hours hours44 = hours38.plus(hours41);
        org.joda.time.Hours hours45 = org.joda.time.Hours.THREE;
        boolean boolean46 = hours38.isLessThan(hours45);
        java.lang.String str47 = hours38.toString();
        org.joda.time.Hours hours49 = hours38.plus((-1680));
        org.joda.time.Hours hours51 = hours49.plus((-95));
        org.joda.time.Hours hours52 = org.joda.time.Hours.ONE;
        int int53 = hours52.getHours();
        org.joda.time.Hours hours55 = hours52.dividedBy(8);
        org.joda.time.Hours hours57 = hours55.plus((int) 'a');
        org.joda.time.Hours hours59 = hours57.dividedBy((-1));
        org.joda.time.Period period62 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period64 = period62.minusMonths(0);
        org.joda.time.Period period66 = period62.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType67 = period62.getPeriodType();
        org.joda.time.Hours hours68 = period62.toStandardHours();
        org.joda.time.Period period70 = org.joda.time.Period.millis((int) '#');
        int int71 = period70.getYears();
        org.joda.time.Hours hours72 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period70);
        boolean boolean73 = hours68.isLessThan(hours72);
        org.joda.time.Hours hours74 = org.joda.time.Hours.FIVE;
        boolean boolean75 = hours72.isGreaterThan(hours74);
        org.joda.time.Hours hours76 = hours74.negated();
        org.joda.time.Hours hours77 = hours59.minus(hours74);
        org.joda.time.Hours hours79 = hours77.minus(32);
        boolean boolean80 = hours51.isGreaterThan(hours79);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT1H" + "'", str42, "PT1H");
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT0H" + "'", str47, "PT0H");
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test17770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17770");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Period period17 = duration16.toPeriod();
        boolean boolean18 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Period period21 = duration9.toPeriodTo(readableInstant19, periodType20);
        org.joda.time.Duration duration22 = duration9.toDuration();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration22);
    }

    @Test
    public void test17771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17771");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration4 = duration2.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant5);
        org.joda.time.Period period8 = period6.withYears((int) (short) 100);
        org.joda.time.Period period11 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period13 = period11.minusMonths(0);
        org.joda.time.Minutes minutes14 = period13.toStandardMinutes();
        org.joda.time.Period period16 = period13.withYears((int) '#');
        org.joda.time.Period period18 = period13.withMillis((-1));
        org.joda.time.Period period19 = period8.minus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Period period21 = period19.plusDays((int) (byte) 1);
        org.joda.time.Period period23 = period19.minusYears((-10));
        org.joda.time.Period period25 = period23.minusMillis(87);
        int int26 = period25.getHours();
        org.joda.time.Period period28 = period25.plusDays((-35791394));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test17772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17772");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration2 = minutes1.toStandardDuration();
        long long3 = duration2.getStandardSeconds();
        org.joda.time.Period period6 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period8 = period6.minusMonths(0);
        org.joda.time.Minutes minutes9 = period8.toStandardMinutes();
        org.joda.time.Duration duration10 = minutes9.toStandardDuration();
        org.joda.time.Minutes minutes12 = minutes9.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration13 = minutes9.toStandardDuration();
        org.joda.time.Period period16 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period18 = period16.minusMonths(0);
        org.joda.time.Minutes minutes19 = period18.toStandardMinutes();
        org.joda.time.Duration duration20 = minutes19.toStandardDuration();
        org.joda.time.Period period21 = duration20.toPeriod();
        boolean boolean22 = duration13.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Period period25 = duration13.toPeriodTo(readableInstant23, periodType24);
        org.joda.time.Duration duration26 = duration2.plus((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration27 = duration26.toDuration();
        long long28 = duration26.getStandardHours();
        org.joda.time.Duration duration29 = duration26.toDuration();
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration31 = duration29.toDuration();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-128849018880L) + "'", long3 == (-128849018880L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-35791394L) + "'", long28 == (-35791394L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
    }

    @Test
    public void test17773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17773");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.PeriodType periodType1 = days0.getPeriodType();
        java.lang.String str2 = periodType1.toString();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PeriodType[Days]" + "'", str2, "PeriodType[Days]");
    }

    @Test
    public void test17774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17774");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = hours0.getFieldType();
        org.joda.time.Hours hours2 = hours0.negated();
        org.joda.time.Duration duration3 = hours0.toStandardDuration();
        org.joda.time.Hours hours5 = hours0.dividedBy((int) (byte) 100);
        java.lang.String str6 = hours5.toString();
        org.joda.time.Hours hours7 = hours5.negated();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration16 = duration14.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Hours hours18 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = hours18.getFieldType();
        org.joda.time.DurationFieldType durationFieldType20 = hours18.getFieldType();
        int int21 = hours18.getHours();
        org.joda.time.PeriodType periodType22 = hours18.getPeriodType();
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant17, periodType22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period26 = org.joda.time.Period.millis((int) (short) 0);
        org.joda.time.Period period27 = period26.toPeriod();
        org.joda.time.Period period29 = period26.withWeeks((-1));
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Duration duration31 = period26.toDurationFrom(readableInstant30);
        org.joda.time.Period period33 = period26.plusMonths((-95));
        org.joda.time.Period period35 = org.joda.time.Period.days(10);
        org.joda.time.Period period37 = period35.minusWeeks((int) (short) 1);
        org.joda.time.Period period38 = period33.plus((org.joda.time.ReadablePeriod) period37);
        org.joda.time.PeriodType periodType39 = period33.getPeriodType();
        org.joda.time.Period period40 = duration14.toPeriodFrom(readableInstant24, periodType39);
        org.joda.time.PeriodType periodType41 = periodType39.withDaysRemoved();
        java.lang.String str42 = periodType41.getName();
        org.joda.time.Period period43 = new org.joda.time.Period((long) 0, (-128849018880000L), periodType41);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((long) 97, (long) (short) 100, periodType41, chronology44);
        org.joda.time.Period period46 = new org.joda.time.Period((java.lang.Object) hours5, periodType41);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period48 = period46.minusDays((-37));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT21474836H" + "'", str6, "PT21474836H");
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StandardNoDays" + "'", str42, "StandardNoDays");
    }

    @Test
    public void test17775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17775");
        org.joda.time.Days days0 = org.joda.time.Days.TWO;
        int int1 = days0.getDays();
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withHoursRemoved();
        org.joda.time.PeriodType periodType8 = periodType6.withSecondsRemoved();
        org.joda.time.Period period9 = duration3.toPeriodFrom(readableInstant4, periodType6);
        long long10 = duration3.getStandardHours();
        org.joda.time.Duration duration13 = duration3.withDurationAdded(10L, (-36));
        org.joda.time.Period period14 = duration13.toPeriod();
        org.joda.time.Duration duration17 = duration13.withDurationAdded((long) ' ', (int) (byte) 0);
        long long18 = duration13.getStandardHours();
        org.joda.time.Days days19 = duration13.toStandardDays();
        int int20 = days19.size();
        org.joda.time.Days days21 = days0.minus(days19);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(days21);
    }

    @Test
    public void test17776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17776");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) 3104);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test17777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17777");
        org.joda.time.Period period1 = org.joda.time.Period.months((int) '#');
        org.joda.time.Period period2 = period1.negated();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration4 = period2.toDurationFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration4.toPeriod(chronology5);
        org.joda.time.Duration duration8 = new org.joda.time.Duration((long) 13);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardDays(151200L);
        org.joda.time.Duration duration11 = duration8.minus((org.joda.time.ReadableDuration) duration10);
        int int12 = duration4.compareTo((org.joda.time.ReadableDuration) duration10);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test17778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17778");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Minutes minutes6 = period5.toStandardMinutes();
        org.joda.time.Duration duration7 = minutes6.toStandardDuration();
        org.joda.time.Period period8 = duration7.toPeriod();
        org.joda.time.Duration duration10 = duration7.plus((long) (byte) 0);
        org.joda.time.Duration duration12 = duration7.withMillis((long) 1);
        org.joda.time.Period period13 = duration12.toPeriod();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period19 = period17.minusMonths(0);
        org.joda.time.Minutes minutes20 = period19.toStandardMinutes();
        org.joda.time.Duration duration21 = minutes20.toStandardDuration();
        org.joda.time.Period period22 = duration21.toPeriod();
        org.joda.time.Duration duration24 = duration21.plus((long) (byte) 0);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration26 = duration12.plus((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration27 = duration12.toDuration();
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period30 = period28.plusMillis((-4083));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(period30);
    }

    @Test
    public void test17779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17779");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeksIn(readableInterval5);
        boolean boolean7 = weeks4.isLessThan(weeks6);
        boolean boolean8 = weeks3.isGreaterThan(weeks6);
        org.joda.time.Weeks weeks9 = null;
        org.joda.time.Weeks weeks10 = weeks6.minus(weeks9);
        org.joda.time.DurationFieldType durationFieldType11 = weeks6.getFieldType();
        org.joda.time.Duration duration12 = weeks6.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Interval interval14 = duration12.toIntervalTo(readableInstant13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = duration12.toPeriodTo(readableInstant15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration12);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test17780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17780");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(2000L);
        org.joda.time.Duration duration3 = new org.joda.time.Duration(7730941129200000L);
        boolean boolean4 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration3);
        org.joda.time.Period period7 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period8 = period7.negated();
        org.joda.time.Period period10 = period8.plusMonths((int) (short) 1);
        org.joda.time.Duration duration11 = period8.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = period8.toDurationTo(readableInstant12);
        boolean boolean14 = duration1.isEqual((org.joda.time.ReadableDuration) duration13);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test17781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17781");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period7 = period5.minusMonths(0);
        org.joda.time.Period period9 = period5.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType10 = period5.getPeriodType();
        org.joda.time.PeriodType periodType11 = periodType10.withMinutesRemoved();
        org.joda.time.PeriodType periodType12 = periodType11.withHoursRemoved();
        org.joda.time.PeriodType periodType13 = periodType11.withHoursRemoved();
        int int14 = periodType11.size();
        org.joda.time.Period period15 = new org.joda.time.Period((long) 1, periodType11);
        org.joda.time.PeriodType periodType16 = periodType11.withMinutesRemoved();
        org.joda.time.PeriodType periodType17 = periodType11.withHoursRemoved();
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType17);
        org.joda.time.Weeks weeks19 = period18.toStandardWeeks();
        java.lang.String str20 = weeks19.toString();
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7 + "'", int14 == 7);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P0W" + "'", str20, "P0W");
    }

    @Test
    public void test17782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17782");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-31));
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes5 = minutes3.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
    }

    @Test
    public void test17783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17783");
        org.joda.time.Period period1 = org.joda.time.Period.days((int) '#');
        org.joda.time.Period period3 = period1.withWeeks((int) (byte) 0);
        org.joda.time.Period period5 = period1.plusMillis(0);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration7 = period1.toDurationTo(readableInstant6);
        org.joda.time.Duration duration8 = duration7.toDuration();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.format.PeriodPrinter periodPrinter11 = null;
        org.joda.time.format.PeriodParser periodParser12 = null;
        org.joda.time.format.PeriodFormatter periodFormatter13 = new org.joda.time.format.PeriodFormatter(periodPrinter11, periodParser12);
        boolean boolean14 = periodFormatter13.isParser();
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds18 = seconds16.plus(seconds17);
        org.joda.time.PeriodType periodType19 = seconds16.getPeriodType();
        org.joda.time.Period period22 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period23 = period22.negated();
        org.joda.time.DurationFieldType durationFieldType25 = period22.getFieldType((int) (short) 1);
        int int26 = periodType19.indexOf(durationFieldType25);
        org.joda.time.Period period27 = new org.joda.time.Period((long) ' ', periodType19);
        org.joda.time.format.PeriodFormatter periodFormatter28 = periodFormatter13.withParseType(periodType19);
        org.joda.time.PeriodType periodType29 = periodType19.withDaysRemoved();
        org.joda.time.PeriodType periodType30 = periodType29.withSecondsRemoved();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period(600L, periodType30, chronology31);
        org.joda.time.Period period33 = duration8.toPeriodFrom(readableInstant9, periodType30);
        org.joda.time.PeriodType periodType34 = periodType30.withMonthsRemoved();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(periodFormatter28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(periodType34);
    }

    @Test
    public void test17784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17784");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.dividedBy(8);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.Duration duration6 = org.joda.time.Duration.millis(8L);
        org.joda.time.Duration duration7 = duration4.plus((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableDuration readableDuration8 = null;
        boolean boolean9 = duration6.isShorterThan(readableDuration8);
        org.joda.time.Hours hours10 = duration6.toStandardHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours10);
    }

    @Test
    public void test17785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17785");
        org.joda.time.format.PeriodPrinter periodPrinter8 = null;
        org.joda.time.format.PeriodParser periodParser9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = new org.joda.time.format.PeriodFormatter(periodPrinter8, periodParser9);
        boolean boolean11 = periodFormatter10.isParser();
        java.util.Locale locale12 = null;
        org.joda.time.format.PeriodFormatter periodFormatter13 = periodFormatter10.withLocale(locale12);
        boolean boolean14 = periodFormatter10.isPrinter();
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.yearMonthDay();
        java.lang.String str16 = periodType15.getName();
        org.joda.time.PeriodType periodType17 = periodType15.withHoursRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter18 = periodFormatter10.withParseType(periodType15);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period19 = new org.joda.time.Period((-13), (-207432000), 94, (-1), 70, (-118), 56, 268435470, periodType15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(periodFormatter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "YearMonthDay" + "'", str16, "YearMonthDay");
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodFormatter18);
    }

    @Test
    public void test17786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17786");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.yearMonthDay();
        java.lang.String str2 = periodType1.getName();
        boolean boolean4 = periodType1.equals((java.lang.Object) true);
        org.joda.time.PeriodType periodType5 = periodType1.withMinutesRemoved();
        org.joda.time.PeriodType periodType6 = periodType1.withMonthsRemoved();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((long) (-5), periodType6, chronology7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Minutes minutes17 = minutes15.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes18 = minutes9.minus(minutes15);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period22 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period24 = period22.minusMonths(0);
        org.joda.time.Minutes minutes25 = period24.toStandardMinutes();
        org.joda.time.Minutes minutes27 = minutes25.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes28 = minutes19.minus(minutes25);
        org.joda.time.Period period31 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period33 = period31.minusMonths(0);
        org.joda.time.Minutes minutes34 = period33.toStandardMinutes();
        org.joda.time.Duration duration35 = minutes34.toStandardDuration();
        org.joda.time.Minutes minutes37 = minutes34.multipliedBy((int) (short) 1);
        int int38 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes37);
        org.joda.time.Minutes minutes39 = minutes18.plus(minutes37);
        org.joda.time.Minutes minutes41 = minutes37.minus((int) '4');
        org.joda.time.Period period42 = new org.joda.time.Period((java.lang.Object) minutes41);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period43 = period8.minus((org.joda.time.ReadablePeriod) minutes41);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YearMonthDay" + "'", str2, "YearMonthDay");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
    }

    @Test
    public void test17787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17787");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((int) (byte) 10);
        org.joda.time.Hours hours2 = period1.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType3 = hours2.getFieldType();
        org.joda.time.Hours hours5 = hours2.plus(59);
        org.joda.time.DurationFieldType durationFieldType6 = hours2.getFieldType();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.DurationField durationField8 = durationFieldType6.getField(chronology7);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationField8);
    }

    @Test
    public void test17788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17788");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("P6W");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test17789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17789");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.weeksIn(readableInterval1);
        boolean boolean3 = weeks0.isLessThan(weeks2);
        org.joda.time.Weeks weeks5 = weeks2.multipliedBy(10);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ZERO;
        java.lang.String str7 = weeks6.toString();
        int int8 = weeks6.size();
        org.joda.time.PeriodType periodType9 = weeks6.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod10 = weeks6.toMutablePeriod();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeksIn(readableInterval15);
        boolean boolean17 = weeks14.isLessThan(weeks16);
        boolean boolean18 = weeks13.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = null;
        org.joda.time.Weeks weeks20 = weeks16.minus(weeks19);
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeksIn(readableInterval27);
        boolean boolean29 = weeks26.isLessThan(weeks28);
        boolean boolean30 = weeks25.isGreaterThan(weeks28);
        boolean boolean31 = weeks22.isLessThan(weeks25);
        org.joda.time.Weeks weeks32 = weeks20.plus(weeks25);
        org.joda.time.Weeks weeks34 = weeks25.minus(2);
        org.joda.time.Weeks weeks36 = weeks34.dividedBy((-10));
        org.joda.time.Weeks weeks37 = weeks36.negated();
        boolean boolean38 = weeks6.isLessThan(weeks37);
        org.joda.time.Weeks weeks39 = weeks2.minus(weeks37);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.weeksIn(readableInterval40);
        org.joda.time.Weeks weeks43 = weeks41.plus(11);
        org.joda.time.Weeks weeks44 = weeks37.plus(weeks43);
        int int45 = weeks37.size();
        org.joda.time.Weeks weeks47 = weeks37.minus(103);
        org.joda.time.Period period48 = weeks37.toPeriod();
        org.joda.time.Weeks weeks50 = weeks37.plus((-35791394));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P0W" + "'", str7, "P0W");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(weeks50);
    }

    @Test
    public void test17790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17790");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period6 = period4.minusMonths(0);
        org.joda.time.Period period8 = period4.minusSeconds((int) (byte) 100);
        org.joda.time.Days days9 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType10 = days9.getPeriodType();
        org.joda.time.PeriodType periodType11 = periodType10.withHoursRemoved();
        org.joda.time.PeriodType periodType12 = periodType10.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.days();
        boolean boolean14 = periodType12.isSupported(durationFieldType13);
        int int15 = period4.get(durationFieldType13);
        org.joda.time.Period period17 = period4.withHours(1);
        org.joda.time.Period period20 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period22 = period20.minusMonths(0);
        org.joda.time.Period period24 = period20.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType25 = period20.getPeriodType();
        org.joda.time.PeriodType periodType26 = periodType25.withMinutesRemoved();
        java.lang.String str27 = periodType26.toString();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((java.lang.Object) period4, periodType26, chronology28);
        org.joda.time.PeriodType periodType30 = periodType26.withHoursRemoved();
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType26);
        java.lang.String str32 = periodType26.toString();
        org.joda.time.PeriodType periodType33 = periodType26.withMonthsRemoved();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PeriodType[StandardNoMinutes]" + "'", str27, "PeriodType[StandardNoMinutes]");
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PeriodType[StandardNoMinutes]" + "'", str32, "PeriodType[StandardNoMinutes]");
        org.junit.Assert.assertNotNull(periodType33);
    }

    @Test
    public void test17791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17791");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(268435470);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17792");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = hours0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType2 = hours0.getFieldType();
        int int3 = hours0.getHours();
        org.joda.time.PeriodType periodType4 = hours0.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        int int7 = hours6.getHours();
        org.joda.time.PeriodType periodType8 = hours6.getPeriodType();
        boolean boolean9 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours11 = hours6.dividedBy(14400);
        org.joda.time.Hours hours13 = hours6.dividedBy(708);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
    }

    @Test
    public void test17793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17793");
        org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT0S");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Duration duration4 = duration1.plus((org.joda.time.ReadableDuration) duration3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType7 = days6.getPeriodType();
        org.joda.time.PeriodType periodType8 = periodType7.withHoursRemoved();
        org.joda.time.PeriodType periodType9 = periodType8.withMillisRemoved();
        org.joda.time.Period period10 = duration1.toPeriodFrom(readableInstant5, periodType8);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = duration1.toPeriodTo(readableInstant11);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test17794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17794");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) 90);
    }

    @Test
    public void test17795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17795");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Period period2 = org.joda.time.Period.millis((int) (short) 0);
        org.joda.time.Period period3 = period2.toPeriod();
        org.joda.time.Period period5 = period2.plusMinutes(1);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration7 = period2.toDurationTo(readableInstant6);
        org.joda.time.Period period8 = duration7.toPeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType13 = days12.getPeriodType();
        org.joda.time.PeriodType periodType14 = periodType13.withHoursRemoved();
        org.joda.time.PeriodType periodType15 = periodType13.withSecondsRemoved();
        org.joda.time.Period period16 = duration10.toPeriodFrom(readableInstant11, periodType13);
        long long17 = duration10.getStandardHours();
        org.joda.time.Duration duration20 = duration10.withDurationAdded(10L, (-36));
        org.joda.time.Period period21 = duration20.toPeriod();
        org.joda.time.Duration duration24 = duration20.withDurationAdded((long) ' ', (int) (byte) 0);
        org.joda.time.Period period27 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period29 = period27.minusMonths(0);
        org.joda.time.Period period31 = period27.minusSeconds((int) (byte) 100);
        org.joda.time.Days days32 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType33 = days32.getPeriodType();
        org.joda.time.PeriodType periodType34 = periodType33.withHoursRemoved();
        org.joda.time.PeriodType periodType35 = periodType33.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType36 = org.joda.time.DurationFieldType.days();
        boolean boolean37 = periodType35.isSupported(durationFieldType36);
        int int38 = period27.get(durationFieldType36);
        org.joda.time.Period period40 = period27.withHours(1);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Duration duration42 = period27.toDurationTo(readableInstant41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = duration42.toPeriodTo(readableInstant43);
        int int45 = duration24.compareTo((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Days days50 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType51 = days50.getPeriodType();
        org.joda.time.PeriodType periodType52 = periodType51.withHoursRemoved();
        org.joda.time.PeriodType periodType53 = periodType51.withSecondsRemoved();
        org.joda.time.PeriodType periodType54 = periodType51.withMinutesRemoved();
        org.joda.time.PeriodType periodType55 = periodType54.withWeeksRemoved();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period(10L, (long) (byte) -1, periodType55, chronology56);
        org.joda.time.PeriodType periodType58 = periodType55.withYearsRemoved();
        boolean boolean59 = periodType47.equals((java.lang.Object) periodType55);
        org.joda.time.Period period60 = duration42.toPeriodTo(readableInstant46, periodType55);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardDays(1L);
        boolean boolean63 = duration42.isEqual((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration42.toPeriod(chronology64);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Days days67 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType68 = days67.getPeriodType();
        org.joda.time.PeriodType periodType69 = periodType68.withHoursRemoved();
        org.joda.time.PeriodType periodType70 = periodType68.withYearsRemoved();
        org.joda.time.PeriodType periodType71 = periodType68.withSecondsRemoved();
        org.joda.time.PeriodType periodType72 = periodType68.withHoursRemoved();
        int int73 = periodType72.size();
        org.joda.time.Period period74 = duration42.toPeriodTo(readableInstant66, periodType72);
        org.joda.time.Period period75 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration7, periodType72);
        org.joda.time.PeriodType periodType76 = periodType72.withMinutesRemoved();
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(days67);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(periodType76);
    }

    @Test
    public void test17796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17796");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        java.lang.String str1 = days0.toString();
        org.joda.time.Days days3 = days0.multipliedBy((int) (byte) -1);
        org.joda.time.Days days4 = days0.negated();
        org.joda.time.Duration duration5 = days0.toStandardDuration();
        org.joda.time.Days days6 = duration5.toStandardDays();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration5.toPeriod(chronology7);
        org.joda.time.Duration duration11 = duration5.withDurationAdded(47L, (-2147483646));
        org.joda.time.Duration duration12 = duration11.toDuration();
        org.joda.time.Days days16 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.Days days18 = days16.minus((int) '4');
        org.joda.time.Days days20 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days22 = days20.multipliedBy((int) (short) 100);
        org.joda.time.Days days23 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType24 = days23.getPeriodType();
        org.joda.time.Days days26 = days23.minus(0);
        org.joda.time.Days days27 = days20.minus(days26);
        org.joda.time.PeriodType periodType28 = days20.getPeriodType();
        org.joda.time.Days days30 = days20.dividedBy((int) 'a');
        boolean boolean31 = days18.isGreaterThan(days30);
        org.joda.time.PeriodType periodType32 = days30.getPeriodType();
        org.joda.time.PeriodType periodType33 = periodType32.withMinutesRemoved();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((long) (short) -1, 1123200000000L, periodType33, chronology34);
        org.joda.time.PeriodType periodType36 = periodType33.withHoursRemoved();
        int int37 = periodType36.size();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration11.toPeriod(periodType36, chronology38);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "P5D" + "'", str1, "P5D");
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(period39);
    }

    @Test
    public void test17797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17797");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds2 = seconds0.plus(seconds1);
        java.lang.String str3 = seconds0.toString();
        org.joda.time.DurationFieldType durationFieldType4 = seconds0.getFieldType();
        org.joda.time.Seconds seconds6 = seconds0.multipliedBy(0);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.THREE;
        org.joda.time.Duration duration8 = seconds7.toStandardDuration();
        boolean boolean9 = seconds6.isGreaterThan(seconds7);
        org.joda.time.Duration duration10 = seconds7.toStandardDuration();
        java.lang.String str11 = seconds7.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2S" + "'", str3, "PT2S");
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT3S" + "'", str11, "PT3S");
    }

    @Test
    public void test17798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17798");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Minutes minutes6 = period5.toStandardMinutes();
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes9 = minutes0.minus(minutes6);
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Minutes minutes17 = minutes15.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((java.lang.Object) minutes15, chronology18);
        org.joda.time.Minutes minutes20 = minutes0.minus(minutes15);
        org.joda.time.DurationFieldType durationFieldType22 = minutes20.getFieldType((int) (short) 0);
        org.joda.time.PeriodType periodType23 = minutes20.getPeriodType();
        org.joda.time.Minutes minutes24 = minutes20.negated();
        int int25 = minutes24.getMinutes();
        int int26 = minutes24.getMinutes();
        org.joda.time.DurationFieldType durationFieldType27 = minutes24.getFieldType();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period31 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period33 = period31.minusMonths(0);
        org.joda.time.Minutes minutes34 = period33.toStandardMinutes();
        org.joda.time.Minutes minutes36 = minutes34.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes37 = minutes28.minus(minutes34);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period41 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period43 = period41.minusMonths(0);
        org.joda.time.Minutes minutes44 = period43.toStandardMinutes();
        org.joda.time.Minutes minutes46 = minutes44.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes47 = minutes38.minus(minutes44);
        org.joda.time.Period period50 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period52 = period50.minusMonths(0);
        org.joda.time.Minutes minutes53 = period52.toStandardMinutes();
        org.joda.time.Duration duration54 = minutes53.toStandardDuration();
        org.joda.time.Minutes minutes56 = minutes53.multipliedBy((int) (short) 1);
        int int57 = minutes38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes56);
        org.joda.time.Minutes minutes58 = minutes37.plus(minutes56);
        org.joda.time.PeriodType periodType59 = minutes37.getPeriodType();
        org.joda.time.Minutes minutes60 = minutes24.plus(minutes37);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-2) + "'", int25 == (-2));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-2) + "'", int26 == (-2));
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(minutes60);
    }

    @Test
    public void test17799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17799");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration4 = duration2.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant5);
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        org.joda.time.Period period16 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period18 = period16.minusMonths(0);
        org.joda.time.Minutes minutes19 = period18.toStandardMinutes();
        org.joda.time.Duration duration20 = minutes19.toStandardDuration();
        boolean boolean21 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(readableInstant22, readableInstant23);
        org.joda.time.Duration duration25 = duration13.minus((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration26 = duration13.toDuration();
        boolean boolean27 = duration4.isEqual((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Period period30 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period32 = period30.minusMonths(0);
        org.joda.time.Minutes minutes33 = period32.toStandardMinutes();
        org.joda.time.Duration duration34 = minutes33.toStandardDuration();
        org.joda.time.Period period35 = duration34.toPeriod();
        org.joda.time.Duration duration37 = duration34.plus((long) (byte) 0);
        org.joda.time.Duration duration39 = duration34.withMillis((long) 1);
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Period period43 = new org.joda.time.Period((-128849018880000L), (-1L));
        org.joda.time.DurationFieldType[] durationFieldTypeArray44 = period43.getFieldTypes();
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.forFields(durationFieldTypeArray44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.forFields(durationFieldTypeArray44);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((java.lang.Object) duration39, periodType46, chronology47);
        org.joda.time.PeriodType periodType49 = periodType46.withSecondsRemoved();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration((long) (-36));
        org.joda.time.Period period55 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period57 = period55.minusMonths(0);
        org.joda.time.Period period58 = period55.normalizedStandard();
        org.joda.time.MutablePeriod mutablePeriod59 = period58.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Duration duration61 = period58.toDurationFrom(readableInstant60);
        org.joda.time.Period period64 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period66 = period64.minusMonths(0);
        org.joda.time.Minutes minutes67 = period66.toStandardMinutes();
        org.joda.time.Duration duration68 = minutes67.toStandardDuration();
        org.joda.time.Period period71 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period73 = period71.minusMonths(0);
        org.joda.time.Minutes minutes74 = period73.toStandardMinutes();
        org.joda.time.Duration duration75 = minutes74.toStandardDuration();
        org.joda.time.Duration duration77 = duration68.withDurationAdded((org.joda.time.ReadableDuration) duration75, (int) (short) 100);
        org.joda.time.Duration duration79 = duration61.withDurationAdded((org.joda.time.ReadableDuration) duration77, 3);
        org.joda.time.Duration duration80 = duration52.minus((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Period period81 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration61);
        int int82 = period81.getSeconds();
        boolean boolean83 = periodType46.equals((java.lang.Object) int82);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(durationFieldTypeArray44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test17800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17800");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period6 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period8 = period6.minusMonths(0);
        org.joda.time.Minutes minutes9 = period8.toStandardMinutes();
        org.joda.time.Minutes minutes11 = minutes9.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes12 = minutes3.minus(minutes9);
        org.joda.time.Period period15 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period17 = period15.minusMonths(0);
        org.joda.time.Minutes minutes18 = period17.toStandardMinutes();
        org.joda.time.Minutes minutes20 = minutes18.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((java.lang.Object) minutes18, chronology21);
        org.joda.time.Minutes minutes23 = minutes3.minus(minutes18);
        org.joda.time.Period period26 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period27 = period26.negated();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Duration duration29 = period27.toDurationTo(readableInstant28);
        org.joda.time.Minutes minutes30 = period27.toStandardMinutes();
        org.joda.time.PeriodType periodType31 = minutes30.getPeriodType();
        boolean boolean32 = minutes18.isLessThan(minutes30);
        org.joda.time.Period period35 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period37 = period35.minusMonths(0);
        org.joda.time.Minutes minutes38 = period37.toStandardMinutes();
        org.joda.time.Duration duration39 = minutes38.toStandardDuration();
        org.joda.time.Minutes minutes41 = minutes38.multipliedBy((int) (short) 1);
        int int42 = minutes41.getMinutes();
        boolean boolean43 = minutes18.isLessThan(minutes41);
        boolean boolean44 = minutes2.isGreaterThan(minutes41);
        org.joda.time.Minutes minutes46 = minutes2.multipliedBy((int) (short) 0);
        org.joda.time.Minutes minutes48 = minutes46.multipliedBy(26);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
    }

    @Test
    public void test17801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17801");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (short) -1);
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration3 = minutes2.toStandardDuration();
        long long4 = duration3.getStandardSeconds();
        org.joda.time.Period period7 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period9 = period7.minusMonths(0);
        org.joda.time.Minutes minutes10 = period9.toStandardMinutes();
        org.joda.time.Duration duration11 = minutes10.toStandardDuration();
        org.joda.time.Minutes minutes13 = minutes10.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration14 = minutes10.toStandardDuration();
        org.joda.time.Period period17 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period19 = period17.minusMonths(0);
        org.joda.time.Minutes minutes20 = period19.toStandardMinutes();
        org.joda.time.Duration duration21 = minutes20.toStandardDuration();
        org.joda.time.Period period22 = duration21.toPeriod();
        boolean boolean23 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Period period26 = duration14.toPeriodTo(readableInstant24, periodType25);
        org.joda.time.Duration duration27 = duration3.plus((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration28 = duration27.toDuration();
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration1.withMillis((long) 5);
        org.joda.time.Duration duration34 = duration1.minus(431999999L);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-128849018880L) + "'", long4 == (-128849018880L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-2147483648L) + "'", long29 == (-2147483648L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration34);
    }

    @Test
    public void test17802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17802");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Days days6 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType7 = days6.getPeriodType();
        org.joda.time.PeriodType periodType8 = periodType7.withHoursRemoved();
        org.joda.time.PeriodType periodType9 = periodType7.withSecondsRemoved();
        org.joda.time.Period period10 = duration4.toPeriodFrom(readableInstant5, periodType7);
        long long11 = duration4.getStandardHours();
        long long12 = duration4.getMillis();
        java.lang.String str13 = duration4.toString();
        org.joda.time.Period period16 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period18 = period16.minusMonths(0);
        org.joda.time.Period period20 = period16.minusSeconds((int) (byte) 100);
        org.joda.time.Days days21 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType22 = days21.getPeriodType();
        org.joda.time.PeriodType periodType23 = periodType22.withHoursRemoved();
        org.joda.time.PeriodType periodType24 = periodType22.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.days();
        boolean boolean26 = periodType24.isSupported(durationFieldType25);
        int int27 = period16.get(durationFieldType25);
        org.joda.time.Period period29 = period16.withHours(1);
        org.joda.time.Period period32 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period34 = period32.minusMonths(0);
        org.joda.time.Period period36 = period32.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType37 = period32.getPeriodType();
        org.joda.time.PeriodType periodType38 = periodType37.withMinutesRemoved();
        java.lang.String str39 = periodType38.toString();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((java.lang.Object) period16, periodType38, chronology40);
        org.joda.time.PeriodType periodType42 = periodType38.withHoursRemoved();
        org.joda.time.PeriodType periodType43 = periodType38.withMillisRemoved();
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4, periodType43);
        org.joda.time.PeriodType periodType45 = periodType43.withWeeksRemoved();
        org.joda.time.Period period46 = new org.joda.time.Period((long) 1491308, (long) 26, periodType45);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 100000L + "'", long12 == 100000L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT100S" + "'", str13, "PT100S");
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PeriodType[StandardNoMinutes]" + "'", str39, "PeriodType[StandardNoMinutes]");
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType45);
    }

    @Test
    public void test17803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17803");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(7);
        org.joda.time.Hours hours3 = hours1.plus((int) (byte) 1);
        org.joda.time.Hours hours4 = hours1.negated();
        org.joda.time.Hours hours6 = hours1.plus((int) (short) 1);
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours8.dividedBy(100);
        org.joda.time.Period period13 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period15 = period13.minusMonths(0);
        org.joda.time.Period period17 = period15.minusSeconds(0);
        org.joda.time.Period period18 = period17.normalizedStandard();
        org.joda.time.Hours hours19 = period18.toStandardHours();
        boolean boolean20 = hours10.isLessThan(hours19);
        boolean boolean21 = hours7.isLessThan(hours10);
        org.joda.time.Duration duration22 = hours10.toStandardDuration();
        org.joda.time.PeriodType periodType23 = hours10.getPeriodType();
        org.joda.time.Hours hours24 = hours6.minus(hours10);
        org.joda.time.Hours hours26 = hours6.minus(97);
        int int27 = hours26.getHours();
        org.joda.time.Hours hours29 = hours26.dividedBy(87);
        org.joda.time.Hours hours30 = null;
        boolean boolean31 = hours26.isGreaterThan(hours30);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-89) + "'", int27 == (-89));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test17804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17804");
        org.joda.time.Period period1 = org.joda.time.Period.days(10);
        org.joda.time.Period period3 = period1.plusMonths((int) 'a');
        org.joda.time.Period period5 = period1.plusSeconds((int) (short) 100);
        org.joda.time.Period period7 = period1.withMinutes(1);
        org.joda.time.Days days8 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period1);
        org.joda.time.Days days9 = days8.negated();
        org.joda.time.Period period10 = days9.toPeriod();
        org.joda.time.Period period11 = period10.toPeriod();
        org.joda.time.Period period13 = period10.minusSeconds((-36));
        org.joda.time.Period period15 = period13.plusYears((-97));
        org.joda.time.Period period17 = period15.minusMinutes((-7));
        int int18 = period17.getWeeks();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test17805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17805");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = org.joda.time.Days.ONE;
        int int2 = days0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days1);
        org.joda.time.Days days4 = days1.multipliedBy((int) '#');
        org.joda.time.Days days6 = org.joda.time.Days.days(1);
        org.joda.time.Duration duration7 = days6.toStandardDuration();
        boolean boolean8 = days4.equals((java.lang.Object) duration7);
        org.joda.time.Days days10 = days4.minus((int) (byte) 0);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType12 = days11.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType13 = days11.getFieldType();
        org.joda.time.PeriodType periodType14 = days11.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType15 = days11.getFieldType();
        org.joda.time.Days days16 = days10.plus(days11);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(days16);
    }

    @Test
    public void test17806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17806");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period6 = period4.minusMonths(0);
        org.joda.time.Period period8 = period4.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType9 = period4.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withMinutesRemoved();
        org.joda.time.PeriodType periodType11 = periodType10.withMinutesRemoved();
        org.joda.time.PeriodType periodType12 = periodType11.withMillisRemoved();
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType12);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
    }

    @Test
    public void test17807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17807");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(359640000000L, chronology1);
    }

    @Test
    public void test17808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17808");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period5 = period2.normalizedStandard();
        org.joda.time.MutablePeriod mutablePeriod6 = period5.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration8 = period5.toDurationFrom(readableInstant7);
        int int9 = period5.getWeeks();
        org.joda.time.Period period10 = period5.toPeriod();
        org.joda.time.Period period12 = period10.withMinutes((int) (byte) 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test17809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17809");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds2 = seconds0.plus(seconds1);
        org.joda.time.Seconds seconds4 = seconds1.plus((int) (byte) 0);
        org.joda.time.Seconds seconds6 = seconds1.minus(8);
        org.joda.time.DurationFieldType durationFieldType7 = seconds1.getFieldType();
        java.lang.String str8 = durationFieldType7.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "seconds" + "'", str8, "seconds");
    }

    @Test
    public void test17810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17810");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(151200L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Period period3 = duration1.toPeriodTo(readableInstant2);
        java.lang.String str4 = period3.toString();
        org.joda.time.Weeks weeks5 = period3.toStandardWeeks();
        org.joda.time.DurationFieldType durationFieldType7 = period3.getFieldType(0);
        java.lang.String str8 = durationFieldType7.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2M31.200S" + "'", str4, "PT2M31.200S");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "years" + "'", str8, "years");
    }

    @Test
    public void test17811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17811");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period5 = period2.normalizedStandard();
        org.joda.time.MutablePeriod mutablePeriod6 = period5.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration8 = period5.toDurationFrom(readableInstant7);
        org.joda.time.PeriodType periodType9 = period5.getPeriodType();
        int int10 = periodType9.size();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = periodType9.getFieldType((-2147483552));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -2147483552");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8 + "'", int10 == 8);
    }

    @Test
    public void test17812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17812");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) '#');
        int int2 = period1.getYears();
        org.joda.time.ReadablePeriod readablePeriod3 = null;
        org.joda.time.Period period4 = period1.withFields(readablePeriod3);
        org.joda.time.MutablePeriod mutablePeriod5 = period1.toMutablePeriod();
        org.joda.time.Period period7 = period1.plusMillis((-5));
        org.joda.time.Period period9 = period7.minusHours((int) (short) 10);
        org.joda.time.Period period11 = period9.withYears(7);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test17813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17813");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(0);
        org.joda.time.Hours hours2 = period1.toStandardHours();
        org.joda.time.Hours hours4 = hours2.dividedBy(59);
        org.joda.time.Hours hours5 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = hours5.getFieldType();
        org.joda.time.Hours hours7 = hours5.negated();
        org.joda.time.Duration duration8 = hours5.toStandardDuration();
        org.joda.time.Hours hours10 = hours5.dividedBy((int) (byte) 100);
        org.joda.time.Hours hours11 = hours10.negated();
        org.joda.time.Hours hours13 = hours10.dividedBy((int) (byte) 1);
        org.joda.time.Hours hours15 = hours10.plus(268435465);
        boolean boolean16 = hours4.isGreaterThan(hours10);
        java.lang.String str17 = hours10.toString();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT21474836H" + "'", str17, "PT21474836H");
    }

    @Test
    public void test17814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17814");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period3 = period2.negated();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration5 = period3.toDurationTo(readableInstant4);
        org.joda.time.Period period7 = period3.plusWeeks((int) (short) 10);
        org.joda.time.PeriodType periodType8 = period3.getPeriodType();
        org.joda.time.Period period10 = period3.withWeeks(7);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        java.lang.String str12 = days11.toString();
        org.joda.time.Days days14 = days11.multipliedBy((int) (byte) -1);
        org.joda.time.Days days15 = days11.negated();
        org.joda.time.Duration duration16 = days11.toStandardDuration();
        org.joda.time.Days days17 = duration16.toStandardDays();
        org.joda.time.Days days19 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days21 = days19.multipliedBy((int) (short) 100);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType23 = days22.getPeriodType();
        org.joda.time.Days days25 = days22.minus(0);
        org.joda.time.Days days26 = days19.minus(days25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant27, readableDuration28);
        org.joda.time.Period period31 = period29.minusYears(0);
        org.joda.time.Days days32 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Days days33 = days25.plus(days32);
        org.joda.time.Days days34 = days17.plus(days33);
        org.joda.time.Period period36 = org.joda.time.Period.millis((int) (byte) -1);
        org.joda.time.Days days37 = period36.toStandardDays();
        org.joda.time.Days days38 = days33.minus(days37);
        org.joda.time.Days days40 = days33.plus(0);
        org.joda.time.Days days42 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days44 = days42.multipliedBy((int) (short) 100);
        org.joda.time.Days days45 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType46 = days45.getPeriodType();
        org.joda.time.Days days48 = days45.minus(0);
        org.joda.time.Days days49 = days42.minus(days48);
        org.joda.time.Days days50 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days49);
        org.joda.time.Duration duration53 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration55 = duration53.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Interval interval59 = duration55.toIntervalFrom(readableInstant58);
        org.joda.time.Days days60 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval59);
        org.joda.time.Days days62 = days60.minus((int) '4');
        org.joda.time.Days days63 = days50.minus(days62);
        org.joda.time.Period period65 = org.joda.time.Period.millis(0);
        org.joda.time.DurationFieldType durationFieldType66 = org.joda.time.DurationFieldType.months();
        boolean boolean67 = period65.isSupported(durationFieldType66);
        java.lang.String str68 = durationFieldType66.getName();
        int int69 = days50.get(durationFieldType66);
        org.joda.time.Days days70 = days33.plus(days50);
        org.joda.time.Period period71 = period10.minus((org.joda.time.ReadablePeriod) days50);
        org.joda.time.Days days72 = days50.negated();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P5D" + "'", str12, "P5D");
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(days63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "months" + "'", str68, "months");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(days72);
    }

    @Test
    public void test17815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17815");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) 0);
        org.joda.time.Seconds seconds2 = null;
        org.joda.time.Seconds seconds3 = seconds1.plus(seconds2);
        org.joda.time.MutablePeriod mutablePeriod4 = seconds3.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
    }

    @Test
    public void test17816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17816");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds7 = seconds5.plus(seconds6);
        org.joda.time.PeriodType periodType8 = seconds5.getPeriodType();
        org.joda.time.Period period11 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period12 = period11.negated();
        org.joda.time.DurationFieldType durationFieldType14 = period11.getFieldType((int) (short) 1);
        int int15 = periodType8.indexOf(durationFieldType14);
        org.joda.time.Period period16 = new org.joda.time.Period((long) ' ', periodType8);
        org.joda.time.format.PeriodFormatter periodFormatter17 = periodFormatter2.withParseType(periodType8);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.time();
        org.joda.time.PeriodType periodType19 = periodType18.withDaysRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter20 = periodFormatter2.withParseType(periodType19);
        java.util.Locale locale21 = null;
        org.joda.time.format.PeriodFormatter periodFormatter22 = periodFormatter20.withLocale(locale21);
        boolean boolean23 = periodFormatter22.isPrinter();
        org.joda.time.format.PeriodPrinter periodPrinter24 = periodFormatter22.getPrinter();
        java.io.Writer writer25 = null;
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.weeks((int) (short) 1);
        org.joda.time.Weeks weeks29 = weeks27.dividedBy(100);
        org.joda.time.Weeks weeks30 = weeks27.negated();
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.weeksIn(readableInterval31);
        org.joda.time.Weeks weeks34 = weeks32.dividedBy((int) (byte) -1);
        org.joda.time.Weeks weeks35 = null;
        org.joda.time.Weeks weeks36 = weeks34.minus(weeks35);
        org.joda.time.Weeks weeks38 = weeks34.dividedBy(2147483647);
        boolean boolean39 = weeks30.isGreaterThan(weeks38);
        org.joda.time.Weeks weeks41 = weeks38.dividedBy(87);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter22.printTo(writer25, (org.joda.time.ReadablePeriod) weeks41);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(periodFormatter17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodFormatter20);
        org.junit.Assert.assertNotNull(periodFormatter22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(periodPrinter24);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks41);
    }

    @Test
    public void test17817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17817");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration4 = duration2.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalFrom(readableInstant7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval8);
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes13 = minutes11.minus((-97));
        org.joda.time.MutablePeriod mutablePeriod14 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes16 = minutes11.dividedBy((-9500));
        org.joda.time.Minutes minutes18 = minutes11.minus((int) (short) 0);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
    }

    @Test
    public void test17818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17818");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period2.minusSeconds((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray7 = period2.getFieldTypes();
        org.joda.time.Period period9 = period2.withMinutes(13);
        org.joda.time.Period period11 = period2.plusWeeks((int) '4');
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldTypeArray7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test17819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17819");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Minutes minutes6 = period5.toStandardMinutes();
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes9 = minutes0.minus(minutes6);
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Minutes minutes18 = minutes15.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration19 = minutes15.toStandardDuration();
        org.joda.time.Period period22 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period23 = period22.negated();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration25 = period23.toDurationTo(readableInstant24);
        boolean boolean26 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration29 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration30 = duration25.plus((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration29.toIntervalTo(readableInstant31);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval32);
        boolean boolean34 = minutes6.isGreaterThan(minutes33);
        org.joda.time.Period period35 = new org.joda.time.Period((java.lang.Object) minutes33);
        org.joda.time.Period period38 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period40 = period38.minusMonths(0);
        org.joda.time.Minutes minutes41 = period40.toStandardMinutes();
        org.joda.time.Minutes minutes43 = minutes41.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes45 = minutes41.plus(8);
        org.joda.time.Minutes minutes47 = minutes41.dividedBy((int) (byte) 100);
        org.joda.time.Period period50 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period52 = period50.minusMonths(0);
        org.joda.time.Minutes minutes53 = period52.toStandardMinutes();
        org.joda.time.Duration duration54 = minutes53.toStandardDuration();
        org.joda.time.Minutes minutes56 = minutes53.multipliedBy((int) (short) 1);
        java.lang.String str57 = minutes56.toString();
        org.joda.time.Duration duration60 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration62 = duration60.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Interval interval66 = duration62.toIntervalFrom(readableInstant65);
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval66);
        org.joda.time.Minutes minutes69 = minutes67.multipliedBy((-95));
        org.joda.time.Minutes minutes70 = minutes56.minus(minutes69);
        boolean boolean71 = minutes41.isLessThan(minutes69);
        org.joda.time.Minutes minutes72 = minutes33.minus(minutes69);
        org.joda.time.Minutes minutes74 = minutes69.plus(13);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT0M" + "'", str57, "PT0M");
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes74);
    }

    @Test
    public void test17820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17820");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(52000L, 0L);
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 36);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (-1));
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration14 = duration12.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalFrom(readableInstant17);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Minutes minutes21 = minutes20.negated();
        org.joda.time.Minutes minutes23 = minutes21.minus((-97));
        org.joda.time.PeriodType periodType24 = minutes23.getPeriodType();
        org.joda.time.Period period25 = duration7.toPeriodTo(readableInstant9, periodType24);
        org.joda.time.Duration duration26 = duration4.plus((org.joda.time.ReadableDuration) duration7);
        boolean boolean27 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration4);
        java.lang.String str28 = duration2.toString();
        org.joda.time.Period period31 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period32 = period31.negated();
        org.joda.time.Period period34 = period32.plusMonths((int) (short) 1);
        org.joda.time.Duration duration35 = period32.toStandardDuration();
        org.joda.time.Duration duration36 = period32.toStandardDuration();
        boolean boolean37 = duration2.equals((java.lang.Object) duration36);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT-52S" + "'", str28, "PT-52S");
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test17821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17821");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        java.util.Locale locale4 = null;
        org.joda.time.format.PeriodFormatter periodFormatter5 = periodFormatter2.withLocale(locale4);
        boolean boolean6 = periodFormatter2.isParser();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        boolean boolean9 = periodFormatter8.isPrinter();
        org.joda.time.format.PeriodPrinter periodPrinter10 = periodFormatter8.getPrinter();
        org.joda.time.format.PeriodPrinter periodPrinter11 = periodFormatter8.getPrinter();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(periodFormatter5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(periodPrinter10);
        org.junit.Assert.assertNull(periodPrinter11);
    }

    @Test
    public void test17822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17822");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period2);
        org.joda.time.Period period6 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period8 = period6.minusMonths(0);
        org.joda.time.Minutes minutes9 = period8.toStandardMinutes();
        org.joda.time.Minutes minutes11 = minutes9.dividedBy((int) (byte) 100);
        org.joda.time.Period period14 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period16 = period14.minusMonths(0);
        org.joda.time.Minutes minutes17 = period16.toStandardMinutes();
        org.joda.time.Duration duration18 = minutes17.toStandardDuration();
        org.joda.time.Minutes minutes20 = minutes17.multipliedBy((int) (short) 1);
        int int21 = minutes20.getMinutes();
        boolean boolean22 = minutes11.isGreaterThan(minutes20);
        boolean boolean23 = minutes3.isLessThan(minutes20);
        org.joda.time.Minutes minutes25 = minutes20.dividedBy(100);
        org.joda.time.Minutes minutes26 = minutes20.negated();
        org.joda.time.Period period29 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period31 = period29.minusMonths(0);
        org.joda.time.Minutes minutes32 = period31.toStandardMinutes();
        org.joda.time.Duration duration33 = minutes32.toStandardDuration();
        org.joda.time.Period period35 = org.joda.time.Period.days(10);
        org.joda.time.Minutes minutes36 = period35.toStandardMinutes();
        org.joda.time.Minutes minutes38 = minutes36.multipliedBy(1);
        boolean boolean39 = minutes32.isGreaterThan(minutes38);
        org.joda.time.Period period42 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period44 = period42.minusMonths(0);
        org.joda.time.Minutes minutes45 = period44.toStandardMinutes();
        org.joda.time.Duration duration46 = minutes45.toStandardDuration();
        org.joda.time.Minutes minutes48 = minutes45.multipliedBy((int) (short) 1);
        org.joda.time.Minutes minutes50 = minutes48.dividedBy((-36));
        org.joda.time.Period period52 = org.joda.time.Period.days(10);
        org.joda.time.Minutes minutes53 = period52.toStandardMinutes();
        org.joda.time.DurationFieldType durationFieldType54 = minutes53.getFieldType();
        int int55 = minutes53.getMinutes();
        org.joda.time.Minutes minutes56 = minutes48.minus(minutes53);
        int int57 = minutes56.getMinutes();
        org.joda.time.Minutes minutes58 = minutes32.minus(minutes56);
        org.joda.time.Minutes minutes59 = minutes20.plus(minutes32);
        org.joda.time.PeriodType periodType60 = minutes59.getPeriodType();
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 14400 + "'", int55 == 14400);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-14400) + "'", int57 == (-14400));
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(periodType60);
    }

    @Test
    public void test17823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17823");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ONE;
        org.joda.time.Minutes minutes2 = minutes0.minus(2147483645);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.plus(52);
        org.joda.time.Period period8 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period10 = period8.minusMonths(0);
        org.joda.time.Minutes minutes11 = period10.toStandardMinutes();
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes15 = minutes11.plus(8);
        org.joda.time.DurationFieldType durationFieldType16 = minutes15.getFieldType();
        boolean boolean17 = minutes3.isLessThan(minutes15);
        boolean boolean18 = minutes0.isLessThan(minutes15);
        org.joda.time.Period period19 = minutes15.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test17824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17824");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT0S");
        java.lang.String str2 = seconds1.toString();
        org.joda.time.Period period5 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period7 = period5.minusMonths(0);
        int int8 = period7.getYears();
        org.joda.time.Period period9 = period7.toPeriod();
        org.joda.time.Seconds seconds10 = period7.toStandardSeconds();
        boolean boolean11 = seconds1.isLessThan(seconds10);
        java.lang.String str12 = seconds10.toString();
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds15 = seconds13.plus(seconds14);
        java.lang.String str16 = seconds13.toString();
        org.joda.time.DurationFieldType durationFieldType17 = seconds13.getFieldType();
        org.joda.time.Seconds seconds19 = seconds13.multipliedBy(0);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Duration duration21 = seconds20.toStandardDuration();
        boolean boolean22 = seconds19.isGreaterThan(seconds20);
        org.joda.time.Seconds seconds23 = seconds10.plus(seconds20);
        org.joda.time.Duration duration25 = org.joda.time.Duration.parse("PT99.640S");
        org.joda.time.Duration duration28 = duration25.withDurationAdded(10L, (int) (short) 10);
        org.joda.time.Duration duration30 = duration25.minus((long) 13);
        org.joda.time.Duration duration32 = duration30.withMillis(0L);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.seconds((int) (byte) 10);
        boolean boolean36 = seconds34.equals((java.lang.Object) "PeriodType[StandardNoMinutes]");
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.ZERO;
        org.joda.time.Seconds seconds39 = seconds37.multipliedBy((int) (byte) 100);
        org.joda.time.PeriodType periodType40 = seconds39.getPeriodType();
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.parseSeconds("PT0S");
        java.lang.String str43 = seconds42.toString();
        org.joda.time.Period period46 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period48 = period46.minusMonths(0);
        int int49 = period48.getYears();
        org.joda.time.Period period50 = period48.toPeriod();
        org.joda.time.Seconds seconds51 = period48.toStandardSeconds();
        boolean boolean52 = seconds42.isLessThan(seconds51);
        org.joda.time.Seconds seconds53 = seconds39.plus(seconds51);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.THREE;
        org.joda.time.Duration duration55 = seconds54.toStandardDuration();
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds61 = seconds59.plus(seconds60);
        org.joda.time.Seconds seconds63 = seconds59.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds64 = seconds58.plus(seconds59);
        org.joda.time.Seconds seconds66 = seconds58.plus((int) '4');
        org.joda.time.Duration duration67 = seconds66.toStandardDuration();
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds72 = seconds70.plus(seconds71);
        org.joda.time.Seconds seconds74 = seconds70.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds75 = seconds69.plus(seconds70);
        org.joda.time.Seconds seconds77 = seconds69.plus((int) '4');
        org.joda.time.Duration duration78 = seconds77.toStandardDuration();
        boolean boolean79 = seconds66.isLessThan(seconds77);
        boolean boolean80 = seconds56.isGreaterThan(seconds66);
        boolean boolean81 = seconds54.isGreaterThan(seconds56);
        boolean boolean82 = seconds53.isGreaterThan(seconds54);
        org.joda.time.Seconds seconds83 = seconds34.minus(seconds54);
        boolean boolean84 = duration30.equals((java.lang.Object) seconds83);
        boolean boolean85 = seconds20.isLessThan(seconds83);
        java.lang.String str86 = seconds20.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0S" + "'", str2, "PT0S");
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT0S" + "'", str12, "PT0S");
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2S" + "'", str16, "PT2S");
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PT0S" + "'", str43, "PT0S");
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "PT3S" + "'", str86, "PT3S");
    }

    @Test
    public void test17825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17825");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        boolean boolean14 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration16 = duration6.plus((long) (short) 10);
        org.joda.time.Period period19 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period21 = period19.minusMonths(0);
        int int22 = period21.getYears();
        org.joda.time.Period period24 = period21.plusYears((int) ' ');
        boolean boolean25 = duration16.equals((java.lang.Object) period24);
        org.joda.time.Period period28 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period30 = period28.minusMonths(0);
        org.joda.time.Minutes minutes31 = period30.toStandardMinutes();
        org.joda.time.Duration duration32 = minutes31.toStandardDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration35 = duration32.plus((long) (byte) 0);
        org.joda.time.Duration duration37 = duration32.withMillis((long) 1);
        boolean boolean38 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration32);
        long long39 = duration32.getStandardHours();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.yearMonthDay();
        java.lang.String str46 = periodType45.getName();
        boolean boolean48 = periodType45.equals((java.lang.Object) true);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant43, readableInstant44, periodType45);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((long) 0, (long) (-10), periodType45, chronology50);
        org.joda.time.Period period52 = duration32.toPeriodFrom(readableInstant40, periodType45);
        org.joda.time.Minutes minutes53 = duration32.toStandardMinutes();
        org.joda.time.Period period56 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period58 = period56.minusMonths(0);
        org.joda.time.Minutes minutes59 = period58.toStandardMinutes();
        org.joda.time.Minutes minutes61 = minutes59.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes63 = minutes59.plus(8);
        org.joda.time.Minutes minutes65 = minutes59.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period69 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period71 = period69.minusMonths(0);
        org.joda.time.Minutes minutes72 = period71.toStandardMinutes();
        org.joda.time.Minutes minutes74 = minutes72.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes75 = minutes66.minus(minutes72);
        org.joda.time.Period period78 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period80 = period78.minusMonths(0);
        org.joda.time.Minutes minutes81 = period80.toStandardMinutes();
        org.joda.time.Minutes minutes83 = minutes81.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.Period period85 = new org.joda.time.Period((java.lang.Object) minutes81, chronology84);
        org.joda.time.Minutes minutes86 = minutes66.minus(minutes81);
        org.joda.time.DurationFieldType durationFieldType88 = minutes86.getFieldType((int) (short) 0);
        org.joda.time.PeriodType periodType89 = minutes86.getPeriodType();
        org.joda.time.Minutes minutes90 = minutes86.negated();
        org.joda.time.DurationFieldType durationFieldType91 = minutes86.getFieldType();
        org.joda.time.Minutes minutes92 = minutes59.plus(minutes86);
        org.joda.time.Minutes minutes94 = minutes59.minus(52);
        org.joda.time.Minutes minutes95 = minutes59.negated();
        org.joda.time.Minutes minutes97 = minutes95.multipliedBy((-268435465));
        org.joda.time.Minutes minutes98 = minutes53.minus(minutes97);
        int int99 = minutes98.size();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "YearMonthDay" + "'", str46, "YearMonthDay");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertNotNull(durationFieldType88);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(minutes90);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertNotNull(minutes92);
        org.junit.Assert.assertNotNull(minutes94);
        org.junit.Assert.assertNotNull(minutes95);
        org.junit.Assert.assertNotNull(minutes97);
        org.junit.Assert.assertNotNull(minutes98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 1 + "'", int99 == 1);
    }

    @Test
    public void test17826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17826");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (short) 0);
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period1.plusMinutes(1);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration6 = period1.toDurationTo(readableInstant5);
        org.joda.time.Period period8 = org.joda.time.Period.millis((int) '#');
        int int9 = period8.getYears();
        org.joda.time.ReadablePeriod readablePeriod10 = null;
        org.joda.time.Period period11 = period8.withFields(readablePeriod10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = period8.toDurationTo(readableInstant12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Interval interval15 = duration13.toIntervalFrom(readableInstant14);
        org.joda.time.Duration duration16 = duration6.minus((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration19 = duration13.withDurationAdded(2147483648L, 0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration19);
    }

    @Test
    public void test17827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17827");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours3 = hours1.minus(hours2);
        org.joda.time.Hours hours5 = hours3.plus(36);
        org.joda.time.Duration duration6 = hours3.toStandardDuration();
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration8 = duration6.toDuration();
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period11 = period9.minusMonths(105);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 60L + "'", long7 == 60L);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test17828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17828");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (short) 0);
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period1.plusMinutes(1);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration6 = period1.toDurationTo(readableInstant5);
        org.joda.time.Seconds seconds7 = period1.toStandardSeconds();
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.parseSeconds("PT0S");
        java.lang.String str10 = seconds9.toString();
        org.joda.time.Period period13 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period15 = period13.minusMonths(0);
        int int16 = period15.getYears();
        org.joda.time.Period period17 = period15.toPeriod();
        org.joda.time.Seconds seconds18 = period15.toStandardSeconds();
        boolean boolean19 = seconds9.isLessThan(seconds18);
        java.lang.String str20 = seconds18.toString();
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds23 = seconds21.plus(seconds22);
        java.lang.String str24 = seconds21.toString();
        org.joda.time.DurationFieldType durationFieldType25 = seconds21.getFieldType();
        org.joda.time.Seconds seconds27 = seconds21.multipliedBy(0);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.THREE;
        org.joda.time.Duration duration29 = seconds28.toStandardDuration();
        boolean boolean30 = seconds27.isGreaterThan(seconds28);
        org.joda.time.Seconds seconds31 = seconds18.plus(seconds28);
        boolean boolean32 = seconds7.isLessThan(seconds28);
        org.joda.time.Seconds seconds34 = seconds28.multipliedBy((-35));
        org.joda.time.PeriodType periodType35 = seconds34.getPeriodType();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0S" + "'", str10, "PT0S");
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT0S" + "'", str20, "PT0S");
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2S" + "'", str24, "PT2S");
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(periodType35);
    }

    @Test
    public void test17829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17829");
        org.joda.time.Days days1 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days3 = days1.multipliedBy((int) (short) 100);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.Days days7 = days4.minus(0);
        org.joda.time.Days days8 = days1.minus(days7);
        org.joda.time.PeriodType periodType9 = days1.getPeriodType();
        org.joda.time.Days days11 = days1.dividedBy((int) 'a');
        org.joda.time.Days days13 = days11.dividedBy((int) '4');
        org.joda.time.Days days14 = days13.negated();
        org.joda.time.Days days16 = days14.multipliedBy(999);
        org.joda.time.Days days17 = null;
        boolean boolean18 = days14.isGreaterThan(days17);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test17830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17830");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withParseType(periodType5);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType9 = days8.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withSecondsRemoved();
        org.joda.time.PeriodType periodType11 = periodType9.withYearsRemoved();
        java.lang.String str12 = periodType11.toString();
        org.joda.time.format.PeriodFormatter periodFormatter13 = periodFormatter7.withParseType(periodType11);
        org.joda.time.PeriodType periodType14 = periodFormatter13.getParseType();
        org.joda.time.format.PeriodParser periodParser15 = periodFormatter13.getParser();
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.years();
        org.joda.time.format.PeriodFormatter periodFormatter17 = periodFormatter13.withParseType(periodType16);
        java.util.Locale locale18 = periodFormatter13.getLocale();
        java.util.Locale locale19 = periodFormatter13.getLocale();
        boolean boolean20 = periodFormatter13.isParser();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Days days24 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType25 = days24.getPeriodType();
        org.joda.time.PeriodType periodType26 = periodType25.withHoursRemoved();
        org.joda.time.PeriodType periodType27 = periodType25.withSecondsRemoved();
        org.joda.time.Period period28 = duration22.toPeriodFrom(readableInstant23, periodType25);
        long long29 = duration22.getStandardHours();
        org.joda.time.Duration duration32 = duration22.withDurationAdded(10L, (-36));
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration36 = duration32.withDurationAdded((long) ' ', (int) (byte) 0);
        org.joda.time.Period period39 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period41 = period39.minusMonths(0);
        org.joda.time.Period period43 = period39.minusSeconds((int) (byte) 100);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType45 = days44.getPeriodType();
        org.joda.time.PeriodType periodType46 = periodType45.withHoursRemoved();
        org.joda.time.PeriodType periodType47 = periodType45.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType48 = org.joda.time.DurationFieldType.days();
        boolean boolean49 = periodType47.isSupported(durationFieldType48);
        int int50 = period39.get(durationFieldType48);
        org.joda.time.Period period52 = period39.withHours(1);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Duration duration54 = period39.toDurationTo(readableInstant53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = duration54.toPeriodTo(readableInstant55);
        int int57 = duration36.compareTo((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Days days58 = duration36.toStandardDays();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = periodFormatter13.print((org.joda.time.ReadablePeriod) days58);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PeriodType[Days]" + "'", str12, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodFormatter13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNull(periodParser15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodFormatter17);
        org.junit.Assert.assertNull(locale18);
        org.junit.Assert.assertNull(locale19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(days58);
    }

    @Test
    public void test17831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17831");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 10);
        org.joda.time.Period period3 = period1.withHours((int) (byte) 10);
        org.joda.time.Period period5 = org.joda.time.Period.millis((int) (short) 0);
        org.joda.time.Period period6 = period5.toPeriod();
        org.joda.time.Period period8 = period5.plusMinutes(1);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration10 = period5.toDurationTo(readableInstant9);
        org.joda.time.Period period11 = duration10.toPeriod();
        org.joda.time.Period period12 = period3.plus((org.joda.time.ReadablePeriod) period11);
        org.joda.time.Period period14 = period12.withDays(0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test17832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17832");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period7 = duration6.toPeriod();
        org.joda.time.Duration duration9 = duration6.plus((long) (byte) 0);
        org.joda.time.Period period10 = duration6.toPeriod();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period16 = period14.minusMonths(0);
        org.joda.time.Minutes minutes17 = period16.toStandardMinutes();
        org.joda.time.Duration duration18 = minutes17.toStandardDuration();
        org.joda.time.Period period19 = duration18.toPeriod();
        org.joda.time.Duration duration21 = duration18.plus((long) (byte) 0);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.minutes();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((java.lang.Object) duration21, periodType23, chronology24);
        org.joda.time.Period period28 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period30 = period28.minusMonths(0);
        org.joda.time.Minutes minutes31 = period30.toStandardMinutes();
        org.joda.time.Duration duration32 = minutes31.toStandardDuration();
        org.joda.time.Minutes minutes34 = minutes31.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration35 = minutes31.toStandardDuration();
        org.joda.time.Period period38 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period40 = period38.minusMonths(0);
        org.joda.time.Minutes minutes41 = period40.toStandardMinutes();
        org.joda.time.Duration duration42 = minutes41.toStandardDuration();
        org.joda.time.Period period43 = duration42.toPeriod();
        boolean boolean44 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration42);
        boolean boolean45 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.Duration duration46 = duration6.minus((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Interval interval48 = duration42.toIntervalTo(readableInstant47);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(interval48);
    }

    @Test
    public void test17833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17833");
        org.joda.time.Days days1 = org.joda.time.Days.days((-64));
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test17834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17834");
        java.lang.Object obj0 = null;
        org.joda.time.Period period2 = org.joda.time.Period.millis(0);
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.months();
        boolean boolean4 = period2.isSupported(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds7 = seconds5.multipliedBy(10);
        org.joda.time.DurationFieldType durationFieldType8 = seconds5.getFieldType();
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds11 = seconds9.plus(seconds10);
        org.joda.time.Seconds seconds13 = seconds9.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds14 = seconds5.plus(seconds9);
        org.joda.time.Period period15 = period2.withFields((org.joda.time.ReadablePeriod) seconds9);
        org.joda.time.Period period17 = period2.plusWeeks((-10));
        org.joda.time.PeriodType periodType18 = period17.getPeriodType();
        org.joda.time.Period period19 = new org.joda.time.Period(obj0, periodType18);
        org.joda.time.Seconds seconds20 = period19.toStandardSeconds();
        org.joda.time.Seconds seconds21 = seconds20.negated();
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        java.lang.String str23 = periodType22.getName();
        org.joda.time.PeriodType periodType24 = periodType22.withMonthsRemoved();
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Seconds" + "'", str23, "Seconds");
        org.junit.Assert.assertNotNull(periodType24);
    }

    @Test
    public void test17835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17835");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, 100L);
        org.joda.time.Period period5 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period7 = period5.minusMonths(0);
        org.joda.time.Period period9 = period5.minusSeconds((int) (byte) 100);
        org.joda.time.Period period11 = period5.multipliedBy((int) '4');
        org.joda.time.Duration duration14 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration16 = duration14.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant17);
        org.joda.time.Period period21 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period23 = period21.minusMonths(0);
        org.joda.time.Minutes minutes24 = period23.toStandardMinutes();
        org.joda.time.Duration duration25 = minutes24.toStandardDuration();
        org.joda.time.Period period28 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period30 = period28.minusMonths(0);
        org.joda.time.Minutes minutes31 = period30.toStandardMinutes();
        org.joda.time.Duration duration32 = minutes31.toStandardDuration();
        boolean boolean33 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(readableInstant34, readableInstant35);
        org.joda.time.Duration duration37 = duration25.minus((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration38 = duration25.toDuration();
        boolean boolean39 = duration16.isEqual((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Period period42 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period44 = period42.minusMonths(0);
        org.joda.time.Minutes minutes45 = period44.toStandardMinutes();
        org.joda.time.Duration duration46 = minutes45.toStandardDuration();
        org.joda.time.Period period49 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period51 = period49.minusMonths(0);
        org.joda.time.Minutes minutes52 = period51.toStandardMinutes();
        org.joda.time.Duration duration53 = minutes52.toStandardDuration();
        boolean boolean54 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(readableInstant55, readableInstant56);
        org.joda.time.Duration duration58 = duration46.minus((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant59);
        org.joda.time.Period period61 = duration46.toPeriod();
        boolean boolean62 = duration38.equals((java.lang.Object) period61);
        org.joda.time.Period period63 = period11.minus((org.joda.time.ReadablePeriod) period61);
        org.joda.time.Period period65 = period63.multipliedBy(14400);
        org.joda.time.Period period66 = period63.normalizedStandard();
        org.joda.time.Period period67 = period2.withFields((org.joda.time.ReadablePeriod) period66);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Duration duration69 = period66.toDurationTo(readableInstant68);
        org.joda.time.Period period71 = period66.minusMillis((-35));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertNotNull(period71);
    }

    @Test
    public void test17836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17836");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration6.toIntervalFrom(readableInstant7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval8);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
    }

    @Test
    public void test17837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17837");
        org.joda.time.Period period0 = new org.joda.time.Period();
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration2 = period0.toDurationFrom(readableInstant1);
        org.joda.time.Duration duration3 = duration2.toDuration();
        long long4 = duration2.getStandardSeconds();
        org.joda.time.Duration duration7 = duration2.withDurationAdded((long) '4', 3);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((long) (-10));
        org.joda.time.Duration duration11 = duration9.minus((-128849018880000L));
        long long12 = duration11.getStandardDays();
        boolean boolean13 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration11.toPeriod(chronology14);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1491308L + "'", long12 == 1491308L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test17838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17838");
        org.joda.time.Days days1 = org.joda.time.Days.days(1491308);
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test17839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17839");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period7 = duration6.toPeriod();
        org.joda.time.Period period8 = period7.normalizedStandard();
        org.joda.time.Period period10 = period7.withWeeks((int) (short) 100);
        org.joda.time.Period period13 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period13.negated();
        int int15 = period13.getHours();
        org.joda.time.Period period17 = org.joda.time.Period.days(10);
        org.joda.time.Period period19 = period17.plusMonths((int) 'a');
        org.joda.time.Period period21 = period17.plusSeconds((int) (short) 100);
        org.joda.time.Period period23 = period21.minusMonths((int) 'a');
        org.joda.time.Period period24 = period13.withFields((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Period period26 = period24.withMonths((int) (byte) 1);
        org.joda.time.Period period27 = period10.minus((org.joda.time.ReadablePeriod) period24);
        int int28 = period27.getMillis();
        org.joda.time.Period period30 = period27.minusMillis((-2147483639));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(period30);
    }

    @Test
    public void test17840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17840");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (-10), 15032385529L, chronology2);
        java.lang.String str4 = period3.toString();
        org.joda.time.Period period7 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period9 = period7.minusMonths(0);
        org.joda.time.Minutes minutes10 = period9.toStandardMinutes();
        org.joda.time.Duration duration11 = minutes10.toStandardDuration();
        org.joda.time.Minutes minutes13 = minutes10.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration14 = minutes10.toStandardDuration();
        org.joda.time.Period period17 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period18 = period17.negated();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration20 = period18.toDurationTo(readableInstant19);
        boolean boolean21 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration24 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration25 = duration20.plus((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration27 = duration24.withMillis(100L);
        java.lang.String str28 = duration27.toString();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration27.toIntervalTo(readableInstant29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval30);
        org.joda.time.Period period33 = org.joda.time.Period.days(10);
        org.joda.time.Minutes minutes34 = period33.toStandardMinutes();
        org.joda.time.DurationFieldType durationFieldType35 = minutes34.getFieldType();
        int int36 = minutes34.getMinutes();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period40 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period42 = period40.minusMonths(0);
        org.joda.time.Minutes minutes43 = period42.toStandardMinutes();
        org.joda.time.Minutes minutes45 = minutes43.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes46 = minutes37.minus(minutes43);
        org.joda.time.Period period49 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period51 = period49.minusMonths(0);
        org.joda.time.Minutes minutes52 = period51.toStandardMinutes();
        org.joda.time.Minutes minutes54 = minutes52.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((java.lang.Object) minutes52, chronology55);
        org.joda.time.Minutes minutes57 = minutes37.minus(minutes52);
        org.joda.time.DurationFieldType durationFieldType59 = minutes57.getFieldType((int) (short) 0);
        org.joda.time.PeriodType periodType60 = minutes57.getPeriodType();
        org.joda.time.Minutes minutes61 = minutes57.negated();
        org.joda.time.Minutes minutes62 = minutes34.minus(minutes61);
        org.joda.time.Minutes minutes63 = minutes62.negated();
        org.joda.time.PeriodType periodType64 = minutes63.getPeriodType();
        org.joda.time.Minutes minutes65 = minutes63.negated();
        org.joda.time.Minutes minutes66 = minutes31.minus(minutes63);
        org.joda.time.Minutes minutes68 = minutes66.minus((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType69 = minutes66.getFieldType();
        boolean boolean70 = period3.isSupported(durationFieldType69);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P5M3W1DT23H39M45.539S" + "'", str4, "P5M3W1DT23H39M45.539S");
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT0.100S" + "'", str28, "PT0.100S");
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 14400 + "'", int36 == 14400);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test17841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17841");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) '#');
        int int2 = period1.getYears();
        org.joda.time.Hours hours3 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period1);
        int int4 = hours3.getHours();
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours7 = hours5.multipliedBy((int) 'a');
        org.joda.time.Hours hours9 = hours7.minus((int) (short) 10);
        boolean boolean10 = hours3.isLessThan(hours7);
        org.joda.time.PeriodType periodType11 = hours7.getPeriodType();
        org.joda.time.PeriodType periodType12 = periodType11.withWeeksRemoved();
        org.joda.time.Period period14 = new org.joda.time.Period((long) '4');
        org.joda.time.Period period16 = period14.minusDays((-35));
        org.joda.time.Period period19 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period20 = period19.negated();
        int int21 = period19.getHours();
        org.joda.time.Period period23 = org.joda.time.Period.days(10);
        org.joda.time.Period period25 = period23.plusMonths((int) 'a');
        org.joda.time.Period period27 = period23.plusSeconds((int) (short) 100);
        org.joda.time.Period period29 = period27.minusMonths((int) 'a');
        org.joda.time.Period period30 = period19.withFields((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Hours hours31 = period19.toStandardHours();
        org.joda.time.Hours hours33 = hours31.minus((int) '#');
        org.joda.time.Hours hours34 = org.joda.time.Hours.ONE;
        int int35 = hours34.getHours();
        org.joda.time.Hours hours37 = hours34.multipliedBy((-95));
        org.joda.time.Hours hours39 = hours37.dividedBy((int) (short) 1);
        org.joda.time.Hours hours40 = hours31.plus(hours37);
        org.joda.time.Period period42 = org.joda.time.Period.millis(0);
        org.joda.time.DurationFieldType durationFieldType43 = org.joda.time.DurationFieldType.months();
        boolean boolean44 = period42.isSupported(durationFieldType43);
        java.lang.String str45 = durationFieldType43.getName();
        boolean boolean46 = hours37.isSupported(durationFieldType43);
        org.joda.time.Chronology chronology47 = null;
        boolean boolean48 = durationFieldType43.isSupported(chronology47);
        int int49 = period14.get(durationFieldType43);
        boolean boolean50 = periodType12.isSupported(durationFieldType43);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "months" + "'", str45, "months");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test17842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17842");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.joda.time.Minutes minutes3 = duration1.toStandardMinutes();
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Period period7 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period9 = period7.minusMonths(0);
        org.joda.time.Minutes minutes10 = period9.toStandardMinutes();
        org.joda.time.Duration duration11 = minutes10.toStandardDuration();
        org.joda.time.Minutes minutes12 = minutes3.minus(minutes10);
        org.joda.time.Period period15 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period17 = period15.minusMonths(0);
        org.joda.time.Minutes minutes18 = period17.toStandardMinutes();
        org.joda.time.Duration duration19 = minutes18.toStandardDuration();
        org.joda.time.Minutes minutes21 = minutes18.multipliedBy((int) (short) 1);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes24 = minutes22.plus(52);
        org.joda.time.Minutes minutes25 = minutes18.plus(minutes24);
        org.joda.time.Period period28 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period30 = period28.minusMonths(0);
        org.joda.time.Minutes minutes31 = period30.toStandardMinutes();
        org.joda.time.Duration duration32 = minutes31.toStandardDuration();
        org.joda.time.Period period34 = org.joda.time.Period.days(10);
        org.joda.time.Minutes minutes35 = period34.toStandardMinutes();
        org.joda.time.Minutes minutes37 = minutes35.multipliedBy(1);
        boolean boolean38 = minutes31.isGreaterThan(minutes37);
        org.joda.time.Minutes minutes40 = minutes31.plus((int) (byte) -1);
        org.joda.time.Minutes minutes41 = minutes25.minus(minutes40);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period45 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period47 = period45.minusMonths(0);
        org.joda.time.Minutes minutes48 = period47.toStandardMinutes();
        org.joda.time.Minutes minutes50 = minutes48.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes51 = minutes42.minus(minutes48);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period55 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period57 = period55.minusMonths(0);
        org.joda.time.Minutes minutes58 = period57.toStandardMinutes();
        org.joda.time.Minutes minutes60 = minutes58.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes61 = minutes52.minus(minutes58);
        org.joda.time.Period period64 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period66 = period64.minusMonths(0);
        org.joda.time.Minutes minutes67 = period66.toStandardMinutes();
        org.joda.time.Duration duration68 = minutes67.toStandardDuration();
        org.joda.time.Minutes minutes70 = minutes67.multipliedBy((int) (short) 1);
        int int71 = minutes52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes70);
        org.joda.time.Minutes minutes72 = minutes51.plus(minutes70);
        org.joda.time.Minutes minutes73 = minutes70.negated();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Period period77 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period79 = period77.minusMonths(0);
        org.joda.time.Minutes minutes80 = period79.toStandardMinutes();
        org.joda.time.Duration duration81 = minutes80.toStandardDuration();
        org.joda.time.Period period82 = duration81.toPeriod();
        org.joda.time.Duration duration84 = duration81.plus((long) (byte) 0);
        org.joda.time.Period period85 = new org.joda.time.Period(readableInstant74, (org.joda.time.ReadableDuration) duration84);
        org.joda.time.PeriodType periodType86 = org.joda.time.PeriodType.minutes();
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.Period period88 = new org.joda.time.Period((java.lang.Object) duration84, periodType86, chronology87);
        org.joda.time.Chronology chronology89 = null;
        org.joda.time.Period period90 = new org.joda.time.Period((java.lang.Object) minutes73, periodType86, chronology89);
        org.joda.time.Minutes minutes91 = minutes40.minus(minutes73);
        boolean boolean92 = minutes3.isGreaterThan(minutes40);
        java.lang.String str93 = minutes40.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(minutes91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "PT-1M" + "'", str93, "PT-1M");
    }

    @Test
    public void test17843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17843");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds2 = seconds0.plus(seconds1);
        org.joda.time.PeriodType periodType3 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds4 = seconds0.negated();
        org.joda.time.PeriodType periodType5 = seconds4.getPeriodType();
        java.lang.String str6 = periodType5.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PeriodType[Seconds]" + "'", str6, "PeriodType[Seconds]");
    }

    @Test
    public void test17844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17844");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(35);
        org.joda.time.Weeks weeks2 = period1.toStandardWeeks();
        // The following exception was thrown during execution in test generation
        try {
            int int4 = period1.getValue(11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 11");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test17845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17845");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((int) (byte) 10);
        org.joda.time.Hours hours2 = period1.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType3 = hours2.getFieldType();
        org.joda.time.Hours hours4 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours6 = hours4.multipliedBy((int) 'a');
        org.joda.time.PeriodType periodType7 = hours4.getPeriodType();
        org.joda.time.Hours hours8 = hours2.plus(hours4);
        java.lang.String str9 = hours2.toString();
        java.lang.String str10 = hours2.toString();
        org.joda.time.Period period12 = org.joda.time.Period.days((int) (byte) 10);
        org.joda.time.Period period13 = period12.toPeriod();
        boolean boolean14 = hours2.equals((java.lang.Object) period12);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT1680H" + "'", str9, "PT1680H");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT1680H" + "'", str10, "PT1680H");
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test17846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17846");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period2.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType7 = period2.getPeriodType();
        org.joda.time.Hours hours8 = period2.toStandardHours();
        org.joda.time.Period period10 = org.joda.time.Period.millis((int) '#');
        int int11 = period10.getYears();
        org.joda.time.Hours hours12 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period10);
        boolean boolean13 = hours8.isLessThan(hours12);
        org.joda.time.Hours hours15 = hours12.plus(2147483645);
        int int16 = hours15.size();
        org.joda.time.Hours hours17 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours19 = hours17.multipliedBy((int) 'a');
        org.joda.time.Hours hours21 = hours19.minus((int) (short) 10);
        int int22 = hours21.getHours();
        org.joda.time.Hours hours24 = hours21.minus(10);
        org.joda.time.PeriodType periodType25 = hours24.getPeriodType();
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Hours hours27 = org.joda.time.Hours.hoursIn(readableInterval26);
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Hours hours29 = org.joda.time.Hours.hoursIn(readableInterval28);
        org.joda.time.Hours hours31 = hours29.multipliedBy(8);
        org.joda.time.Hours hours32 = hours27.plus(hours29);
        org.joda.time.Period period34 = org.joda.time.Period.millis((int) '#');
        int int35 = period34.getYears();
        org.joda.time.Period period37 = period34.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours38 = period34.toStandardHours();
        int int39 = hours38.size();
        org.joda.time.Hours hours41 = hours38.multipliedBy(10);
        org.joda.time.Hours hours42 = hours27.minus(hours38);
        org.joda.time.Period period43 = hours38.toPeriod();
        org.joda.time.Hours hours44 = hours24.minus(hours38);
        boolean boolean45 = hours15.isLessThan(hours44);
        org.joda.time.Hours hours46 = hours15.negated();
        org.joda.time.Period period50 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period52 = period50.minusMonths(0);
        org.joda.time.Period period54 = period50.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType55 = period50.getPeriodType();
        org.joda.time.PeriodType periodType56 = periodType55.withMinutesRemoved();
        org.joda.time.PeriodType periodType57 = periodType56.withHoursRemoved();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((long) (short) -1, periodType57, chronology58);
        org.joda.time.Period period61 = period59.plusSeconds(14400);
        java.lang.String str62 = period59.toString();
        org.joda.time.Hours hours63 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period59);
        boolean boolean64 = hours15.equals((java.lang.Object) period59);
        org.joda.time.Period period66 = period59.plusMonths((-97));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 87 + "'", int22 == 87);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PT0.001S" + "'", str62, "PT0.001S");
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(period66);
    }

    @Test
    public void test17847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17847");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) '#');
        int int2 = period1.getYears();
        org.joda.time.ReadablePeriod readablePeriod3 = null;
        org.joda.time.Period period4 = period1.withFields(readablePeriod3);
        org.joda.time.Period period7 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period8 = period7.negated();
        int int9 = period7.getHours();
        org.joda.time.Period period11 = org.joda.time.Period.days(10);
        org.joda.time.Period period13 = period11.plusMonths((int) 'a');
        org.joda.time.Period period15 = period11.plusSeconds((int) (short) 100);
        org.joda.time.Period period17 = period15.minusMonths((int) 'a');
        org.joda.time.Period period18 = period7.withFields((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Period period19 = period1.minus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Period period21 = period1.multipliedBy(0);
        org.joda.time.Period period24 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period25 = period24.negated();
        int int26 = period24.getHours();
        org.joda.time.Period period28 = org.joda.time.Period.days(10);
        org.joda.time.Period period30 = period28.plusMonths((int) 'a');
        org.joda.time.Period period32 = period28.plusSeconds((int) (short) 100);
        org.joda.time.Period period34 = period32.minusMonths((int) 'a');
        org.joda.time.Period period35 = period24.withFields((org.joda.time.ReadablePeriod) period34);
        org.joda.time.Hours hours36 = period24.toStandardHours();
        org.joda.time.Hours hours38 = hours36.minus((int) '#');
        org.joda.time.Hours hours39 = org.joda.time.Hours.ONE;
        int int40 = hours39.getHours();
        org.joda.time.Hours hours42 = hours39.multipliedBy((-95));
        org.joda.time.Hours hours44 = hours42.dividedBy((int) (short) 1);
        org.joda.time.Hours hours45 = hours36.plus(hours42);
        org.joda.time.Period period47 = org.joda.time.Period.millis((int) '#');
        int int48 = period47.getYears();
        org.joda.time.Hours hours49 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period47);
        int int50 = hours49.getHours();
        org.joda.time.Hours hours52 = hours49.multipliedBy((int) (short) 1);
        org.joda.time.Hours hours54 = hours49.multipliedBy((int) (short) 100);
        org.joda.time.Hours hours55 = hours45.minus(hours54);
        org.joda.time.DurationFieldType durationFieldType56 = hours55.getFieldType();
        org.joda.time.Period period58 = period21.withFieldAdded(durationFieldType56, 1);
        org.joda.time.Period period60 = period21.plusMinutes((-41));
        org.joda.time.Period period62 = period60.plusWeeks((int) (byte) 0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period62);
    }

    @Test
    public void test17848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17848");
        org.joda.time.Period period0 = new org.joda.time.Period();
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration2 = period0.toDurationFrom(readableInstant1);
        org.joda.time.Period period4 = period0.multipliedBy(0);
        org.joda.time.Period period6 = period0.minusMillis(4);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks(10);
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.DurationFieldType durationFieldType10 = weeks8.getFieldType();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeksIn(readableInterval15);
        boolean boolean17 = weeks14.isLessThan(weeks16);
        boolean boolean18 = weeks13.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = null;
        org.joda.time.Weeks weeks20 = weeks16.minus(weeks19);
        org.joda.time.DurationFieldType durationFieldType21 = weeks16.getFieldType();
        org.joda.time.Weeks weeks23 = weeks16.plus(52);
        org.joda.time.Weeks weeks24 = weeks16.negated();
        java.lang.String str25 = weeks16.toString();
        org.joda.time.Weeks weeks26 = weeks8.plus(weeks16);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.ZERO;
        java.lang.String str28 = weeks27.toString();
        int int29 = weeks27.size();
        org.joda.time.PeriodType periodType30 = weeks27.getPeriodType();
        org.joda.time.Weeks weeks32 = weeks27.minus(7);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.weeksIn(readableInterval37);
        boolean boolean39 = weeks36.isLessThan(weeks38);
        boolean boolean40 = weeks35.isGreaterThan(weeks38);
        org.joda.time.Weeks weeks41 = null;
        org.joda.time.Weeks weeks42 = weeks38.minus(weeks41);
        org.joda.time.DurationFieldType durationFieldType43 = weeks42.getFieldType();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.weeksIn(readableInterval49);
        boolean boolean51 = weeks48.isLessThan(weeks50);
        boolean boolean52 = weeks47.isGreaterThan(weeks50);
        boolean boolean53 = weeks44.isLessThan(weeks47);
        org.joda.time.Weeks weeks54 = weeks42.plus(weeks47);
        org.joda.time.Weeks weeks56 = weeks47.minus(2);
        org.joda.time.Weeks weeks58 = weeks56.dividedBy((-10));
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = weeks27.plus(weeks58);
        org.joda.time.Weeks weeks61 = weeks58.negated();
        org.joda.time.Weeks weeks62 = weeks26.plus(weeks61);
        org.joda.time.Weeks weeks64 = weeks61.dividedBy(59);
        org.joda.time.DurationFieldType durationFieldType65 = weeks64.getFieldType();
        int int66 = period6.indexOf(durationFieldType65);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P0W" + "'", str25, "P0W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P0W" + "'", str28, "P0W");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
    }

    @Test
    public void test17849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17849");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (short) 0);
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period1.plusMinutes(1);
        org.joda.time.Period period7 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period9 = period7.minusMonths(0);
        org.joda.time.Period period10 = period7.normalizedStandard();
        org.joda.time.MutablePeriod mutablePeriod11 = period10.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = period10.toDurationFrom(readableInstant12);
        org.joda.time.Period period14 = period10.normalizedStandard();
        org.joda.time.DurationFieldType durationFieldType16 = period14.getFieldType(0);
        java.lang.String str17 = durationFieldType16.toString();
        org.joda.time.Period period19 = period1.withField(durationFieldType16, 87);
        org.joda.time.Period period22 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period24 = period22.minusMonths(0);
        org.joda.time.Period period26 = period22.withMillis((int) (short) 0);
        int int27 = period26.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod28 = period26.toMutablePeriod();
        org.joda.time.Duration duration29 = period26.toStandardDuration();
        org.joda.time.Seconds seconds30 = duration29.toStandardSeconds();
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds33 = seconds31.plus(seconds32);
        org.joda.time.Seconds seconds35 = seconds31.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds36 = seconds30.minus(seconds35);
        int int37 = seconds36.size();
        org.joda.time.PeriodType periodType38 = seconds36.getPeriodType();
        org.joda.time.Seconds seconds40 = seconds36.plus(100);
        org.joda.time.Seconds seconds41 = seconds36.negated();
        boolean boolean42 = period19.equals((java.lang.Object) seconds36);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "years" + "'", str17, "years");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test17850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17850");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period2.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType7 = period2.getPeriodType();
        org.joda.time.Hours hours8 = period2.toStandardHours();
        org.joda.time.Period period10 = org.joda.time.Period.millis((int) '#');
        int int11 = period10.getYears();
        org.joda.time.Hours hours12 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period10);
        boolean boolean13 = hours8.isLessThan(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = hours8.getFieldType();
        int int15 = hours8.getHours();
        org.joda.time.Period period18 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period19 = period18.negated();
        int int20 = period18.getHours();
        org.joda.time.Period period22 = org.joda.time.Period.days(10);
        org.joda.time.Period period24 = period22.plusMonths((int) 'a');
        org.joda.time.Period period26 = period22.plusSeconds((int) (short) 100);
        org.joda.time.Period period28 = period26.minusMonths((int) 'a');
        org.joda.time.Period period29 = period18.withFields((org.joda.time.ReadablePeriod) period28);
        org.joda.time.Hours hours30 = period18.toStandardHours();
        org.joda.time.Hours hours32 = hours30.minus(100);
        org.joda.time.Hours hours33 = hours8.plus(hours32);
        org.joda.time.Hours hours35 = org.joda.time.Hours.hours((-95));
        org.joda.time.Hours hours36 = hours8.minus(hours35);
        org.joda.time.Hours hours37 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = hours37.getFieldType();
        org.joda.time.Period period41 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period42 = period41.negated();
        int int43 = period41.getHours();
        org.joda.time.Period period45 = org.joda.time.Period.days(10);
        org.joda.time.Period period47 = period45.plusMonths((int) 'a');
        org.joda.time.Period period49 = period45.plusSeconds((int) (short) 100);
        org.joda.time.Period period51 = period49.minusMonths((int) 'a');
        org.joda.time.Period period52 = period41.withFields((org.joda.time.ReadablePeriod) period51);
        org.joda.time.Hours hours53 = period41.toStandardHours();
        int int54 = hours53.getHours();
        org.joda.time.Hours hours55 = hours37.plus(hours53);
        org.joda.time.Hours hours56 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours56.dividedBy(100);
        org.joda.time.Period period61 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period63 = period61.minusMonths(0);
        org.joda.time.Period period65 = period63.minusSeconds(0);
        org.joda.time.Period period66 = period65.normalizedStandard();
        org.joda.time.Hours hours67 = period66.toStandardHours();
        boolean boolean68 = hours58.isLessThan(hours67);
        org.joda.time.Period period70 = org.joda.time.Period.millis((int) '#');
        int int71 = period70.getYears();
        org.joda.time.Hours hours72 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period70);
        org.joda.time.Period period74 = period70.multipliedBy((int) (byte) 0);
        org.joda.time.Hours hours75 = period74.toStandardHours();
        org.joda.time.Hours hours76 = hours58.minus(hours75);
        boolean boolean77 = hours53.isLessThan(hours75);
        org.joda.time.Hours hours78 = org.joda.time.Hours.ONE;
        java.lang.String str79 = hours78.toString();
        org.joda.time.Hours hours80 = hours78.negated();
        org.joda.time.Hours hours81 = hours75.plus(hours78);
        org.joda.time.Duration duration82 = hours75.toStandardDuration();
        org.joda.time.Hours hours83 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours85 = hours83.dividedBy((int) (short) 1);
        boolean boolean86 = hours75.isGreaterThan(hours85);
        boolean boolean87 = hours8.isGreaterThan(hours75);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "PT1H" + "'", str79, "PT1H");
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test17851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17851");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        boolean boolean4 = periodFormatter3.isParser();
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter3.withParseType(periodType6);
        org.joda.time.Days days9 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType10 = days9.getPeriodType();
        org.joda.time.PeriodType periodType11 = periodType10.withSecondsRemoved();
        org.joda.time.PeriodType periodType12 = periodType10.withYearsRemoved();
        java.lang.String str13 = periodType12.toString();
        org.joda.time.format.PeriodFormatter periodFormatter14 = periodFormatter8.withParseType(periodType12);
        org.joda.time.PeriodType periodType15 = periodFormatter14.getParseType();
        java.util.Locale locale16 = periodFormatter14.getLocale();
        java.util.Locale locale17 = periodFormatter14.getLocale();
        boolean boolean18 = periodFormatter14.isPrinter();
        java.util.Locale locale19 = null;
        org.joda.time.format.PeriodFormatter periodFormatter20 = periodFormatter14.withLocale(locale19);
        boolean boolean21 = periodFormatter14.isPrinter();
        java.util.Locale locale22 = null;
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter14.withLocale(locale22);
        org.joda.time.format.PeriodPrinter periodPrinter24 = periodFormatter14.getPrinter();
        java.util.Locale locale25 = null;
        org.joda.time.format.PeriodFormatter periodFormatter26 = periodFormatter14.withLocale(locale25);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period27 = org.joda.time.Period.parse("P18D", periodFormatter26);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PeriodType[Days]" + "'", str13, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodFormatter14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNull(locale16);
        org.junit.Assert.assertNull(locale17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodFormatter20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertNull(periodPrinter24);
        org.junit.Assert.assertNotNull(periodFormatter26);
    }

    @Test
    public void test17852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17852");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds4 = seconds2.plus(seconds3);
        org.joda.time.Seconds seconds6 = seconds2.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds7 = seconds1.plus(seconds2);
        org.joda.time.Seconds seconds9 = seconds1.plus((int) '4');
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.ONE;
        org.joda.time.Period period11 = seconds10.toPeriod();
        boolean boolean12 = seconds9.isGreaterThan(seconds10);
        org.joda.time.Seconds seconds14 = seconds10.multipliedBy(13);
        org.joda.time.Period period17 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period19 = period17.minusMonths(0);
        int int20 = period19.getYears();
        org.joda.time.Period period21 = period19.toPeriod();
        org.joda.time.Seconds seconds22 = period19.toStandardSeconds();
        org.joda.time.PeriodType periodType23 = seconds22.getPeriodType();
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.parseSeconds("PT0S");
        java.lang.String str26 = seconds25.toString();
        org.joda.time.Period period29 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period31 = period29.minusMonths(0);
        int int32 = period31.getYears();
        org.joda.time.Period period33 = period31.toPeriod();
        org.joda.time.Seconds seconds34 = period31.toStandardSeconds();
        boolean boolean35 = seconds25.isLessThan(seconds34);
        java.lang.String str36 = seconds34.toString();
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds39 = seconds37.plus(seconds38);
        java.lang.String str40 = seconds37.toString();
        org.joda.time.DurationFieldType durationFieldType41 = seconds37.getFieldType();
        org.joda.time.Seconds seconds43 = seconds37.multipliedBy(0);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.THREE;
        org.joda.time.Duration duration45 = seconds44.toStandardDuration();
        boolean boolean46 = seconds43.isGreaterThan(seconds44);
        org.joda.time.Seconds seconds47 = seconds34.plus(seconds44);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.seconds(56);
        org.joda.time.Seconds seconds51 = seconds49.plus(11);
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.seconds((int) '#');
        int int54 = seconds53.getSeconds();
        org.joda.time.Seconds seconds56 = seconds53.dividedBy((int) (short) 1);
        int int57 = seconds56.getSeconds();
        boolean boolean58 = seconds49.isLessThan(seconds56);
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds61 = seconds59.plus(seconds60);
        java.lang.String str62 = seconds59.toString();
        org.joda.time.DurationFieldType durationFieldType63 = seconds59.getFieldType();
        java.lang.String str64 = seconds59.toString();
        org.joda.time.Seconds seconds65 = seconds56.minus(seconds59);
        boolean boolean66 = seconds47.isLessThan(seconds59);
        org.joda.time.Seconds seconds67 = seconds22.minus(seconds47);
        org.joda.time.Seconds seconds68 = seconds10.minus(seconds47);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT0S" + "'", str26, "PT0S");
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT0S" + "'", str36, "PT0S");
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT2S" + "'", str40, "PT2S");
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 35 + "'", int54 == 35);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 35 + "'", int57 == 35);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PT2S" + "'", str62, "PT2S");
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT2S" + "'", str64, "PT2S");
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
    }

    @Test
    public void test17853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17853");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds7 = seconds5.plus(seconds6);
        org.joda.time.PeriodType periodType8 = seconds5.getPeriodType();
        org.joda.time.Period period11 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period12 = period11.negated();
        org.joda.time.DurationFieldType durationFieldType14 = period11.getFieldType((int) (short) 1);
        int int15 = periodType8.indexOf(durationFieldType14);
        org.joda.time.Period period16 = new org.joda.time.Period((long) ' ', periodType8);
        org.joda.time.format.PeriodFormatter periodFormatter17 = periodFormatter2.withParseType(periodType8);
        boolean boolean18 = periodFormatter2.isPrinter();
        java.util.Locale locale19 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType20 = periodFormatter2.getParseType();
        org.joda.time.format.PeriodParser periodParser21 = periodFormatter2.getParser();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(periodFormatter17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(locale19);
        org.junit.Assert.assertNull(periodType20);
        org.junit.Assert.assertNull(periodParser21);
    }

    @Test
    public void test17854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17854");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period4.minusSeconds(0);
        org.joda.time.Period period7 = period6.normalizedStandard();
        org.joda.time.Hours hours8 = period7.toStandardHours();
        org.joda.time.Hours hours10 = hours8.plus((int) (byte) -1);
        int int11 = hours10.getHours();
        org.joda.time.Period period13 = org.joda.time.Period.millis((int) '#');
        int int14 = period13.getYears();
        org.joda.time.Hours hours15 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period13);
        int int16 = hours15.getHours();
        org.joda.time.Hours hours17 = hours10.minus(hours15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours20 = hours18.multipliedBy((int) 'a');
        org.joda.time.Hours hours22 = hours20.minus((int) (short) 10);
        int int23 = hours22.getHours();
        org.joda.time.Hours hours25 = hours22.minus(10);
        org.joda.time.Hours hours27 = hours25.minus(56);
        org.joda.time.Hours hours28 = hours10.minus(hours25);
        org.joda.time.Hours hours30 = hours25.minus(5);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 87 + "'", int23 == 87);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
    }

    @Test
    public void test17855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17855");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.dayTime();
        org.joda.time.PeriodType periodType1 = periodType0.withMonthsRemoved();
        org.joda.time.PeriodType periodType2 = periodType0.withDaysRemoved();
        org.joda.time.PeriodType periodType3 = periodType0.withMillisRemoved();
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
    }

    @Test
    public void test17856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17856");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(400);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks(1);
        int int4 = weeks3.getWeeks();
        org.joda.time.Period period5 = weeks3.toPeriod();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeksIn(readableInterval7);
        boolean boolean9 = weeks6.isLessThan(weeks8);
        boolean boolean10 = weeks3.equals((java.lang.Object) weeks8);
        java.lang.String str11 = weeks8.toString();
        org.joda.time.Weeks weeks13 = weeks8.dividedBy(1491308);
        boolean boolean14 = weeks1.isLessThan(weeks8);
        org.joda.time.Weeks weeks16 = weeks8.minus((-36));
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P0W" + "'", str11, "P0W");
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks16);
    }

    @Test
    public void test17857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17857");
        org.joda.time.Period period8 = new org.joda.time.Period(2147483647, 999, 5, 52, 11, (int) (byte) 0, 2, 6);
        org.joda.time.Period period10 = period8.withMillis((-35791394));
        org.joda.time.Period period12 = period10.minusSeconds((-2147483548));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test17858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17858");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds4 = seconds2.plus(seconds3);
        org.joda.time.Seconds seconds6 = seconds2.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds7 = seconds1.plus(seconds2);
        org.joda.time.Duration duration8 = seconds2.toStandardDuration();
        org.joda.time.Period period10 = org.joda.time.Period.hours((int) '#');
        org.joda.time.Seconds seconds11 = period10.toStandardSeconds();
        boolean boolean12 = seconds2.isLessThan(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds15 = seconds13.plus(seconds14);
        org.joda.time.PeriodType periodType16 = seconds13.getPeriodType();
        int int17 = seconds13.size();
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.seconds((int) (byte) 10);
        boolean boolean21 = seconds19.equals((java.lang.Object) "PeriodType[StandardNoMinutes]");
        org.joda.time.Seconds seconds22 = seconds13.plus(seconds19);
        boolean boolean23 = seconds2.isGreaterThan(seconds13);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds26 = seconds24.plus(seconds25);
        java.lang.String str27 = seconds24.toString();
        org.joda.time.DurationFieldType durationFieldType28 = seconds24.getFieldType();
        org.joda.time.Seconds seconds30 = seconds24.multipliedBy(0);
        org.joda.time.Seconds seconds32 = seconds24.dividedBy((-1));
        org.joda.time.Seconds seconds33 = seconds2.minus(seconds24);
        org.joda.time.Period period38 = new org.joda.time.Period(5, (-2), (int) (short) 10, (-95));
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period38);
        org.joda.time.Seconds seconds40 = seconds2.minus(seconds39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.ZERO;
        org.joda.time.Seconds seconds43 = seconds41.plus(2147483645);
        org.joda.time.MutablePeriod mutablePeriod44 = seconds43.toMutablePeriod();
        boolean boolean45 = seconds2.isGreaterThan(seconds43);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT2S" + "'", str27, "PT2S");
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test17859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17859");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period13 = period12.negated();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration15 = period13.toDurationTo(readableInstant14);
        boolean boolean16 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration20 = duration15.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration20.toIntervalFrom(readableInstant21);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval22);
        org.joda.time.Period period27 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period29 = period27.minusMonths(0);
        org.joda.time.Minutes minutes30 = period29.toStandardMinutes();
        org.joda.time.Duration duration31 = minutes30.toStandardDuration();
        org.joda.time.Minutes minutes33 = minutes30.multipliedBy((int) (short) 1);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes36 = minutes34.plus(52);
        org.joda.time.Minutes minutes37 = minutes30.plus(minutes36);
        int int38 = minutes36.getMinutes();
        org.joda.time.Minutes minutes39 = minutes24.plus(minutes36);
        org.joda.time.Minutes minutes41 = minutes24.multipliedBy((int) '4');
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy(105);
        org.joda.time.PeriodType periodType44 = minutes43.getPeriodType();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-2147483596) + "'", int38 == (-2147483596));
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(periodType44);
    }

    @Test
    public void test17860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17860");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Duration duration2 = weeks1.toStandardDuration();
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        long long4 = duration2.getStandardDays();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 21L + "'", long4 == 21L);
    }

    @Test
    public void test17861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17861");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) 'a');
        org.joda.time.Duration duration3 = duration1.minus(1298798109705600000L);
        org.joda.time.Days days4 = org.joda.time.Days.TWO;
        org.joda.time.Days days5 = days4.negated();
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        int int7 = periodType6.size();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration1.toPeriod(periodType6, chronology8);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test17862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17862");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration6.toIntervalFrom(readableInstant7);
        org.joda.time.Duration duration9 = new org.joda.time.Duration((java.lang.Object) duration6);
        org.joda.time.Duration duration11 = duration6.withMillis((long) (byte) 1);
        org.joda.time.Duration duration13 = duration6.plus(286859L);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant14, periodType15);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
    }

    @Test
    public void test17863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17863");
        org.joda.time.Period period4 = new org.joda.time.Period((long) 35, (long) (byte) 1);
        org.joda.time.Period period5 = period4.toPeriod();
        org.joda.time.Period period7 = period5.withWeeks(0);
        org.joda.time.PeriodType periodType8 = period7.getPeriodType();
        org.joda.time.PeriodType periodType9 = periodType8.withMonthsRemoved();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((-35791394L), 378000L, periodType8, chronology10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds14 = seconds12.plus(seconds13);
        org.joda.time.PeriodType periodType15 = seconds12.getPeriodType();
        int int16 = seconds12.size();
        org.joda.time.PeriodType periodType17 = seconds12.getPeriodType();
        org.joda.time.Seconds seconds19 = seconds12.minus((int) (byte) -1);
        org.joda.time.Seconds seconds21 = seconds19.dividedBy((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        java.lang.String str23 = durationFieldType22.getName();
        org.joda.time.Period period25 = period11.withFieldAdded(durationFieldType22, 12);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "seconds" + "'", str23, "seconds");
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test17864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17864");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeksIn(readableInterval6);
        boolean boolean8 = weeks5.isLessThan(weeks7);
        boolean boolean9 = weeks4.isGreaterThan(weeks7);
        boolean boolean10 = weeks1.isLessThan(weeks4);
        org.joda.time.Duration duration11 = weeks1.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.Period period16 = period14.minusYears((-102));
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test17865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17865");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 268435455, (long) (byte) -1, chronology2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration5 = period3.toDurationTo(readableInstant4);
        org.joda.time.Period period7 = period3.plusMonths(0);
        org.joda.time.PeriodType periodType8 = period7.getPeriodType();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(periodType8);
    }

    @Test
    public void test17866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17866");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 10);
        org.joda.time.Duration duration2 = seconds1.toStandardDuration();
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = duration2.toPeriodTo(readableInstant4);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test17867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17867");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        boolean boolean14 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration16 = duration6.plus((long) (short) 10);
        org.joda.time.Period period19 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period21 = period19.minusMonths(0);
        int int22 = period21.getYears();
        org.joda.time.Period period24 = period21.plusYears((int) ' ');
        boolean boolean25 = duration16.equals((java.lang.Object) period24);
        org.joda.time.Period period28 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period30 = period28.minusMonths(0);
        org.joda.time.Minutes minutes31 = period30.toStandardMinutes();
        org.joda.time.Duration duration32 = minutes31.toStandardDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration35 = duration32.plus((long) (byte) 0);
        org.joda.time.Duration duration37 = duration32.withMillis((long) 1);
        boolean boolean38 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration32);
        long long39 = duration32.getStandardHours();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.yearMonthDay();
        java.lang.String str46 = periodType45.getName();
        boolean boolean48 = periodType45.equals((java.lang.Object) true);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant43, readableInstant44, periodType45);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((long) 0, (long) (-10), periodType45, chronology50);
        org.joda.time.Period period52 = duration32.toPeriodFrom(readableInstant40, periodType45);
        org.joda.time.Period period54 = org.joda.time.Period.seconds(2);
        boolean boolean55 = periodType45.equals((java.lang.Object) period54);
        int[] intArray56 = period54.getValues();
        org.joda.time.Period period58 = period54.withMillis((-118));
        org.joda.time.Period period60 = period54.minusMonths(0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "YearMonthDay" + "'", str46, "YearMonthDay");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0, 0, 0, 0, 0, 2, 0]");
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period60);
    }

    @Test
    public void test17868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17868");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withParseType(periodType5);
        org.joda.time.PeriodType periodType8 = periodFormatter2.getParseType();
        org.joda.time.format.PeriodPrinter periodPrinter9 = periodFormatter2.getPrinter();
        java.util.Locale locale10 = null;
        org.joda.time.format.PeriodFormatter periodFormatter11 = periodFormatter2.withLocale(locale10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.format.PeriodFormatter periodFormatter13 = periodFormatter11.withParseType(periodType12);
        java.util.Locale locale14 = null;
        org.joda.time.format.PeriodFormatter periodFormatter15 = periodFormatter13.withLocale(locale14);
        boolean boolean16 = periodFormatter15.isPrinter();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNull(periodType8);
        org.junit.Assert.assertNull(periodPrinter9);
        org.junit.Assert.assertNotNull(periodFormatter11);
        org.junit.Assert.assertNotNull(periodFormatter13);
        org.junit.Assert.assertNotNull(periodFormatter15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test17869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17869");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds7 = seconds5.plus(seconds6);
        org.joda.time.PeriodType periodType8 = seconds5.getPeriodType();
        org.joda.time.Period period11 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period12 = period11.negated();
        org.joda.time.DurationFieldType durationFieldType14 = period11.getFieldType((int) (short) 1);
        int int15 = periodType8.indexOf(durationFieldType14);
        org.joda.time.Period period16 = new org.joda.time.Period((long) ' ', periodType8);
        org.joda.time.format.PeriodFormatter periodFormatter17 = periodFormatter2.withParseType(periodType8);
        java.util.Locale locale18 = null;
        org.joda.time.format.PeriodFormatter periodFormatter19 = periodFormatter2.withLocale(locale18);
        java.util.Locale locale20 = null;
        org.joda.time.format.PeriodFormatter periodFormatter21 = periodFormatter19.withLocale(locale20);
        java.util.Locale locale22 = null;
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter21.withLocale(locale22);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period25 = periodFormatter23.parsePeriod("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(periodFormatter17);
        org.junit.Assert.assertNotNull(periodFormatter19);
        org.junit.Assert.assertNotNull(periodFormatter21);
        org.junit.Assert.assertNotNull(periodFormatter23);
    }

    @Test
    public void test17870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17870");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Duration duration3 = minutes1.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
    }

    @Test
    public void test17871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17871");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT1H0.036S");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test17872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17872");
        org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT0S");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Duration duration4 = duration1.plus((org.joda.time.ReadableDuration) duration3);
        org.joda.time.Duration duration6 = duration1.minus((long) (-1));
        org.joda.time.ReadableDuration readableDuration7 = null;
        boolean boolean8 = duration1.isShorterThan(readableDuration7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds17 = seconds15.plus(seconds16);
        org.joda.time.Seconds seconds19 = seconds16.plus((int) (byte) 0);
        org.joda.time.Seconds seconds21 = seconds19.minus((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType22 = org.joda.time.DurationFieldType.months();
        int int23 = seconds19.get(durationFieldType22);
        boolean boolean24 = period14.isSupported(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.hours();
        org.joda.time.DurationFieldType[] durationFieldTypeArray26 = new org.joda.time.DurationFieldType[] { durationFieldType22, durationFieldType25 };
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.forFields(durationFieldTypeArray26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.forFields(durationFieldTypeArray26);
        org.joda.time.PeriodType periodType29 = periodType28.withSecondsRemoved();
        org.joda.time.Period period30 = duration1.toPeriodFrom(readableInstant11, periodType28);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardSeconds((long) 8);
        org.joda.time.Duration duration34 = org.joda.time.Duration.parse("PT0S");
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Duration duration37 = duration34.plus((org.joda.time.ReadableDuration) duration36);
        int int38 = duration32.compareTo((org.joda.time.ReadableDuration) duration34);
        boolean boolean39 = duration1.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant40);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(durationFieldTypeArray26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test17873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17873");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(100);
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period2.withMonths(11);
        org.joda.time.Period period6 = period4.plusWeeks(14400);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test17874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17874");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withParseType(periodType5);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.format.PeriodFormatter periodFormatter9 = periodFormatter7.withParseType(periodType8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period16 = period14.minusMonths(0);
        org.joda.time.Period period18 = period14.minusSeconds((int) (byte) 100);
        org.joda.time.Days days19 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType20 = days19.getPeriodType();
        org.joda.time.PeriodType periodType21 = periodType20.withHoursRemoved();
        org.joda.time.PeriodType periodType22 = periodType20.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType23 = org.joda.time.DurationFieldType.days();
        boolean boolean24 = periodType22.isSupported(durationFieldType23);
        int int25 = period14.get(durationFieldType23);
        org.joda.time.Period period27 = period14.withHours(1);
        org.joda.time.Period period30 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period32 = period30.minusMonths(0);
        org.joda.time.Period period34 = period30.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType35 = period30.getPeriodType();
        org.joda.time.PeriodType periodType36 = periodType35.withMinutesRemoved();
        java.lang.String str37 = periodType36.toString();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((java.lang.Object) period14, periodType36, chronology38);
        org.joda.time.PeriodType periodType40 = periodType36.withHoursRemoved();
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant10, readableInstant11, periodType36);
        org.joda.time.PeriodType periodType42 = periodType36.withSecondsRemoved();
        org.joda.time.PeriodType periodType43 = periodType36.withYearsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter44 = periodFormatter7.withParseType(periodType43);
        java.util.Locale locale45 = periodFormatter44.getLocale();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(periodFormatter9);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PeriodType[StandardNoMinutes]" + "'", str37, "PeriodType[StandardNoMinutes]");
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodFormatter44);
        org.junit.Assert.assertNull(locale45);
    }

    @Test
    public void test17875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17875");
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType8 = days7.getPeriodType();
        org.joda.time.PeriodType periodType9 = periodType8.withHoursRemoved();
        org.joda.time.PeriodType periodType10 = periodType8.withSecondsRemoved();
        org.joda.time.Period period11 = duration5.toPeriodFrom(readableInstant6, periodType8);
        long long12 = duration5.getStandardHours();
        org.joda.time.Days days13 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType14 = days13.getPeriodType();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration5.toPeriod(periodType14, chronology15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType18 = periodType17.withMillisRemoved();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((java.lang.Object) period16, periodType18, chronology19);
        org.joda.time.Period period21 = new org.joda.time.Period((long) ' ', (long) (byte) -1, periodType18);
        org.joda.time.PeriodType periodType22 = periodType18.withMillisRemoved();
        org.joda.time.PeriodType periodType23 = periodType18.withHoursRemoved();
        org.joda.time.PeriodType periodType24 = periodType18.withMonthsRemoved();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((long) (-4083), (long) (-105), periodType24, chronology25);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
    }

    @Test
    public void test17876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17876");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.PeriodType periodType2 = periodType1.withDaysRemoved();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((-5L), periodType1, chronology3);
        org.joda.time.Period period6 = period4.withMonths(1491373);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test17877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17877");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType4 = days3.getPeriodType();
        org.joda.time.PeriodType periodType5 = periodType4.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType4.withSecondsRemoved();
        org.joda.time.Period period7 = duration1.toPeriodFrom(readableInstant2, periodType4);
        long long8 = duration1.getStandardHours();
        org.joda.time.Duration duration11 = duration1.withDurationAdded(10L, (-36));
        org.joda.time.Period period12 = duration11.toPeriod();
        org.joda.time.Duration duration15 = duration11.withDurationAdded((long) ' ', (int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant16);
        org.joda.time.Period period19 = period17.withDays((int) (short) 0);
        org.joda.time.Period period21 = period17.minusSeconds(100);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test17878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17878");
        org.joda.time.Period period1 = org.joda.time.Period.days(999);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration3 = period1.toDurationTo(readableInstant2);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration3);
    }

    @Test
    public void test17879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17879");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType4 = days3.getPeriodType();
        org.joda.time.PeriodType periodType5 = periodType4.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType4.withSecondsRemoved();
        org.joda.time.Period period7 = duration1.toPeriodFrom(readableInstant2, periodType4);
        long long8 = duration1.getMillis();
        org.joda.time.Period period9 = duration1.toPeriod();
        org.joda.time.Period period11 = period9.withYears((int) 'a');
        org.joda.time.Duration duration12 = period9.toStandardDuration();
        org.joda.time.Period period14 = period9.plusYears(103);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100000L + "'", long8 == 100000L);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test17880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17880");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.weeks(1);
        boolean boolean3 = weeks0.isGreaterThan(weeks2);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ZERO;
        java.lang.String str5 = weeks4.toString();
        int int6 = weeks4.size();
        org.joda.time.PeriodType periodType7 = weeks4.getPeriodType();
        org.joda.time.Weeks weeks9 = weeks4.minus(7);
        org.joda.time.PeriodType periodType10 = weeks9.getPeriodType();
        org.joda.time.Weeks weeks11 = weeks0.plus(weeks9);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.weeks(1);
        boolean boolean15 = weeks12.isGreaterThan(weeks14);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.MIN_VALUE;
        boolean boolean17 = weeks14.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeks(1);
        boolean boolean21 = weeks18.isGreaterThan(weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ZERO;
        java.lang.String str23 = weeks22.toString();
        int int24 = weeks22.size();
        org.joda.time.PeriodType periodType25 = weeks22.getPeriodType();
        org.joda.time.Weeks weeks27 = weeks22.minus(7);
        org.joda.time.PeriodType periodType28 = weeks27.getPeriodType();
        org.joda.time.Weeks weeks29 = weeks18.plus(weeks27);
        org.joda.time.Weeks weeks30 = weeks14.minus(weeks27);
        org.joda.time.Weeks weeks31 = weeks9.plus(weeks14);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((-10));
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.weeks(1);
        boolean boolean36 = weeks33.isGreaterThan(weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.Duration duration38 = weeks37.toStandardDuration();
        boolean boolean39 = weeks9.isGreaterThan(weeks37);
        org.joda.time.Weeks weeks41 = weeks37.multipliedBy((-214748364));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P0W" + "'", str5, "P0W");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P0W" + "'", str23, "P0W");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(weeks41);
    }

    @Test
    public void test17881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17881");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) '#');
        org.joda.time.Period period3 = period1.withYears((-1680));
        int int4 = period1.getHours();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test17882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17882");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(120000L, chronology1);
        org.joda.time.Seconds seconds3 = period2.toStandardSeconds();
        org.joda.time.Period period5 = period2.minusWeeks(65);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test17883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17883");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("P36WT100H-100S");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test17884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17884");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration4 = duration2.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalFrom(readableInstant7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval8);
        org.joda.time.Seconds seconds11 = seconds9.plus(0);
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        org.joda.time.Seconds seconds14 = seconds11.minus(13);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((-97));
        org.joda.time.Duration duration17 = seconds16.toStandardDuration();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds20 = seconds18.plus(seconds19);
        org.joda.time.Seconds seconds22 = seconds19.plus((int) (byte) 0);
        org.joda.time.Seconds seconds24 = seconds19.minus(8);
        org.joda.time.DurationFieldType durationFieldType25 = seconds19.getFieldType();
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds29 = seconds27.multipliedBy(10);
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds27);
        org.joda.time.Seconds seconds31 = seconds19.plus(seconds30);
        org.joda.time.Seconds seconds32 = seconds16.plus(seconds19);
        boolean boolean33 = seconds14.isGreaterThan(seconds16);
        org.joda.time.Seconds seconds35 = seconds14.multipliedBy((-118));
        int int36 = seconds14.getSeconds();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-13) + "'", int36 == (-13));
    }

    @Test
    public void test17885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17885");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours1.dividedBy(100);
        org.joda.time.Period period6 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period8 = period6.minusMonths(0);
        org.joda.time.Period period10 = period8.minusSeconds(0);
        org.joda.time.Period period11 = period10.normalizedStandard();
        org.joda.time.Hours hours12 = period11.toStandardHours();
        boolean boolean13 = hours3.isLessThan(hours12);
        boolean boolean14 = hours0.isLessThan(hours3);
        org.joda.time.Duration duration15 = hours3.toStandardDuration();
        org.joda.time.Period period16 = duration15.toPeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period16);
        org.joda.time.Period period19 = period16.minusMinutes((-53));
        org.joda.time.Period period21 = period19.withMillis(69);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test17886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17886");
        org.joda.time.Period period1 = new org.joda.time.Period((long) (-1));
        org.joda.time.Days days2 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        org.joda.time.PeriodType periodType4 = periodType3.withHoursRemoved();
        org.joda.time.PeriodType periodType5 = periodType3.withYearsRemoved();
        java.lang.String str6 = periodType3.toString();
        org.joda.time.Period period7 = period1.normalizedStandard(periodType3);
        org.joda.time.Period period9 = period1.plusMonths((-2147483646));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes10 = period9.toStandardMinutes();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Minutes as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PeriodType[Days]" + "'", str6, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test17887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17887");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period4.minusSeconds(0);
        org.joda.time.Period period8 = period6.minusWeeks(10);
        org.joda.time.Period period9 = period6.negated();
        org.joda.time.Period period11 = period6.minusMillis((int) (short) 0);
        org.joda.time.DurationFieldType[] durationFieldTypeArray12 = period6.getFieldTypes();
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.forFields(durationFieldTypeArray12);
        org.joda.time.DurationFieldType durationFieldType15 = periodType13.getFieldType((int) (byte) 0);
        org.joda.time.PeriodType periodType16 = periodType13.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType18 = periodType13.getFieldType(0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldTypeArray12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(durationFieldType18);
    }

    @Test
    public void test17888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17888");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Minutes minutes6 = period5.toStandardMinutes();
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes9 = minutes0.minus(minutes6);
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Minutes minutes17 = minutes15.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((java.lang.Object) minutes15, chronology18);
        org.joda.time.Minutes minutes20 = minutes0.minus(minutes15);
        org.joda.time.DurationFieldType durationFieldType22 = minutes20.getFieldType((int) (short) 0);
        org.joda.time.PeriodType periodType23 = minutes20.getPeriodType();
        org.joda.time.Period period24 = new org.joda.time.Period();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Duration duration26 = period24.toDurationFrom(readableInstant25);
        org.joda.time.Minutes minutes27 = period24.toStandardMinutes();
        org.joda.time.Minutes minutes29 = minutes27.multipliedBy(2147483647);
        org.joda.time.Minutes minutes31 = minutes27.minus(36);
        org.joda.time.Minutes minutes33 = minutes27.multipliedBy(87);
        org.joda.time.Minutes minutes34 = minutes20.plus(minutes27);
        org.joda.time.Minutes minutes36 = minutes34.dividedBy((int) (short) 10);
        org.joda.time.PeriodType periodType37 = minutes36.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(periodType37);
    }

    @Test
    public void test17889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17889");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        long long2 = duration1.getStandardSeconds();
        org.joda.time.Period period5 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period7 = period5.minusMonths(0);
        org.joda.time.Minutes minutes8 = period7.toStandardMinutes();
        org.joda.time.Duration duration9 = minutes8.toStandardDuration();
        org.joda.time.Minutes minutes11 = minutes8.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration12 = minutes8.toStandardDuration();
        org.joda.time.Period period15 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period17 = period15.minusMonths(0);
        org.joda.time.Minutes minutes18 = period17.toStandardMinutes();
        org.joda.time.Duration duration19 = minutes18.toStandardDuration();
        org.joda.time.Period period20 = duration19.toPeriod();
        boolean boolean21 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Period period24 = duration12.toPeriodTo(readableInstant22, periodType23);
        org.joda.time.Duration duration25 = duration1.plus((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration12.toPeriod(chronology26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardSeconds((long) 7);
        boolean boolean30 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Period period33 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period35 = period33.minusMonths(0);
        org.joda.time.Period period37 = period33.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType38 = period33.getPeriodType();
        org.joda.time.PeriodType periodType39 = periodType38.withMinutesRemoved();
        org.joda.time.PeriodType periodType40 = periodType39.withHoursRemoved();
        org.joda.time.Period period41 = duration12.toPeriod(periodType40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period47 = period45.minusMonths(0);
        org.joda.time.Period period49 = period47.minusSeconds(0);
        org.joda.time.Period period51 = period49.minusWeeks(10);
        org.joda.time.Period period52 = period49.negated();
        org.joda.time.Period period54 = period49.minusMillis((int) (short) 0);
        org.joda.time.Period period56 = period49.minusWeeks(0);
        org.joda.time.Duration duration57 = period49.toStandardDuration();
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration57);
        int int59 = duration12.compareTo((org.joda.time.ReadableDuration) duration57);
        java.lang.String str60 = duration57.toString();
        org.joda.time.Period period63 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period65 = period63.minusMonths(0);
        org.joda.time.Minutes minutes66 = period65.toStandardMinutes();
        org.joda.time.Duration duration67 = minutes66.toStandardDuration();
        org.joda.time.Period period70 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period72 = period70.minusMonths(0);
        org.joda.time.Minutes minutes73 = period72.toStandardMinutes();
        org.joda.time.Duration duration74 = minutes73.toStandardDuration();
        boolean boolean75 = duration67.isShorterThan((org.joda.time.ReadableDuration) duration74);
        org.joda.time.Duration duration77 = duration67.plus((long) (short) 10);
        long long78 = duration77.getStandardSeconds();
        org.joda.time.Duration duration79 = duration77.toDuration();
        long long80 = duration77.getStandardSeconds();
        org.joda.time.Period period81 = duration77.toPeriod();
        boolean boolean82 = duration57.isLongerThan((org.joda.time.ReadableDuration) duration77);
        org.joda.time.ReadableInstant readableInstant83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval84 = duration57.toIntervalFrom(readableInstant83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-128849018880L) + "'", long2 == (-128849018880L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PT-0.036S" + "'", str60, "PT-0.036S");
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test17890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17890");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.parse("P-7W");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"P-7W\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test17891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17891");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType1 = days0.getPeriodType();
        org.joda.time.Days days2 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        org.joda.time.Days days5 = days2.minus(0);
        org.joda.time.Days days6 = days5.negated();
        boolean boolean7 = days0.isGreaterThan(days5);
        org.joda.time.Days days8 = days0.negated();
        org.joda.time.DurationFieldType durationFieldType9 = days0.getFieldType();
        org.joda.time.Days days10 = org.joda.time.Days.MIN_VALUE;
        org.joda.time.Days days12 = days10.dividedBy(2147483647);
        org.joda.time.Days days13 = days0.minus(days12);
        org.joda.time.Days days15 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.Days days17 = days15.minus((int) '4');
        org.joda.time.Days days19 = days17.dividedBy((int) (short) 10);
        org.joda.time.Days days21 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days23 = days21.multipliedBy((int) (short) 100);
        org.joda.time.Days days24 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType25 = days24.getPeriodType();
        org.joda.time.Days days27 = days24.minus(0);
        org.joda.time.Days days28 = days21.minus(days27);
        org.joda.time.PeriodType periodType29 = days21.getPeriodType();
        org.joda.time.Days days31 = days21.dividedBy((int) 'a');
        boolean boolean32 = days17.isLessThan(days31);
        org.joda.time.Days days33 = days12.plus(days17);
        org.joda.time.Duration duration36 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration38 = duration36.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalFrom(readableInstant41);
        org.joda.time.Days days43 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval42);
        org.joda.time.Days days45 = days43.minus((int) '4');
        org.joda.time.Days days46 = org.joda.time.Days.FIVE;
        java.lang.String str47 = days46.toString();
        org.joda.time.Days days48 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType49 = days48.getPeriodType();
        org.joda.time.Days days51 = days48.minus(0);
        boolean boolean52 = days46.isLessThan(days51);
        org.joda.time.Days days53 = org.joda.time.Days.TWO;
        org.joda.time.Days days54 = days53.negated();
        org.joda.time.Days days55 = days53.negated();
        org.joda.time.Days days56 = days51.minus(days53);
        org.joda.time.Days days58 = days51.plus(13);
        org.joda.time.Days days59 = days45.plus(days51);
        boolean boolean60 = days12.isGreaterThan(days51);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P5D" + "'", str47, "P5D");
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(days53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(days59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test17892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17892");
        org.joda.time.Period period2 = new org.joda.time.Period(52L, (long) 97);
        org.joda.time.Period period4 = period2.withWeeks(572);
        org.joda.time.Hours hours5 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period2);
        boolean boolean7 = period2.equals((java.lang.Object) "PT10S");
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test17893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17893");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withParseType(periodType5);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType9 = days8.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withSecondsRemoved();
        org.joda.time.PeriodType periodType11 = periodType9.withYearsRemoved();
        java.lang.String str12 = periodType11.toString();
        org.joda.time.format.PeriodFormatter periodFormatter13 = periodFormatter7.withParseType(periodType11);
        org.joda.time.PeriodType periodType14 = periodFormatter13.getParseType();
        java.util.Locale locale15 = periodFormatter13.getLocale();
        java.util.Locale locale16 = periodFormatter13.getLocale();
        boolean boolean17 = periodFormatter13.isPrinter();
        java.util.Locale locale18 = null;
        org.joda.time.format.PeriodFormatter periodFormatter19 = periodFormatter13.withLocale(locale18);
        boolean boolean20 = periodFormatter13.isPrinter();
        java.util.Locale locale21 = null;
        org.joda.time.format.PeriodFormatter periodFormatter22 = periodFormatter13.withLocale(locale21);
        org.joda.time.format.PeriodPrinter periodPrinter23 = periodFormatter13.getPrinter();
        java.util.Locale locale24 = null;
        org.joda.time.format.PeriodFormatter periodFormatter25 = periodFormatter13.withLocale(locale24);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter25.withParseType(periodType26);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PeriodType[Days]" + "'", str12, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodFormatter13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNull(locale15);
        org.junit.Assert.assertNull(locale16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodFormatter19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(periodFormatter22);
        org.junit.Assert.assertNull(periodPrinter23);
        org.junit.Assert.assertNotNull(periodFormatter25);
        org.junit.Assert.assertNotNull(periodFormatter27);
    }

    @Test
    public void test17894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17894");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.Days days1 = org.joda.time.Days.ZERO;
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        boolean boolean3 = days1.equals((java.lang.Object) days2);
        org.joda.time.Days days4 = days0.plus(days2);
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        org.joda.time.Days days8 = days5.plus((-95));
        org.joda.time.Period period10 = org.joda.time.Period.days(10);
        org.joda.time.Period period12 = period10.plusMonths((int) 'a');
        org.joda.time.Period period14 = period10.plusSeconds((int) (short) 100);
        org.joda.time.Period period16 = period10.withMinutes(1);
        org.joda.time.Days days17 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period10);
        org.joda.time.Days days18 = days17.negated();
        org.joda.time.Days days20 = days18.minus(5);
        org.joda.time.Days days22 = days18.plus(59);
        org.joda.time.Days days23 = days5.plus(days18);
        org.joda.time.Days days24 = days2.plus(days18);
        org.joda.time.Days days25 = days2.negated();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
    }

    @Test
    public void test17895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17895");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Period period17 = duration16.toPeriod();
        boolean boolean18 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration21 = duration16.withDurationAdded(11L, (int) (byte) 10);
        org.joda.time.Period period24 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period26 = period24.minusMonths(0);
        org.joda.time.Minutes minutes27 = period26.toStandardMinutes();
        org.joda.time.Duration duration28 = minutes27.toStandardDuration();
        org.joda.time.Period period31 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period33 = period31.minusMonths(0);
        org.joda.time.Minutes minutes34 = period33.toStandardMinutes();
        org.joda.time.Duration duration35 = minutes34.toStandardDuration();
        boolean boolean36 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration38 = duration28.plus((long) (short) 10);
        long long39 = duration38.getStandardSeconds();
        org.joda.time.Duration duration40 = duration38.toDuration();
        java.lang.String str41 = duration38.toString();
        boolean boolean42 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration43 = duration38.toDuration();
        org.joda.time.Period period47 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period49 = period47.minusMonths(0);
        org.joda.time.Period period51 = period47.minusSeconds((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray52 = period47.getFieldTypes();
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.forFields(durationFieldTypeArray52);
        org.joda.time.PeriodType periodType54 = periodType53.withMillisRemoved();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((long) (byte) 10, periodType54, chronology55);
        java.lang.String str57 = periodType54.toString();
        org.joda.time.Period period58 = duration43.toPeriod(periodType54);
        org.joda.time.PeriodType periodType59 = periodType54.withSecondsRemoved();
        java.lang.String str60 = periodType59.toString();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT0.010S" + "'", str41, "PT0.010S");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(durationFieldTypeArray52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PeriodType[StandardNoMillis]" + "'", str57, "PeriodType[StandardNoMillis]");
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PeriodType[StandardNoMillisNoSeconds]" + "'", str60, "PeriodType[StandardNoMillisNoSeconds]");
    }

    @Test
    public void test17896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17896");
        org.joda.time.Days days1 = org.joda.time.Days.days((int) '4');
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((java.lang.Object) days1, chronology2);
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        java.lang.String str5 = days4.toString();
        org.joda.time.Days days7 = days4.multipliedBy((int) (byte) -1);
        org.joda.time.Days days8 = days4.negated();
        org.joda.time.Days days9 = org.joda.time.Days.ONE;
        org.joda.time.Days days10 = org.joda.time.Days.ONE;
        int int11 = days9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days10);
        org.joda.time.Days days13 = days10.multipliedBy((int) '#');
        org.joda.time.Days days14 = days8.minus(days10);
        org.joda.time.Days days16 = days8.minus((int) 'a');
        java.lang.String str17 = days16.toString();
        org.joda.time.Days days19 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days21 = days19.multipliedBy((int) (short) 100);
        org.joda.time.Days days22 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType23 = days22.getPeriodType();
        org.joda.time.Days days25 = days22.minus(0);
        org.joda.time.Days days26 = days19.minus(days25);
        boolean boolean27 = days16.isGreaterThan(days25);
        org.joda.time.Days days28 = days1.minus(days16);
        org.joda.time.Period period29 = days16.toPeriod();
        org.joda.time.Period period30 = period29.toPeriod();
        org.joda.time.Period period32 = period29.minusMonths(4088);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P5D" + "'", str5, "P5D");
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P-102D" + "'", str17, "P-102D");
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
    }

    @Test
    public void test17897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17897");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Minutes minutes6 = period5.toStandardMinutes();
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes9 = minutes0.minus(minutes6);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period13 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period15 = period13.minusMonths(0);
        org.joda.time.Minutes minutes16 = period15.toStandardMinutes();
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes19 = minutes10.minus(minutes16);
        org.joda.time.Period period22 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period24 = period22.minusMonths(0);
        org.joda.time.Minutes minutes25 = period24.toStandardMinutes();
        org.joda.time.Duration duration26 = minutes25.toStandardDuration();
        org.joda.time.Minutes minutes28 = minutes25.multipliedBy((int) (short) 1);
        int int29 = minutes10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes28);
        org.joda.time.Minutes minutes30 = minutes9.plus(minutes28);
        org.joda.time.Period period33 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period35 = period33.minusMonths(0);
        org.joda.time.Minutes minutes36 = period35.toStandardMinutes();
        org.joda.time.Minutes minutes38 = minutes36.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((java.lang.Object) minutes36, chronology39);
        org.joda.time.Period period41 = minutes36.toPeriod();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean43 = minutes36.isLessThan(minutes42);
        org.joda.time.Minutes minutes44 = minutes30.minus(minutes36);
        org.joda.time.Minutes minutes46 = minutes30.minus((int) '4');
        org.joda.time.PeriodType periodType47 = minutes30.getPeriodType();
        int int48 = periodType47.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
    }

    @Test
    public void test17898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17898");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(1);
        org.joda.time.PeriodType periodType2 = hours1.getPeriodType();
        org.joda.time.Hours hours3 = hours1.negated();
        org.joda.time.Hours hours5 = hours3.dividedBy(13);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
    }

    @Test
    public void test17899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17899");
        org.joda.time.Period period1 = org.joda.time.Period.days(10);
        org.joda.time.Minutes minutes2 = period1.toStandardMinutes();
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        int int4 = minutes2.getMinutes();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period8 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period10 = period8.minusMonths(0);
        org.joda.time.Minutes minutes11 = period10.toStandardMinutes();
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes14 = minutes5.minus(minutes11);
        org.joda.time.Period period17 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period19 = period17.minusMonths(0);
        org.joda.time.Minutes minutes20 = period19.toStandardMinutes();
        org.joda.time.Minutes minutes22 = minutes20.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((java.lang.Object) minutes20, chronology23);
        org.joda.time.Minutes minutes25 = minutes5.minus(minutes20);
        org.joda.time.DurationFieldType durationFieldType27 = minutes25.getFieldType((int) (short) 0);
        org.joda.time.PeriodType periodType28 = minutes25.getPeriodType();
        org.joda.time.Minutes minutes29 = minutes25.negated();
        org.joda.time.Minutes minutes30 = minutes2.minus(minutes29);
        org.joda.time.Minutes minutes31 = minutes30.negated();
        org.joda.time.Duration duration32 = minutes30.toStandardDuration();
        org.joda.time.Duration duration33 = duration32.toDuration();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = duration32.toPeriodFrom(readableInstant34);
        org.joda.time.Duration duration37 = duration32.plus((-1123199965L));
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration39 = minutes38.toStandardDuration();
        long long40 = duration39.getStandardSeconds();
        org.joda.time.Period period43 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period45 = period43.minusMonths(0);
        org.joda.time.Minutes minutes46 = period45.toStandardMinutes();
        org.joda.time.Duration duration47 = minutes46.toStandardDuration();
        org.joda.time.Minutes minutes49 = minutes46.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration50 = minutes46.toStandardDuration();
        org.joda.time.Period period53 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period55 = period53.minusMonths(0);
        org.joda.time.Minutes minutes56 = period55.toStandardMinutes();
        org.joda.time.Duration duration57 = minutes56.toStandardDuration();
        org.joda.time.Period period58 = duration57.toPeriod();
        boolean boolean59 = duration50.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Period period62 = duration50.toPeriodTo(readableInstant60, periodType61);
        org.joda.time.Duration duration63 = duration39.plus((org.joda.time.ReadableDuration) duration50);
        org.joda.time.Duration duration64 = duration63.toDuration();
        long long65 = duration64.getStandardMinutes();
        org.joda.time.Duration duration66 = duration32.minus((org.joda.time.ReadableDuration) duration64);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds67 = duration66.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Value cannot fit in an int: 128849883000");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 14400 + "'", int4 == 14400);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-128849018880L) + "'", long40 == (-128849018880L));
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-2147483648L) + "'", long65 == (-2147483648L));
        org.junit.Assert.assertNotNull(duration66);
    }

    @Test
    public void test17900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17900");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (-9500));
        org.joda.time.Seconds seconds2 = duration1.toStandardSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(seconds2);
    }

    @Test
    public void test17901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17901");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration6 = period4.toDurationFrom(readableInstant5);
        org.joda.time.Duration duration7 = duration6.toDuration();
        org.joda.time.Duration duration9 = duration6.minus((long) (-3));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
    }

    @Test
    public void test17902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17902");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Period period17 = duration16.toPeriod();
        boolean boolean18 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration21 = duration16.withDurationAdded(11L, (int) (byte) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period27 = period25.minusMonths(0);
        org.joda.time.Minutes minutes28 = period27.toStandardMinutes();
        org.joda.time.Duration duration29 = minutes28.toStandardDuration();
        org.joda.time.Minutes minutes31 = minutes28.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration32 = minutes28.toStandardDuration();
        org.joda.time.Period period35 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period37 = period35.minusMonths(0);
        org.joda.time.Minutes minutes38 = period37.toStandardMinutes();
        org.joda.time.Duration duration39 = minutes38.toStandardDuration();
        org.joda.time.Period period40 = duration39.toPeriod();
        boolean boolean41 = duration32.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Period period44 = duration32.toPeriodTo(readableInstant42, periodType43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = duration32.toPeriodFrom(readableInstant45);
        int int47 = period46.getMinutes();
        org.joda.time.Period period49 = period46.withHours(6);
        org.joda.time.PeriodType periodType50 = period46.getPeriodType();
        org.joda.time.PeriodType periodType51 = periodType50.withYearsRemoved();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant22, periodType50);
        long long53 = duration16.getStandardDays();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
    }

    @Test
    public void test17903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17903");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Period period17 = duration16.toPeriod();
        boolean boolean18 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Period period21 = duration9.toPeriodTo(readableInstant19, periodType20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = duration9.toPeriodFrom(readableInstant22);
        org.joda.time.Period period24 = period23.negated();
        org.joda.time.Period period25 = period24.toPeriod();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period33 = period31.minusMonths(0);
        org.joda.time.Period period35 = period31.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType36 = period31.getPeriodType();
        org.joda.time.PeriodType periodType37 = periodType36.withMinutesRemoved();
        org.joda.time.PeriodType periodType38 = periodType37.withHoursRemoved();
        org.joda.time.PeriodType periodType39 = periodType37.withHoursRemoved();
        int int40 = periodType37.size();
        org.joda.time.Period period41 = new org.joda.time.Period((long) 1, periodType37);
        org.joda.time.PeriodType periodType42 = periodType37.withMinutesRemoved();
        org.joda.time.PeriodType periodType43 = periodType37.withHoursRemoved();
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant26, readableInstant27, periodType43);
        org.joda.time.Period period45 = period24.normalizedStandard(periodType43);
        org.joda.time.Period period47 = period24.plusDays(999);
        org.joda.time.Duration duration48 = period47.toStandardDuration();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7 + "'", int40 == 7);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration48);
    }

    @Test
    public void test17904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17904");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ZERO;
        java.lang.String str1 = weeks0.toString();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeksIn(readableInterval6);
        boolean boolean8 = weeks5.isLessThan(weeks7);
        boolean boolean9 = weeks4.isGreaterThan(weeks7);
        org.joda.time.Weeks weeks11 = weeks7.plus((int) (short) 100);
        org.joda.time.Weeks weeks12 = weeks0.plus(weeks11);
        org.joda.time.Weeks weeks13 = weeks12.negated();
        java.lang.String str14 = weeks13.toString();
        java.lang.String str15 = weeks13.toString();
        org.joda.time.Weeks weeks17 = weeks13.multipliedBy((-35));
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeks(1);
        boolean boolean21 = weeks18.isGreaterThan(weeks20);
        java.lang.Object obj22 = null;
        boolean boolean23 = weeks20.equals(obj22);
        org.joda.time.Weeks weeks25 = weeks20.minus(0);
        int int26 = weeks25.getWeeks();
        org.joda.time.Weeks weeks28 = weeks25.dividedBy(268435465);
        boolean boolean29 = weeks17.isGreaterThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.multipliedBy(2);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "P0W" + "'", str1, "P0W");
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-100W" + "'", str14, "P-100W");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-100W" + "'", str15, "P-100W");
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(weeks31);
    }

    @Test
    public void test17905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17905");
        org.joda.time.Period period8 = new org.joda.time.Period((-207432000), (-103), 1, (-105), (-110), 4, (-2147483552), 16);
    }

    @Test
    public void test17906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17906");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks4 = weeks1.dividedBy(11);
        org.joda.time.PeriodType periodType5 = weeks1.getPeriodType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test17907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17907");
        org.joda.time.Period period1 = org.joda.time.Period.days((int) (short) 100);
        org.joda.time.Period period3 = period1.withHours(10);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test17908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17908");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds4 = seconds2.plus(seconds3);
        org.joda.time.Seconds seconds6 = seconds2.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds7 = seconds1.plus(seconds2);
        org.joda.time.Seconds seconds9 = seconds1.plus((int) '4');
        org.joda.time.Duration duration10 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds15 = seconds13.plus(seconds14);
        org.joda.time.Seconds seconds17 = seconds13.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds18 = seconds12.plus(seconds13);
        org.joda.time.Seconds seconds20 = seconds12.plus((int) '4');
        org.joda.time.Duration duration21 = seconds20.toStandardDuration();
        boolean boolean22 = seconds9.isLessThan(seconds20);
        org.joda.time.Seconds seconds23 = seconds9.negated();
        org.joda.time.Period period26 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period28 = period26.minusMonths(0);
        org.joda.time.Period period30 = period26.withMillis((int) (short) 0);
        int int31 = period30.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod32 = period30.toMutablePeriod();
        org.joda.time.Duration duration33 = period30.toStandardDuration();
        org.joda.time.Seconds seconds34 = duration33.toStandardSeconds();
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds37 = seconds35.plus(seconds36);
        org.joda.time.Seconds seconds39 = seconds35.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds40 = seconds34.minus(seconds39);
        int int41 = seconds40.size();
        org.joda.time.Seconds seconds42 = seconds23.plus(seconds40);
        org.joda.time.Seconds seconds44 = seconds40.dividedBy(999);
        org.joda.time.Period period49 = new org.joda.time.Period(7, 4, 11, (-2147483648));
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period49);
        org.joda.time.Seconds seconds52 = seconds50.minus((-36));
        org.joda.time.Seconds seconds53 = seconds40.minus(seconds52);
        org.joda.time.Period period56 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period58 = period56.minusMonths(0);
        org.joda.time.Period period60 = period56.withMillis((int) (short) 0);
        int int61 = period60.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod62 = period60.toMutablePeriod();
        org.joda.time.Duration duration63 = period60.toStandardDuration();
        org.joda.time.Seconds seconds64 = duration63.toStandardSeconds();
        org.joda.time.Seconds seconds65 = seconds64.negated();
        org.joda.time.Seconds seconds66 = seconds52.minus(seconds64);
        org.joda.time.Seconds seconds67 = seconds52.negated();
        org.joda.time.Seconds seconds69 = seconds52.minus((-36));
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds69);
    }

    @Test
    public void test17909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17909");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period2.minusSeconds((int) (byte) 100);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType8 = days7.getPeriodType();
        org.joda.time.PeriodType periodType9 = periodType8.withHoursRemoved();
        org.joda.time.PeriodType periodType10 = periodType8.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.days();
        boolean boolean12 = periodType10.isSupported(durationFieldType11);
        int int13 = period2.get(durationFieldType11);
        int int14 = period2.getDays();
        org.joda.time.Period period16 = period2.plusHours((int) '#');
        org.joda.time.Period period18 = period2.plusMillis(87);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period27 = period25.minusMonths(0);
        org.joda.time.Period period29 = period25.minusSeconds((int) (byte) 100);
        org.joda.time.Days days30 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType31 = days30.getPeriodType();
        org.joda.time.PeriodType periodType32 = periodType31.withHoursRemoved();
        org.joda.time.PeriodType periodType33 = periodType31.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.days();
        boolean boolean35 = periodType33.isSupported(durationFieldType34);
        int int36 = period25.get(durationFieldType34);
        org.joda.time.Period period38 = period25.withHours(1);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.yearDay();
        boolean boolean40 = period38.equals((java.lang.Object) periodType39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant21, readableInstant22, periodType39);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant19, readableInstant20, periodType39);
        org.joda.time.PeriodType periodType43 = periodType39.withMinutesRemoved();
        org.joda.time.PeriodType periodType44 = periodType39.withYearsRemoved();
        org.joda.time.Period period45 = period2.normalizedStandard(periodType39);
        org.joda.time.Period period46 = period2.negated();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
    }

    @Test
    public void test17910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17910");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(104);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test17911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17911");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (-1), chronology1);
        org.joda.time.Period period4 = period2.minusMonths((int) (byte) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration6 = period4.toDurationFrom(readableInstant5);
        org.joda.time.Duration duration8 = duration6.minus(151200L);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = duration8.toPeriodFrom(readableInstant9);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test17912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17912");
        org.joda.time.Period period1 = org.joda.time.Period.hours((int) (byte) 0);
        org.joda.time.Period period3 = period1.minusHours((-9500));
        org.joda.time.Days days4 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period3);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(days4);
    }

    @Test
    public void test17913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17913");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 40);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test17914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17914");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period6 = period2.minusSeconds((int) (byte) 100);
        org.joda.time.Days days7 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType8 = days7.getPeriodType();
        org.joda.time.PeriodType periodType9 = periodType8.withHoursRemoved();
        org.joda.time.PeriodType periodType10 = periodType8.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.days();
        boolean boolean12 = periodType10.isSupported(durationFieldType11);
        int int13 = period2.get(durationFieldType11);
        int int14 = period2.getDays();
        org.joda.time.Period period16 = period2.plusHours((int) '#');
        org.joda.time.Period period18 = period16.plusMonths((int) (short) 1);
        org.joda.time.Period period20 = period18.minusWeeks((int) (short) 1);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration22 = period18.toDurationTo(readableInstant21);
        org.joda.time.Period period23 = duration22.toPeriod();
        org.joda.time.Period period25 = period23.minusWeeks((int) (short) 100);
        org.joda.time.Days days26 = org.joda.time.Days.FIVE;
        java.lang.String str27 = days26.toString();
        org.joda.time.Days days29 = days26.multipliedBy((int) (byte) -1);
        org.joda.time.Days days30 = days26.negated();
        org.joda.time.Days days31 = org.joda.time.Days.ONE;
        org.joda.time.Days days32 = org.joda.time.Days.ONE;
        int int33 = days31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days32);
        org.joda.time.Days days35 = days32.multipliedBy((int) '#');
        org.joda.time.Days days36 = days30.minus(days32);
        org.joda.time.Days days38 = days30.minus((int) 'a');
        org.joda.time.DurationFieldType durationFieldType39 = days30.getFieldType();
        org.joda.time.DurationFieldType durationFieldType40 = days30.getFieldType();
        org.joda.time.Period period42 = period25.withFieldAdded(durationFieldType40, 0);
        int int43 = period42.getDays();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P5D" + "'", str27, "P5D");
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(days35);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
    }

    @Test
    public void test17915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17915");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        java.lang.String str10 = duration9.toString();
        org.joda.time.Period period11 = duration9.toPeriod();
        int int12 = period11.getWeeks();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(readableInstant13, readableInstant14);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration17 = minutes16.toStandardDuration();
        long long18 = duration17.getStandardSeconds();
        org.joda.time.Period period21 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period23 = period21.minusMonths(0);
        org.joda.time.Minutes minutes24 = period23.toStandardMinutes();
        org.joda.time.Duration duration25 = minutes24.toStandardDuration();
        org.joda.time.Minutes minutes27 = minutes24.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration28 = minutes24.toStandardDuration();
        org.joda.time.Period period31 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period33 = period31.minusMonths(0);
        org.joda.time.Minutes minutes34 = period33.toStandardMinutes();
        org.joda.time.Duration duration35 = minutes34.toStandardDuration();
        org.joda.time.Period period36 = duration35.toPeriod();
        boolean boolean37 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Period period40 = duration28.toPeriodTo(readableInstant38, periodType39);
        org.joda.time.Duration duration41 = duration17.plus((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Period period44 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period46 = period44.minusMonths(0);
        org.joda.time.Minutes minutes47 = period46.toStandardMinutes();
        org.joda.time.Duration duration48 = minutes47.toStandardDuration();
        org.joda.time.Period period51 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period53 = period51.minusMonths(0);
        org.joda.time.Minutes minutes54 = period53.toStandardMinutes();
        org.joda.time.Duration duration55 = minutes54.toStandardDuration();
        boolean boolean56 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant57);
        long long59 = duration55.getStandardHours();
        org.joda.time.Duration duration60 = duration28.minus((org.joda.time.ReadableDuration) duration55);
        int int61 = duration15.compareTo((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Period period63 = duration15.toPeriodFrom(readableInstant62);
        org.joda.time.Period period65 = org.joda.time.Period.minutes((int) (short) 10);
        org.joda.time.Period period67 = period65.withHours((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType69 = period67.getFieldType(3);
        org.joda.time.Period period71 = period63.withFieldAdded(durationFieldType69, 6);
        org.joda.time.Period period73 = period11.withField(durationFieldType69, (int) (byte) 100);
        java.lang.String str74 = durationFieldType69.getName();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0S" + "'", str10, "PT0S");
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-128849018880L) + "'", long18 == (-128849018880L));
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "days" + "'", str74, "days");
    }

    @Test
    public void test17916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17916");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Minutes minutes6 = period5.toStandardMinutes();
        org.joda.time.Duration duration7 = minutes6.toStandardDuration();
        org.joda.time.Period period10 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period12 = period10.minusMonths(0);
        org.joda.time.Minutes minutes13 = period12.toStandardMinutes();
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        boolean boolean15 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration17 = duration7.plus((long) (short) 10);
        long long18 = duration17.getStandardSeconds();
        org.joda.time.Duration duration19 = duration17.toDuration();
        java.lang.String str20 = duration17.toString();
        org.joda.time.Period period23 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period25 = period23.minusMonths(0);
        org.joda.time.Period period27 = period23.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType28 = period23.getPeriodType();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration30 = period23.toDurationTo(readableInstant29);
        long long31 = duration30.getStandardSeconds();
        boolean boolean32 = duration17.equals((java.lang.Object) long31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period34 = duration17.toPeriod();
        org.joda.time.Duration duration35 = period34.toStandardDuration();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT0.010S" + "'", str20, "PT0.010S");
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration35);
    }

    @Test
    public void test17917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17917");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.millis((long) (-520));
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withHoursRemoved();
        org.joda.time.PeriodType periodType8 = periodType6.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.days();
        boolean boolean10 = periodType8.isSupported(durationFieldType9);
        org.joda.time.PeriodType periodType11 = periodType8.withHoursRemoved();
        org.joda.time.PeriodType periodType12 = periodType8.withMonthsRemoved();
        org.joda.time.Period period13 = new org.joda.time.Period(100L, (long) (-190), periodType12);
        org.joda.time.PeriodType periodType14 = periodType12.withMinutesRemoved();
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType14);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType14);
    }

    @Test
    public void test17918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17918");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((-44));
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test17919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17919");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) '#');
        int int2 = period1.getYears();
        org.joda.time.ReadablePeriod readablePeriod3 = null;
        org.joda.time.Period period4 = period1.withFields(readablePeriod3);
        org.joda.time.Period period7 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period8 = period7.negated();
        int int9 = period7.getHours();
        org.joda.time.Period period11 = org.joda.time.Period.days(10);
        org.joda.time.Period period13 = period11.plusMonths((int) 'a');
        org.joda.time.Period period15 = period11.plusSeconds((int) (short) 100);
        org.joda.time.Period period17 = period15.minusMonths((int) 'a');
        org.joda.time.Period period18 = period7.withFields((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Period period19 = period1.minus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Period period21 = period1.withSeconds(1);
        org.joda.time.Period period23 = period1.minusMonths((-2));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test17920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17920");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType9 = days8.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withHoursRemoved();
        org.joda.time.PeriodType periodType11 = periodType9.withSecondsRemoved();
        org.joda.time.Period period12 = duration6.toPeriodFrom(readableInstant7, periodType9);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) (short) 1, periodType9, chronology13);
        org.joda.time.format.PeriodFormatter periodFormatter15 = periodFormatter2.withParseType(periodType9);
        org.joda.time.Days days16 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType17 = days16.getPeriodType();
        org.joda.time.PeriodType periodType18 = periodType17.withHoursRemoved();
        org.joda.time.PeriodType periodType19 = periodType17.withYearsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter20 = periodFormatter2.withParseType(periodType17);
        org.joda.time.format.PeriodPrinter periodPrinter21 = periodFormatter2.getPrinter();
        java.util.Locale locale22 = null;
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter2.withLocale(locale22);
        boolean boolean24 = periodFormatter2.isParser();
        boolean boolean25 = periodFormatter2.isPrinter();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodFormatter15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodFormatter20);
        org.junit.Assert.assertNull(periodPrinter21);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test17921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17921");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        boolean boolean14 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(readableInstant15, readableInstant16);
        org.joda.time.Duration duration18 = duration6.minus((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant19);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration6.toPeriod(chronology21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration6.toPeriod(chronology23);
        org.joda.time.Duration duration26 = duration6.minus(3120000L);
        org.joda.time.Period period27 = duration26.toPeriod();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(period27);
    }

    @Test
    public void test17922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17922");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        java.lang.String str1 = days0.toString();
        org.joda.time.Days days3 = days0.minus(8);
        org.joda.time.Days days5 = days0.plus(8);
        org.joda.time.Days days7 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days9 = days7.multipliedBy((int) (short) 100);
        org.joda.time.Days days10 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType11 = days10.getPeriodType();
        org.joda.time.Days days13 = days10.minus(0);
        org.joda.time.Days days14 = days7.minus(days13);
        org.joda.time.PeriodType periodType15 = days7.getPeriodType();
        org.joda.time.Days days16 = days5.plus(days7);
        org.joda.time.MutablePeriod mutablePeriod17 = days5.toMutablePeriod();
        org.joda.time.Days days19 = days5.minus(14405);
        org.joda.time.Days days20 = days5.negated();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "P5D" + "'", str1, "P5D");
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
    }

    @Test
    public void test17923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17923");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType7 = minutes5.getFieldType();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(durationFieldType7);
    }

    @Test
    public void test17924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17924");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours2 = hours0.dividedBy(100);
        org.joda.time.Period period5 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period7 = period5.minusMonths(0);
        org.joda.time.Period period9 = period7.minusSeconds(0);
        org.joda.time.Period period10 = period9.normalizedStandard();
        org.joda.time.Hours hours11 = period10.toStandardHours();
        boolean boolean12 = hours2.isLessThan(hours11);
        org.joda.time.Period period14 = org.joda.time.Period.millis((int) '#');
        int int15 = period14.getYears();
        org.joda.time.Hours hours16 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period14);
        org.joda.time.Period period18 = period14.multipliedBy((int) (byte) 0);
        org.joda.time.Hours hours19 = period18.toStandardHours();
        org.joda.time.Hours hours20 = hours2.minus(hours19);
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours22.dividedBy(100);
        org.joda.time.Period period27 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period29 = period27.minusMonths(0);
        org.joda.time.Period period31 = period29.minusSeconds(0);
        org.joda.time.Period period32 = period31.normalizedStandard();
        org.joda.time.Hours hours33 = period32.toStandardHours();
        boolean boolean34 = hours24.isLessThan(hours33);
        boolean boolean35 = hours21.isLessThan(hours24);
        org.joda.time.Duration duration36 = hours24.toStandardDuration();
        java.lang.String str37 = hours24.toString();
        org.joda.time.Period period39 = org.joda.time.Period.millis((int) '#');
        int int40 = period39.getYears();
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.Period period42 = period39.withFields(readablePeriod41);
        org.joda.time.Hours hours43 = period39.toStandardHours();
        org.joda.time.Hours hours44 = hours24.minus(hours43);
        org.joda.time.Hours hours45 = hours19.minus(hours24);
        org.joda.time.Hours hours47 = hours45.plus(52);
        org.joda.time.Hours hours49 = hours47.minus(87);
        org.joda.time.Hours hours51 = hours49.multipliedBy((-116));
        org.joda.time.Hours hours53 = hours49.plus((-38));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT0H" + "'", str37, "PT0H");
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours53);
    }

    @Test
    public void test17925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17925");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks3 = weeks1.dividedBy((int) (byte) -1);
        org.joda.time.Weeks weeks4 = null;
        org.joda.time.Weeks weeks5 = weeks3.minus(weeks4);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((java.lang.Object) weeks3, chronology6);
        org.joda.time.Duration duration8 = weeks3.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Duration duration12 = period10.toDurationFrom(readableInstant11);
        org.joda.time.Duration duration13 = new org.joda.time.Duration((java.lang.Object) duration12);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test17926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17926");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(2);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours4 = hours2.minus(hours3);
        boolean boolean5 = hours1.isLessThan(hours2);
        org.joda.time.Hours hours7 = hours2.dividedBy((-14370));
        org.joda.time.Hours hours8 = hours2.negated();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
    }

    @Test
    public void test17927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17927");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (-89));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds((long) 10);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds8 = seconds6.plus(seconds7);
        org.joda.time.Seconds seconds10 = seconds6.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds11 = seconds5.plus(seconds6);
        org.joda.time.Duration duration12 = seconds6.toStandardDuration();
        org.joda.time.Duration duration13 = duration3.minus((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration15 = new org.joda.time.Duration((-128849018880L));
        boolean boolean16 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration17 = duration3.toDuration();
        org.joda.time.Duration duration18 = duration1.plus((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = duration1.withDurationAdded((long) (-49), 6);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration21);
    }

    @Test
    public void test17928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17928");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(12000000L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test17929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17929");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = minutes2.plus((int) (byte) -1);
        org.joda.time.Period period7 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period9 = period7.minusMonths(0);
        org.joda.time.Minutes minutes10 = period9.toStandardMinutes();
        org.joda.time.Duration duration11 = minutes10.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Interval interval13 = duration11.toIntervalFrom(readableInstant12);
        org.joda.time.Period period16 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period16);
        org.joda.time.Period period20 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period22 = period20.minusMonths(0);
        org.joda.time.Minutes minutes23 = period22.toStandardMinutes();
        org.joda.time.Minutes minutes24 = minutes17.minus(minutes23);
        int int25 = minutes24.size();
        boolean boolean26 = duration11.equals((java.lang.Object) minutes24);
        org.joda.time.Minutes minutes28 = minutes24.multipliedBy(0);
        org.joda.time.Minutes minutes29 = minutes2.minus(minutes28);
        org.joda.time.PeriodType periodType30 = minutes28.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test17930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17930");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        int int5 = period4.getYears();
        org.joda.time.Period period7 = period4.plusYears((int) ' ');
        org.joda.time.Period period9 = period4.plusMinutes((-1));
        org.joda.time.Period period11 = org.joda.time.Period.weeks(7);
        org.joda.time.Period period14 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period16 = period14.minusMonths(0);
        org.joda.time.Minutes minutes17 = period16.toStandardMinutes();
        org.joda.time.Duration duration18 = minutes17.toStandardDuration();
        org.joda.time.Minutes minutes20 = minutes17.multipliedBy((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType21 = minutes17.getFieldType();
        org.joda.time.Period period23 = period11.withFieldAdded(durationFieldType21, (int) (byte) 1);
        boolean boolean24 = period9.isSupported(durationFieldType21);
        java.lang.String str25 = durationFieldType21.getName();
        java.lang.String str26 = durationFieldType21.getName();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "minutes" + "'", str25, "minutes");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "minutes" + "'", str26, "minutes");
    }

    @Test
    public void test17931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17931");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours(84L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test17932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17932");
        org.joda.time.Period period1 = org.joda.time.Period.hours((int) (short) 10);
        org.joda.time.Period period3 = period1.plusYears((int) (short) 0);
        org.joda.time.Period period5 = period1.plusMillis(11);
        org.joda.time.Seconds seconds6 = period1.toStandardSeconds();
        org.joda.time.Duration duration7 = seconds6.toStandardDuration();
        org.joda.time.Duration duration8 = duration7.toDuration();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration8);
    }

    @Test
    public void test17933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17933");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((java.lang.Object) hours1, chronology2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours5);
        org.joda.time.Hours hours7 = hours1.plus(hours6);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
    }

    @Test
    public void test17934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17934");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period5 = period2.normalizedStandard();
        org.joda.time.Period period6 = period5.toPeriod();
        org.joda.time.Minutes minutes7 = period5.toStandardMinutes();
        org.joda.time.Period period10 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period12 = period10.minusMonths(0);
        org.joda.time.Minutes minutes13 = period12.toStandardMinutes();
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Period period15 = duration14.toPeriod();
        org.joda.time.Period period18 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period20 = period18.minusMonths(0);
        org.joda.time.Minutes minutes21 = period20.toStandardMinutes();
        org.joda.time.Duration duration22 = minutes21.toStandardDuration();
        org.joda.time.Minutes minutes24 = minutes21.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration25 = minutes21.toStandardDuration();
        org.joda.time.Period period28 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period30 = period28.minusMonths(0);
        org.joda.time.Minutes minutes31 = period30.toStandardMinutes();
        org.joda.time.Duration duration32 = minutes31.toStandardDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        boolean boolean34 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration32);
        boolean boolean35 = duration14.isEqual((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration37 = duration14.plus((long) (short) 100);
        org.joda.time.Duration duration39 = duration37.minus((long) '4');
        org.joda.time.Minutes minutes40 = duration37.toStandardMinutes();
        boolean boolean41 = minutes7.isLessThan(minutes40);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes40);
        org.joda.time.Period period45 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period47 = period45.minusMonths(0);
        org.joda.time.Minutes minutes48 = period47.toStandardMinutes();
        org.joda.time.Duration duration49 = minutes48.toStandardDuration();
        org.joda.time.Minutes minutes51 = minutes48.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration52 = minutes48.toStandardDuration();
        org.joda.time.Period period55 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period56 = period55.negated();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Duration duration58 = period56.toDurationTo(readableInstant57);
        boolean boolean59 = duration52.isShorterThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration62 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration63 = duration58.plus((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration65 = duration62.withMillis(100L);
        java.lang.String str66 = duration65.toString();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Interval interval68 = duration65.toIntervalTo(readableInstant67);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval68);
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval68);
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval68);
        int int72 = minutes71.size();
        org.joda.time.Minutes minutes73 = minutes42.minus(minutes71);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT0.100S" + "'", str66, "PT0.100S");
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(minutes73);
    }

    @Test
    public void test17935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17935");
        org.joda.time.Period period1 = org.joda.time.Period.months((int) '#');
        org.joda.time.Period period2 = period1.negated();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration4 = period2.toDurationFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration4.toPeriod(chronology5);
        org.joda.time.Duration duration8 = new org.joda.time.Duration(52L);
        org.joda.time.Duration duration9 = duration4.plus((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Period period11 = org.joda.time.Period.millis((int) '#');
        int int12 = period11.getYears();
        org.joda.time.ReadablePeriod readablePeriod13 = null;
        org.joda.time.Period period14 = period11.withFields(readablePeriod13);
        org.joda.time.Period period17 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period18 = period17.negated();
        int int19 = period17.getHours();
        org.joda.time.Period period21 = org.joda.time.Period.days(10);
        org.joda.time.Period period23 = period21.plusMonths((int) 'a');
        org.joda.time.Period period25 = period21.plusSeconds((int) (short) 100);
        org.joda.time.Period period27 = period25.minusMonths((int) 'a');
        org.joda.time.Period period28 = period17.withFields((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Period period29 = period11.minus((org.joda.time.ReadablePeriod) period28);
        org.joda.time.Period period31 = period11.minusWeeks((int) (byte) 1);
        org.joda.time.Period period34 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period36 = period34.minusMonths(0);
        org.joda.time.Minutes minutes37 = period36.toStandardMinutes();
        org.joda.time.Duration duration38 = minutes37.toStandardDuration();
        org.joda.time.Minutes minutes40 = minutes37.multipliedBy((int) (short) 1);
        org.joda.time.Minutes minutes42 = minutes40.dividedBy((-36));
        org.joda.time.Period period45 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period47 = period45.minusMonths(0);
        org.joda.time.Minutes minutes48 = period47.toStandardMinutes();
        org.joda.time.Duration duration49 = minutes48.toStandardDuration();
        org.joda.time.Minutes minutes51 = minutes48.multipliedBy((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType52 = minutes48.getFieldType();
        boolean boolean53 = minutes42.equals((java.lang.Object) minutes48);
        org.joda.time.DurationFieldType durationFieldType54 = minutes48.getFieldType();
        org.joda.time.Period period55 = period31.minus((org.joda.time.ReadablePeriod) minutes48);
        org.joda.time.PeriodType periodType56 = minutes48.getPeriodType();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration4.toPeriod(periodType56, chronology57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = duration4.toPeriodTo(readableInstant59);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period60);
    }

    @Test
    public void test17936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17936");
        org.joda.time.Period period1 = org.joda.time.Period.hours(0);
        org.joda.time.Period period3 = period1.withYears((int) (byte) 10);
        org.joda.time.Period period5 = period1.plusMinutes((-6));
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        org.joda.time.Period period14 = duration13.toPeriod();
        org.joda.time.Duration duration16 = duration13.plus((long) (byte) 0);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.minutes();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((java.lang.Object) duration16, periodType18, chronology19);
        org.joda.time.PeriodType periodType21 = periodType18.withDaysRemoved();
        org.joda.time.PeriodType periodType22 = periodType21.withDaysRemoved();
        org.joda.time.PeriodType periodType23 = periodType22.withYearsRemoved();
        org.joda.time.Period period24 = period5.normalizedStandard(periodType23);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period26 = period24.plusMillis(102);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period24);
    }

    @Test
    public void test17937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17937");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period13 = period12.negated();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration15 = period13.toDurationTo(readableInstant14);
        boolean boolean16 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration20 = duration15.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = duration20.toPeriodTo(readableInstant21);
        long long23 = duration20.getStandardSeconds();
        org.joda.time.Minutes minutes24 = duration20.toStandardMinutes();
        org.joda.time.Period period27 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period29 = period27.minusMonths(0);
        org.joda.time.Minutes minutes30 = period29.toStandardMinutes();
        org.joda.time.Duration duration31 = minutes30.toStandardDuration();
        org.joda.time.Period period34 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period36 = period34.minusMonths(0);
        org.joda.time.Minutes minutes37 = period36.toStandardMinutes();
        org.joda.time.Duration duration38 = minutes37.toStandardDuration();
        boolean boolean39 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration41 = duration31.plus((long) (short) 10);
        org.joda.time.Period period42 = duration31.toPeriod();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period48 = period46.minusMonths(0);
        org.joda.time.Minutes minutes49 = period48.toStandardMinutes();
        org.joda.time.Duration duration50 = minutes49.toStandardDuration();
        org.joda.time.Period period51 = duration50.toPeriod();
        org.joda.time.Duration duration53 = duration50.plus((long) (byte) 0);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration53);
        org.joda.time.Period period55 = duration53.toPeriod();
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Period period57 = duration53.toPeriod(periodType56);
        boolean boolean58 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period66 = period64.minusMonths(0);
        org.joda.time.Period period68 = period64.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType69 = period64.getPeriodType();
        org.joda.time.PeriodType periodType70 = periodType69.withMinutesRemoved();
        org.joda.time.PeriodType periodType71 = periodType70.withHoursRemoved();
        org.joda.time.Period period72 = new org.joda.time.Period(readableInstant60, readableInstant61, periodType70);
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, readableInstant59, periodType70);
        boolean boolean74 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration76 = duration20.minus((long) ' ');
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(duration76);
    }

    @Test
    public void test17938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17938");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period3 = period2.negated();
        int int4 = period2.getHours();
        org.joda.time.MutablePeriod mutablePeriod5 = period2.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod6 = period2.toMutablePeriod();
        org.joda.time.Period period7 = period2.negated();
        java.lang.String str8 = period7.toString();
        org.joda.time.Minutes minutes9 = period7.toStandardMinutes();
        org.joda.time.PeriodType periodType10 = period7.getPeriodType();
        org.joda.time.Period period13 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period15 = period13.minusMonths(0);
        org.joda.time.Minutes minutes16 = period15.toStandardMinutes();
        org.joda.time.Duration duration17 = minutes16.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period22 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period24 = period22.minusMonths(0);
        org.joda.time.Minutes minutes25 = period24.toStandardMinutes();
        org.joda.time.Minutes minutes27 = minutes25.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes28 = minutes19.minus(minutes25);
        org.joda.time.Period period31 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period33 = period31.minusMonths(0);
        org.joda.time.Minutes minutes34 = period33.toStandardMinutes();
        org.joda.time.Minutes minutes36 = minutes34.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((java.lang.Object) minutes34, chronology37);
        org.joda.time.Minutes minutes39 = minutes19.minus(minutes34);
        org.joda.time.DurationFieldType durationFieldType41 = minutes39.getFieldType((int) (short) 0);
        org.joda.time.PeriodType periodType42 = minutes39.getPeriodType();
        org.joda.time.Period period43 = duration17.toPeriodTo(readableInstant18, periodType42);
        boolean boolean44 = periodType10.equals((java.lang.Object) readableInstant18);
        int int45 = periodType10.size();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT0.036S" + "'", str8, "PT0.036S");
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8 + "'", int45 == 8);
    }

    @Test
    public void test17939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17939");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Minutes minutes6 = period5.toStandardMinutes();
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes9 = minutes0.minus(minutes6);
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Minutes minutes18 = minutes15.multipliedBy((int) (short) 1);
        int int19 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes18);
        org.joda.time.DurationFieldType durationFieldType20 = minutes18.getFieldType();
        org.joda.time.DurationFieldType durationFieldType21 = org.joda.time.DurationFieldType.weeks();
        org.joda.time.Chronology chronology22 = null;
        boolean boolean23 = durationFieldType21.isSupported(chronology22);
        boolean boolean24 = minutes18.isSupported(durationFieldType21);
        java.lang.String str25 = durationFieldType21.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "weeks" + "'", str25, "weeks");
    }

    @Test
    public void test17940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17940");
        org.joda.time.Period period2 = new org.joda.time.Period((-5820000L), (long) 118);
    }

    @Test
    public void test17941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17941");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType4 = days3.getPeriodType();
        org.joda.time.PeriodType periodType5 = periodType4.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType4.withSecondsRemoved();
        org.joda.time.Period period7 = duration1.toPeriodFrom(readableInstant2, periodType4);
        java.lang.String str8 = duration1.toString();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = duration1.toPeriodTo(readableInstant9);
        java.lang.String str11 = duration1.toString();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration1.toPeriod(chronology12);
        org.joda.time.Duration duration16 = new org.joda.time.Duration(3120000L, (long) 268435470);
        boolean boolean17 = duration1.equals((java.lang.Object) 268435470);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT100S" + "'", str8, "PT100S");
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT100S" + "'", str11, "PT100S");
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test17942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17942");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) 0);
        java.lang.String str2 = duration1.toString();
        org.joda.time.Seconds seconds3 = duration1.toStandardSeconds();
        org.joda.time.Duration duration5 = org.joda.time.Duration.parse("PT0S");
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Duration duration8 = duration5.plus((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration10 = duration5.plus((long) 2147483647);
        int int11 = duration1.compareTo((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableDuration readableDuration12 = null;
        boolean boolean13 = duration10.isEqual(readableDuration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds18 = seconds16.plus(seconds17);
        org.joda.time.PeriodType periodType19 = seconds16.getPeriodType();
        org.joda.time.Period period22 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period23 = period22.negated();
        org.joda.time.DurationFieldType durationFieldType25 = period22.getFieldType((int) (short) 1);
        int int26 = periodType19.indexOf(durationFieldType25);
        org.joda.time.Period period27 = new org.joda.time.Period((long) ' ', periodType19);
        int int28 = periodType19.size();
        org.joda.time.Period period29 = duration10.toPeriodTo(readableInstant14, periodType19);
        org.joda.time.Duration duration31 = duration10.plus(59L);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0S" + "'", str2, "PT0S");
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
    }

    @Test
    public void test17943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17943");
        org.joda.time.Period period1 = new org.joda.time.Period((long) 0);
        org.joda.time.Period period3 = period1.plusMonths((int) '4');
        org.joda.time.Period period4 = period1.toPeriod();
        org.joda.time.Period period6 = period4.withMonths(105);
        org.joda.time.Period period8 = period4.minusDays(4);
        org.joda.time.Period period10 = period8.minusMillis(11);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test17944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17944");
        org.joda.time.Period period1 = org.joda.time.Period.days(104);
        org.joda.time.Period period2 = period1.toPeriod();
        int int3 = period2.getWeeks();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test17945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17945");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        java.lang.String str1 = days0.toString();
        org.joda.time.Days days3 = days0.multipliedBy((int) (byte) -1);
        org.joda.time.Days days4 = days0.negated();
        org.joda.time.Duration duration5 = days0.toStandardDuration();
        org.joda.time.Days days6 = duration5.toStandardDays();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration5.toPeriod(chronology7);
        long long9 = duration5.getMillis();
        org.joda.time.Duration duration10 = new org.joda.time.Duration((java.lang.Object) long9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period17 = period15.minusMonths(0);
        org.joda.time.Period period18 = period15.normalizedStandard();
        org.joda.time.MutablePeriod mutablePeriod19 = period18.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Duration duration21 = period18.toDurationFrom(readableInstant20);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration21.toPeriod(chronology22);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) 100);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Days days27 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType28 = days27.getPeriodType();
        org.joda.time.PeriodType periodType29 = periodType28.withHoursRemoved();
        org.joda.time.PeriodType periodType30 = periodType28.withSecondsRemoved();
        org.joda.time.PeriodType periodType31 = periodType28.withMinutesRemoved();
        org.joda.time.PeriodType periodType32 = periodType31.withWeeksRemoved();
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant26, periodType32);
        org.joda.time.Duration duration34 = duration21.minus((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant35, periodType36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = duration25.toPeriodFrom(readableInstant38);
        org.joda.time.Days days41 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days43 = days41.multipliedBy((int) (short) 100);
        org.joda.time.Days days44 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType45 = days44.getPeriodType();
        org.joda.time.Days days47 = days44.minus(0);
        org.joda.time.Days days48 = days41.minus(days47);
        org.joda.time.Days days50 = days41.minus(35);
        org.joda.time.Days days52 = days41.plus(14400);
        org.joda.time.PeriodType periodType53 = days41.getPeriodType();
        org.joda.time.PeriodType periodType54 = days41.getPeriodType();
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration25, periodType54);
        org.joda.time.PeriodType periodType56 = periodType54.withMinutesRemoved();
        org.joda.time.Period period57 = duration10.toPeriodFrom(readableInstant11, periodType56);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Days days61 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType62 = days61.getPeriodType();
        org.joda.time.PeriodType periodType63 = periodType62.withHoursRemoved();
        org.joda.time.PeriodType periodType64 = periodType62.withSecondsRemoved();
        org.joda.time.Period period65 = duration59.toPeriodFrom(readableInstant60, periodType62);
        boolean boolean66 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "P5D" + "'", str1, "P5D");
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 432000000L + "'", long9 == 432000000L);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test17946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17946");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeksIn(readableInterval4);
        boolean boolean6 = weeks3.isLessThan(weeks5);
        boolean boolean7 = weeks2.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks8 = null;
        org.joda.time.Weeks weeks9 = weeks5.minus(weeks8);
        org.joda.time.DurationFieldType durationFieldType10 = weeks9.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeksIn(readableInterval16);
        boolean boolean18 = weeks15.isLessThan(weeks17);
        boolean boolean19 = weeks14.isGreaterThan(weeks17);
        boolean boolean20 = weeks11.isLessThan(weeks14);
        org.joda.time.Weeks weeks21 = weeks9.plus(weeks14);
        org.joda.time.Weeks weeks23 = weeks14.minus(2);
        org.joda.time.Weeks weeks25 = weeks23.minus((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks27 = weeks25.plus((-2147483645));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -13 + -2147483645");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
    }

    @Test
    public void test17947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17947");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration6 = duration4.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalFrom(readableInstant9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval10);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval10);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = minutes13.get(durationFieldType14);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period19 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period21 = period19.minusMonths(0);
        org.joda.time.Minutes minutes22 = period21.toStandardMinutes();
        org.joda.time.Minutes minutes24 = minutes22.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes25 = minutes16.minus(minutes22);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period29 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period31 = period29.minusMonths(0);
        org.joda.time.Minutes minutes32 = period31.toStandardMinutes();
        org.joda.time.Minutes minutes34 = minutes32.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes35 = minutes26.minus(minutes32);
        org.joda.time.Period period38 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period40 = period38.minusMonths(0);
        org.joda.time.Minutes minutes41 = period40.toStandardMinutes();
        org.joda.time.Duration duration42 = minutes41.toStandardDuration();
        org.joda.time.Minutes minutes44 = minutes41.multipliedBy((int) (short) 1);
        int int45 = minutes26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes44);
        org.joda.time.Minutes minutes46 = minutes25.plus(minutes44);
        boolean boolean47 = minutes13.isGreaterThan(minutes44);
        java.lang.String str48 = minutes13.toString();
        org.joda.time.PeriodType periodType49 = minutes13.getPeriodType();
        org.joda.time.PeriodType periodType50 = periodType49.withMonthsRemoved();
        org.joda.time.PeriodType periodType51 = periodType49.withHoursRemoved();
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType51);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "PT0M" + "'", str48, "PT0M");
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType51);
    }

    @Test
    public void test17948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17948");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((-97));
        org.joda.time.Period period3 = period1.minusYears(103);
        org.joda.time.Period period5 = period1.withSeconds(94);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test17949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17949");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(5);
        org.joda.time.Period period3 = period1.withMinutes((-5));
        org.joda.time.Minutes minutes4 = period3.toStandardMinutes();
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
    }

    @Test
    public void test17950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17950");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Period period5 = period2.normalizedStandard();
        org.joda.time.MutablePeriod mutablePeriod6 = period5.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration8 = period5.toDurationFrom(readableInstant7);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration8.toPeriod(chronology9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period16 = period14.minusMonths(0);
        org.joda.time.Minutes minutes17 = period16.toStandardMinutes();
        org.joda.time.Duration duration18 = minutes17.toStandardDuration();
        org.joda.time.Period period19 = duration18.toPeriod();
        org.joda.time.Duration duration21 = duration18.plus((long) (byte) 0);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration21);
        org.joda.time.Period period23 = duration21.toPeriod();
        int int24 = period23.getHours();
        org.joda.time.Period period26 = period23.minusWeeks(2147483647);
        org.joda.time.Duration duration27 = period23.toStandardDuration();
        boolean boolean28 = duration8.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Period period29 = duration27.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int31 = period29.getValue((-97));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -97");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(period29);
    }

    @Test
    public void test17951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17951");
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Minutes minutes6 = period5.toStandardMinutes();
        org.joda.time.Duration duration7 = minutes6.toStandardDuration();
        org.joda.time.Period period10 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period12 = period10.minusMonths(0);
        org.joda.time.Minutes minutes13 = period12.toStandardMinutes();
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        boolean boolean15 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration17 = duration7.plus((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.yearMonthDay();
        java.lang.String str20 = periodType19.getName();
        org.joda.time.Period period21 = duration7.toPeriodTo(readableInstant18, periodType19);
        org.joda.time.Period period24 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period26 = period24.minusMonths(0);
        org.joda.time.Period period27 = period24.normalizedStandard();
        org.joda.time.MutablePeriod mutablePeriod28 = period27.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration30 = period27.toDurationFrom(readableInstant29);
        org.joda.time.Period period31 = period27.normalizedStandard();
        org.joda.time.DurationFieldType durationFieldType33 = period31.getFieldType(0);
        int int34 = periodType19.indexOf(durationFieldType33);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((long) 52, periodType19, chronology35);
        java.lang.String str37 = period36.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period39 = period36.withWeeks((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "YearMonthDay" + "'", str20, "YearMonthDay");
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P0D" + "'", str37, "P0D");
    }

    @Test
    public void test17952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17952");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.multipliedBy((int) 'a');
        org.joda.time.Hours hours4 = hours2.minus((int) (short) 10);
        int int5 = hours4.getHours();
        org.joda.time.Hours hours7 = hours4.minus(10);
        org.joda.time.Hours hours9 = hours4.minus((int) (byte) 100);
        org.joda.time.PeriodType periodType10 = hours9.getPeriodType();
        org.joda.time.Hours hours12 = hours9.dividedBy((-612));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 87 + "'", int5 == 87);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours12);
    }

    @Test
    public void test17953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17953");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(100000L);
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period5 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period7 = period5.minusMonths(0);
        org.joda.time.Minutes minutes8 = period7.toStandardMinutes();
        org.joda.time.Minutes minutes10 = minutes8.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes11 = minutes2.minus(minutes8);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period15 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period17 = period15.minusMonths(0);
        org.joda.time.Minutes minutes18 = period17.toStandardMinutes();
        org.joda.time.Minutes minutes20 = minutes18.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes21 = minutes12.minus(minutes18);
        org.joda.time.Period period24 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period26 = period24.minusMonths(0);
        org.joda.time.Minutes minutes27 = period26.toStandardMinutes();
        org.joda.time.Duration duration28 = minutes27.toStandardDuration();
        org.joda.time.Minutes minutes30 = minutes27.multipliedBy((int) (short) 1);
        int int31 = minutes12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes30);
        org.joda.time.Minutes minutes32 = minutes11.plus(minutes30);
        org.joda.time.Period period35 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period37 = period35.minusMonths(0);
        org.joda.time.Minutes minutes38 = period37.toStandardMinutes();
        org.joda.time.Minutes minutes40 = minutes38.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((java.lang.Object) minutes38, chronology41);
        org.joda.time.Period period43 = minutes38.toPeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean45 = minutes38.isLessThan(minutes44);
        org.joda.time.Minutes minutes46 = minutes32.minus(minutes38);
        org.joda.time.DurationFieldType durationFieldType47 = minutes38.getFieldType();
        org.joda.time.PeriodType periodType48 = minutes38.getPeriodType();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration1.toPeriod(periodType48, chronology49);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
    }

    @Test
    public void test17954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17954");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(2);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours4 = hours2.minus(hours3);
        boolean boolean5 = hours1.isLessThan(hours2);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ZERO;
        org.joda.time.Duration duration7 = hours6.toStandardDuration();
        org.joda.time.Hours hours8 = hours2.plus(hours6);
        org.joda.time.Period period10 = org.joda.time.Period.millis((int) '#');
        int int11 = period10.getYears();
        org.joda.time.Hours hours12 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period10);
        int int13 = hours12.getHours();
        org.joda.time.Hours hours15 = hours12.multipliedBy((int) (short) 1);
        org.joda.time.Hours hours16 = hours8.minus(hours12);
        org.joda.time.Hours hours17 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = hours17.getFieldType();
        org.joda.time.Period period21 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period22 = period21.negated();
        int int23 = period21.getHours();
        org.joda.time.Period period25 = org.joda.time.Period.days(10);
        org.joda.time.Period period27 = period25.plusMonths((int) 'a');
        org.joda.time.Period period29 = period25.plusSeconds((int) (short) 100);
        org.joda.time.Period period31 = period29.minusMonths((int) 'a');
        org.joda.time.Period period32 = period21.withFields((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Hours hours33 = period21.toStandardHours();
        int int34 = hours33.getHours();
        org.joda.time.Hours hours35 = hours17.plus(hours33);
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours36.dividedBy(100);
        org.joda.time.Period period41 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period43 = period41.minusMonths(0);
        org.joda.time.Period period45 = period43.minusSeconds(0);
        org.joda.time.Period period46 = period45.normalizedStandard();
        org.joda.time.Hours hours47 = period46.toStandardHours();
        boolean boolean48 = hours38.isLessThan(hours47);
        org.joda.time.Period period50 = org.joda.time.Period.millis((int) '#');
        int int51 = period50.getYears();
        org.joda.time.Hours hours52 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period50);
        org.joda.time.Period period54 = period50.multipliedBy((int) (byte) 0);
        org.joda.time.Hours hours55 = period54.toStandardHours();
        org.joda.time.Hours hours56 = hours38.minus(hours55);
        boolean boolean57 = hours33.isLessThan(hours55);
        org.joda.time.Hours hours59 = hours55.dividedBy((int) (short) -1);
        org.joda.time.Hours hours60 = hours12.minus(hours55);
        org.joda.time.Period period63 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period65 = period63.minusMonths(0);
        org.joda.time.Period period67 = period65.minusSeconds(0);
        org.joda.time.Period period69 = period67.minusWeeks(10);
        org.joda.time.MutablePeriod mutablePeriod70 = period67.toMutablePeriod();
        int int72 = period67.getValue((int) (byte) 1);
        org.joda.time.Period period74 = period67.minusMillis((int) '#');
        int int75 = period67.getMonths();
        org.joda.time.Period period76 = period67.normalizedStandard();
        org.joda.time.Period period77 = period76.toPeriod();
        org.joda.time.DurationFieldType durationFieldType79 = period77.getFieldType(4);
        boolean boolean80 = hours12.isSupported(durationFieldType79);
        java.lang.String str81 = durationFieldType79.getName();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hours" + "'", str81, "hours");
    }

    @Test
    public void test17955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17955");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.joda.time.Minutes minutes3 = duration1.toStandardMinutes();
        long long4 = duration1.getMillis();
        org.joda.time.Period period6 = org.joda.time.Period.days(10);
        org.joda.time.Minutes minutes7 = period6.toStandardMinutes();
        org.joda.time.DurationFieldType durationFieldType8 = minutes7.getFieldType();
        int int9 = minutes7.getMinutes();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period13 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period15 = period13.minusMonths(0);
        org.joda.time.Minutes minutes16 = period15.toStandardMinutes();
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes19 = minutes10.minus(minutes16);
        org.joda.time.Period period22 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period24 = period22.minusMonths(0);
        org.joda.time.Minutes minutes25 = period24.toStandardMinutes();
        org.joda.time.Minutes minutes27 = minutes25.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((java.lang.Object) minutes25, chronology28);
        org.joda.time.Minutes minutes30 = minutes10.minus(minutes25);
        org.joda.time.DurationFieldType durationFieldType32 = minutes30.getFieldType((int) (short) 0);
        org.joda.time.PeriodType periodType33 = minutes30.getPeriodType();
        org.joda.time.Minutes minutes34 = minutes30.negated();
        org.joda.time.Minutes minutes35 = minutes7.minus(minutes34);
        org.joda.time.DurationFieldType durationFieldType36 = minutes7.getFieldType();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes39 = minutes37.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period43 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period45 = period43.minusMonths(0);
        org.joda.time.Minutes minutes46 = period45.toStandardMinutes();
        org.joda.time.Minutes minutes48 = minutes46.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes49 = minutes40.minus(minutes46);
        org.joda.time.Period period52 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period54 = period52.minusMonths(0);
        org.joda.time.Minutes minutes55 = period54.toStandardMinutes();
        org.joda.time.Minutes minutes57 = minutes55.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((java.lang.Object) minutes55, chronology58);
        org.joda.time.Minutes minutes60 = minutes40.minus(minutes55);
        org.joda.time.Period period63 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period64 = period63.negated();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Duration duration66 = period64.toDurationTo(readableInstant65);
        org.joda.time.Minutes minutes67 = period64.toStandardMinutes();
        org.joda.time.PeriodType periodType68 = minutes67.getPeriodType();
        boolean boolean69 = minutes55.isLessThan(minutes67);
        org.joda.time.Period period72 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period74 = period72.minusMonths(0);
        org.joda.time.Minutes minutes75 = period74.toStandardMinutes();
        org.joda.time.Duration duration76 = minutes75.toStandardDuration();
        org.joda.time.Minutes minutes78 = minutes75.multipliedBy((int) (short) 1);
        int int79 = minutes78.getMinutes();
        boolean boolean80 = minutes55.isLessThan(minutes78);
        boolean boolean81 = minutes39.isGreaterThan(minutes78);
        org.joda.time.Minutes minutes83 = minutes78.plus((int) (byte) 10);
        boolean boolean84 = minutes7.isGreaterThan(minutes83);
        org.joda.time.Duration duration85 = minutes83.toStandardDuration();
        org.joda.time.Duration duration87 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration85, 14405);
        org.joda.time.Chronology chronology88 = null;
        org.joda.time.Period period89 = duration1.toPeriod(chronology88);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 6000000L + "'", long4 == 6000000L);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 14400 + "'", int9 == 14400);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertNotNull(period89);
    }

    @Test
    public void test17956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17956");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) '4');
        org.joda.time.Period period3 = period1.minusHours((int) '#');
        org.joda.time.DurationFieldType[] durationFieldTypeArray4 = period1.getFieldTypes();
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.forFields(durationFieldTypeArray4);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(durationFieldTypeArray4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test17957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17957");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration4 = duration2.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant5);
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.seconds();
        boolean boolean8 = period6.isSupported(durationFieldType7);
        org.joda.time.Period period9 = period6.toPeriod();
        org.joda.time.Period period11 = period6.withMonths(2147483647);
        org.joda.time.Period period13 = period11.plusMillis((int) '#');
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test17958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17958");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) 0);
        int int2 = seconds1.getSeconds();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds7 = seconds5.plus(seconds6);
        org.joda.time.Seconds seconds9 = seconds5.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds10 = seconds4.plus(seconds5);
        org.joda.time.Seconds seconds12 = seconds5.multipliedBy((int) (short) 1);
        org.joda.time.Seconds seconds14 = seconds12.dividedBy((int) 'a');
        boolean boolean15 = seconds1.isLessThan(seconds14);
        org.joda.time.Duration duration16 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 10);
        org.joda.time.Duration duration19 = seconds18.toStandardDuration();
        org.joda.time.Duration duration21 = duration19.plus((long) (-2147483596));
        org.joda.time.Duration duration22 = duration21.toDuration();
        long long23 = duration22.getMillis();
        int int24 = duration16.compareTo((org.joda.time.ReadableDuration) duration22);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-2147473596L) + "'", long23 == (-2147473596L));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test17959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17959");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period13 = period12.negated();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration15 = period13.toDurationTo(readableInstant14);
        boolean boolean16 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration20 = duration15.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = duration20.toPeriodTo(readableInstant21);
        long long23 = duration20.getStandardSeconds();
        org.joda.time.Duration duration25 = duration20.minus((-957600L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(duration25);
    }

    @Test
    public void test17960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17960");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds2 = seconds0.minus((int) 'a');
        org.joda.time.Seconds seconds3 = seconds2.negated();
        org.joda.time.Seconds seconds5 = seconds2.minus(3);
        org.joda.time.Seconds seconds6 = seconds2.negated();
        org.joda.time.Seconds seconds8 = seconds6.dividedBy((-6));
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.seconds(268435465);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) ' ');
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds15 = seconds13.multipliedBy(10);
        org.joda.time.DurationFieldType durationFieldType16 = seconds13.getFieldType();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds(0);
        org.joda.time.Seconds seconds19 = null;
        org.joda.time.Seconds seconds20 = seconds18.plus(seconds19);
        org.joda.time.Seconds seconds22 = seconds20.multipliedBy(52);
        org.joda.time.PeriodType periodType23 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds26 = seconds24.plus(seconds25);
        org.joda.time.Seconds seconds28 = seconds25.plus((int) (byte) 0);
        org.joda.time.Seconds seconds30 = seconds25.minus(8);
        org.joda.time.Seconds seconds32 = seconds30.plus(1);
        org.joda.time.Seconds seconds33 = seconds20.plus(seconds30);
        org.joda.time.Seconds seconds34 = seconds13.minus(seconds30);
        boolean boolean35 = seconds10.isGreaterThan(seconds13);
        boolean boolean36 = seconds8.isGreaterThan(seconds10);
        org.joda.time.Seconds seconds37 = seconds8.negated();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds37);
    }

    @Test
    public void test17961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17961");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        boolean boolean14 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(readableInstant15, readableInstant16);
        org.joda.time.Duration duration18 = duration6.minus((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant19);
        org.joda.time.Duration duration22 = duration6.plus((long) 8);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = duration6.toPeriodFrom(readableInstant23);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration26 = minutes25.toStandardDuration();
        long long27 = duration26.getStandardSeconds();
        org.joda.time.Period period30 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period32 = period30.minusMonths(0);
        org.joda.time.Minutes minutes33 = period32.toStandardMinutes();
        org.joda.time.Duration duration34 = minutes33.toStandardDuration();
        org.joda.time.Minutes minutes36 = minutes33.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration37 = minutes33.toStandardDuration();
        org.joda.time.Period period40 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period42 = period40.minusMonths(0);
        org.joda.time.Minutes minutes43 = period42.toStandardMinutes();
        org.joda.time.Duration duration44 = minutes43.toStandardDuration();
        org.joda.time.Period period45 = duration44.toPeriod();
        boolean boolean46 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Period period49 = duration37.toPeriodTo(readableInstant47, periodType48);
        org.joda.time.Duration duration50 = duration26.plus((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration37.toPeriod(chronology51);
        boolean boolean53 = duration6.isEqual((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period61 = period59.minusMonths(0);
        org.joda.time.Period period63 = period59.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType64 = period59.getPeriodType();
        org.joda.time.PeriodType periodType65 = periodType64.withMinutesRemoved();
        org.joda.time.PeriodType periodType66 = periodType65.withHoursRemoved();
        org.joda.time.PeriodType periodType67 = periodType65.withHoursRemoved();
        int int68 = periodType65.size();
        org.joda.time.Period period69 = new org.joda.time.Period((long) 1, periodType65);
        org.joda.time.Period period70 = new org.joda.time.Period(readableDuration54, readableInstant55, periodType65);
        java.lang.String str71 = periodType65.getName();
        org.joda.time.Period period72 = duration37.toPeriod(periodType65);
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period72);
        org.joda.time.Period period75 = period72.plusWeeks((int) '#');
        org.joda.time.Period period77 = period75.plusMonths((-8));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-128849018880L) + "'", long27 == (-128849018880L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 7 + "'", int68 == 7);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "StandardNoMinutes" + "'", str71, "StandardNoMinutes");
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period77);
    }

    @Test
    public void test17962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17962");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Minutes minutes6 = period5.toStandardMinutes();
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes9 = minutes0.minus(minutes6);
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Minutes minutes17 = minutes15.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((java.lang.Object) minutes15, chronology18);
        org.joda.time.Minutes minutes20 = minutes0.minus(minutes15);
        org.joda.time.Minutes minutes22 = minutes20.dividedBy((-95));
        org.joda.time.Period period25 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period27 = period25.minusMonths(0);
        org.joda.time.Period period28 = period25.normalizedStandard();
        org.joda.time.Period period29 = period28.toPeriod();
        org.joda.time.Minutes minutes30 = period28.toStandardMinutes();
        org.joda.time.Period period33 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period35 = period33.minusMonths(0);
        org.joda.time.Minutes minutes36 = period35.toStandardMinutes();
        org.joda.time.Minutes minutes38 = minutes36.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((java.lang.Object) minutes36, chronology39);
        org.joda.time.Period period41 = minutes36.toPeriod();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean43 = minutes36.isLessThan(minutes42);
        org.joda.time.Minutes minutes45 = minutes36.minus((int) (short) 0);
        boolean boolean46 = minutes30.isGreaterThan(minutes45);
        org.joda.time.Minutes minutes47 = minutes22.minus(minutes30);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((long) (-95), (long) (-95), chronology50);
        org.joda.time.Period period53 = period51.plusMinutes(999);
        org.joda.time.Period period55 = org.joda.time.Period.millis(0);
        org.joda.time.DurationFieldType durationFieldType56 = org.joda.time.DurationFieldType.months();
        boolean boolean57 = period55.isSupported(durationFieldType56);
        int int58 = period51.get(durationFieldType56);
        org.joda.time.Minutes minutes59 = period51.toStandardMinutes();
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period63 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period65 = period63.minusMonths(0);
        org.joda.time.Minutes minutes66 = period65.toStandardMinutes();
        org.joda.time.Minutes minutes68 = minutes66.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes69 = minutes60.minus(minutes66);
        org.joda.time.Period period72 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period74 = period72.minusMonths(0);
        org.joda.time.Minutes minutes75 = period74.toStandardMinutes();
        org.joda.time.Minutes minutes77 = minutes75.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.Period period79 = new org.joda.time.Period((java.lang.Object) minutes75, chronology78);
        org.joda.time.Minutes minutes80 = minutes60.minus(minutes75);
        org.joda.time.Period period83 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period84 = period83.negated();
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.Duration duration86 = period84.toDurationTo(readableInstant85);
        org.joda.time.Minutes minutes87 = period84.toStandardMinutes();
        org.joda.time.PeriodType periodType88 = minutes87.getPeriodType();
        boolean boolean89 = minutes75.isLessThan(minutes87);
        org.joda.time.Minutes minutes90 = minutes59.plus(minutes87);
        java.lang.String str91 = minutes90.toString();
        org.joda.time.Minutes minutes93 = org.joda.time.Minutes.minutes(3);
        org.joda.time.Minutes minutes94 = minutes90.plus(minutes93);
        boolean boolean95 = minutes30.isLessThan(minutes93);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertNotNull(minutes87);
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(minutes90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "PT0M" + "'", str91, "PT0M");
        org.junit.Assert.assertNotNull(minutes93);
        org.junit.Assert.assertNotNull(minutes94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test17963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17963");
        org.joda.time.Period period8 = new org.joda.time.Period((int) (byte) 10, (int) 'a', 525, 95, 100, (int) (byte) 10, (-6), (int) '4');
    }

    @Test
    public void test17964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17964");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period13 = period12.negated();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration15 = period13.toDurationTo(readableInstant14);
        boolean boolean16 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration20 = duration15.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.Period period24 = org.joda.time.Period.millis(0);
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.months();
        boolean boolean26 = period24.isSupported(durationFieldType25);
        int int27 = period22.get(durationFieldType25);
        org.joda.time.Period period29 = period22.minusMinutes(0);
        org.joda.time.Period period30 = period22.normalizedStandard();
        org.joda.time.Period period31 = period30.toPeriod();
        org.joda.time.Period period33 = period31.plusMonths(18);
        org.joda.time.Period period36 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period38 = period36.minusMonths(0);
        org.joda.time.Minutes minutes39 = period38.toStandardMinutes();
        org.joda.time.Duration duration40 = minutes39.toStandardDuration();
        org.joda.time.Period period43 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period45 = period43.minusMonths(0);
        org.joda.time.Minutes minutes46 = period45.toStandardMinutes();
        org.joda.time.Duration duration47 = minutes46.toStandardDuration();
        boolean boolean48 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(readableInstant49, readableInstant50);
        org.joda.time.Duration duration52 = duration40.minus((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant53);
        org.joda.time.Period period56 = period54.withYears((int) (byte) 1);
        org.joda.time.Period period59 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period60 = period59.negated();
        org.joda.time.DurationFieldType durationFieldType62 = period59.getFieldType((int) (short) 1);
        org.joda.time.Period period64 = period54.withField(durationFieldType62, 6);
        int[] intArray65 = period64.getValues();
        org.joda.time.Period period67 = period64.plusMillis(268435465);
        boolean boolean68 = period31.equals((java.lang.Object) period64);
        org.joda.time.Period period70 = period31.minusMillis(105);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 6, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(period70);
    }

    @Test
    public void test17965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17965");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeksIn(readableInterval4);
        boolean boolean6 = weeks3.isLessThan(weeks5);
        boolean boolean7 = weeks2.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks8 = null;
        org.joda.time.Weeks weeks9 = weeks5.minus(weeks8);
        org.joda.time.DurationFieldType durationFieldType10 = weeks9.getFieldType();
        org.joda.time.Duration duration13 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration15 = duration13.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalFrom(readableInstant18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Period period21 = weeks20.toPeriod();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.weeks(1);
        boolean boolean25 = weeks22.isGreaterThan(weeks24);
        org.joda.time.Weeks weeks26 = weeks20.minus(weeks22);
        boolean boolean27 = weeks9.isLessThan(weeks22);
        org.joda.time.Duration duration28 = weeks22.toStandardDuration();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks31 = weeks29.dividedBy(1);
        org.joda.time.PeriodType periodType32 = weeks31.getPeriodType();
        int int33 = weeks31.getWeeks();
        java.lang.String str34 = weeks31.toString();
        boolean boolean35 = weeks22.isGreaterThan(weeks31);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2147483647 + "'", int33 == 2147483647);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "P2147483647W" + "'", str34, "P2147483647W");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test17966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17966");
        java.lang.Object obj0 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Period period7 = period3.minusSeconds((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray8 = period3.getFieldTypes();
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.forFields(durationFieldTypeArray8);
        org.joda.time.PeriodType periodType10 = periodType9.withMillisRemoved();
        org.joda.time.PeriodType periodType11 = periodType10.withDaysRemoved();
        org.joda.time.Period period12 = new org.joda.time.Period(obj0, periodType11);
        org.joda.time.Period period13 = period12.toPeriod();
        org.joda.time.Hours hours14 = period12.toStandardHours();
        org.joda.time.Period period16 = period12.minusYears(0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(durationFieldTypeArray8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test17967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17967");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period13 = period12.negated();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration15 = period13.toDurationTo(readableInstant14);
        boolean boolean16 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration20 = duration15.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Period period23 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period25 = period23.minusMonths(0);
        org.joda.time.Period period27 = period23.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType28 = period23.getPeriodType();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration15.toPeriod(periodType28, chronology29);
        org.joda.time.Minutes minutes31 = period30.toStandardMinutes();
        org.joda.time.Minutes minutes33 = minutes31.plus((-53));
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.minutes((int) (byte) -1);
        boolean boolean36 = minutes31.isGreaterThan(minutes35);
        org.joda.time.Period period39 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period41 = period39.minusMonths(0);
        org.joda.time.Minutes minutes42 = period41.toStandardMinutes();
        org.joda.time.Minutes minutes44 = minutes42.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((java.lang.Object) minutes42, chronology45);
        org.joda.time.Period period47 = minutes42.toPeriod();
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean49 = minutes42.isLessThan(minutes48);
        org.joda.time.Minutes minutes50 = minutes48.negated();
        org.joda.time.Minutes minutes51 = minutes31.plus(minutes50);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
    }

    @Test
    public void test17968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17968");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period5 = period3.minusMonths(0);
        org.joda.time.Minutes minutes6 = period5.toStandardMinutes();
        org.joda.time.Duration duration7 = minutes6.toStandardDuration();
        org.joda.time.Period period10 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period12 = period10.minusMonths(0);
        org.joda.time.Minutes minutes13 = period12.toStandardMinutes();
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        boolean boolean15 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Period period16 = duration7.toPeriod();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration18 = minutes17.toStandardDuration();
        long long19 = duration18.getStandardSeconds();
        org.joda.time.Period period22 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period24 = period22.minusMonths(0);
        org.joda.time.Minutes minutes25 = period24.toStandardMinutes();
        org.joda.time.Duration duration26 = minutes25.toStandardDuration();
        org.joda.time.Minutes minutes28 = minutes25.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration29 = minutes25.toStandardDuration();
        org.joda.time.Period period32 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period34 = period32.minusMonths(0);
        org.joda.time.Minutes minutes35 = period34.toStandardMinutes();
        org.joda.time.Duration duration36 = minutes35.toStandardDuration();
        org.joda.time.Period period37 = duration36.toPeriod();
        boolean boolean38 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Period period41 = duration29.toPeriodTo(readableInstant39, periodType40);
        org.joda.time.Duration duration42 = duration18.plus((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration43 = duration42.toDuration();
        int int44 = duration7.compareTo((org.joda.time.ReadableDuration) duration42);
        org.joda.time.Duration duration47 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration49 = duration47.plus((long) (-1));
        int int50 = duration7.compareTo((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration7);
        org.joda.time.Period period53 = period51.withMillis((-50));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-128849018880L) + "'", long19 == (-128849018880L));
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(period53);
    }

    @Test
    public void test17969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17969");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period2);
        org.joda.time.Period period6 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period8 = period6.minusMonths(0);
        org.joda.time.Minutes minutes9 = period8.toStandardMinutes();
        org.joda.time.Minutes minutes11 = minutes9.dividedBy((int) (byte) 100);
        org.joda.time.Period period14 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period16 = period14.minusMonths(0);
        org.joda.time.Minutes minutes17 = period16.toStandardMinutes();
        org.joda.time.Duration duration18 = minutes17.toStandardDuration();
        org.joda.time.Minutes minutes20 = minutes17.multipliedBy((int) (short) 1);
        int int21 = minutes20.getMinutes();
        boolean boolean22 = minutes11.isGreaterThan(minutes20);
        boolean boolean23 = minutes3.isLessThan(minutes20);
        org.joda.time.Minutes minutes25 = minutes20.multipliedBy((int) (byte) 100);
        org.joda.time.Period period28 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period30 = period28.minusMonths(0);
        org.joda.time.Minutes minutes31 = period30.toStandardMinutes();
        org.joda.time.Duration duration32 = minutes31.toStandardDuration();
        org.joda.time.Minutes minutes34 = minutes31.multipliedBy((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType35 = minutes31.getFieldType();
        org.joda.time.Minutes minutes37 = minutes31.multipliedBy(1);
        org.joda.time.Minutes minutes38 = minutes25.plus(minutes31);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period42 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period44 = period42.minusMonths(0);
        org.joda.time.Minutes minutes45 = period44.toStandardMinutes();
        org.joda.time.Minutes minutes47 = minutes45.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes48 = minutes39.minus(minutes45);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period52 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period54 = period52.minusMonths(0);
        org.joda.time.Minutes minutes55 = period54.toStandardMinutes();
        org.joda.time.Minutes minutes57 = minutes55.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes58 = minutes49.minus(minutes55);
        org.joda.time.Period period61 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period63 = period61.minusMonths(0);
        org.joda.time.Minutes minutes64 = period63.toStandardMinutes();
        org.joda.time.Duration duration65 = minutes64.toStandardDuration();
        org.joda.time.Minutes minutes67 = minutes64.multipliedBy((int) (short) 1);
        int int68 = minutes49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes67);
        org.joda.time.Minutes minutes69 = minutes48.plus(minutes67);
        org.joda.time.Period period72 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period74 = period72.minusMonths(0);
        org.joda.time.Minutes minutes75 = period74.toStandardMinutes();
        org.joda.time.Minutes minutes77 = minutes75.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.Period period79 = new org.joda.time.Period((java.lang.Object) minutes75, chronology78);
        org.joda.time.Period period80 = minutes75.toPeriod();
        org.joda.time.Minutes minutes81 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean82 = minutes75.isLessThan(minutes81);
        org.joda.time.Minutes minutes83 = minutes69.minus(minutes75);
        org.joda.time.Minutes minutes85 = minutes83.multipliedBy(59);
        org.joda.time.Minutes minutes87 = minutes83.plus(8);
        org.joda.time.Minutes minutes88 = minutes25.plus(minutes87);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(minutes85);
        org.junit.Assert.assertNotNull(minutes87);
        org.junit.Assert.assertNotNull(minutes88);
    }

    @Test
    public void test17970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17970");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) 'a');
        org.joda.time.Duration duration3 = duration1.minus(1298798109705600000L);
        org.joda.time.Duration duration5 = org.joda.time.Duration.parse("PT0S");
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Duration duration8 = duration5.plus((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration10 = duration5.plus((long) 2147483647);
        org.joda.time.Duration duration11 = duration5.toDuration();
        long long12 = duration5.getStandardDays();
        long long13 = duration5.getStandardHours();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration5.toPeriod(chronology14);
        int int16 = duration3.compareTo((org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant17);
        org.joda.time.Period period20 = period18.withMinutes(268435455);
        org.joda.time.Period period23 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period25 = period23.minusMonths(0);
        org.joda.time.Period period26 = period23.normalizedStandard();
        org.joda.time.MutablePeriod mutablePeriod27 = period26.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Duration duration29 = period26.toDurationFrom(readableInstant28);
        org.joda.time.Period period30 = period26.normalizedStandard();
        org.joda.time.Period period32 = period30.withHours((int) '4');
        org.joda.time.Period period34 = period30.minusDays(52);
        org.joda.time.Period period36 = period30.minusMonths(3);
        org.joda.time.Period period37 = period18.minus((org.joda.time.ReadablePeriod) period36);
        org.joda.time.Period period39 = period36.plusSeconds((-2147483645));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
    }

    @Test
    public void test17971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17971");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        java.lang.String str1 = days0.toString();
        org.joda.time.Days days3 = days0.minus(8);
        org.joda.time.Days days5 = days0.plus(8);
        java.lang.String str6 = days5.toString();
        org.joda.time.Duration duration7 = days5.toStandardDuration();
        org.joda.time.Duration duration8 = days5.toStandardDuration();
        org.joda.time.Period period10 = org.joda.time.Period.millis((int) '#');
        int int11 = period10.getYears();
        org.joda.time.ReadablePeriod readablePeriod12 = null;
        org.joda.time.Period period13 = period10.withFields(readablePeriod12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration15 = period10.toDurationTo(readableInstant14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration15.toIntervalFrom(readableInstant16);
        boolean boolean18 = duration8.isEqual((org.joda.time.ReadableDuration) duration15);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "P5D" + "'", str1, "P5D");
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P13D" + "'", str6, "P13D");
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test17972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17972");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Period period17 = duration16.toPeriod();
        boolean boolean18 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Period period21 = duration9.toPeriodTo(readableInstant19, periodType20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant22);
        long long24 = duration9.getStandardMinutes();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration9.toPeriod(chronology25);
        org.joda.time.Period period28 = period26.withSeconds(104);
        org.joda.time.Period period29 = period28.normalizedStandard();
        org.joda.time.Period period31 = period28.minusMillis(194);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
    }

    @Test
    public void test17973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17973");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = hours0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType2 = hours0.getFieldType();
        int int3 = hours0.getHours();
        org.joda.time.PeriodType periodType4 = hours0.getPeriodType();
        org.joda.time.Hours hours6 = hours0.plus((-2));
        org.joda.time.Hours hours7 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours8 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours9 = hours7.minus(hours8);
        org.joda.time.Hours hours10 = hours0.minus(hours7);
        org.joda.time.PeriodType periodType11 = hours7.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType12 = hours7.getFieldType();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.DurationField durationField14 = durationFieldType12.getField(chronology13);
        org.joda.time.Chronology chronology15 = null;
        boolean boolean16 = durationFieldType12.isSupported(chronology15);
        java.lang.String str17 = durationFieldType12.getName();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(durationField14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hours" + "'", str17, "hours");
    }

    @Test
    public void test17974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17974");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType1 = periodType0.withMinutesRemoved();
        org.joda.time.PeriodType periodType2 = periodType1.withWeeksRemoved();
        org.joda.time.PeriodType periodType3 = periodType1.withMinutesRemoved();
        org.joda.time.Period period6 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period8 = period6.minusMonths(0);
        org.joda.time.Period period10 = period6.minusSeconds((int) (byte) 100);
        org.joda.time.Days days11 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType12 = days11.getPeriodType();
        org.joda.time.PeriodType periodType13 = periodType12.withHoursRemoved();
        org.joda.time.PeriodType periodType14 = periodType12.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.days();
        boolean boolean16 = periodType14.isSupported(durationFieldType15);
        int int17 = period6.get(durationFieldType15);
        int int18 = period6.getDays();
        int int19 = period6.getMillis();
        org.joda.time.Period period20 = period6.negated();
        org.joda.time.Period period22 = period20.withHours(8);
        boolean boolean23 = periodType1.equals((java.lang.Object) period20);
        int int24 = period20.getMonths();
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-36) + "'", int19 == (-36));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test17975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17975");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((-36L), (-52L), chronology2);
    }

    @Test
    public void test17976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17976");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds4 = seconds2.plus(seconds3);
        org.joda.time.Seconds seconds6 = seconds2.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds7 = seconds1.plus(seconds2);
        org.joda.time.Duration duration8 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
    }

    @Test
    public void test17977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17977");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        org.joda.time.Period period1 = seconds0.toPeriod();
        org.joda.time.Seconds seconds3 = seconds0.multipliedBy((int) (byte) -1);
        int int4 = seconds3.size();
        org.joda.time.Seconds seconds6 = seconds3.minus((-4083));
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Period period13 = period9.withMillis((int) (short) 0);
        int int14 = period13.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod15 = period13.toMutablePeriod();
        org.joda.time.Duration duration16 = period13.toStandardDuration();
        org.joda.time.Seconds seconds17 = duration16.toStandardSeconds();
        org.joda.time.Seconds seconds18 = seconds17.negated();
        org.joda.time.Period period21 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period23 = period21.minusMonths(0);
        org.joda.time.Period period25 = period21.withMillis((int) (short) 0);
        int int26 = period25.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod27 = period25.toMutablePeriod();
        org.joda.time.Duration duration28 = period25.toStandardDuration();
        org.joda.time.Seconds seconds29 = duration28.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType30 = seconds29.getFieldType();
        org.joda.time.Seconds seconds31 = seconds29.negated();
        boolean boolean32 = seconds18.isGreaterThan(seconds29);
        org.joda.time.Seconds seconds34 = seconds18.plus(8);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds37 = seconds35.plus(seconds36);
        org.joda.time.PeriodType periodType38 = seconds35.getPeriodType();
        int int39 = seconds35.size();
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.seconds((int) (byte) 10);
        boolean boolean43 = seconds41.equals((java.lang.Object) "PeriodType[StandardNoMinutes]");
        org.joda.time.Seconds seconds44 = seconds35.plus(seconds41);
        org.joda.time.Seconds seconds46 = seconds44.plus((int) (short) 0);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds49 = seconds47.minus((int) 'a');
        int int50 = seconds47.size();
        int int51 = seconds47.getSeconds();
        org.joda.time.Seconds seconds52 = seconds44.plus(seconds47);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.seconds((int) '#');
        int int55 = seconds54.getSeconds();
        org.joda.time.Seconds seconds57 = seconds54.dividedBy((int) (short) 1);
        int int58 = seconds57.getSeconds();
        boolean boolean59 = seconds47.isLessThan(seconds57);
        boolean boolean60 = seconds18.isLessThan(seconds47);
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.THREE;
        org.joda.time.Duration duration62 = seconds61.toStandardDuration();
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds68 = seconds66.plus(seconds67);
        org.joda.time.Seconds seconds70 = seconds66.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds71 = seconds65.plus(seconds66);
        org.joda.time.Seconds seconds73 = seconds65.plus((int) '4');
        org.joda.time.Duration duration74 = seconds73.toStandardDuration();
        org.joda.time.Seconds seconds76 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds78 = org.joda.time.Seconds.TWO;
        org.joda.time.Seconds seconds79 = seconds77.plus(seconds78);
        org.joda.time.Seconds seconds81 = seconds77.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds82 = seconds76.plus(seconds77);
        org.joda.time.Seconds seconds84 = seconds76.plus((int) '4');
        org.joda.time.Duration duration85 = seconds84.toStandardDuration();
        boolean boolean86 = seconds73.isLessThan(seconds84);
        boolean boolean87 = seconds63.isGreaterThan(seconds73);
        boolean boolean88 = seconds61.isGreaterThan(seconds63);
        org.joda.time.Seconds seconds89 = seconds18.minus(seconds61);
        org.joda.time.Seconds seconds90 = seconds6.plus(seconds18);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 35 + "'", int55 == 35);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 35 + "'", int58 == 35);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(seconds89);
        org.junit.Assert.assertNotNull(seconds90);
    }

    @Test
    public void test17978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17978");
        org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT2S");
        org.joda.time.Period period3 = org.joda.time.Period.days(10);
        org.joda.time.Period period5 = period3.plusMonths((int) 'a');
        org.joda.time.Period period7 = period3.plusSeconds((int) (short) 100);
        org.joda.time.Period period10 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period12 = period10.minusMonths(0);
        org.joda.time.Minutes minutes13 = period12.toStandardMinutes();
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes16 = minutes13.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration17 = minutes13.toStandardDuration();
        org.joda.time.Period period20 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period22 = period20.minusMonths(0);
        org.joda.time.Minutes minutes23 = period22.toStandardMinutes();
        org.joda.time.Duration duration24 = minutes23.toStandardDuration();
        org.joda.time.Period period25 = duration24.toPeriod();
        boolean boolean26 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Period period29 = duration17.toPeriodTo(readableInstant27, periodType28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = duration17.toPeriodFrom(readableInstant30);
        org.joda.time.Period period32 = period31.negated();
        org.joda.time.Period period34 = period32.minusHours(8);
        org.joda.time.PeriodType periodType35 = period32.getPeriodType();
        org.joda.time.Period period36 = period3.normalizedStandard(periodType35);
        org.joda.time.PeriodType periodType37 = periodType35.withHoursRemoved();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration1.toPeriod(periodType35, chronology38);
        org.joda.time.Period period43 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period45 = period43.minusMonths(0);
        org.joda.time.Period period47 = period43.minusSeconds((int) (byte) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray48 = period43.getFieldTypes();
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.forFields(durationFieldTypeArray48);
        org.joda.time.PeriodType periodType50 = periodType49.withMillisRemoved();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((long) (byte) 10, periodType50, chronology51);
        java.lang.String str53 = periodType50.toString();
        org.joda.time.Period period54 = duration1.toPeriod(periodType50);
        org.joda.time.PeriodType periodType55 = periodType50.withWeeksRemoved();
        org.joda.time.Period period56 = new org.joda.time.Period();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Duration duration58 = period56.toDurationFrom(readableInstant57);
        org.joda.time.Minutes minutes59 = period56.toStandardMinutes();
        org.joda.time.Minutes minutes61 = minutes59.multipliedBy(2147483647);
        org.joda.time.Minutes minutes63 = minutes59.minus(36);
        org.joda.time.Minutes minutes65 = minutes59.multipliedBy(87);
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period69 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period71 = period69.minusMonths(0);
        org.joda.time.Minutes minutes72 = period71.toStandardMinutes();
        org.joda.time.Minutes minutes74 = minutes72.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes75 = minutes66.minus(minutes72);
        org.joda.time.Period period78 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period80 = period78.minusMonths(0);
        org.joda.time.Minutes minutes81 = period80.toStandardMinutes();
        org.joda.time.Minutes minutes83 = minutes81.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.Period period85 = new org.joda.time.Period((java.lang.Object) minutes81, chronology84);
        org.joda.time.Minutes minutes86 = minutes66.minus(minutes81);
        org.joda.time.DurationFieldType durationFieldType88 = minutes86.getFieldType((int) (short) 0);
        org.joda.time.PeriodType periodType89 = minutes86.getPeriodType();
        org.joda.time.Minutes minutes90 = minutes86.negated();
        org.joda.time.DurationFieldType durationFieldType91 = minutes86.getFieldType();
        org.joda.time.Minutes minutes92 = minutes65.minus(minutes86);
        int int93 = minutes92.getMinutes();
        int int94 = minutes92.getMinutes();
        org.joda.time.Minutes minutes96 = minutes92.minus((int) (byte) 0);
        org.joda.time.Duration duration97 = minutes96.toStandardDuration();
        boolean boolean98 = periodType55.equals((java.lang.Object) minutes96);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(durationFieldTypeArray48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "PeriodType[StandardNoMillis]" + "'", str53, "PeriodType[StandardNoMillis]");
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertNotNull(durationFieldType88);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(minutes90);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertNotNull(minutes92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-2) + "'", int93 == (-2));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-2) + "'", int94 == (-2));
        org.junit.Assert.assertNotNull(minutes96);
        org.junit.Assert.assertNotNull(duration97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test17979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17979");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-10));
        org.joda.time.Hours hours2 = org.joda.time.Hours.MIN_VALUE;
        boolean boolean3 = hours1.isLessThan(hours2);
        org.joda.time.Duration duration4 = hours2.toStandardDuration();
        org.joda.time.Duration duration5 = hours2.toStandardDuration();
        org.joda.time.Hours hours7 = org.joda.time.Hours.hours((int) (byte) 100);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours10 = hours8.multipliedBy((int) 'a');
        boolean boolean11 = hours7.isGreaterThan(hours8);
        org.joda.time.Hours hours13 = hours7.plus((int) 'a');
        org.joda.time.Hours hours15 = hours13.minus(13);
        org.joda.time.Hours hours17 = hours13.plus((int) ' ');
        org.joda.time.Duration duration18 = hours13.toStandardDuration();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours19.dividedBy(100);
        org.joda.time.Duration duration22 = hours19.toStandardDuration();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours24.dividedBy(100);
        org.joda.time.Period period29 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period31 = period29.minusMonths(0);
        org.joda.time.Period period33 = period31.minusSeconds(0);
        org.joda.time.Period period34 = period33.normalizedStandard();
        org.joda.time.Hours hours35 = period34.toStandardHours();
        boolean boolean36 = hours26.isLessThan(hours35);
        boolean boolean37 = hours23.isLessThan(hours26);
        org.joda.time.Duration duration38 = hours26.toStandardDuration();
        java.lang.String str39 = hours26.toString();
        org.joda.time.Period period41 = org.joda.time.Period.millis((int) '#');
        int int42 = period41.getYears();
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.Period period44 = period41.withFields(readablePeriod43);
        org.joda.time.Hours hours45 = period41.toStandardHours();
        org.joda.time.Hours hours46 = hours26.minus(hours45);
        org.joda.time.Hours hours47 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = hours47.getFieldType();
        org.joda.time.Hours hours49 = hours47.negated();
        org.joda.time.Hours hours50 = hours49.negated();
        org.joda.time.Hours hours51 = hours45.minus(hours49);
        boolean boolean52 = hours19.isLessThan(hours45);
        org.joda.time.Hours hours54 = hours45.multipliedBy(18);
        org.joda.time.Hours hours56 = hours54.minus(2147483645);
        boolean boolean57 = hours13.isGreaterThan(hours54);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours58 = hours2.minus(hours13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -197");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT0H" + "'", str39, "PT0H");
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test17980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17980");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) 10);
        org.joda.time.Period period4 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period6 = period4.minusMonths(0);
        org.joda.time.Minutes minutes7 = period6.toStandardMinutes();
        org.joda.time.Duration duration8 = minutes7.toStandardDuration();
        org.joda.time.Period period9 = duration8.toPeriod();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Minutes minutes18 = minutes15.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration19 = minutes15.toStandardDuration();
        org.joda.time.Period period22 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period24 = period22.minusMonths(0);
        org.joda.time.Minutes minutes25 = period24.toStandardMinutes();
        org.joda.time.Duration duration26 = minutes25.toStandardDuration();
        org.joda.time.Period period27 = duration26.toPeriod();
        boolean boolean28 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration26);
        boolean boolean29 = duration8.isEqual((org.joda.time.ReadableDuration) duration19);
        long long30 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant31, periodType32);
        boolean boolean34 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration8);
        long long35 = duration8.getStandardHours();
        org.joda.time.Period period37 = org.joda.time.Period.millis((int) '4');
        boolean boolean38 = duration8.equals((java.lang.Object) '4');
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Period period42 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period44 = period42.minusMonths(0);
        org.joda.time.Minutes minutes45 = period44.toStandardMinutes();
        org.joda.time.Minutes minutes47 = minutes45.dividedBy((int) (byte) 100);
        org.joda.time.Minutes minutes48 = minutes39.minus(minutes45);
        org.joda.time.Period period51 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period53 = period51.minusMonths(0);
        org.joda.time.Minutes minutes54 = period53.toStandardMinutes();
        org.joda.time.Minutes minutes56 = minutes54.dividedBy((int) (byte) 100);
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((java.lang.Object) minutes54, chronology57);
        org.joda.time.Minutes minutes59 = minutes39.minus(minutes54);
        org.joda.time.Duration duration60 = minutes39.toStandardDuration();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((java.lang.Object) duration60, chronology61);
        boolean boolean63 = duration8.isEqual((org.joda.time.ReadableDuration) duration60);
        long long64 = duration60.getStandardHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
    }

    @Test
    public void test17981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17981");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType1 = days0.getPeriodType();
        org.joda.time.Days days2 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        org.joda.time.Days days5 = days2.minus(0);
        org.joda.time.Days days6 = days5.negated();
        boolean boolean7 = days0.isGreaterThan(days5);
        org.joda.time.Days days9 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days11 = days9.multipliedBy((int) (short) 100);
        org.joda.time.Days days12 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType13 = days12.getPeriodType();
        org.joda.time.Days days15 = days12.minus(0);
        org.joda.time.Days days16 = days9.minus(days15);
        org.joda.time.Days days17 = days5.minus(days9);
        org.joda.time.Days days19 = days5.dividedBy((-49));
        org.joda.time.Days days21 = days19.dividedBy((-5));
        org.joda.time.PeriodType periodType22 = days21.getPeriodType();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(periodType22);
    }

    @Test
    public void test17982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17982");
        org.joda.time.Period period2 = new org.joda.time.Period((long) (-1));
        org.joda.time.Days days3 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType4 = days3.getPeriodType();
        org.joda.time.PeriodType periodType5 = periodType4.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType4.withYearsRemoved();
        java.lang.String str7 = periodType4.toString();
        org.joda.time.Period period8 = period2.normalizedStandard(periodType4);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period(0L, periodType4, chronology9);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PeriodType[Days]" + "'", str7, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test17983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17983");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Days days3 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType4 = days3.getPeriodType();
        org.joda.time.PeriodType periodType5 = periodType4.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType4.withSecondsRemoved();
        org.joda.time.Period period7 = duration1.toPeriodFrom(readableInstant2, periodType4);
        int int8 = period7.getSeconds();
        org.joda.time.Hours hours10 = org.joda.time.Hours.hours(2);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours13 = hours11.minus(hours12);
        boolean boolean14 = hours10.isLessThan(hours11);
        org.joda.time.DurationFieldType durationFieldType15 = hours10.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period17 = period7.withField(durationFieldType15, (-2147483647));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
    }

    @Test
    public void test17984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17984");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        boolean boolean4 = periodFormatter3.isParser();
        org.joda.time.Days days5 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType6 = days5.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter3.withParseType(periodType6);
        org.joda.time.Days days9 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType10 = days9.getPeriodType();
        org.joda.time.PeriodType periodType11 = periodType10.withSecondsRemoved();
        org.joda.time.PeriodType periodType12 = periodType10.withYearsRemoved();
        java.lang.String str13 = periodType12.toString();
        org.joda.time.format.PeriodFormatter periodFormatter14 = periodFormatter8.withParseType(periodType12);
        org.joda.time.format.PeriodPrinter periodPrinter15 = periodFormatter8.getPrinter();
        java.util.Locale locale16 = null;
        org.joda.time.format.PeriodFormatter periodFormatter17 = periodFormatter8.withLocale(locale16);
        boolean boolean18 = periodFormatter17.isPrinter();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period19 = org.joda.time.Period.parse("PeriodType[StandardNoMinutesNoMillis]", periodFormatter17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PeriodType[Days]" + "'", str13, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodFormatter14);
        org.junit.Assert.assertNull(periodPrinter15);
        org.junit.Assert.assertNotNull(periodFormatter17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test17985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17985");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration4 = duration2.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.parse("PT0S");
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Duration duration11 = duration8.plus((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration13 = duration4.withDurationAdded((org.joda.time.ReadableDuration) duration11, (int) (byte) 0);
        org.joda.time.Period period14 = duration4.toPeriod();
        org.joda.time.Duration duration15 = duration4.toDuration();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration15.toIntervalTo(readableInstant16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(interval19);
    }

    @Test
    public void test17986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17986");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Period period1 = org.joda.time.Period.ZERO;
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration4 = period1.toDurationTo(readableInstant3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = period5.plusHours((int) (short) 1);
        org.joda.time.Period period9 = period7.withYears((-2704));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test17987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17987");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (byte) 100);
        org.joda.time.Period period10 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period12 = period10.minusMonths(0);
        org.joda.time.Minutes minutes13 = period12.toStandardMinutes();
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes16 = minutes13.multipliedBy((int) (short) 1);
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy(2);
        org.joda.time.Minutes minutes19 = minutes5.plus(minutes16);
        org.joda.time.DurationFieldType durationFieldType20 = minutes19.getFieldType();
        org.joda.time.Duration duration23 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration25 = duration23.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalFrom(readableInstant28);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval29);
        org.joda.time.Minutes minutes32 = minutes31.negated();
        org.joda.time.Minutes minutes34 = minutes32.minus((-97));
        org.joda.time.Period period38 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period40 = period38.minusMonths(0);
        org.joda.time.Period period42 = period38.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType43 = period38.getPeriodType();
        org.joda.time.PeriodType periodType44 = periodType43.withMinutesRemoved();
        java.lang.String str45 = periodType44.toString();
        org.joda.time.Period period46 = new org.joda.time.Period((long) (byte) 1, periodType44);
        org.joda.time.DurationFieldType durationFieldType48 = periodType44.getFieldType(0);
        boolean boolean49 = minutes32.isSupported(durationFieldType48);
        org.joda.time.Minutes minutes50 = null;
        org.joda.time.Minutes minutes51 = minutes32.minus(minutes50);
        org.joda.time.Minutes minutes53 = minutes51.minus(0);
        org.joda.time.Minutes minutes55 = minutes51.multipliedBy((-52));
        org.joda.time.Minutes minutes56 = minutes19.minus(minutes51);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PeriodType[StandardNoMinutes]" + "'", str45, "PeriodType[StandardNoMinutes]");
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
    }

    @Test
    public void test17988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17988");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(1);
        int int2 = weeks1.getWeeks();
        org.joda.time.Period period3 = weeks1.toPeriod();
        int int4 = period3.getWeeks();
        int int5 = period3.getMillis();
        org.joda.time.Period period7 = period3.plusWeeks(14405);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test17989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17989");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        boolean boolean14 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(readableInstant15, readableInstant16);
        org.joda.time.Duration duration18 = duration6.minus((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration19 = duration6.toDuration();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant20);
        org.joda.time.Period period23 = period21.withHours((int) (byte) -1);
        org.joda.time.Period period24 = period23.negated();
        org.joda.time.Period period26 = period23.minusMonths(2);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType29 = periodType28.withMillisRemoved();
        org.joda.time.Period period31 = org.joda.time.Period.millis(0);
        org.joda.time.DurationFieldType durationFieldType32 = org.joda.time.DurationFieldType.months();
        boolean boolean33 = period31.isSupported(durationFieldType32);
        java.lang.String str34 = durationFieldType32.getName();
        int int35 = periodType28.indexOf(durationFieldType32);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((long) 35, periodType28, chronology36);
        org.joda.time.Period period38 = period23.withFields((org.joda.time.ReadablePeriod) period37);
        org.joda.time.Period period41 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period43 = period41.minusMonths(0);
        org.joda.time.Minutes minutes44 = period43.toStandardMinutes();
        org.joda.time.Duration duration45 = minutes44.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration45.toIntervalFrom(readableInstant46);
        org.joda.time.Period period50 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period50);
        org.joda.time.Period period54 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period56 = period54.minusMonths(0);
        org.joda.time.Minutes minutes57 = period56.toStandardMinutes();
        org.joda.time.Minutes minutes58 = minutes51.minus(minutes57);
        int int59 = minutes58.size();
        boolean boolean60 = duration45.equals((java.lang.Object) minutes58);
        org.joda.time.PeriodType periodType61 = minutes58.getPeriodType();
        org.joda.time.Period period62 = period38.withFields((org.joda.time.ReadablePeriod) minutes58);
        int int63 = period38.getWeeks();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "months" + "'", str34, "months");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
    }

    @Test
    public void test17990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17990");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration9 = minutes5.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period13 = period12.negated();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration15 = period13.toDurationTo(readableInstant14);
        boolean boolean16 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration20 = duration15.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration20.toIntervalFrom(readableInstant21);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval22);
        org.joda.time.Period period27 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period29 = period27.minusMonths(0);
        org.joda.time.Minutes minutes30 = period29.toStandardMinutes();
        org.joda.time.Duration duration31 = minutes30.toStandardDuration();
        org.joda.time.Minutes minutes33 = minutes30.multipliedBy((int) (short) 1);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes36 = minutes34.plus(52);
        org.joda.time.Minutes minutes37 = minutes30.plus(minutes36);
        int int38 = minutes36.getMinutes();
        org.joda.time.Minutes minutes39 = minutes24.plus(minutes36);
        org.joda.time.Minutes minutes41 = minutes24.multipliedBy((int) '4');
        org.joda.time.DurationFieldType durationFieldType42 = minutes24.getFieldType();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-2147483596) + "'", int38 == (-2147483596));
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(durationFieldType42);
    }

    @Test
    public void test17991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17991");
        org.joda.time.Days days1 = org.joda.time.Days.days(10);
        org.joda.time.Days days2 = org.joda.time.Days.FIVE;
        java.lang.String str3 = days2.toString();
        org.joda.time.Days days5 = days2.multipliedBy((int) (byte) -1);
        org.joda.time.Days days6 = days2.negated();
        org.joda.time.Duration duration7 = days2.toStandardDuration();
        org.joda.time.Days days8 = duration7.toStandardDays();
        org.joda.time.Days days10 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days12 = days10.multipliedBy((int) (short) 100);
        org.joda.time.Days days13 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType14 = days13.getPeriodType();
        org.joda.time.Days days16 = days13.minus(0);
        org.joda.time.Days days17 = days10.minus(days16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant18, readableDuration19);
        org.joda.time.Period period22 = period20.minusYears(0);
        org.joda.time.Days days23 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Days days24 = days16.plus(days23);
        org.joda.time.Days days25 = days8.plus(days24);
        boolean boolean26 = days1.isGreaterThan(days8);
        org.joda.time.Days days28 = days1.multipliedBy((int) (byte) 10);
        org.joda.time.Days days30 = days28.multipliedBy((int) (byte) -1);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "P5D" + "'", str3, "P5D");
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
    }

    @Test
    public void test17992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17992");
        org.joda.time.Days days0 = org.joda.time.Days.FIVE;
        java.lang.String str1 = days0.toString();
        org.joda.time.Days days3 = days0.multipliedBy((int) (byte) -1);
        org.joda.time.Days days4 = days0.negated();
        org.joda.time.Days days5 = org.joda.time.Days.ONE;
        org.joda.time.Days days6 = org.joda.time.Days.ONE;
        int int7 = days5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days6);
        org.joda.time.Days days9 = days6.multipliedBy((int) '#');
        org.joda.time.Days days10 = days4.minus(days6);
        org.joda.time.DurationFieldType durationFieldType11 = days10.getFieldType();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Days days15 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType16 = days15.getPeriodType();
        org.joda.time.PeriodType periodType17 = periodType16.withHoursRemoved();
        org.joda.time.PeriodType periodType18 = periodType16.withSecondsRemoved();
        org.joda.time.Period period19 = duration13.toPeriodFrom(readableInstant14, periodType16);
        org.joda.time.Days days20 = duration13.toStandardDays();
        org.joda.time.Days days21 = org.joda.time.Days.MIN_VALUE;
        boolean boolean22 = days20.isLessThan(days21);
        org.joda.time.Period period23 = days21.toPeriod();
        org.joda.time.Period period26 = new org.joda.time.Period((long) 35, (long) (byte) 1);
        org.joda.time.Period period27 = period26.toPeriod();
        org.joda.time.Days days28 = period27.toStandardDays();
        int int29 = days21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days28);
        org.joda.time.Days days30 = days10.plus(days28);
        org.joda.time.Days days32 = days30.minus((int) (short) 1);
        org.joda.time.Days days33 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType34 = days33.getPeriodType();
        org.joda.time.Days days36 = days33.minus(0);
        org.joda.time.Days days37 = days36.negated();
        org.joda.time.Duration duration38 = days36.toStandardDuration();
        long long39 = duration38.getStandardHours();
        org.joda.time.Days days40 = duration38.toStandardDays();
        org.joda.time.Days days41 = org.joda.time.Days.FIVE;
        java.lang.String str42 = days41.toString();
        org.joda.time.Days days43 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType44 = days43.getPeriodType();
        org.joda.time.Days days46 = days43.minus(0);
        boolean boolean47 = days41.isLessThan(days46);
        java.lang.String str48 = days41.toString();
        org.joda.time.Days days49 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType50 = days49.getPeriodType();
        org.joda.time.Days days51 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType52 = days51.getPeriodType();
        org.joda.time.Days days54 = days51.minus(0);
        org.joda.time.Days days55 = days54.negated();
        boolean boolean56 = days49.isGreaterThan(days54);
        org.joda.time.Days days57 = days41.minus(days49);
        org.joda.time.Days days58 = org.joda.time.Days.FIVE;
        java.lang.String str59 = days58.toString();
        org.joda.time.Days days61 = days58.multipliedBy((int) (byte) -1);
        org.joda.time.Days days62 = days58.negated();
        org.joda.time.Duration duration63 = days58.toStandardDuration();
        org.joda.time.Days days64 = duration63.toStandardDays();
        org.joda.time.Days days66 = org.joda.time.Days.parseDays("P5D");
        org.joda.time.Days days68 = days66.multipliedBy((int) (short) 100);
        org.joda.time.Days days69 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType70 = days69.getPeriodType();
        org.joda.time.Days days72 = days69.minus(0);
        org.joda.time.Days days73 = days66.minus(days72);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.ReadableDuration readableDuration75 = null;
        org.joda.time.Period period76 = new org.joda.time.Period(readableInstant74, readableDuration75);
        org.joda.time.Period period78 = period76.minusYears(0);
        org.joda.time.Days days79 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period76);
        org.joda.time.Days days80 = days72.plus(days79);
        org.joda.time.Days days81 = days64.plus(days80);
        org.joda.time.Period period83 = org.joda.time.Period.millis((int) (byte) -1);
        org.joda.time.Days days84 = period83.toStandardDays();
        org.joda.time.Days days85 = days80.minus(days84);
        boolean boolean86 = days49.isGreaterThan(days80);
        org.joda.time.Days days87 = days40.plus(days49);
        org.joda.time.Days days88 = days30.minus(days87);
        org.joda.time.Days days90 = days88.minus(777);
        org.joda.time.Days days92 = days90.minus((-2147483645));
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "P5D" + "'", str1, "P5D");
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 120L + "'", long39 == 120L);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P5D" + "'", str42, "P5D");
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "P5D" + "'", str48, "P5D");
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P5D" + "'", str59, "P5D");
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertNotNull(days66);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(days72);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(days79);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(days84);
        org.junit.Assert.assertNotNull(days85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(days87);
        org.junit.Assert.assertNotNull(days88);
        org.junit.Assert.assertNotNull(days90);
        org.junit.Assert.assertNotNull(days92);
    }

    @Test
    public void test17993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17993");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(2147483647);
        org.joda.time.Period period3 = period1.plusMillis(2147483647);
        org.joda.time.Period period5 = period3.minusMinutes(8);
        org.joda.time.Period period7 = period5.minusHours((int) (short) 1);
        java.lang.String str8 = period7.toString();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT-1H2147483639M2147483.647S" + "'", str8, "PT-1H2147483639M2147483.647S");
    }

    @Test
    public void test17994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17994");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isParser();
        org.joda.time.Days days4 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType5 = days4.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withSecondsRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withParseType(periodType5);
        org.joda.time.Days days8 = org.joda.time.Days.FIVE;
        org.joda.time.PeriodType periodType9 = days8.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withSecondsRemoved();
        org.joda.time.PeriodType periodType11 = periodType9.withYearsRemoved();
        java.lang.String str12 = periodType11.toString();
        org.joda.time.format.PeriodFormatter periodFormatter13 = periodFormatter7.withParseType(periodType11);
        org.joda.time.PeriodType periodType14 = periodFormatter13.getParseType();
        org.joda.time.PeriodType periodType15 = periodType14.withMonthsRemoved();
        org.joda.time.PeriodType periodType16 = periodType15.withMinutesRemoved();
        java.lang.String str17 = periodType16.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PeriodType[Days]" + "'", str12, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodFormatter13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PeriodType[Days]" + "'", str17, "PeriodType[Days]");
    }

    @Test
    public void test17995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17995");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) 8, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) (short) 100);
        org.joda.time.Period period6 = period4.plusWeeks((-36));
        org.joda.time.Period period8 = period6.withWeeks((int) (short) -1);
        org.joda.time.Period period11 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period13 = period11.minusMonths(0);
        org.joda.time.Minutes minutes14 = period13.toStandardMinutes();
        org.joda.time.Duration duration15 = minutes14.toStandardDuration();
        org.joda.time.Period period16 = duration15.toPeriod();
        org.joda.time.Period period17 = period16.normalizedStandard();
        org.joda.time.Duration duration18 = period16.toStandardDuration();
        org.joda.time.Period period21 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period23 = period21.minusMonths(0);
        org.joda.time.Minutes minutes24 = period23.toStandardMinutes();
        org.joda.time.Duration duration25 = minutes24.toStandardDuration();
        org.joda.time.Minutes minutes27 = minutes24.multipliedBy((int) (short) 1);
        java.lang.String str28 = minutes27.toString();
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) (byte) -1, (long) (byte) 10);
        org.joda.time.Duration duration33 = duration31.plus((long) (-1));
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalFrom(readableInstant36);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval37);
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((-95));
        org.joda.time.Minutes minutes41 = minutes27.minus(minutes40);
        org.joda.time.Period period42 = period16.minus((org.joda.time.ReadablePeriod) minutes40);
        org.joda.time.DurationFieldType durationFieldType44 = period16.getFieldType(0);
        org.joda.time.Period period46 = period8.withFieldAdded(durationFieldType44, (int) (byte) 0);
        org.joda.time.Period period48 = period2.withField(durationFieldType44, 2147483647);
        org.joda.time.Period period50 = period2.minusDays((-2));
        org.joda.time.Period period52 = period2.plusSeconds((int) (byte) 100);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT0M" + "'", str28, "PT0M");
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period52);
    }

    @Test
    public void test17996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17996");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period3 = period2.negated();
        int int4 = period2.getHours();
        org.joda.time.Period period6 = org.joda.time.Period.days(10);
        org.joda.time.Period period8 = period6.plusMonths((int) 'a');
        org.joda.time.Period period10 = period6.plusSeconds((int) (short) 100);
        org.joda.time.Period period12 = period10.minusMonths((int) 'a');
        org.joda.time.Period period13 = period2.withFields((org.joda.time.ReadablePeriod) period12);
        org.joda.time.Hours hours14 = period2.toStandardHours();
        org.joda.time.Period period17 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period18 = period17.negated();
        org.joda.time.Period period19 = period2.withFields((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Period period21 = period19.withMonths(8);
        org.joda.time.Period period23 = period19.withDays(14400);
        org.joda.time.Period period25 = period23.plusYears(65);
        int int26 = period25.getYears();
        org.joda.time.Period period28 = period25.withSeconds(100);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration30 = period28.toDurationTo(readableInstant29);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 65 + "'", int26 == 65);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
    }

    @Test
    public void test17997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17997");
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period4 = period2.minusMonths(0);
        org.joda.time.Minutes minutes5 = period4.toStandardMinutes();
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period11 = period9.minusMonths(0);
        org.joda.time.Minutes minutes12 = period11.toStandardMinutes();
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        org.joda.time.Duration duration15 = duration6.withDurationAdded((org.joda.time.ReadableDuration) duration13, (int) (short) 100);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration15.toPeriod(chronology16);
        int[] intArray18 = period17.getValues();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration20 = period17.toDurationFrom(readableInstant19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = duration20.toPeriodFrom(readableInstant21);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period22);
    }

    @Test
    public void test17998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17998");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-95));
        org.joda.time.Weeks weeks3 = weeks1.plus((int) (short) 1);
        org.joda.time.Duration duration4 = weeks3.toStandardDuration();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ZERO;
        java.lang.String str6 = weeks5.toString();
        int int7 = weeks5.size();
        org.joda.time.Period period8 = weeks5.toPeriod();
        org.joda.time.Weeks weeks9 = weeks3.plus(weeks5);
        org.joda.time.Weeks weeks11 = weeks3.dividedBy(56);
        org.joda.time.Duration duration12 = weeks3.toStandardDuration();
        org.joda.time.Weeks weeks14 = weeks3.dividedBy(999);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P0W" + "'", str6, "P0W");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(weeks14);
    }

    @Test
    public void test17999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test17999");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-10));
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks(1);
        boolean boolean4 = weeks1.isGreaterThan(weeks3);
        org.joda.time.Weeks weeks5 = weeks3.negated();
        int int6 = weeks3.getWeeks();
        org.joda.time.Weeks weeks7 = weeks3.negated();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(weeks7);
    }

    @Test
    public void test18000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest35.test18000");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.Period period5 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period7 = period5.minusMonths(0);
        org.joda.time.Minutes minutes8 = period7.toStandardMinutes();
        org.joda.time.Duration duration9 = minutes8.toStandardDuration();
        org.joda.time.Period period12 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period14 = period12.minusMonths(0);
        org.joda.time.Minutes minutes15 = period14.toStandardMinutes();
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        boolean boolean17 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(readableInstant18, readableInstant19);
        org.joda.time.Duration duration21 = duration9.minus((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant22);
        org.joda.time.Duration duration25 = duration9.plus((long) 8);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration25.toIntervalFrom(readableInstant26);
        org.joda.time.Period period30 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period32 = period30.minusMonths(0);
        org.joda.time.Minutes minutes33 = period32.toStandardMinutes();
        org.joda.time.Duration duration34 = minutes33.toStandardDuration();
        org.joda.time.Period period37 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period39 = period37.minusMonths(0);
        org.joda.time.Minutes minutes40 = period39.toStandardMinutes();
        org.joda.time.Duration duration41 = minutes40.toStandardDuration();
        boolean boolean42 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration44 = duration34.plus((long) (short) 10);
        org.joda.time.Duration duration46 = duration25.withDurationAdded((org.joda.time.ReadableDuration) duration44, (int) (byte) 0);
        boolean boolean47 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration44);
        long long48 = duration44.getStandardHours();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((long) '#', (long) (-1));
        org.joda.time.Period period54 = period52.minusMonths(0);
        org.joda.time.Period period56 = period52.minusSeconds((int) (byte) 100);
        org.joda.time.PeriodType periodType57 = period52.getPeriodType();
        org.joda.time.PeriodType periodType58 = periodType57.withMinutesRemoved();
        org.joda.time.PeriodType periodType59 = periodType58.withMinutesRemoved();
        org.joda.time.Period period60 = duration44.toPeriodTo(readableInstant49, periodType59);
        org.joda.time.PeriodType periodType61 = periodType59.withHoursRemoved();
        org.joda.time.PeriodType periodType62 = periodType59.withHoursRemoved();
        org.joda.time.PeriodType periodType63 = periodType62.withSecondsRemoved();
        org.joda.time.PeriodType periodType64 = periodType62.withWeeksRemoved();
        org.joda.time.Period period65 = new org.joda.time.Period((long) (-116), periodType62);
        java.lang.String str66 = periodType62.toString();
        org.joda.time.PeriodType periodType67 = periodType62.withYearsRemoved();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PeriodType[StandardNoMinutesNoHours]" + "'", str66, "PeriodType[StandardNoMinutesNoHours]");
        org.junit.Assert.assertNotNull(periodType67);
    }
}

